/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:51:54.164+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_09

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_09 > h2o_rf_09.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_09.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_09", algorithm="drf")
public class h2o_rf_09 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_09.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_rf_09_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};

  public h2o_rf_09() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-5548296139515751308L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_09_Forest_0.score0(data,preds);
    h2o_rf_09_Forest_1.score0(data,preds);
    h2o_rf_09_Forest_2.score0(data,preds);
    h2o_rf_09_Forest_3.score0(data,preds);
    h2o_rf_09_Forest_4.score0(data,preds);
    h2o_rf_09_Forest_5.score0(data,preds);
    h2o_rf_09_Forest_6.score0(data,preds);
    h2o_rf_09_Forest_7.score0(data,preds);
    h2o_rf_09_Forest_8.score0(data,preds);
    h2o_rf_09_Forest_9.score0(data,preds);
    h2o_rf_09_Forest_10.score0(data,preds);
    h2o_rf_09_Forest_11.score0(data,preds);
    h2o_rf_09_Forest_12.score0(data,preds);
    h2o_rf_09_Forest_13.score0(data,preds);
    h2o_rf_09_Forest_14.score0(data,preds);
    h2o_rf_09_Forest_15.score0(data,preds);
    h2o_rf_09_Forest_16.score0(data,preds);
    h2o_rf_09_Forest_17.score0(data,preds);
    h2o_rf_09_Forest_18.score0(data,preds);
    h2o_rf_09_Forest_19.score0(data,preds);
    h2o_rf_09_Forest_20.score0(data,preds);
    h2o_rf_09_Forest_21.score0(data,preds);
    h2o_rf_09_Forest_22.score0(data,preds);
    h2o_rf_09_Forest_23.score0(data,preds);
    h2o_rf_09_Forest_24.score0(data,preds);
    h2o_rf_09_Forest_25.score0(data,preds);
    h2o_rf_09_Forest_26.score0(data,preds);
    h2o_rf_09_Forest_27.score0(data,preds);
    h2o_rf_09_Forest_28.score0(data,preds);
    h2o_rf_09_Forest_29.score0(data,preds);
    h2o_rf_09_Forest_30.score0(data,preds);
    h2o_rf_09_Forest_31.score0(data,preds);
    h2o_rf_09_Forest_32.score0(data,preds);
    h2o_rf_09_Forest_33.score0(data,preds);
    h2o_rf_09_Forest_34.score0(data,preds);
    h2o_rf_09_Forest_35.score0(data,preds);
    h2o_rf_09_Forest_36.score0(data,preds);
    h2o_rf_09_Forest_37.score0(data,preds);
    h2o_rf_09_Forest_38.score0(data,preds);
    h2o_rf_09_Forest_39.score0(data,preds);
    h2o_rf_09_Forest_40.score0(data,preds);
    h2o_rf_09_Forest_41.score0(data,preds);
    h2o_rf_09_Forest_42.score0(data,preds);
    h2o_rf_09_Forest_43.score0(data,preds);
    h2o_rf_09_Forest_44.score0(data,preds);
    h2o_rf_09_Forest_45.score0(data,preds);
    h2o_rf_09_Forest_46.score0(data,preds);
    h2o_rf_09_Forest_47.score0(data,preds);
    h2o_rf_09_Forest_48.score0(data,preds);
    h2o_rf_09_Forest_49.score0(data,preds);
    h2o_rf_09_Forest_50.score0(data,preds);
    h2o_rf_09_Forest_51.score0(data,preds);
    h2o_rf_09_Forest_52.score0(data,preds);
    h2o_rf_09_Forest_53.score0(data,preds);
    h2o_rf_09_Forest_54.score0(data,preds);
    h2o_rf_09_Forest_55.score0(data,preds);
    h2o_rf_09_Forest_56.score0(data,preds);
    h2o_rf_09_Forest_57.score0(data,preds);
    h2o_rf_09_Forest_58.score0(data,preds);
    h2o_rf_09_Forest_59.score0(data,preds);
    h2o_rf_09_Forest_60.score0(data,preds);
    h2o_rf_09_Forest_61.score0(data,preds);
    h2o_rf_09_Forest_62.score0(data,preds);
    h2o_rf_09_Forest_63.score0(data,preds);
    h2o_rf_09_Forest_64.score0(data,preds);
    h2o_rf_09_Forest_65.score0(data,preds);
    h2o_rf_09_Forest_66.score0(data,preds);
    h2o_rf_09_Forest_67.score0(data,preds);
    h2o_rf_09_Forest_68.score0(data,preds);
    h2o_rf_09_Forest_69.score0(data,preds);
    h2o_rf_09_Forest_70.score0(data,preds);
    h2o_rf_09_Forest_71.score0(data,preds);
    h2o_rf_09_Forest_72.score0(data,preds);
    h2o_rf_09_Forest_73.score0(data,preds);
    h2o_rf_09_Forest_74.score0(data,preds);
    h2o_rf_09_Forest_75.score0(data,preds);
    h2o_rf_09_Forest_76.score0(data,preds);
    h2o_rf_09_Forest_77.score0(data,preds);
    h2o_rf_09_Forest_78.score0(data,preds);
    h2o_rf_09_Forest_79.score0(data,preds);
    h2o_rf_09_Forest_80.score0(data,preds);
    h2o_rf_09_Forest_81.score0(data,preds);
    h2o_rf_09_Forest_82.score0(data,preds);
    h2o_rf_09_Forest_83.score0(data,preds);
    h2o_rf_09_Forest_84.score0(data,preds);
    h2o_rf_09_Forest_85.score0(data,preds);
    h2o_rf_09_Forest_86.score0(data,preds);
    h2o_rf_09_Forest_87.score0(data,preds);
    h2o_rf_09_Forest_88.score0(data,preds);
    h2o_rf_09_Forest_89.score0(data,preds);
    h2o_rf_09_Forest_90.score0(data,preds);
    h2o_rf_09_Forest_91.score0(data,preds);
    h2o_rf_09_Forest_92.score0(data,preds);
    h2o_rf_09_Forest_93.score0(data,preds);
    h2o_rf_09_Forest_94.score0(data,preds);
    h2o_rf_09_Forest_95.score0(data,preds);
    h2o_rf_09_Forest_96.score0(data,preds);
    h2o_rf_09_Forest_97.score0(data,preds);
    h2o_rf_09_Forest_98.score0(data,preds);
    h2o_rf_09_Forest_99.score0(data,preds);
    h2o_rf_09_Forest_100.score0(data,preds);
    h2o_rf_09_Forest_101.score0(data,preds);
    h2o_rf_09_Forest_102.score0(data,preds);
    h2o_rf_09_Forest_103.score0(data,preds);
    h2o_rf_09_Forest_104.score0(data,preds);
    h2o_rf_09_Forest_105.score0(data,preds);
    h2o_rf_09_Forest_106.score0(data,preds);
    h2o_rf_09_Forest_107.score0(data,preds);
    h2o_rf_09_Forest_108.score0(data,preds);
    h2o_rf_09_Forest_109.score0(data,preds);
    h2o_rf_09_Forest_110.score0(data,preds);
    h2o_rf_09_Forest_111.score0(data,preds);
    h2o_rf_09_Forest_112.score0(data,preds);
    h2o_rf_09_Forest_113.score0(data,preds);
    h2o_rf_09_Forest_114.score0(data,preds);
    h2o_rf_09_Forest_115.score0(data,preds);
    h2o_rf_09_Forest_116.score0(data,preds);
    h2o_rf_09_Forest_117.score0(data,preds);
    h2o_rf_09_Forest_118.score0(data,preds);
    h2o_rf_09_Forest_119.score0(data,preds);
    h2o_rf_09_Forest_120.score0(data,preds);
    h2o_rf_09_Forest_121.score0(data,preds);
    h2o_rf_09_Forest_122.score0(data,preds);
    h2o_rf_09_Forest_123.score0(data,preds);
    h2o_rf_09_Forest_124.score0(data,preds);
    h2o_rf_09_Forest_125.score0(data,preds);
    h2o_rf_09_Forest_126.score0(data,preds);
    h2o_rf_09_Forest_127.score0(data,preds);
    h2o_rf_09_Forest_128.score0(data,preds);
    h2o_rf_09_Forest_129.score0(data,preds);
    h2o_rf_09_Forest_130.score0(data,preds);
    h2o_rf_09_Forest_131.score0(data,preds);
    h2o_rf_09_Forest_132.score0(data,preds);
    h2o_rf_09_Forest_133.score0(data,preds);
    h2o_rf_09_Forest_134.score0(data,preds);
    h2o_rf_09_Forest_135.score0(data,preds);
    h2o_rf_09_Forest_136.score0(data,preds);
    h2o_rf_09_Forest_137.score0(data,preds);
    h2o_rf_09_Forest_138.score0(data,preds);
    h2o_rf_09_Forest_139.score0(data,preds);
    h2o_rf_09_Forest_140.score0(data,preds);
    h2o_rf_09_Forest_141.score0(data,preds);
    h2o_rf_09_Forest_142.score0(data,preds);
    h2o_rf_09_Forest_143.score0(data,preds);
    h2o_rf_09_Forest_144.score0(data,preds);
    h2o_rf_09_Forest_145.score0(data,preds);
    h2o_rf_09_Forest_146.score0(data,preds);
    h2o_rf_09_Forest_147.score0(data,preds);
    h2o_rf_09_Forest_148.score0(data,preds);
    h2o_rf_09_Forest_149.score0(data,preds);
    h2o_rf_09_Forest_150.score0(data,preds);
    h2o_rf_09_Forest_151.score0(data,preds);
    h2o_rf_09_Forest_152.score0(data,preds);
    h2o_rf_09_Forest_153.score0(data,preds);
    h2o_rf_09_Forest_154.score0(data,preds);
    h2o_rf_09_Forest_155.score0(data,preds);
    h2o_rf_09_Forest_156.score0(data,preds);
    h2o_rf_09_Forest_157.score0(data,preds);
    h2o_rf_09_Forest_158.score0(data,preds);
    h2o_rf_09_Forest_159.score0(data,preds);
    h2o_rf_09_Forest_160.score0(data,preds);
    h2o_rf_09_Forest_161.score0(data,preds);
    h2o_rf_09_Forest_162.score0(data,preds);
    h2o_rf_09_Forest_163.score0(data,preds);
    h2o_rf_09_Forest_164.score0(data,preds);
    h2o_rf_09_Forest_165.score0(data,preds);
    h2o_rf_09_Forest_166.score0(data,preds);
    h2o_rf_09_Forest_167.score0(data,preds);
    h2o_rf_09_Forest_168.score0(data,preds);
    h2o_rf_09_Forest_169.score0(data,preds);
    h2o_rf_09_Forest_170.score0(data,preds);
    h2o_rf_09_Forest_171.score0(data,preds);
    h2o_rf_09_Forest_172.score0(data,preds);
    h2o_rf_09_Forest_173.score0(data,preds);
    h2o_rf_09_Forest_174.score0(data,preds);
    h2o_rf_09_Forest_175.score0(data,preds);
    h2o_rf_09_Forest_176.score0(data,preds);
    h2o_rf_09_Forest_177.score0(data,preds);
    h2o_rf_09_Forest_178.score0(data,preds);
    h2o_rf_09_Forest_179.score0(data,preds);
    h2o_rf_09_Forest_180.score0(data,preds);
    h2o_rf_09_Forest_181.score0(data,preds);
    h2o_rf_09_Forest_182.score0(data,preds);
    h2o_rf_09_Forest_183.score0(data,preds);
    h2o_rf_09_Forest_184.score0(data,preds);
    h2o_rf_09_Forest_185.score0(data,preds);
    h2o_rf_09_Forest_186.score0(data,preds);
    h2o_rf_09_Forest_187.score0(data,preds);
    h2o_rf_09_Forest_188.score0(data,preds);
    h2o_rf_09_Forest_189.score0(data,preds);
    h2o_rf_09_Forest_190.score0(data,preds);
    h2o_rf_09_Forest_191.score0(data,preds);
    h2o_rf_09_Forest_192.score0(data,preds);
    h2o_rf_09_Forest_193.score0(data,preds);
    h2o_rf_09_Forest_194.score0(data,preds);
    h2o_rf_09_Forest_195.score0(data,preds);
    h2o_rf_09_Forest_196.score0(data,preds);
    h2o_rf_09_Forest_197.score0(data,preds);
    h2o_rf_09_Forest_198.score0(data,preds);
    h2o_rf_09_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_09 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_rf_09_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_09_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_rf_09_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_rf_09_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_rf_09_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}

class h2o_rf_09_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_0_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_0_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[13 /* X14 */] <0.076789394f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.65926766f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09414863f ? 
             (data[30 /* X31 */] <0.03709078f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.03698552f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (data[13 /* X14 */] <0.03602578f ? 
            1.0f : 
            0.0f) : 
         (data[25 /* X26 */] <-0.26581016f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22823815f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.184598f ? 
                0.0f : 
                 (data[2 /* X3 */] <4.3400237E-4f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.25057226f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17777084f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.027242098f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4506677f ? 
                     (data[2 /* X3 */] <0.041590583f ? 
                        1.0f : 
                        0.0f) : 
                     (data[18 /* X19 */] <0.21980238f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
        0.024096385f : 
         (data[16 /* X17 */] <-0.5960861f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.31931645f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[13 /* X14 */] <0.092031434f ? 
             (data[29 /* X30 */] <0.17135772f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.058711845f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.03279234f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_0_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.045129124f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.18841577f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.073777474f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.035414934f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_1_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_1_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.107944526f ? 
         (data[35 /* X36 */] <-0.2127259f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20248562f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.03288778f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.37217525f ? 
             (data[12 /* X13 */] <0.08245731f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.104587115f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.10087216f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.95289296f ? 
         (data[35 /* X36 */] <-0.5960779f ? 
             (data[31 /* X32 */] <0.066062935f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18447839f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2632313f ? 
                 (data[23 /* X24 */] <0.010638263f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.088033624f ? 
                        0.0f : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.096508995f ? 
                            0.0f : 
                             (data[27 /* X28 */] <-0.545617f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[16 /* X17 */] <-0.29744172f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.058829524f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.07038041f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1939709f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21995169f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.143401f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.17267944f ? 
         (data[31 /* X32 */] <0.050793152f ? 
             (data[8 /* X9 */] <-0.16020662f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[29 /* X30 */] <0.1135397f ? 
             (data[27 /* X28 */] <-0.1030499f ? 
                 (data[3 /* X4 */] <-0.16686346f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[33 /* X34 */] <-0.40234375f ? 
                 (data[14 /* X15 */] <0.11705608f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.13961294f ? 
                         (data[15 /* X16 */] <0.047588136f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_1_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.047762286f ? 
                1.0f : 
                0.0f)) : 
         (data[31 /* X32 */] <0.08959341f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_2_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_2_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (data[10 /* X11 */] <-0.3270499f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.11328125f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.33728272f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.34212932f ? 
                 (data[6 /* X7 */] <0.116090685f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.14513496f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[12 /* X13 */] <0.08545729f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[10 /* X11 */] <-0.87109405f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9668911f ? 
                0.0f : 
                1.0f)) : 
         (data[21 /* X22 */] <0.21765584f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.22683924f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[19 /* X20 */] <-0.5158395f ? 
             (data[15 /* X16 */] <0.0826874f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.30859375f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19823529f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.022928964f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.12895688f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09972461f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20162328f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[3 /* X4 */] <-0.13312708f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.049706437f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.11311736f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[24 /* X25 */] <-0.5032153f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_2_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[19 /* X20 */] <-0.35478282f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103317045f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.19921875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_3_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_3_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1384568f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19995455f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18252203f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.06582823f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49818015f ? 
            0.0f : 
             (data[31 /* X32 */] <0.068065524f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[20 /* X21 */] <0.03652149f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25720823f ? 
             (data[35 /* X36 */] <-0.51005745f ? 
                 (data[35 /* X36 */] <-0.723268f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2173311f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13249488f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24791823f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.23898654f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09109536f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.47621858f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7109375f ? 
             (data[22 /* X23 */] <0.113265395f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23309258f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14036255f ? 
                0.0f : 
                1.0f)) : 
         (data[8 /* X9 */] <0.31899035f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2413408f ? 
         (data[34 /* X35 */] <-0.46679688f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08526386f ? 
                1.0f : 
                 (data[18 /* X19 */] <0.28613824f ? 
                    0.0f : 
                    1.0f))) : 
         (data[4 /* X5 */] <0.13537677f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.4183927f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.02305986f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16823243f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_3_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (data[3 /* X4 */] <-0.24683118f ? 
             (data[22 /* X23 */] <0.17844045f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X5 */] <0.13776562f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_4_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_4_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[13 /* X14 */] <0.0923859f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.10231505f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18716708f ? 
             (data[26 /* X27 */] <0.1134456f ? 
                 (data[12 /* X13 */] <0.11795699f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.21874388f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[35 /* X36 */] <-0.5960779f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.030026788f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17810093f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14090754f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20191595f ? 
            0.0f : 
             (data[13 /* X14 */] <0.23842646f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.1316409f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24216332f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15831661f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.20516789f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.049223788f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.11838937f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (data[16 /* X17 */] <-0.25712472f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.08180538f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.18380226f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
            0.0f : 
             (data[4 /* X5 */] <0.15236415f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_4_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[16 /* X17 */] <0.004189078f ? 
            0.0f : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_5_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_5_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19172858f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14095679f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.49006733f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09593874f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3908744f ? 
             (data[14 /* X15 */] <0.0934156f ? 
                 (data[0 /* X1 */] <-0.002540382f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21737354f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.20934631f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.14917903f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X10 */] <-0.2184087f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (data[27 /* X28 */] <-0.2935996f ? 
             (data[20 /* X21 */] <0.15971339f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.13970488f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24295586f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16177264f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.24832161f ? 
                         (data[20 /* X21 */] <0.18043461f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2557361f ? 
        0.0f : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1193976f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33660573f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19295631f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14735086f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19787017f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.063204065f ? 
             (data[18 /* X19 */] <0.21246369f ? 
                 (data[20 /* X21 */] <0.09116008f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15970258f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.1717359f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_5_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.01459145f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08442643f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.31180495f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_6_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_6_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.21531452f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.065542705f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.025778221f ? 
                    1.0f : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.18097216f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22273418f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.062765755f ? 
                 (data[2 /* X3 */] <-0.5908461f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
        0.014492754f : 
         (data[3 /* X4 */] <-0.23183723f ? 
            0.0f : 
             (data[4 /* X5 */] <0.1481173f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.023082852f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.23808855f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <-0.015927419f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13926294f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.265625f ? 
                 (data[3 /* X4 */] <-0.2621414f ? 
                     (data[16 /* X17 */] <-0.33477226f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08840174f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09598974f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.02230554f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.23787324f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[2 /* X3 */] <-0.59324765f ? 
             (data[4 /* X5 */] <0.16457385f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[29 /* X30 */] <0.11603994f ? 
             (data[32 /* X33 */] <-0.88441056f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.112409286f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.23533301f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.3168536f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.117697425f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_6_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19653136f ? 
            0.0f : 
             (data[23 /* X24 */] <0.16436116f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.20934631f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_7_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_7_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47842613f ? 
             (data[23 /* X24 */] <0.077659324f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14746788f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.103374355f ? 
                        1.0f : 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.03125f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09325572f ? 
                1.0f : 
                0.0f)) : 
        0.04347826f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.35814065f ? 
         (data[21 /* X22 */] <0.19140163f ? 
            0.0f : 
             (data[31 /* X32 */] <0.06456099f ? 
                0.0f : 
                1.0f)) : 
         (data[13 /* X14 */] <0.03602578f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43048134f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.20278758f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.13104479f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19160154f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.16492602f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.28926823f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.109828144f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.053421557f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.43137455f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1459103f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13187759f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[31 /* X32 */] <0.05824714f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0027910734f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14530891f ? 
         (data[17 /* X18 */] <-0.52041966f ? 
             (data[9 /* X10 */] <-0.28867027f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07361606f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.021921981f ? 
                 (data[15 /* X16 */] <0.038892142f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15589213f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15625f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_7_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (data[27 /* X28 */] <-0.2825689f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17570494f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18470639f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_8_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_8_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[6 /* X7 */] <0.1307167f ? 
                 (data[1 /* X2 */] <-0.3765771f ? 
                    0.0f : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.08394492f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.089781925f ? 
                         (data[1 /* X2 */] <-0.31943622f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06230807f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24753335f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.5387036f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.38338867f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1328125f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4430542f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[0 /* X1 */] <-0.16990706f ? 
            0.0f : 
             (data[28 /* X29 */] <0.08567807f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.09822637f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.2657033f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[8 /* X9 */] <0.06785313f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07120508f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.079437755f ? 
                 (data[17 /* X18 */] <-0.44578186f ? 
                     (data[25 /* X26 */] <-0.04501173f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.03877759f ? 
             (data[9 /* X10 */] <-0.15653658f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_8_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19252378f ? 
            1.0f : 
            0.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_9_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_9_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (data[32 /* X33 */] <-0.11443579f ? 
            0.0f : 
            1.0f) : 
         (data[31 /* X32 */] <0.06180742f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.14607725f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14795671f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.8484406f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20156148f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39922193f ? 
                0.0f : 
                1.0f)) : 
         (data[13 /* X14 */] <0.116844065f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.046435717f ? 
                 (data[16 /* X17 */] <-0.5557691f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[23 /* X24 */] <0.10212733f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2519509f ? 
                0.0f : 
                1.0f)) : 
         (data[26 /* X27 */] <0.10735938f ? 
             (data[25 /* X26 */] <-0.25804338f ? 
                 (data[16 /* X17 */] <-0.21531452f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.6364526f ? 
             (data[13 /* X14 */] <0.13579875f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4283653f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1939563f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.031917945f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.012236361f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[32 /* X33 */] <-0.11443579f ? 
             (data[27 /* X28 */] <-0.21369167f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.018518519f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_9_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33758834f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_10_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_10_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.044921875f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.25702605f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21542625f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2812643f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06531196f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (data[23 /* X24 */] <0.015691439f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.04589794f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.734375f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.17188793f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[27 /* X28 */] <-0.5379335f ? 
            1.0f : 
            0.0f) : 
         (data[28 /* X29 */] <0.09404688f ? 
            0.0f : 
             (data[13 /* X14 */] <0.13598524f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08119546f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[33 /* X34 */] <-0.9765625f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17770158f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.30890653f ? 
                 (data[26 /* X27 */] <-0.0052356576f ? 
                     (data[7 /* X8 */] <0.08009941f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.11295704f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26757812f ? 
             (data[34 /* X35 */] <-0.4453125f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.018518519f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_10_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[27 /* X28 */] <0.11208688f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16869587f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_11_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_11_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1384568f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07739337f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34749782f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.23026621f ? 
                        1.0f : 
                         (data[12 /* X13 */] <0.11130218f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0625f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21407616f ? 
         (data[27 /* X28 */] <-0.39194787f ? 
             (data[26 /* X27 */] <-0.026537422f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5776424f ? 
                0.0f : 
                1.0f)) : 
         (data[8 /* X9 */] <0.13572805f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.19921875f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2173311f ? 
         (data[27 /* X28 */] <-0.2982097f ? 
             (data[23 /* X24 */] <0.10225024f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.16323194f ? 
                     (data[6 /* X7 */] <0.2433243f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.060569067f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13992018f ? 
                    0.0f : 
                    1.0f))) : 
        0.6666667f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17391312f ? 
            0.0f : 
             (data[6 /* X7 */] <0.14698975f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X9 */] <0.31899035f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.011861882f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10458659f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11224139f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2421875f ? 
                     (data[31 /* X32 */] <0.03502273f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.04649401f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.059379593f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.063566476f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.14943069f ? 
                    1.0f : 
                    0.0f))) : 
        0.021276595f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_11_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13360056f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17615728f ? 
             (data[23 /* X24 */] <0.1170209f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19694318f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_12_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_12_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07407331f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18848601f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.08559457f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[20 /* X21 */] <0.011447034f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39922193f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19850707f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.3465935f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[0 /* X1 */] <-0.13320324f ? 
            1.0f : 
             (data[24 /* X25 */] <0.033798765f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12545195f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.04875807f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (data[18 /* X19 */] <-0.049817715f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.19099635f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.22095904f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.022570964f ? 
                         (data[10 /* X11 */] <-0.4096048f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1954363f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3570003f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[20 /* X21 */] <0.09593705f ? 
             (data[6 /* X7 */] <0.27473313f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.036764104f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.011538389f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_12_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09372783f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.27585822f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
             (data[3 /* X4 */] <-0.5442111f ? 
                1.0f : 
                0.0f) : 
             (data[23 /* X24 */] <0.12074429f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_13_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_13_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17292036f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1504567f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.29986468f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.51171875f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19448492f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.39733258f ? 
                 (data[31 /* X32 */] <0.077077195f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[29 /* X30 */] <0.062597334f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.38887447f ? 
                 (data[24 /* X25 */] <0.040009078f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.06843325f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.11729245f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[34 /* X35 */] <-0.7558594f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1134456f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09810443f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.1343828f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15567176f ? 
                0.0f : 
                 (data[26 /* X27 */] <-0.029580532f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1622733f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20689903f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22361153f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5293008f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16695026f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13761447f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[7 /* X8 */] <0.10391328f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[24 /* X25 */] <-0.44567034f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08325547f ? 
             (data[27 /* X28 */] <-0.14915064f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.122574925f ? 
                     (data[24 /* X25 */] <-0.107306f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_13_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78585935f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X8 */] <0.07550879f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_14_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_14_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.001404316f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08723376f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.9541666f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.09387022f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0013319395f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.67521656f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13051647f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17428441f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[32 /* X33 */] <0.04589794f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10853777f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (data[2 /* X3 */] <-0.23014377f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.120343335f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.10775041f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18615903f ? 
                     (data[22 /* X23 */] <0.17323539f ? 
                        0.0f : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.7902766f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7109375f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14036255f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X1 */] <0.5348064f ? 
             (data[21 /* X22 */] <0.13945782f ? 
                 (data[9 /* X10 */] <-0.15443923f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[24 /* X25 */] <-0.44567034f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07120508f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14346847f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.03279234f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21737354f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.0771576f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_14_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27709427f ? 
             (data[3 /* X4 */] <-0.50672626f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.15074997f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20392439f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_15_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_15_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[35 /* X36 */] <4.552246E-4f ? 
             (data[30 /* X31 */] <0.101538576f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.0234375f ? 
                     (data[23 /* X24 */] <0.070212536f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.053819865f ? 
             (data[10 /* X11 */] <-0.46178183f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19868901f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.11679681f ? 
                 (data[19 /* X20 */] <-0.07361606f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (data[0 /* X1 */] <-0.2671722f ? 
             (data[30 /* X31 */] <0.04951445f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09428111f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[35 /* X36 */] <-0.97755986f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2654365f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.058829524f ? 
            0.0f : 
             (data[30 /* X31 */] <0.12095056f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17554319f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[0 /* X1 */] <0.34945205f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (data[19 /* X20 */] <-0.083170265f ? 
             (data[27 /* X28 */] <-0.14915064f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.5308369f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.5356629f ? 
                 (data[30 /* X31 */] <0.10619745f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_15_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.849878f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.15842931f ? 
                1.0f : 
                0.0f)) : 
        0.9230769f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_16_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_16_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1384568f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20313175f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.117331184f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.15192601f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09974485f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.04222676f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13531928f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38132158f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16979572f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2771741f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31704307f ? 
             (data[5 /* X6 */] <0.07495665f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.028771881f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15022543f ? 
            0.0f : 
             (data[5 /* X6 */] <0.12113248f ? 
                0.0f : 
                1.0f)) : 
         (data[21 /* X22 */] <0.20156455f ? 
             (data[15 /* X16 */] <0.05166892f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
             (data[10 /* X11 */] <-0.3242974f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.4090769f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.25426173f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06378061f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2233019f ? 
            0.0f : 
             (data[21 /* X22 */] <0.23614891f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_16_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[17 /* X18 */] <-0.3261244f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.33304638f ? 
             (data[5 /* X6 */] <0.13182722f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_17_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_17_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1110158f ? 
             (data[19 /* X20 */] <-0.29745755f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.11630896f ? 
                     (data[19 /* X20 */] <-0.16638157f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.066489145f ? 
                 (data[7 /* X8 */] <0.04222676f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.35814065f ? 
         (data[2 /* X3 */] <0.03218679f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23071225f ? 
             (data[34 /* X35 */] <-0.886979f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.017958423f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.25113723f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.35775647f ? 
             (data[23 /* X24 */] <0.10319115f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.77734375f ? 
             (data[33 /* X34 */] <0.08984375f ? 
                1.0f : 
                 (data[26 /* X27 */] <0.16517846f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[11 /* X12 */] <-0.42587295f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[2 /* X3 */] <-0.59324765f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <0.045129124f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19840361f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_17_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (data[14 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X10 */] <-0.23099287f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_18_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_18_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.073468454f ? 
             (data[20 /* X21 */] <0.042517554f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.13437636f ? 
                 (data[0 /* X1 */] <0.17877927f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18495639f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.11056604f ? 
                 (data[0 /* X1 */] <-0.13687362f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[4 /* X5 */] <0.2570269f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[7 /* X8 */] <0.07550879f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17412925f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.7578125f ? 
                 (data[6 /* X7 */] <0.17221296f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08956657f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.056765992f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0069280337f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.354929f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17426759f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_18_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19653136f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.17578125f ? 
                0.0f : 
                1.0f)) : 
         (data[20 /* X21 */] <0.16243887f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_19_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_19_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.107045785f ? 
             (data[29 /* X30 */] <0.1019761f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[4 /* X5 */] <0.07353204f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1939709f ? 
                 (data[20 /* X21 */] <0.078812964f ? 
                    1.0f : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.17934583f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[20 /* X21 */] <0.08530766f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35447106f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13157973f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.27473038f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.12510331f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[27 /* X28 */] <-0.2982097f ? 
             (data[4 /* X5 */] <0.20014119f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.029887134f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18767235f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12219652f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.1802731f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13657656f ? 
            0.0f : 
             (data[29 /* X30 */] <0.1994854f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19005494f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[35 /* X36 */] <-0.17158568f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16885749f ? 
                 (data[4 /* X5 */] <0.0769826f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[13 /* X14 */] <0.09770289f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_19_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2519258f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X5 */] <0.123167075f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_20_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_20_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[5 /* X6 */] <0.10052217f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.09721146f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.02555885f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17220502f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.008148214f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[30 /* X31 */] <0.03670254f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39922193f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20943503f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0625f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.09564222f ? 
            0.0f : 
             (data[21 /* X22 */] <0.20382299f ? 
                 (data[31 /* X32 */] <0.07047427f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.22265625f ? 
         (data[27 /* X28 */] <-0.2951363f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19070527f ? 
                 (data[13 /* X14 */] <0.11329941f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.001424628f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.067064226f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26870364f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.33254945f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2935057f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64124745f ? 
             (data[6 /* X7 */] <0.12176652f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.40625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (data[29 /* X30 */] <0.122915596f ? 
            1.0f : 
             (data[5 /* X6 */] <0.09729321f ? 
                 (data[26 /* X27 */] <0.061712746f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[7 /* X8 */] <0.072926566f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1680782f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1056628f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_20_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13360056f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.20184934f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_21_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_21_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[5 /* X6 */] <0.10166718f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13187759f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1030499f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X11 */] <-0.5641099f ? 
                 (data[28 /* X29 */] <0.07959166f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.078191236f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.36045665f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[0 /* X1 */] <-0.13320324f ? 
             (data[12 /* X13 */] <0.15207668f ? 
                0.0f : 
                1.0f) : 
             (data[35 /* X36 */] <-0.6596582f ? 
                 (data[22 /* X23 */] <0.15819189f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.11712451f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[27 /* X28 */] <-0.4902961f ? 
                     (data[20 /* X21 */] <0.14524548f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.8f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
        0.0f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <8.7850785E-4f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30942336f ? 
                 (data[18 /* X19 */] <-0.108757354f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.001424628f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16434254f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3788151f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21956345f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.054321736f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.265625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3604632f ? 
             (data[3 /* X4 */] <-0.33179688f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.14120163f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.10124281f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.01923077f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_21_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3100233f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_22_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_22_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14845671f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24219252f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20754777f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.1093193f ? 
                    0.0f : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.05770571f ? 
                1.0f : 
                0.0f)) : 
        0.04347826f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.17773438f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2119866f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.13137828f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22584264f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10110833f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.8f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1747934f ? 
             (data[9 /* X10 */] <-0.20687322f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.07307201f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.58817065f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.265625f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.14207545f ? 
                    1.0f : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.19525152f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[33 /* X34 */] <-0.6660156f ? 
             (data[26 /* X27 */] <0.16817997f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.017628074f ? 
                    0.0f : 
                    1.0f)) : 
             (data[33 /* X34 */] <-0.48798218f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.112008594f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (data[24 /* X25 */] <-0.07047723f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15234375f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.079251304f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.36762315f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1583055f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_22_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[9 /* X10 */] <-0.24357703f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_23_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_23_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[34 /* X35 */] <-0.26757812f ? 
             (data[30 /* X31 */] <0.10160045f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.14680208f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.078191236f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
        0.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0698178f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2877516f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.08391101f ? 
                    1.0f : 
                    0.0f)) : 
             (data[26 /* X27 */] <-0.053925406f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.08404228f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3089077f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42590702f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49682266f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19219021f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.24414062f ? 
            0.0f : 
             (data[26 /* X27 */] <0.025195435f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35495764f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (data[30 /* X31 */] <0.1193976f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.174431f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.2810163f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.16776028f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16407643f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1434047f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_23_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
        0.011111111f : 
         (data[23 /* X24 */] <0.12686129f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6442277f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_24_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_24_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[16 /* X17 */] <-0.43481812f ? 
             (data[27 /* X28 */] <-0.1030499f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.05830288f ? 
            1.0f : 
             (data[23 /* X24 */] <0.08670185f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6766134f ? 
             (data[27 /* X28 */] <-0.4902961f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.07952558f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2629906f ? 
             (data[21 /* X22 */] <0.18744938f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (data[18 /* X19 */] <-0.05865866f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.046652727f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.37350756f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.007175522f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.47781765f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17524804f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.052017864f ? 
                0.0f : 
                 (data[1 /* X2 */] <0.101311244f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.03962564f ? 
                 (data[12 /* X13 */] <0.10095715f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.20063864f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (data[24 /* X25 */] <-0.07968443f ? 
             (data[27 /* X28 */] <-0.12763695f ? 
                 (data[21 /* X22 */] <0.1200807f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X8 */] <0.065179884f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.14781038f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_24_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[18 /* X19 */] <-0.11317783f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15067253f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_25_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_25_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105634764f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-2.905869E-4f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.073807806f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.100968584f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (data[10 /* X11 */] <-0.90861434f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.7684287f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.10936464f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.08260653f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.50219065f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.07264343f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[27 /* X28 */] <-0.32279673f ? 
             (data[16 /* X17 */] <-0.41540626f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.3652204f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.21268289f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23261791f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.27668566f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21956345f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.23336013f ? 
                    1.0f : 
                    0.0f)) : 
             (data[25 /* X26 */] <0.18577255f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.071491994f ? 
             (data[33 /* X34 */] <-0.53515625f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
        0.018518519f : 
         (data[29 /* X30 */] <0.11072693f ? 
            1.0f : 
             (data[13 /* X14 */] <0.11967979f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17964482f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_25_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.36564094f ? 
            0.0f : 
            1.0f) : 
         (data[31 /* X32 */] <0.14391376f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_26_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_26_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
             (data[34 /* X35 */] <-0.265625f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.26961944f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[13 /* X14 */] <0.07608046f ? 
            1.0f : 
             (data[31 /* X32 */] <0.06255839f ? 
                 (data[16 /* X17 */] <-0.44825712f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[22 /* X23 */] <0.023597473f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3739987f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20639183f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.09375f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[13 /* X14 */] <0.11365387f ? 
            0.0f : 
             (data[21 /* X22 */] <0.21737354f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.14301144f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3045339f ? 
         (data[27 /* X28 */] <-0.30281976f ? 
             (data[9 /* X10 */] <-0.16492602f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.3947917f ? 
                    1.0f : 
                    0.0f)) : 
             (data[34 /* X35 */] <-0.80078125f ? 
                 (data[25 /* X26 */] <-0.22730036f ? 
                     (data[20 /* X21 */] <0.14390558f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
         (data[18 /* X19 */] <-0.24431853f ? 
            1.0f : 
             (data[6 /* X7 */] <0.12258018f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.13111293f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.35998052f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.21594475f ? 
                 (data[16 /* X17 */] <-0.19739586f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046276446f ? 
         (data[22 /* X23 */] <0.09270045f ? 
            0.0f : 
            1.0f) : 
         (data[13 /* X14 */] <0.08813231f ? 
             (data[34 /* X35 */] <-0.2890625f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.29527733f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39629912f ? 
                     (data[16 /* X17 */] <-0.3185666f ? 
                         (data[21 /* X22 */] <0.14264114f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_26_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19022375f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.012835074f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.24609375f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_27_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_27_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (data[23 /* X24 */] <0.07845719f ? 
             (data[21 /* X22 */] <0.06028943f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[19 /* X20 */] <-0.28653845f ? 
             (data[24 /* X25 */] <-0.05206285f ? 
                 (data[15 /* X16 */] <0.09728025f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[0 /* X1 */] <-0.13320324f ? 
                 (data[10 /* X11 */] <-0.15479767f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.4196083f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06903857f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <-0.2982097f ? 
             (data[27 /* X28 */] <-0.38790348f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12420172f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.38191518f ? 
             (data[12 /* X13 */] <0.093457215f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.059717976f ? 
                     (data[29 /* X30 */] <0.2507403f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[20 /* X21 */] <0.08830569f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_27_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16329734f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26882938f ? 
                 (data[14 /* X15 */] <0.078867614f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[21 /* X22 */] <0.18349715f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_28_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_28_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18716708f ? 
             (data[19 /* X20 */] <-0.28926823f ? 
                 (data[14 /* X15 */] <0.15891124f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.069691494f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.22239591f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23889549f ? 
             (data[35 /* X36 */] <-0.9551198f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26997346f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.040966075f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21434575f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (data[26 /* X27 */] <0.1134456f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07499976f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.06276437f ? 
                     (data[13 /* X14 */] <0.11471727f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22361153f ? 
         (data[26 /* X27 */] <-0.16195579f ? 
             (data[30 /* X31 */] <0.1155152f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37697992f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.13934338f ? 
                    0.0f : 
                    1.0f))) : 
         (data[1 /* X2 */] <-0.32265273f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[14 /* X15 */] <0.11614683f ? 
             (data[30 /* X31 */] <0.12250352f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14618614f ? 
             (data[26 /* X27 */] <0.067798965f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_28_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12026738f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16055101f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20015146f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_29_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_29_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16115467f ? 
             (data[34 /* X35 */] <-0.88918686f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07984062f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.0905727f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.10239531f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0405528f ? 
            0.0f : 
             (data[4 /* X5 */] <0.15077159f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.8468349f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16559812f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08144357f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.20467512f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39716703f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.46036005f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.5090632f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[20 /* X21 */] <0.09593705f ? 
             (data[26 /* X27 */] <0.5120929f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.33889583f ? 
             (data[34 /* X35 */] <0.11250045f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.082968555f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5266876f ? 
                     (data[27 /* X28 */] <-0.17681108f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_29_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33758834f ? 
            0.0f : 
            1.0f) : 
         (data[34 /* X35 */] <0.13476562f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_30_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_30_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.08643887f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.23516601f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.089361414f ? 
             (data[30 /* X31 */] <0.10775041f ? 
                 (data[3 /* X4 */] <-0.10188969f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.11657383f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.13111293f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X10 */] <-0.39353827f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.46221623f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1626067f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.16570945f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09224959f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21289557f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21084796f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25064343f ? 
                    1.0f : 
                    0.0f))) : 
        0.8f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3045339f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.22265625f ? 
             (data[18 /* X19 */] <-0.14706813f ? 
                 (data[4 /* X5 */] <0.10671054f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38007778f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.03273639f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13595682f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.06022233f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16295658f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33660573f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.008260717f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.17062612f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20487022f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07578281f ? 
                     (data[21 /* X22 */] <0.09485391f ? 
                         (data[6 /* X7 */] <0.30131912f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.34074515f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.060685262f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6662989f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.11261164f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_30_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1113661f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16831581f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.3746478f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.37427974f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.11023671f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_31_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_31_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09459723f ? 
             (data[27 /* X28 */] <-0.30281976f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.04680836f ? 
                     (data[6 /* X7 */] <0.17221296f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (data[13 /* X14 */] <0.04240617f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.91015625f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.103027575f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35447106f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.226166f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19160154f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12553151f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.17389883f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.026408048f ? 
            0.0f : 
             (data[14 /* X15 */] <0.2798117f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1448469f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37147436f ? 
            0.0f : 
             (data[26 /* X27 */] <0.13170426f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[31 /* X32 */] <0.035273053f ? 
             (data[7 /* X8 */] <0.052555665f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1259171f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36084622f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_31_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_32_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_32_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09574437f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5972029f ? 
                 (data[2 /* X3 */] <-0.24453996f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.08472323f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.11958811f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23939319f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X13 */] <0.079957336f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[13 /* X14 */] <0.03602578f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X7 */] <0.15227848f ? 
            0.0f : 
             (data[31 /* X32 */] <0.061056446f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13829742f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.22779202f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[13 /* X14 */] <0.1416567f ? 
             (data[12 /* X13 */] <0.1389568f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17654215f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18698421f ? 
                 (data[17 /* X18 */] <-0.27992004f ? 
                     (data[10 /* X11 */] <-0.25030386f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20157342f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34761688f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.19739586f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.3489205f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14530891f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20512383f ? 
            0.0f : 
            1.0f) : 
         (data[16 /* X17 */] <-0.11377544f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.018360259f ? 
                1.0f : 
                0.0f) : 
             (data[23 /* X24 */] <0.04521262f ? 
                 (data[24 /* X25 */] <-0.05206285f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_32_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15831661f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_33_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_33_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20392439f ? 
            0.0f : 
             (data[15 /* X16 */] <0.040266085f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105634764f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20269376f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14795671f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
        0.014492754f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.65303755f ? 
             (data[31 /* X32 */] <0.09810443f ? 
                 (data[21 /* X22 */] <0.21455051f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[2 /* X3 */] <-0.6716269f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.80078125f ? 
                 (data[34 /* X35 */] <-0.97743225f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.15131457f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[7 /* X8 */] <0.06317148f ? 
            0.0f : 
             (data[19 /* X20 */] <0.01373672f ? 
                0.0f : 
                1.0f)) : 
         (data[18 /* X19 */] <-0.27673534f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31250045f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16595656f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.5844345f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[32 /* X33 */] <0.20063864f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[32 /* X33 */] <-0.11443579f ? 
             (data[34 /* X35 */] <-0.1328125f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.018518519f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_33_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2678871f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14937785f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[7 /* X8 */] <0.09645352f ? 
            0.0f : 
             (data[23 /* X24 */] <0.1170209f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_34_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_34_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.4916207f ? 
             (data[1 /* X2 */] <-0.22693396f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.062578745f ? 
                     (data[27 /* X28 */] <-0.12763695f ? 
                         (data[19 /* X20 */] <-0.31795546f ? 
                             (data[23 /* X24 */] <0.087573476f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09124346f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16843493f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38416937f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.04118178f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.28681505f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
        0.0f : 
         (data[18 /* X19 */] <-0.07928754f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4479527f ? 
                 (data[3 /* X4 */] <-0.25595528f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-0.2810789f ? 
                         (data[24 /* X25 */] <-0.21779232f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[20 /* X21 */] <0.14717616f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[18 /* X19 */] <0.08721696f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.035608936f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.42649156f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1939563f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.19590916f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49003515f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.04649401f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (data[18 /* X19 */] <0.2109902f ? 
             (data[17 /* X18 */] <-0.3225702f ? 
                 (data[3 /* X4 */] <-0.21305695f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37639776f ? 
                1.0f : 
                0.0f)) : 
         (data[29 /* X30 */] <0.086662136f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.17734748f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_34_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (data[3 /* X4 */] <-0.5379636f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19022375f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17729579f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_35_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_35_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1389568f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.01459145f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.045941472f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.13325334f ? 
                 (data[14 /* X15 */] <0.15888155f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[14 /* X15 */] <0.0934156f ? 
             (data[31 /* X32 */] <0.16619262f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[27 /* X28 */] <-0.39194787f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16909228f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.10124466f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.20127395f ? 
                    1.0f : 
                    0.0f))) : 
         (data[27 /* X28 */] <-0.37658095f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <8.7850785E-4f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30942336f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.265625f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.20596838f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08759081f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.11187128f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2557361f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29203486f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0901704f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08923119f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
        0.036363635f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.06406185f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07045005f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1796875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_35_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.01459145f ? 
        0.014925373f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27036607f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_36_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_36_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[31 /* X32 */] <0.05830288f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.571363f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.27730697f ? 
                     (data[20 /* X21 */] <0.0872155f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.044301283f ? 
            0.0f : 
             (data[15 /* X16 */] <0.03959533f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[31 /* X32 */] <0.015497438f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.20809682f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.5786243f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.0120689105f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24791823f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23939319f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.16517934f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12864399f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[32 /* X33 */] <-0.6140804f ? 
             (data[3 /* X4 */] <-0.14937052f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <0.1608915f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06508402f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_36_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (data[11 /* X12 */] <-0.58765036f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15429688f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_37_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_37_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (data[30 /* X31 */] <0.10037386f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.33604288f ? 
                1.0f : 
                0.0f) : 
             (data[14 /* X15 */] <0.14524281f ? 
                 (data[34 /* X35 */] <-0.80085754f ? 
                    0.0f : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.12537228f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38416937f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.155618f ? 
            0.0f : 
             (data[32 /* X33 */] <0.047762286f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3984375f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25183415f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[35 /* X36 */] <-0.33988655f ? 
             (data[6 /* X7 */] <0.13247879f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.27521247f ? 
                    0.0f : 
                    1.0f) : 
                 (data[33 /* X34 */] <-0.2f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1569879f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.21779232f ? 
                             (data[33 /* X34 */] <0.28f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.058879532f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.6660156f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31250045f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3637878f ? 
                    0.0f : 
                     (data[9 /* X10 */] <0.08751684f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.107045785f ? 
             (data[32 /* X33 */] <-0.5450997f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.018518519f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_37_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.089734256f ? 
         (data[6 /* X7 */] <0.049758304f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.155618f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044033594f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_38_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_38_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (data[22 /* X23 */] <0.16610149f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20511094f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13456738f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.13392861f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[30 /* X31 */] <0.10619745f ? 
                 (data[14 /* X15 */] <0.2207105f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10120837f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2808166f ? 
                0.0f : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.5960779f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15938f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.0839678f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.095359914f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20013867f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.11366662f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0955306f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26071748f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13570367f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.10431627f ? 
                     (data[14 /* X15 */] <0.109782085f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1385619f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.16213535f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.44433594f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.036915928f ? 
                 (data[14 /* X15 */] <0.13705957f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[29 /* X30 */] <0.11603994f ? 
            1.0f : 
             (data[13 /* X14 */] <0.12180659f ? 
                 (data[26 /* X27 */] <0.0641886f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_38_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (data[11 /* X12 */] <-0.5285059f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.5417121f ? 
                1.0f : 
                0.0f)) : 
        0.85714287f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_39_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_39_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[15 /* X16 */] <0.047979765f ? 
            1.0f : 
             (data[23 /* X24 */] <0.07499976f ? 
                 (data[18 /* X19 */] <0.2271986f ? 
                     (data[7 /* X8 */] <0.0763947f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.83451617f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.39900222f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[24 /* X25 */] <-0.30065706f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (data[34 /* X35 */] <-0.9765625f ? 
             (data[3 /* X4 */] <-0.11298629f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X2 */] <-0.7684287f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X5 */] <0.14785188f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.4040871f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09525223f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21680893f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.7558594f ? 
             (data[23 /* X24 */] <0.062765755f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13690686f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.32433343f ? 
                 (data[32 /* X33 */] <0.23046817f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[19 /* X20 */] <0.29695347f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5546875f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.10637335f ? 
             (data[3 /* X4 */] <-0.47423938f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17235002f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.50421494f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_39_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[19 /* X20 */] <-0.35478282f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33758834f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30533528f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.2706911f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_40_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_40_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[27 /* X28 */] <-0.14300387f ? 
             (data[27 /* X28 */] <-0.2004645f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[22 /* X23 */] <0.16610149f ? 
             (data[28 /* X29 */] <0.066911645f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X3 */] <-0.42689168f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.421875f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.23827873f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[27 /* X28 */] <-0.39194787f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20777522f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19421901f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X10 */] <-0.2184087f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
        0.6666667f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26997346f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2399578f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.060569067f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.796875f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.890625f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[22 /* X23 */] <0.098711744f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.023600962f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14579791f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5546875f ? 
                    0.0f : 
                    1.0f))) : 
         (data[25 /* X26 */] <-0.21033317f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12284372f ? 
             (data[27 /* X28 */] <-0.14361362f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23655859f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[9 /* X10 */] <-0.20582454f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1825534f ? 
                 (data[28 /* X29 */] <0.0809097f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_40_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.35795748f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X10 */] <-0.14290375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_41_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_41_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (data[15 /* X16 */] <0.04462599f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.103643574f ? 
                 (data[1 /* X2 */] <-0.24007751f ? 
                     (data[23 /* X24 */] <0.09361672f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09188083f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-2.905869E-4f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5454727f ? 
             (data[34 /* X35 */] <-0.953125f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.10443341f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.055148046f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11754108f ? 
             (data[1 /* X2 */] <-0.5244313f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.27281168f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[26 /* X27 */] <-0.17260666f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22704646f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[35 /* X36 */] <-0.16971566f ? 
            0.0f : 
             (data[22 /* X23 */] <0.09301683f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                    1.0f : 
                    0.0f))) : 
        0.018518519f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_41_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19085121f ? 
            1.0f : 
            0.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_42_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_42_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[23 /* X24 */] <0.07260615f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.27576932f ? 
                0.0f : 
                1.0f)) : 
         (data[14 /* X15 */] <0.09205172f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97867906f ? 
            0.0f : 
            1.0f) : 
         (data[14 /* X15 */] <0.15660843f ? 
             (data[10 /* X11 */] <-0.34239912f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.09532674f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (data[18 /* X19 */] <-0.05865866f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.060569067f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.1893438f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
        0.027027028f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1039878f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.1122663f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09893585f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[33 /* X34 */] <-0.8886719f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.058711845f ? 
             (data[18 /* X19 */] <0.056273643f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_42_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24679725f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26208135f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_43_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_43_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14839156f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
             (data[0 /* X1 */] <-0.09282903f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.13189366f ? 
                     (data[12 /* X13 */] <0.11795699f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.059554502f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.44860744f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[27 /* X28 */] <-0.4165349f ? 
             (data[19 /* X20 */] <-0.49946085f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X9 */] <-0.15517798f ? 
                 (data[2 /* X3 */] <-0.2829298f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06002254f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20191595f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.40039062f ? 
             (data[22 /* X23 */] <0.10187558f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.51854265f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3604632f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1529552f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.5334115f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (data[27 /* X28 */] <-0.15222402f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.1328125f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0637425f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_43_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13052717f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_44_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_44_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16610149f ? 
             (data[32 /* X33 */] <-0.250533f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7146551f ? 
                     (data[22 /* X23 */] <0.104601264f ? 
                         (data[0 /* X1 */] <-0.18560314f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.421875f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.055048667f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.36042365f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19299412f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43048134f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.421875f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[22 /* X23 */] <0.19742349f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <-0.97755986f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1886398f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.359375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22361153f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087440625f ? 
            0.0f : 
             (data[16 /* X17 */] <0.04749251f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.18380226f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.25926042f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (data[29 /* X30 */] <0.113227166f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.24911162f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.14687154f ? 
                 (data[31 /* X32 */] <0.06005515f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.05837647f ? 
             (data[0 /* X1 */] <-0.5442861f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_44_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[15 /* X16 */] <0.080511376f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_45_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_45_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10927625f ? 
                 (data[31 /* X32 */] <0.03590821f ? 
                    0.0f : 
                    1.0f) : 
                 (data[21 /* X22 */] <0.12551524f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (data[35 /* X36 */] <-0.93641967f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.7684287f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24107964f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.1819345f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (data[26 /* X27 */] <0.11648871f ? 
             (data[11 /* X12 */] <-0.12667167f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7183255f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21995169f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2101697f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.13537677f ? 
                    1.0f : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.12474324f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07056877f ? 
             (data[0 /* X1 */] <0.54581755f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.421875f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[23 /* X24 */] <0.046276446f ? 
            1.0f : 
            0.0f) : 
         (data[31 /* X32 */] <0.053296395f ? 
            1.0f : 
             (data[31 /* X32 */] <0.08146276f ? 
                 (data[15 /* X16 */] <0.05837647f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_45_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15511565f ? 
         (data[3 /* X4 */] <-0.48798382f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.29540727f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31825382f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_46_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_46_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[35 /* X36 */] <4.552246E-4f ? 
             (data[21 /* X22 */] <0.1806741f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.078610085f ? 
                     (data[2 /* X3 */] <-0.53300333f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.0915971f ? 
                     (data[18 /* X19 */] <0.28613824f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15617025f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[35 /* X36 */] <-0.87096936f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1199535f ? 
             (data[21 /* X22 */] <0.17220502f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.20684732f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[28 /* X29 */] <0.12980452f ? 
            1.0f : 
             (data[21 /* X22 */] <0.2230196f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11366662f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22130933f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23261791f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7109375f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17189357f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.31622484f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f) : 
         (data[26 /* X27 */] <0.16213535f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (data[2 /* X3 */] <-0.058989074f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5187503f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.08058174f ? 
                1.0f : 
                0.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_46_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[4 /* X5 */] <0.12927192f ? 
             (data[5 /* X6 */] <0.11617713f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_47_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_47_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (data[26 /* X27 */] <0.18343711f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.25671902f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.48958078f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[0 /* X1 */] <-0.13687362f ? 
             (data[34 /* X35 */] <-0.37890625f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.39194787f ? 
                 (data[18 /* X19 */] <-0.020347893f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17678945f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.095359914f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19142206f ? 
                0.0f : 
                1.0f) : 
             (data[20 /* X21 */] <0.0872155f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10147803f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.2242867f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.025094183f ? 
            0.0f : 
             (data[20 /* X21 */] <0.18151726f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.42351773f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X8 */] <0.09186289f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08583769f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.01373672f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.090750076f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_47_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
        0.024390243f : 
         (data[27 /* X28 */] <0.07520629f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <8.784875E-5f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_48_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_48_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07792528f ? 
             (data[34 /* X35 */] <-0.265625f ? 
                 (data[18 /* X19 */] <0.16825897f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.0368615f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13335493f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24707873f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10212733f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.578125f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.215255f ? 
                     (data[20 /* X21 */] <0.16134867f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.4940013f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2430007f ? 
             (data[7 /* X8 */] <0.11335735f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22273418f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.3220255f ? 
             (data[33 /* X34 */] <0.46484375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.047282558f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.036915928f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16844347f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09290017f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.484375f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.08578002f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08813301f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.358628f ? 
                 (data[18 /* X19 */] <0.20362274f ? 
                     (data[1 /* X2 */] <-0.39102325f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.38050395f ? 
             (data[33 /* X34 */] <-0.17578125f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_48_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18520638f ? 
            1.0f : 
             (data[7 /* X8 */] <0.07608262f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_49_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_49_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.050918315f ? 
         (data[35 /* X36 */] <-0.14914556f ? 
            1.0f : 
            0.0f) : 
         (data[25 /* X26 */] <-0.34236842f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17189978f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13601771f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.56058943f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.1044786f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.09843504f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21407616f ? 
         (data[10 /* X11 */] <-0.65791065f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18970782f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.11311736f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12659727f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.05598027f ? 
             (data[8 /* X9 */] <0.13844305f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20806307f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.058829524f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.01454111f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[32 /* X33 */] <-0.7501777f ? 
             (data[11 /* X12 */] <-0.26235598f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07796449f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (data[34 /* X35 */] <-0.04296875f ? 
             (data[28 /* X29 */] <0.077055655f ? 
                 (data[9 /* X10 */] <-0.09990786f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09510257f ? 
                1.0f : 
                0.0f)) : 
        0.021276595f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_49_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
        0.011111111f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4641429f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_50_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_50_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (data[22 /* X23 */] <0.16610149f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07499976f ? 
                 (data[23 /* X24 */] <0.051286038f ? 
                     (data[9 /* X10 */] <-0.43129075f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.10406482f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.10619745f ? 
                     (data[6 /* X7 */] <0.2501419f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
        0.014492754f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21765584f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31297478f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21988778f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16768341f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21511512f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X1 */] <0.10904201f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.48653305f ? 
                     (data[33 /* X34 */] <-0.375f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.087090164f ? 
                             (data[11 /* X12 */] <-0.1440671f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2782654f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.170014f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.08616993f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[21 /* X22 */] <0.10134688f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.46353707f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[28 /* X29 */] <0.07122285f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.08994098f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08325547f ? 
             (data[18 /* X19 */] <0.1299482f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_50_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.117685154f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.264372f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.22064131f ? 
                 (data[23 /* X24 */] <0.1061313f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.85714287f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_51_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_51_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[20 /* X21 */] <0.12591738f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.52391714f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.053046074f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.39673588f ? 
            1.0f : 
             (data[14 /* X15 */] <0.08250461f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[29 /* X30 */] <0.06290987f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26968333f ? 
                 (data[19 /* X20 */] <-0.46124402f ? 
                     (data[16 /* X17 */] <-0.20336875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.08391101f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.070223294f ? 
             (data[9 /* X10 */] <-0.1607313f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5436782f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14874603f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.062165547f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.01588654f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22104348f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.060569067f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.12172704f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.03612791f ? 
                        1.0f : 
                        0.0f))) : 
             (data[31 /* X32 */] <0.07021202f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.10780755f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[13 /* X14 */] <0.14094776f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[13 /* X14 */] <0.09380376f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07361606f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14249167f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08239478f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.079251304f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.52189684f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_51_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6381286f ? 
             (data[11 /* X12 */] <-0.6241808f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.08408628f ? 
                0.0f : 
                1.0f)) : 
         (data[31 /* X32 */] <0.1071161f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_52_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_52_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[15 /* X16 */] <0.05535807f ? 
            1.0f : 
             (data[22 /* X23 */] <0.15755913f ? 
                 (data[23 /* X24 */] <0.074467845f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.42135286f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.18519096f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[25 /* X26 */] <-0.3889691f ? 
            1.0f : 
             (data[14 /* X15 */] <0.07432137f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10993847f ? 
         (data[10 /* X11 */] <-0.8540394f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22336696f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.20367593f ? 
             (data[14 /* X15 */] <0.16070005f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.108510286f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1907839f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18883829f ? 
            0.0f : 
            1.0f) : 
         (data[22 /* X23 */] <0.15344614f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27422705f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.103027575f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.12013297f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.40039062f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32559457f ? 
                0.0f : 
                1.0f)) : 
         (data[29 /* X30 */] <0.11135199f ? 
            0.0f : 
             (data[8 /* X9 */] <0.22532295f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.33863094f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
        0.036363635f : 
         (data[18 /* X19 */] <0.16531198f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14812735f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09728025f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_52_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[10 /* X11 */] <-0.43619984f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13052717f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_53_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_53_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[35 /* X36 */] <4.552246E-4f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24219252f ? 
                 (data[23 /* X24 */] <0.077659324f ? 
                     (data[31 /* X32 */] <0.039027914f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06230807f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21963197f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13051647f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.16045047f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.011926016f ? 
                0.0f : 
                1.0f)) : 
        0.8f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20191595f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.07038041f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0032770305f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22157681f ? 
             (data[22 /* X23 */] <0.09681344f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15568498f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.093084805f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <8.784875E-5f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.040966075f ? 
             (data[11 /* X12 */] <-0.5024128f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.53847677f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.01906459f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.38095412f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.32771793f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.08885079f ? 
             (data[19 /* X20 */] <-0.17580484f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_53_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[13 /* X14 */] <0.08671445f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16318874f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_54_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_54_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (data[22 /* X23 */] <0.16546872f ? 
             (data[21 /* X22 */] <0.11574435f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1760806f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[23 /* X24 */] <0.09414863f ? 
                 (data[1 /* X2 */] <-0.22693396f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X1 */] <-0.13595602f ? 
         (data[14 /* X15 */] <0.17024717f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21420889f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20689903f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.13941966f ? 
                    1.0f : 
                    0.0f)) : 
             (data[32 /* X33 */] <0.40944535f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1039878f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.215255f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16759476f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.1861254f ? 
                    1.0f : 
                     (data[26 /* X27 */] <0.122574925f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17073266f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16844347f ? 
            0.0f : 
             (data[23 /* X24 */] <0.081914626f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21235089f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <4.552246E-4f ? 
            0.0f : 
             (data[23 /* X24 */] <0.047872186f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X3 */] <-0.2413408f ? 
             (data[32 /* X33 */] <-0.86203843f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.13072884f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.061059486f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_54_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13360056f ? 
            0.0f : 
            1.0f) : 
         (data[22 /* X23 */] <0.1619885f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15691438f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_55_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_55_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.050918315f ? 
         (data[14 /* X15 */] <0.13978732f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.04296875f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.06622319f ? 
             (data[12 /* X13 */] <0.098957166f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.06058926f ? 
                 (data[15 /* X16 */] <0.04361986f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.108957075f ? 
                     (data[10 /* X11 */] <-0.3248259f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16669726f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11648898f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.1554943f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14795671f ? 
                 (data[27 /* X28 */] <-0.38580108f ? 
                     (data[18 /* X19 */] <-0.06749961f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.265625f ? 
                    0.0f : 
                    1.0f))) : 
         (data[32 /* X33 */] <0.021661445f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2173311f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3089077f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.796875f ? 
                 (data[17 /* X18 */] <-0.52634335f ? 
                     (data[27 /* X28 */] <-0.2259852f ? 
                        1.0f : 
                        0.0f) : 
                     (data[16 /* X17 */] <-0.35866383f ? 
                         (data[34 /* X35 */] <-0.875f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.12145305f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (data[14 /* X15 */] <0.14569743f ? 
             (data[25 /* X26 */] <-0.3223967f ? 
                 (data[12 /* X13 */] <0.13995679f ? 
                     (data[15 /* X16 */] <0.082523644f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[33 /* X34 */] <-0.4453125f ? 
                 (data[23 /* X24 */] <0.037584394f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2413408f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.11563806f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.023178652f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06776704f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.50035536f ? 
             (data[12 /* X13 */] <0.11845699f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.06058926f ? 
                 (data[33 /* X34 */] <-0.578125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_55_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2312637f ? 
            0.0f : 
             (data[30 /* X31 */] <0.09532674f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.3238698f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_56_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_56_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17773438f ? 
             (data[25 /* X26 */] <-0.3889691f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.073133074f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20448588f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.14156257f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19509806f ? 
             (data[27 /* X28 */] <-0.4165349f ? 
                 (data[34 /* X35 */] <-0.578125f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.24350144f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.09527561f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.11661731f ? 
                0.0f : 
                1.0f)) : 
         (data[29 /* X30 */] <0.0957255f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
        0.75f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.5332031f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17575857f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13301897f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.765625f ? 
                         (data[26 /* X27 */] <0.23212686f ? 
                             (data[34 /* X35 */] <-0.9765625f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.074962206f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2413408f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17773438f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1760806f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.044680707f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.23346794f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.010848422f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.08370753f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_56_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3852788f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.33203125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_57_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_57_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20498127f ? 
             (data[9 /* X10 */] <-0.4543617f ? 
                 (data[16 /* X17 */] <-0.2690705f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.11200269f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.046302877f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.08815192f ? 
                         (data[14 /* X15 */] <0.222529f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06230807f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (data[31 /* X32 */] <0.015497438f ? 
            1.0f : 
            0.0f) : 
         (data[31 /* X32 */] <0.07407331f ? 
             (data[6 /* X7 */] <0.15024436f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26278222f ? 
                 (data[16 /* X17 */] <-0.19254526f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16323194f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3180924f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.065562285f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.12180659f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.12582135f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.083345965f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.02230554f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20392439f ? 
             (data[13 /* X14 */] <0.10124756f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16722812f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.018518519f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_57_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15067253f ? 
            0.0f : 
            1.0f) : 
         (data[31 /* X32 */] <0.08834179f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.13487561f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_58_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_58_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.058867775f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21116339f ? 
             (data[18 /* X19 */] <0.2448805f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5660504f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (data[1 /* X2 */] <-0.7684287f ? 
            1.0f : 
             (data[21 /* X22 */] <0.042345494f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.14814715f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.16539858f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.22102387f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2798117f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09188083f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1428266f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X12 */] <0.022928964f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.035574913f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1835026f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2553978f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.24432793f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.060388733f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.10221093f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20951742f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.09826964f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X7 */] <0.08352487f ? 
            1.0f : 
             (data[23 /* X24 */] <0.046276446f ? 
                 (data[5 /* X6 */] <0.15891805f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_58_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
        0.011764706f : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25816917f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_59_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_59_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.073468454f ? 
             (data[29 /* X30 */] <0.08572455f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.7219959f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X2 */] <-0.5113554f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23980473f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.11052455f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X13 */] <0.15220667f ? 
             (data[34 /* X35 */] <-0.33203125f ? 
                 (data[17 /* X18 */] <-0.15196948f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[32 /* X33 */] <-0.023082852f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.13437636f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15865432f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13801345f ? 
                 (data[34 /* X35 */] <-0.796875f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24048625f ? 
                         (data[17 /* X18 */] <-0.23962793f ? 
                             (data[33 /* X34 */] <0.25f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.22895598f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10499393f ? 
             (data[8 /* X9 */] <0.2714779f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18595637f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.053191315f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.053046074f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[30 /* X31 */] <0.089114904f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.21989295f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.058711845f ? 
            1.0f : 
             (data[13 /* X14 */] <0.0934493f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_59_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
        0.011764706f : 
         (data[29 /* X30 */] <0.13291655f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.05190987f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_60_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_60_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09459723f ? 
             (data[34 /* X35 */] <-0.88918686f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.06897705f ? 
                     (data[21 /* X22 */] <0.11517975f ? 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.18593399f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10993847f ? 
         (data[13 /* X14 */] <0.048786562f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15448758f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.23827873f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3420678f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[26 /* X27 */] <-0.009800321f ? 
            0.0f : 
             (data[12 /* X13 */] <0.13395685f ? 
                 (data[18 /* X19 */] <0.26845637f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19051518f ? 
            0.0f : 
            1.0f) : 
         (data[17 /* X18 */] <-0.13775276f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25959706f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
        0.024096385f : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.121053375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[29 /* X30 */] <0.08572455f ? 
             (data[4 /* X5 */] <0.13431506f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[26 /* X27 */] <0.1667f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.080511376f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_60_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[16 /* X17 */] <0.078850165f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13360056f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_61_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_61_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14945495f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.14727555f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19868901f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25800452f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X6 */] <0.07762182f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.103027575f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.07178569f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[25 /* X26 */] <-0.39562634f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.4651772f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1732329f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16288441f ? 
                    0.0f : 
                    1.0f))) : 
         (data[0 /* X1 */] <0.19162561f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[26 /* X27 */] <-0.19086532f ? 
             (data[0 /* X1 */] <0.31825382f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.80078125f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.20636156f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (data[13 /* X14 */] <0.14910048f ? 
            0.0f : 
             (data[0 /* X1 */] <0.33660573f ? 
                 (data[9 /* X10 */] <-0.35683027f ? 
                     (data[13 /* X14 */] <0.1927736f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2413408f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16668114f ? 
             (data[35 /* X36 */] <-0.4053369f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6875f ? 
             (data[4 /* X5 */] <0.10034027f ? 
                 (data[10 /* X11 */] <-0.23666012f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05826971f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_61_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21248874f ? 
            1.0f : 
            0.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_62_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_62_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[19 /* X20 */] <-0.1411978f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.05830288f ? 
            1.0f : 
             (data[23 /* X24 */] <0.07074445f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[19 /* X20 */] <-0.28653845f ? 
             (data[23 /* X24 */] <0.09297547f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.11712451f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21737354f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.20937264f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.049791858f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[18 /* X19 */] <-0.049817715f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.40039062f ? 
             (data[19 /* X20 */] <-0.35889214f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19523342f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23939319f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.26555791f ? 
                        0.0f : 
                        1.0f))) : 
             (data[23 /* X24 */] <0.07127637f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19979793f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (data[19 /* X20 */] <-0.083170265f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12498795f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2677551f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.018360259f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[31 /* X32 */] <0.035273053f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.30930597f ? 
                 (data[8 /* X9 */] <0.15201803f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_62_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15824416f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <1.043593f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14416409f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.37677872f ? 
                1.0f : 
                0.0f)) : 
         (data[31 /* X32 */] <0.11437551f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_63_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_63_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09023733f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10906302f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23889549f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13051647f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.67586523f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[32 /* X33 */] <0.18199518f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[7 /* X8 */] <0.10620859f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14589179f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.104388684f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.73819864f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5402626f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1704842f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.23309258f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08709753f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.1482732f ? 
                0.0f : 
                1.0f)) : 
        0.75f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
        0.018518519f : 
         (data[24 /* X25 */] <-0.08889162f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13415071f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.10910312f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_63_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08856044f ? 
             (data[14 /* X15 */] <0.0837552f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27190277f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X3 */] <0.008193144f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_64_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_64_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.114080764f ? 
             (data[13 /* X14 */] <0.10124756f ? 
                 (data[23 /* X24 */] <0.09255289f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <-0.015234079f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15357299f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08590397f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (data[30 /* X31 */] <0.0363143f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.04589794f ? 
             (data[27 /* X28 */] <-0.4165349f ? 
                 (data[2 /* X3 */] <0.35050252f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.58029795f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[19 /* X20 */] <-0.63594955f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.11974833f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27473313f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.123403855f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20392439f ? 
             (data[13 /* X14 */] <0.10124756f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.0915971f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_64_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3491233f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_65_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_65_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (data[15 /* X16 */] <0.048315145f ? 
            1.0f : 
             (data[21 /* X22 */] <0.13437636f ? 
                 (data[28 /* X29 */] <0.07350525f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9050045f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.13572805f ? 
             (data[35 /* X36 */] <-0.55119765f ? 
                 (data[21 /* X22 */] <0.17459884f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.069242686f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[31 /* X32 */] <0.07532493f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5782726f ? 
                 (data[27 /* X28 */] <-0.2935996f ? 
                     (data[15 /* X16 */] <0.085206665f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.20139813f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10499393f ? 
             (data[31 /* X32 */] <0.06884716f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29203486f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1529552f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.1779837f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.08153622f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[31 /* X32 */] <0.036274347f ? 
            1.0f : 
            0.0f) : 
         (data[18 /* X19 */] <0.14173612f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08208368f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.04649401f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11305699f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_65_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.47935608f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18741435f ? 
            1.0f : 
             (data[28 /* X29 */] <0.16936618f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_66_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_66_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[34 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16096884f ? 
                 (data[20 /* X21 */] <0.11883112f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.46868184f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18002237f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14582863f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[28 /* X29 */] <0.06843325f ? 
             (data[28 /* X29 */] <0.050998222f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.40731478f ? 
                 (data[34 /* X35 */] <-0.7520829f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.19371468f ? 
             (data[8 /* X9 */] <-0.23894152f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[30 /* X31 */] <0.12095056f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14459018f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16844347f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.2657033f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.14024194f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.06587364f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.114235215f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.090756364f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.08122945f ? 
                1.0f : 
                0.0f)) : 
         (data[29 /* X30 */] <0.087912254f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.10052313f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_66_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[24 /* X25 */] <-0.042855658f ? 
            0.0f : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_67_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_67_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (data[20 /* X21 */] <0.09838998f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.20392439f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.055635672f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.22569516f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08654817f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.023082852f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.15448758f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16043535f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-8.8738103E-4f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[0 /* X1 */] <0.23016463f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24791823f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.14197992f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.034582645f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.30907786f ? 
             (data[33 /* X34 */] <-0.53125f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.7501777f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.06005802f ? 
                0.0f : 
                1.0f) : 
             (data[33 /* X34 */] <-0.84375f ? 
                 (data[0 /* X1 */] <0.0906901f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.08083533f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.058711845f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15234375f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08453515f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.11471727f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2119866f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.50035536f ? 
             (data[7 /* X8 */] <0.06919668f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_67_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        0.9166667f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22160785f ? 
            0.0f : 
             (data[23 /* X24 */] <0.06595723f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_68_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_68_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
             (data[35 /* X36 */] <-0.29687634f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[29 /* X30 */] <0.097600676f ? 
             (data[34 /* X35 */] <-0.46875f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.13132612f ? 
                 (data[25 /* X26 */] <-0.3371242f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.17161104f ? 
                         (data[14 /* X15 */] <0.16800666f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42248347f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.26581016f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.4053369f ? 
                 (data[26 /* X27 */] <-0.029580532f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2230196f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2798117f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.7232385f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.058879532f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.48828125f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21761213f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
             (data[35 /* X36 */] <-0.29687634f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.31764948f ? 
                1.0f : 
                0.0f)) : 
        0.018518519f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_68_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (data[0 /* X1 */] <-0.15889591f ? 
             (data[11 /* X12 */] <-0.32497948f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[29 /* X30 */] <0.1397922f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_69_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_69_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.107944526f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.421875f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3833445f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17061381f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.37730822f ? 
             (data[1 /* X2 */] <-0.42384112f ? 
                 (data[33 /* X34 */] <-0.2265625f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.118960306f ? 
                     (data[15 /* X16 */] <0.04227835f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
        0.02631579f : 
         (data[32 /* X33 */] <0.04589794f ? 
            0.0f : 
             (data[18 /* X19 */] <-0.057776555f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.2562255f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.10995706f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[35 /* X36 */] <-0.78681886f ? 
             (data[18 /* X19 */] <0.12700121f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0047165183f ? 
             (data[20 /* X21 */] <0.13136834f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.088301934f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.59903806f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.024669647f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1939563f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.08083533f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.17062612f ? 
             (data[32 /* X33 */] <-0.07155584f ? 
                 (data[5 /* X6 */] <0.09835086f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17890696f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.29527733f ? 
             (data[1 /* X2 */] <-0.2706911f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_69_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[2 /* X3 */] <-0.21734716f ? 
            0.0f : 
            1.0f) : 
         (data[18 /* X19 */] <0.14173612f ? 
             (data[25 /* X26 */] <-0.6153152f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_70_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_70_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10936464f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08654817f ? 
                 (data[32 /* X33 */] <-0.32137817f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[8 /* X9 */] <-0.15613411f ? 
             (data[35 /* X36 */] <-0.46891722f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13173665f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.15004595f ? 
                    1.0f : 
                    0.0f))) : 
         (data[29 /* X30 */] <0.0957255f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[22 /* X23 */] <0.16768341f ? 
             (data[30 /* X31 */] <0.18151596f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.033707865f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[7 /* X8 */] <0.065179884f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17530411f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0901704f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13339679f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[2 /* X3 */] <-0.55965656f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.08028201f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0012770384f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_70_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_71_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_71_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.096740425f ? 
             (data[28 /* X29 */] <0.077055655f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.073404014f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.101331055f ? 
            0.0f : 
             (data[20 /* X21 */] <0.16025849f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.14059778f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.06384224f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.8f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (data[7 /* X8 */] <0.104487106f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.26162457f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.12866114f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11823288f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.2576457f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1170209f ? 
                     (data[23 /* X24 */] <0.039340284f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[30 /* X31 */] <0.09066786f ? 
             (data[23 /* X24 */] <0.051063664f ? 
                 (data[31 /* X32 */] <0.019001976f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1784958f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.071491994f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.092428565f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_71_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.20876047f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.25346246f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.07419173f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.38231185f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_72_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_72_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18527226f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.0719018f ? 
                    1.0f : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.10139964f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.35546875f ? 
        0.0f : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.038235657f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.16430618f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14255273f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[14 /* X15 */] <0.16951288f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.39506912f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1966154f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08144357f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14345132f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.14128819f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[14 /* X15 */] <0.14751594f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19073364f ? 
                1.0f : 
                0.0f)) : 
         (data[18 /* X19 */] <-0.27673534f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20131983f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6779513f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.21316531f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[30 /* X31 */] <0.13880959f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.020114882f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1802399f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.40151936f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09189373f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.05376594f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <0.019196268f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_72_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
        0.024390243f : 
         (data[11 /* X12 */] <-0.4728406f ? 
            1.0f : 
             (data[14 /* X15 */] <0.107919306f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_73_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_73_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[15 /* X16 */] <0.034564666f ? 
            1.0f : 
             (data[4 /* X5 */] <0.073797464f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.1869552f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.296875f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1496803f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (data[27 /* X28 */] <-0.38119102f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35935298f ? 
             (data[0 /* X1 */] <-0.045114055f ? 
                 (data[35 /* X36 */] <-0.8279591f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.13532041f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.04534402f ? 
                 (data[8 /* X9 */] <-0.13743818f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07669335f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.2935996f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11276559f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07391438f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1459103f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.49443218f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3057144f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11400808f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0625f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.041913908f ? 
             (data[23 /* X24 */] <0.04680836f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.14909303f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2296283f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14053544f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X3 */] <-0.2413408f ? 
             (data[33 /* X34 */] <-0.15234375f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_73_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21983264f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <0.35027403f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15417705f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_74_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_74_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[25 /* X26 */] <-0.39673588f ? 
             (data[16 /* X17 */] <-0.39450115f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.05427715f ? 
                 (data[34 /* X35 */] <-0.3125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.24749887f ? 
             (data[30 /* X31 */] <0.10619745f ? 
                 (data[21 /* X22 */] <0.18632017f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[19 /* X20 */] <-0.28653845f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
        0.014492754f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07385276f ? 
             (data[26 /* X27 */] <-0.029580532f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.32534444f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22779633f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[18 /* X19 */] <-0.4461868f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.23516601f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.09566251f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[0 /* X1 */] <0.39166147f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6761161f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.12812649f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.07436113f ? 
                     (data[22 /* X23 */] <0.14933315f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.026149552f ? 
             (data[25 /* X26 */] <-0.39682838f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17189978f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.07818399f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.125f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (data[6 /* X7 */] <0.08271122f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_74_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
        0.011111111f : 
         (data[35 /* X36 */] <-0.33988655f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.09030537f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_75_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_75_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10765997f ? 
             (data[1 /* X2 */] <-0.2706911f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.05308743f ? 
                     (data[23 /* X24 */] <0.040213354f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X8 */] <0.05485098f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39261442f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8401092f ? 
            0.0f : 
             (data[4 /* X5 */] <0.20014119f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[27 /* X28 */] <-0.39194787f ? 
             (data[26 /* X27 */] <-0.053925406f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.9765625f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <0.021661445f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.33793274f ? 
            0.0f : 
            1.0f) : 
         (data[26 /* X27 */] <-0.01588654f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.06190584f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.359375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.15633227f ? 
         (data[18 /* X19 */] <0.10784583f ? 
             (data[20 /* X21 */] <0.15480751f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14493217f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3570003f ? 
             (data[33 /* X34 */] <-0.84375f ? 
                 (data[23 /* X24 */] <0.047872186f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2413408f ? 
         (data[27 /* X28 */] <-0.15222402f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.35689434f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.36627567f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.23420644f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.62109375f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.059717976f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_75_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.155618f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21373986f ? 
            0.0f : 
             (data[29 /* X30 */] <0.22823815f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_76_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_76_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.08643887f ? 
         (data[32 /* X33 */] <-0.11443579f ? 
            0.0f : 
            1.0f) : 
         (data[15 /* X16 */] <0.046638258f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40234375f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.31249937f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13551445f ? 
            0.0f : 
             (data[14 /* X15 */] <0.1597908f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13283026f ? 
             (data[32 /* X33 */] <-0.17968789f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.33793274f ? 
            0.0f : 
            1.0f) : 
         (data[15 /* X16 */] <0.10499393f ? 
             (data[10 /* X11 */] <-0.1460769f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[32 /* X33 */] <-0.9310192f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22157681f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22303903f ? 
                     (data[6 /* X7 */] <0.12664844f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24038768f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[14 /* X15 */] <0.15125619f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.11443579f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.065061636f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.11525731f ? 
                     (data[11 /* X12 */] <-0.4641429f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.021276595f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_76_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.15775868f ? 
            1.0f : 
            0.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_77_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_77_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (data[31 /* X32 */] <0.05830288f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38457617f ? 
                 (data[31 /* X32 */] <0.035180155f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.42137912f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.11338015f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.0081061805f ? 
         (data[10 /* X11 */] <-0.5811646f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13051647f ? 
                0.0f : 
                 (data[2 /* X3 */] <0.049782135f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.025845008f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13374501f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09574437f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (data[30 /* X31 */] <0.101538576f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.50219065f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.22829285f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08079054f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23344f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35495764f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31205377f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19295631f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.32222804f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[31 /* X32 */] <0.035273053f ? 
             (data[34 /* X35 */] <-0.3125f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.031304557f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08909276f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.10432659f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_77_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23575442f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.42675853f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.066791624f ? 
             (data[9 /* X10 */] <-0.20058115f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_78_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_78_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.022139473f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20707177f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19109581f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.05166892f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[10 /* X11 */] <-0.69543093f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.40731478f ? 
                 (data[29 /* X30 */] <0.13572931f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19681469f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.30095434f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[9 /* X10 */] <-0.28971896f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06926678f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.7109375f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13322908f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[6 /* X7 */] <0.119732395f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64858824f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6875f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11197705f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
        0.018518519f : 
         (data[18 /* X19 */] <0.14173612f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.064413264f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_78_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (data[6 /* X7 */] <0.08637265f ? 
             (data[15 /* X16 */] <0.040266085f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.29540727f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_79_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_79_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[15 /* X16 */] <0.03288778f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.070849195f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0789891f ? 
             (data[19 /* X20 */] <-0.19918567f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13195686f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[15 /* X16 */] <0.07648685f ? 
                 (data[30 /* X31 */] <0.12793888f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (data[22 /* X23 */] <0.023728784f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08144357f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[8 /* X9 */] <-0.42491883f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.27148378f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09188083f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[8 /* X9 */] <0.3570003f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[17 /* X18 */] <-0.55122256f ? 
             (data[27 /* X28 */] <-0.09382975f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.058711845f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14249167f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06914871f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_79_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24011429f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37947115f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[23 /* X24 */] <0.10531881f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_80_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_80_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16369233f ? 
                 (data[23 /* X24 */] <0.077659324f ? 
                     (data[14 /* X15 */] <0.16797404f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.01181874f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08218826f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[34 /* X35 */] <-0.8886719f ? 
             (data[1 /* X2 */] <-0.12848037f ? 
                0.0f : 
                1.0f) : 
             (data[35 /* X36 */] <-0.97755986f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13657477f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.3945612f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.13301897f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[15 /* X16 */] <0.08185289f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
            1.0f : 
            0.0f) : 
         (data[16 /* X17 */] <-0.8723321f ? 
             (data[1 /* X2 */] <-0.3411368f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07100632f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16979255f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08654817f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.09994813f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0012770384f ? 
             (data[11 /* X12 */] <-0.51980823f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.421875f ? 
             (data[33 /* X34 */] <-0.57728606f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_80_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0081014745f ? 
             (data[11 /* X12 */] <-0.5302455f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <-0.4328311f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09728025f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_81_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_81_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[31 /* X32 */] <0.05830288f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.30197212f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.7578125f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.13913064f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[14 /* X15 */] <0.10114422f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1428207f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (data[27 /* X28 */] <-0.4887594f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.13320324f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17122285f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.2706911f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.013892346f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[26 /* X27 */] <-0.009800321f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3402761f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.06926678f ? 
            0.0f : 
             (data[15 /* X16 */] <0.07984062f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22361153f ? 
         (data[26 /* X27 */] <-0.1984731f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36963916f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.08930272f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X12 */] <-0.14754619f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.067706f ? 
            0.0f : 
             (data[29 /* X30 */] <0.20181009f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18424274f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0637425f ? 
                 (data[27 /* X28 */] <-0.15002696f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_81_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_82_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_82_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1384568f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06255839f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.025778221f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.52502954f ? 
             (data[21 /* X22 */] <0.10501683f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.041531157f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21963197f ? 
             (data[27 /* X28 */] <-0.39502123f ? 
                 (data[27 /* X28 */] <-0.49463895f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.15967675f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.22632112f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.8483565f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20806307f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32342014f ? 
             (data[22 /* X23 */] <0.1531841f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.09001949f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31250045f ? 
             (data[22 /* X23 */] <0.09997728f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.170014f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[26 /* X27 */] <0.09062228f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24419509f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16695026f ? 
                0.0f : 
                 (data[1 /* X2 */] <0.17430024f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (data[34 /* X35 */] <-0.04296875f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.008277171f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.08442643f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21289557f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_82_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21248874f ? 
            1.0f : 
            0.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_83_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_83_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14845671f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07448541f ? 
                 (data[21 /* X22 */] <0.11630896f ? 
                     (data[0 /* X1 */] <0.28155f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.16451958f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19675502f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.103866175f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20156148f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.73407954f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.1199535f ? 
             (data[21 /* X22 */] <0.18462636f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16079786f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07448541f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0047165183f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.657458f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17391312f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.0078026224f ? 
                1.0f : 
                0.0f)) : 
         (data[30 /* X31 */] <0.12095056f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16570945f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18223706f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[32 /* X33 */] <-0.38663027f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.41580546f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.4119566f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.109722584f ? 
                 (data[13 /* X14 */] <0.1459103f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32559457f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2056903f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_83_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0458949f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.069242686f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_84_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_84_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.0062030456f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.069108546f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.1547022f ? 
                    1.0f : 
                    0.0f)) : 
             (data[13 /* X14 */] <0.09628503f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.09841647f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1470556f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.03764329f ? 
         (data[25 /* X26 */] <-0.58535767f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.39502123f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.62109375f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35935298f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16515234f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.09598974f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.0831944f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.15073074f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13616976f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3744962f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1430587f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.734375f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6742809f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.074818574f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.2750434f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14604585f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.083542384f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.27446222f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6692459f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_84_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2284291f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.10722138f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.33203125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_85_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_85_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1384568f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1115453f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.32827863f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.117955476f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26278222f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.042513676f ? 
             (data[12 /* X13 */] <0.14967155f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1939709f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.35724366f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11165996f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.06276437f ? 
                 (data[12 /* X13 */] <0.09195723f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.1856059f ? 
            0.0f : 
             (data[4 /* X5 */] <0.18412931f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.009802201f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[13 /* X14 */] <0.16186127f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X5 */] <0.1006057f ? 
             (data[25 /* X26 */] <0.0504087f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24795307f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.09995715f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (data[33 /* X34 */] <-0.5332031f ? 
            1.0f : 
             (data[26 /* X27 */] <-0.19999465f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18501012f ? 
            0.0f : 
             (data[4 /* X5 */] <0.123202674f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
             (data[29 /* X30 */] <0.11339312f ? 
                1.0f : 
                 (data[34 /* X35 */] <0.3359375f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1599566f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.117697425f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.021276595f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_85_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.01373036f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1494209f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15470839f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16797404f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[7 /* X8 */] <0.09989648f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_86_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_86_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (data[31 /* X32 */] <0.05880353f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11366662f ? 
                 (data[29 /* X30 */] <0.08476177f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[13 /* X14 */] <0.09841183f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.13437636f ? 
                     (data[31 /* X32 */] <0.11833786f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (data[29 /* X30 */] <0.062597334f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24414062f ? 
            0.0f : 
             (data[7 /* X8 */] <0.08239473f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[18 /* X19 */] <-0.4461868f ? 
            1.0f : 
            0.0f) : 
         (data[22 /* X23 */] <0.14711846f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.54705524f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16300389f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.28698918f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[33 /* X34 */] <-0.9765625f ? 
             (data[7 /* X8 */] <0.062310744f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.04654822f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.43430695f ? 
                     (data[31 /* X32 */] <0.061568238f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[10 /* X11 */] <-0.31340617f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[31 /* X32 */] <0.0357737f ? 
             (data[7 /* X8 */] <0.052555665f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.058711845f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_86_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[29 /* X30 */] <0.14166738f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11136482f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2382391f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_87_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_87_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[20 /* X21 */] <0.12046641f ? 
            1.0f : 
             (data[31 /* X32 */] <0.053046074f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.07045005f ? 
                     (data[33 /* X34 */] <-0.086110316f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.069691494f ? 
            0.0f : 
             (data[7 /* X8 */] <0.089854494f ? 
                 (data[7 /* X8 */] <0.041666523f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10993847f ? 
         (data[5 /* X6 */] <0.031248614f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10927625f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15073074f ? 
                    0.0f : 
                    1.0f))) : 
         (data[32 /* X33 */] <-0.045455f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.46484375f ? 
                 (data[21 /* X22 */] <0.12082581f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (data[26 /* X27 */] <-0.009800321f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17494538f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.067527235f ? 
                    0.0f : 
                     (data[32 /* X33 */] <0.22549844f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X2 */] <-0.1895786f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2557361f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16979572f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20131983f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6244275f ? 
                    0.0f : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.16573218f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X1 */] <0.30724266f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.171875f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[5 /* X6 */] <0.08449192f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.29018864f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <0.1608915f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11969355f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.059717976f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_87_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2312637f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.13687362f ? 
                0.0f : 
                1.0f)) : 
        0.85714287f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_88_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_88_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (data[2 /* X3 */] <-0.37570524f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.17526329f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X5 */] <0.1205128f ? 
                 (data[12 /* X13 */] <0.11495702f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.2890625f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.036595f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20616251f ? 
                     (data[32 /* X33 */] <-0.25426173f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.25975183f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15724804f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (data[5 /* X6 */] <0.031248614f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2230196f ? 
             (data[1 /* X2 */] <-0.60433936f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6640195f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X6 */] <0.11197234f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[2 /* X3 */] <-0.6460337f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.30281976f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.35794115f ? 
                    0.0f : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.28624782f ? 
                     (data[10 /* X11 */] <-0.25502706f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.058879532f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09972461f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13360056f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.024889281f ? 
             (data[27 /* X28 */] <-0.106123276f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.515625f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.29647678f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.25f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[15 /* X16 */] <0.07060857f ? 
             (data[5 /* X6 */] <0.098232135f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_88_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
        0.011111111f : 
         (data[27 /* X28 */] <-0.03389879f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_89_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_89_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (data[31 /* X32 */] <0.043283425f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2938559f ? 
                0.0f : 
                1.0f) : 
             (data[33 /* X34 */] <-0.40234375f ? 
                 (data[27 /* X28 */] <-0.1030499f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.111328125f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09414863f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11336071f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.13572805f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
        0.014492754f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.65303755f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.24911162f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.19236134f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.252283f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[13 /* X14 */] <0.13882098f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2924554f ? 
             (data[19 /* X20 */] <-0.19618931f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.26875f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3364874f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.23666012f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12163491f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.04584763f ? 
             (data[32 /* X33 */] <-0.116300136f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.05851045f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.421875f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10919666f ? 
                    0.0f : 
                    1.0f))) : 
        0.018518519f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_89_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (data[11 /* X12 */] <-0.51285005f ? 
            1.0f : 
            0.0f) : 
         (data[33 /* X34 */] <-0.7324219f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_90_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_90_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.107944526f ? 
         (data[21 /* X22 */] <0.11630896f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.27290517f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21126826f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1939709f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19686796f ? 
                 (data[12 /* X13 */] <0.09595719f ? 
                     (data[21 /* X22 */] <0.119696595f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19140163f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.08984375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[26 /* X27 */] <-0.19999465f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2890625f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.18864645f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.31622484f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (data[15 /* X16 */] <0.09224959f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.21599467f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.9765625f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08238739f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.3180333f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0742152f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07045005f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20951742f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.107306f ? 
                         (data[6 /* X7 */] <0.1526853f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_90_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15511565f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24306314f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12848037f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_91_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_91_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[15 /* X16 */] <0.045632124f ? 
             (data[5 /* X6 */] <0.10853729f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105634764f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.095359914f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.098098814f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13920371f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.06640625f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1268664f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-2.905869E-4f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.21875f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21889201f ? 
         (data[17 /* X18 */] <-0.53582114f ? 
             (data[34 /* X35 */] <-0.578125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10927625f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3515625f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10911139f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[17 /* X18 */] <-0.039420385f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.13978732f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.057033014f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.27668566f ? 
             (data[18 /* X19 */] <-0.27673534f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1573778f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.07373187f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.059717976f ? 
             (data[34 /* X35 */] <-0.4453125f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.27721667f ? 
             (data[11 /* X12 */] <-0.39804026f ? 
                 (data[20 /* X21 */] <0.21912894f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3402761f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.05531897f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_91_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[20 /* X21 */] <0.15807809f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30533528f ? 
            0.0f : 
             (data[23 /* X24 */] <0.08457419f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_92_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_92_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[6 /* X7 */] <0.10671396f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0234375f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.03825382f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.12525304f ? 
                    1.0f : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.12908459f ? 
                     (data[34 /* X35 */] <-0.3125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.078191236f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08124707f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13283026f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16114765f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[30 /* X31 */] <0.12095056f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.42403698f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.19871074f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64858824f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.17988446f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06919668f ? 
             (data[35 /* X36 */] <-0.2145959f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.103643574f ? 
                 (data[24 /* X25 */] <-0.14413477f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_92_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[28 /* X29 */] <0.15009256f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13360056f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_93_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_93_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.14915064f ? 
             (data[20 /* X21 */] <0.12264679f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09361672f ? 
                    1.0f : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.049040884f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24314053f ? 
            0.0f : 
             (data[5 /* X6 */] <0.4464688f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.019311372f ? 
             (data[8 /* X9 */] <-0.15206163f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[34 /* X35 */] <-0.8886719f ? 
             (data[3 /* X4 */] <-0.20934631f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.30405787f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.796875f ? 
                 (data[16 /* X17 */] <-0.8723321f ? 
                     (data[19 /* X20 */] <-0.1712685f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7109375f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1678872f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.1199535f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[35 /* X36 */] <-0.14914556f ? 
            0.0f : 
             (data[5 /* X6 */] <0.06809341f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X7 */] <0.08027026f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_93_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78585935f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <0.08749982f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.33801654f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_94_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_94_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14839156f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
             (data[22 /* X23 */] <0.11073433f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1651047f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.05748751f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.08195732f ? 
                    1.0f : 
                    0.0f))) : 
         (data[28 /* X29 */] <0.06665804f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21963197f ? 
             (data[35 /* X36 */] <-0.91397953f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <-0.08915865f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.15027261f ? 
                    1.0f : 
                    0.0f))) : 
        0.8f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21889201f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11108613f ? 
            0.0f : 
             (data[2 /* X3 */] <0.052981287f ? 
                 (data[25 /* X26 */] <-0.25360522f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.32126006f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
         (data[32 /* X33 */] <-0.40900242f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4316627f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.48828125f ? 
             (data[10 /* X11 */] <-0.29805696f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20392439f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.46152768f ? 
                 (data[17 /* X18 */] <-0.5784713f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[10 /* X11 */] <-0.33898818f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.04361652f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.021276595f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_94_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.01459145f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.19372255f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.123496994f ? 
                1.0f : 
                0.0f)) : 
         (data[27 /* X28 */] <0.13052717f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_95_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_95_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16610149f ? 
             (data[21 /* X22 */] <0.11574435f ? 
                 (data[25 /* X26 */] <0.10588569f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[11 /* X12 */] <-0.2136488f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24601626f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21407616f ? 
         (data[10 /* X11 */] <-0.65791065f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14754619f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13697943f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.12606019f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09862176f ? 
             (data[33 /* X34 */] <-0.30859375f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08984375f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17777084f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.060569067f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.18259467f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.29876947f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.17773438f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.5058919f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X7 */] <0.09369552f ? 
             (data[33 /* X34 */] <-0.77734375f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.124563575f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.13362984f ? 
                 (data[31 /* X32 */] <0.042031806f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.058711845f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40234375f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X7 */] <0.082846545f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_95_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15511565f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.36564094f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13763274f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.26931414f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_96_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_96_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07845719f ? 
            1.0f : 
             (data[20 /* X21 */] <0.14554086f ? 
                 (data[2 /* X3 */] <-0.0845823f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[0 /* X1 */] <-0.3717781f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.39562634f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28315243f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (data[20 /* X21 */] <0.011447034f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08218058f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3984375f ? 
                 (data[9 /* X10 */] <-0.28867027f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.09395721f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22064039f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43002576f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.058879532f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3570003f ? 
             (data[23 /* X24 */] <0.06144757f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.12095056f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19695628f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[35 /* X36 */] <-0.085565224f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14249167f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.30852303f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12207407f ? 
            0.0f : 
             (data[12 /* X13 */] <0.14645673f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_96_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13143763f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2117469f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19896036f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_97_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_97_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13820681f ? 
             (data[21 /* X22 */] <0.11800278f ? 
                 (data[14 /* X15 */] <0.11887458f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8342769f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.016591877f ? 
                        1.0f : 
                        0.0f) : 
                     (data[35 /* X36 */] <-0.32679647f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[5 /* X6 */] <0.066744156f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[8 /* X9 */] <-0.047534242f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18970782f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7753373f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.070223294f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25510535f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21889201f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16768341f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.08903157f ? 
                0.0f : 
                 (data[11 /* X12 */] <0.27734733f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17385796f ? 
                 (data[35 /* X36 */] <-0.29687634f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3416788f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[12 /* X13 */] <0.1724565f ? 
             (data[18 /* X19 */] <0.35686582f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
             (data[6 /* X7 */] <0.094102345f ? 
                 (data[9 /* X10 */] <-0.32222804f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3421309f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26757812f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.1028122f ? 
         (data[12 /* X13 */] <0.14020678f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.04327914f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26020005f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[2 /* X3 */] <-0.33251667f ? 
             (data[20 /* X21 */] <0.105203696f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.14727555f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.04521262f ? 
                 (data[26 /* X27 */] <0.52332777f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_97_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.103644654f ? 
         (data[24 /* X25 */] <0.106761225f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.30091566f ? 
             (data[11 /* X12 */] <-0.5754736f ? 
                1.0f : 
                0.0f) : 
             (data[29 /* X30 */] <0.13197896f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_98_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_98_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[30 /* X31 */] <0.10580921f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15970258f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1939709f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24364933f ? 
                     (data[17 /* X18 */] <-0.5726958f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[6 /* X7 */] <0.06806548f ? 
            1.0f : 
             (data[6 /* X7 */] <0.090949446f ? 
                 (data[34 /* X35 */] <-0.0234375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28926823f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40944535f ? 
             (data[34 /* X35 */] <-0.91015625f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <-0.40550113f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31744987f ? 
             (data[35 /* X36 */] <-0.8503992f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13958606f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.034145195f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.58817065f ? 
             (data[16 /* X17 */] <-0.8723321f ? 
                 (data[0 /* X1 */] <0.16409774f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.31995675f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.34256312f ? 
                         (data[3 /* X4 */] <-0.06190584f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[19 /* X20 */] <-0.28657976f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.27290517f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.23683521f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[32 /* X33 */] <-0.27290517f ? 
             (data[24 /* X25 */] <-0.33288223f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <0.13436867f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.06815651f ? 
                 (data[3 /* X4 */] <-0.333119f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_98_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13406251f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2793961f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.098030865f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.12876007f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.33304638f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_99_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_99_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (data[21 /* X22 */] <0.1199789f ? 
             (data[27 /* X28 */] <-0.24442549f ? 
                1.0f : 
                0.0f) : 
             (data[18 /* X19 */] <0.26550937f ? 
                 (data[9 /* X10 */] <-0.21736002f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.03125f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[30 /* X31 */] <0.07197863f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.5f ? 
                         (data[16 /* X17 */] <-0.4543541f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (data[13 /* X14 */] <0.07608046f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (data[20 /* X21 */] <0.03652149f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X7 */] <0.14373513f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.121490195f ? 
                 (data[26 /* X27 */] <-0.012250892f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20806307f ? 
         (data[19 /* X20 */] <-0.43667606f ? 
             (data[26 /* X27 */] <-0.017408093f ? 
                1.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.38526562f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.060569067f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.21469615f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22361153f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087440625f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13360056f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12590548f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (data[21 /* X22 */] <0.118567385f ? 
             (data[13 /* X14 */] <0.08777784f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X6 */] <0.097087115f ? 
                 (data[3 /* X4 */] <-0.11688364f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.29144984f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[30 /* X31 */] <0.079536095f ? 
                     (data[31 /* X32 */] <0.039027914f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X4 */] <-0.16186549f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[13 /* X14 */] <0.08671445f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_99_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24249853f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.16924118f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X7 */] <0.08271122f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_100_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_100_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[13 /* X14 */] <0.07608046f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.013063895f ? 
            1.0f : 
             (data[22 /* X23 */] <0.108836025f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.35546875f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10159542f ? 
            0.0f : 
             (data[33 /* X34 */] <0.13165283f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13710399f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.11974833f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16079786f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.31511328f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.23893245f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[13 /* X14 */] <0.15087281f ? 
            0.0f : 
            1.0f) : 
         (data[33 /* X34 */] <-0.66568756f ? 
             (data[7 /* X8 */] <0.046817385f ? 
                0.0f : 
                1.0f) : 
             (data[33 /* X34 */] <-0.44446343f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54581755f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[13 /* X14 */] <0.09380376f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1600902f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16327977f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13322908f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.38007778f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15243992f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X7 */] <0.08759313f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_100_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16702074f ? 
            0.0f : 
            1.0f) : 
         (data[35 /* X36 */] <-0.33988655f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_101_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_101_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[27 /* X28 */] <-0.32126006f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2919554f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16407415f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (data[10 /* X11 */] <-0.55217165f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.2063807f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.086785465f ? 
                 (data[12 /* X13 */] <0.10927986f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18069962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
        0.0f : 
         (data[27 /* X28 */] <-0.30281976f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1810873f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26997346f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07257136f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.1585721f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.12022584f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20325837f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17910446f ? 
                             (data[34 /* X35 */] <-0.2f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (data[24 /* X25 */] <-0.08889162f ? 
             (data[27 /* X28 */] <-0.12500533f ? 
                 (data[6 /* X7 */] <0.12013922f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[16 /* X17 */] <-0.52590466f ? 
                1.0f : 
                0.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_101_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[31 /* X32 */] <0.07907979f ? 
            0.0f : 
            1.0f) : 
         (data[14 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.11208688f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_102_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_102_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.08643887f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18206741f ? 
             (data[19 /* X20 */] <-0.20191544f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[30 /* X31 */] <0.107362166f ? 
             (data[3 /* X4 */] <-0.08689575f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18970782f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28926823f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13249488f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06815706f ? 
                 (data[21 /* X22 */] <0.2055168f ? 
                     (data[2 /* X3 */] <-0.001404316f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.6480965f ? 
            1.0f : 
             (data[30 /* X31 */] <0.0363143f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.25057226f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.05633376f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[26 /* X27 */] <-0.01588654f ? 
            1.0f : 
             (data[32 /* X33 */] <0.31622806f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.088033624f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.28306654f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17189978f ? 
         (data[29 /* X30 */] <0.11572741f ? 
             (data[22 /* X23 */] <0.13731056f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.11257145f ? 
                    1.0f : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.08180538f ? 
                 (data[14 /* X15 */] <0.11677051f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.10986177f ? 
                        1.0f : 
                         (data[2 /* X3 */] <-0.30852303f ? 
                             (data[3 /* X4 */] <-0.15763703f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_102_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[29 /* X30 */] <0.14166738f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21373986f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_103_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_103_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (data[32 /* X33 */] <-0.11443579f ? 
             (data[17 /* X18 */] <-0.47421533f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.21684329f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11366662f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X13 */] <0.11445702f ? 
             (data[17 /* X18 */] <-0.07704203f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.22443219f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[23 /* X24 */] <0.009840393f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X13 */] <0.120956965f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12545195f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.122192085f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16673426f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.081914626f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.77734375f ? 
                1.0f : 
                0.0f)) : 
         (data[18 /* X19 */] <-0.03066233f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.13993049f ? 
                1.0f : 
                0.0f) : 
             (data[13 /* X14 */] <0.104792215f ? 
                 (data[27 /* X28 */] <-0.10919666f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11228958f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.88627493f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.48867765f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19670935f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.70833546f ? 
                        0.0f : 
                         (data[18 /* X19 */] <0.201489f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.088033624f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046276446f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.11713182f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.40437734f ? 
             (data[17 /* X18 */] <-0.5524033f ? 
                 (data[34 /* X35 */] <-0.13194336f ? 
                    0.0f : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.5308369f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.83593756f ? 
                         (data[27 /* X28 */] <0.031592105f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[3 /* X4 */] <-0.47423938f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_103_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[14 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
         (data[17 /* X18 */] <-0.08207057f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.3984375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_104_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_104_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.096609496f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15972936f ? 
                 (data[26 /* X27 */] <0.11311811f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
            0.0f : 
             (data[4 /* X5 */] <0.12720262f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.065542705f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.421875f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8401092f ? 
             (data[27 /* X28 */] <-0.4165349f ? 
                 (data[26 /* X27 */] <0.0069367792f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[19 /* X20 */] <-0.49946085f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.24911162f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17291659f ? 
                     (data[24 /* X25 */] <-0.19937792f ? 
                         (data[26 /* X27 */] <0.12067551f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.058879532f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07379176f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.6015625f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17524804f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16615555f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.17204061f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[22 /* X23 */] <0.12149137f ? 
             (data[24 /* X25 */] <-0.3651074f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_104_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
        0.011111111f : 
         (data[7 /* X8 */] <0.0838293f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_105_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_105_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[32 /* X33 */] <-0.3406106f ? 
            0.0f : 
             (data[14 /* X15 */] <0.14160581f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18448398f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.07189673f ? 
                     (data[15 /* X16 */] <0.05032741f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043051787f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.073935926f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[19 /* X20 */] <-0.26470026f ? 
             (data[34 /* X35 */] <-0.734375f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12553151f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.7026684f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20806307f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47842613f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.11438465f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.083345965f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.16186549f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0012770384f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.018360259f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[29 /* X30 */] <0.086662136f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_105_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (data[3 /* X4 */] <-0.42550904f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.155618f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_106_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_106_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (data[20 /* X21 */] <0.08639786f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47842613f ? 
             (data[7 /* X8 */] <0.057146292f ? 
                 (data[21 /* X22 */] <0.1287303f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03125f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X13 */] <0.06295749f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.2630976f ? 
                         (data[20 /* X21 */] <0.11742863f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3723714f ? 
             (data[10 /* X11 */] <-0.6869036f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.15206163f ? 
                     (data[24 /* X25 */] <-0.015234079f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[14 /* X15 */] <0.13524106f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17072292f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.04327452f ? 
         (data[6 /* X7 */] <0.13926004f ? 
            0.0f : 
             (data[20 /* X21 */] <0.13085179f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3180924f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1784958f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.029887134f ? 
                    0.0f : 
                    1.0f) : 
                 (data[27 /* X28 */] <-0.37350756f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[4 /* X5 */] <0.12847564f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.024669647f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.12016772f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23071225f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.11842623f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.035554815f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.070324056f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.27290517f ? 
             (data[2 /* X3 */] <-0.21254842f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.061059486f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.55951566f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_106_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        0.9166667f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22160785f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.32497948f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_107_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_107_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16610149f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16765933f ? 
                 (data[7 /* X8 */] <0.041079104f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.5900485f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X8 */] <0.065179884f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X12 */] <-0.1892952f ? 
                 (data[21 /* X22 */] <0.20438759f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (data[22 /* X23 */] <0.023728784f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07385276f ? 
             (data[11 /* X12 */] <-0.10927625f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.089498445f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.105623305f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[28 /* X29 */] <0.08567807f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2425681f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2024809f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.065179884f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.16605423f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10765997f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.12038873f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.20503746f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.030026788f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.08369489f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.47559372f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_107_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[27 /* X28 */] <0.11208688f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.25295207f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_108_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_108_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
            1.0f : 
            0.0f) : 
         (data[24 /* X25 */] <-0.031346668f ? 
             (data[28 /* X29 */] <0.08669247f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.1035254f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2127625f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.2962315f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.067064226f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[22 /* X23 */] <0.041342773f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.41768473f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X10 */] <-0.09466446f ? 
            0.0f : 
             (data[18 /* X19 */] <0.1122663f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.14499576f ? 
                     (data[0 /* X1 */] <0.45772836f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[34 /* X35 */] <-0.9765625f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1845822f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.44647712f ? 
                    0.0f : 
                    1.0f))) : 
         (data[25 /* X26 */] <-0.23807167f ? 
             (data[7 /* X8 */] <0.08469004f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17051119f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.11091447f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[9 /* X10 */] <-0.18485095f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14520136f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
            0.0f : 
            1.0f) : 
        0.018518519f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_108_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16859613f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_109_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_109_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[25 /* X26 */] <-0.3889691f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.040605113f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.14915064f ? 
                 (data[31 /* X32 */] <0.060386058f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09023733f ? 
             (data[32 /* X33 */] <0.49893394f ? 
                 (data[11 /* X12 */] <-0.11044749f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.08795726f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043051787f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.2278505f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21793814f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15480751f ? 
                 (data[31 /* X32 */] <0.026011055f ? 
                    1.0f : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.116135135f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[23 /* X24 */] <0.09707415f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.058829524f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.7109375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[13 /* X14 */] <0.14697368f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23984262f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1459103f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.61922514f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.11218394f ? 
                        0.0f : 
                         (data[19 /* X20 */] <0.024655817f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.082968555f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.080832064f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09747202f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16849716f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.11642923f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[20 /* X21 */] <0.09593705f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.08619344f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_109_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (data[3 /* X4 */] <-0.5442111f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22876412f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_110_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_110_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.050918315f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1328125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.111328125f ? 
            0.0f : 
             (data[12 /* X13 */] <0.11445702f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.15945743f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (data[19 /* X20 */] <-0.28926823f ? 
             (data[26 /* X27 */] <0.022152325f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.11712451f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.32795358f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.04327452f ? 
         (data[19 /* X20 */] <-0.19509101f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <-0.18690169f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.45772836f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19726221f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25032356f ? 
                        0.0f : 
                         (data[32 /* X33 */] <0.25284f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3784056f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14195678f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.0081014745f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.04891572f ? 
         (data[34 /* X35 */] <0.1328125f ? 
            0.0f : 
            1.0f) : 
         (data[13 /* X14 */] <0.12145213f ? 
             (data[5 /* X6 */] <0.097087115f ? 
                 (data[27 /* X28 */] <-0.24442549f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.1300682f ? 
                    1.0f : 
                    0.0f)) : 
             (data[28 /* X29 */] <0.090750076f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.40196255f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_110_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22238737f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.14051643f ? 
                0.0f : 
                1.0f)) : 
         (data[13 /* X14 */] <0.09380376f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_111_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_111_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[34 /* X35 */] <-0.2890625f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19172858f ? 
                 (data[32 /* X33 */] <-0.25426173f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.796875f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.205736f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3398253f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19950545f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.033055823f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.15429688f ? 
             (data[32 /* X33 */] <0.40944535f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.22301638f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16673426f ? 
         (data[34 /* X35 */] <-0.8886719f ? 
             (data[20 /* X21 */] <0.14717616f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.5546875f ? 
             (data[32 /* X33 */] <0.047762286f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.15706305f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.15960835f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.7982178f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.20135139f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20014362f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5439823f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31250045f ? 
                 (data[17 /* X18 */] <-0.27992004f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.30358016f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57012755f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.07234019f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (data[12 /* X13 */] <0.09195723f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2413408f ? 
         (data[34 /* X35 */] <-0.46679688f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.83966625f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6875f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3202269f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.03169725f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.04153238f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_111_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.01459145f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4453125f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22021914f ? 
                0.0f : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.12758306f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2243475f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.497704f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_112_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_112_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[34 /* X35 */] <-0.24414062f ? 
             (data[31 /* X32 */] <0.06005515f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20435221f ? 
            1.0f : 
             (data[13 /* X14 */] <0.116844065f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25375766f ? 
            0.0f : 
             (data[18 /* X19 */] <0.6928218f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.26581016f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.08984375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20806307f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.7988281f ? 
             (data[16 /* X17 */] <-0.8723321f ? 
                 (data[18 /* X19 */] <0.2920322f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22697185f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3402761f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (data[33 /* X34 */] <-0.6660156f ? 
             (data[18 /* X19 */] <0.21246369f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.25038552f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.063204065f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.043764237f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35495764f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16210397f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X5 */] <0.1271485f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1678872f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_112_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1502067f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.22683924f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19662252f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_113_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_113_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13458048f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                 (data[13 /* X14 */] <0.090058856f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[22 /* X23 */] <0.16546872f ? 
             (data[27 /* X28 */] <-0.2782327f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16971566f ? 
                    1.0f : 
                    0.0f)) : 
             (data[30 /* X31 */] <0.10551947f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18560812f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[19 /* X20 */] <-0.32475528f ? 
             (data[11 /* X12 */] <-0.11623442f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0053884345f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16791336f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.10309153f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.04327452f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.30677286f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4452377f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.060569067f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.13492759f ? 
                    1.0f : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.25671902f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[8 /* X9 */] <0.37057528f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
             (data[33 /* X34 */] <-0.5776634f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3090895f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (data[29 /* X30 */] <0.113227166f ? 
            1.0f : 
             (data[13 /* X14 */] <0.11117261f ? 
                 (data[1 /* X2 */] <-0.15035895f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X7 */] <0.08352487f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3402761f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.25426173f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_113_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.006421986f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.4815383f ? 
                1.0f : 
                0.0f)) : 
        0.85714287f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_114_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_114_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0789891f ? 
             (data[19 /* X20 */] <-0.19918567f ? 
                 (data[14 /* X15 */] <0.17242065f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41808772f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.778125f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (data[34 /* X35 */] <-0.9765625f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.12762666f ? 
                 (data[34 /* X35 */] <-0.111816406f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.76624876f ? 
            0.0f : 
             (data[14 /* X15 */] <0.1579723f ? 
                 (data[11 /* X12 */] <-0.33889583f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (data[18 /* X19 */] <-0.03066233f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11212259f ? 
                 (data[30 /* X31 */] <0.101538576f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.12127327f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.12726852f ? 
                             (data[18 /* X19 */] <0.2539632f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[18 /* X19 */] <0.12258074f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12263621f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.9291549f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.008277171f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.013944614f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.15236415f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_114_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[1 /* X2 */] <-0.40469736f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14516538f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_115_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_115_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[12 /* X13 */] <0.11770699f ? 
             (data[22 /* X23 */] <0.12592074f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.06499512f ? 
                    1.0f : 
                    0.0f)) : 
             (data[34 /* X35 */] <-0.84375f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.0897786f ? 
                     (data[23 /* X24 */] <0.073558584f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.101331055f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10212733f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.13072884f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.059459355f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3045339f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11797396f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20806307f ? 
                0.0f : 
                1.0f) : 
             (data[20 /* X21 */] <0.13191344f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1186739f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[33 /* X34 */] <-0.6660156f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.062310744f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13143303f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18424274f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.016648473f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[29 /* X30 */] <0.086662136f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.08529563f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_115_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.01373036f ? 
         (data[11 /* X12 */] <-0.5024128f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.31106317f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_116_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_116_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
             (data[35 /* X36 */] <-0.38289678f ? 
                 (data[14 /* X15 */] <0.109782085f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.062400997f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0789891f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
        0.02631579f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.15160756f ? 
            0.0f : 
             (data[26 /* X27 */] <-0.011321876f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[32 /* X33 */] <-0.250533f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.044913184f ? 
            0.0f : 
             (data[20 /* X21 */] <0.13136834f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11069535f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[8 /* X9 */] <0.30813035f ? 
             (data[27 /* X28 */] <-0.17988446f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.40900242f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21289557f ? 
                 (data[27 /* X28 */] <-0.16451755f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41673023f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.011538389f ? 
                 (data[27 /* X28 */] <-0.1453065f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24213532f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.38663027f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.2044196f ? 
                 (data[29 /* X30 */] <0.13947968f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_116_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[22 /* X23 */] <0.049039487f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.15918009f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28385973f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_117_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_117_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.087440625f ? 
             (data[32 /* X33 */] <-0.20578873f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.09072502f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.111818865f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[28 /* X29 */] <0.08009886f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.851427f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.10621008f ? 
                     (data[10 /* X11 */] <-0.28360817f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[19 /* X20 */] <-0.4639738f ? 
             (data[35 /* X36 */] <-0.78681886f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.18603122f ? 
             (data[19 /* X20 */] <-0.5158395f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.11329941f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[0 /* X1 */] <-0.28001854f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2924554f ? 
             (data[35 /* X36 */] <-0.46891722f ? 
                 (data[19 /* X20 */] <-0.19618931f ? 
                     (data[17 /* X18 */] <-0.2751811f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0049037123f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11356346f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1041638f ? 
         (data[23 /* X24 */] <0.05691471f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0014147852f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1368571f ? 
             (data[3 /* X4 */] <-0.30930597f ? 
                 (data[11 /* X12 */] <-0.123192586f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X8 */] <0.06977051f ? 
                 (data[34 /* X35 */] <-0.1796875f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.1222775f ? 
                     (data[24 /* X25 */] <0.0011687932f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_117_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2243475f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13360056f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_118_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_118_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[31 /* X32 */] <0.05830288f ? 
            1.0f : 
             (data[22 /* X23 */] <0.15566082f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.108021624f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.39503077f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.6632811f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17292036f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19589435f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.20344245f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.09903574f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0190875f ? 
                     (data[17 /* X18 */] <-0.40256414f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13776551f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[18 /* X19 */] <-0.38430017f ? 
            1.0f : 
            0.0f) : 
         (data[23 /* X24 */] <0.07499976f ? 
            0.0f : 
             (data[22 /* X23 */] <0.19932179f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.047713473f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2557361f ? 
        0.0f : 
         (data[30 /* X31 */] <0.1155152f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4453125f ? 
                 (data[6 /* X7 */] <0.0878165f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[6 /* X7 */] <0.08352487f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.41580546f ? 
             (data[12 /* X13 */] <0.11145705f ? 
                 (data[17 /* X18 */] <-0.1614473f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_118_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[23 /* X24 */] <0.09361672f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_119_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_119_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (data[12 /* X13 */] <0.1384568f ? 
             (data[9 /* X10 */] <-0.17541282f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.10052313f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.034767f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (data[35 /* X36 */] <-0.5960779f ? 
             (data[34 /* X35 */] <-0.88671875f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X10 */] <-0.16492602f ? 
            0.0f : 
             (data[21 /* X22 */] <0.18406175f ? 
                 (data[10 /* X11 */] <-0.666438f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.49286485f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.6875f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.2763062f ? 
             (data[31 /* X32 */] <0.053046074f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.070324056f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.020347893f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.13476562f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20713681f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.9550781f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21801049f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.10704458f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.05900934f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07608262f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08008109f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.09595719f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_119_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[2 /* X3 */] <-0.13736832f ? 
            0.0f : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_120_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_120_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[13 /* X14 */] <0.07608046f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.17578125f ? 
                 (data[14 /* X15 */] <0.14509197f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19827662f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0831944f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97867906f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40944535f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.36758986f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[18 /* X19 */] <-0.105810374f ? 
             (data[15 /* X16 */] <0.08904844f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.91015625f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22273418f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
        0.024096385f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.40900242f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[4 /* X5 */] <0.1271485f ? 
             (data[34 /* X35 */] <-0.1796875f ? 
                0.0f : 
                1.0f) : 
             (data[33 /* X34 */] <-0.421875f ? 
                 (data[4 /* X5 */] <0.13118693f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18157548f ? 
                    0.0f : 
                    1.0f))) : 
        0.018518519f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_120_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.089734256f ? 
        0.027027028f : 
         (data[32 /* X33 */] <-0.11443579f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_121_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_121_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.107944526f ? 
         (data[34 /* X35 */] <-0.2890625f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2072f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.011926016f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.15496367f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.04723081f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28926823f ? 
         (data[19 /* X20 */] <-0.5351319f ? 
            0.0f : 
             (data[22 /* X23 */] <0.19868901f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.12188163f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43208092f ? 
             (data[8 /* X9 */] <-0.15749162f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0027910734f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[7 /* X8 */] <0.10678242f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.054297246f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24579482f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.20139813f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.1035254f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25206947f ? 
            1.0f : 
             (data[31 /* X32 */] <0.1081174f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.21538976f ? 
         (data[17 /* X18 */] <-0.35337314f ? 
             (data[4 /* X5 */] <0.18368466f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.16776028f ? 
             (data[8 /* X9 */] <-0.073326714f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.46875f ? 
                    0.0f : 
                    1.0f)) : 
             (data[16 /* X17 */] <-0.4064469f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06640574f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_121_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (data[0 /* X1 */] <-0.12769766f ? 
             (data[33 /* X34 */] <-0.35546875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24568771f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27190277f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[31 /* X32 */] <0.1081174f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_122_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_122_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[29 /* X30 */] <0.10572645f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.115378685f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14795671f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[15 /* X16 */] <0.03825382f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.33571118f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.056910776f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25428852f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.113409445f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18160157f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.06728701f ? 
        0.0f : 
         (data[34 /* X35 */] <-0.4453125f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13283026f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2235842f ? 
                     (data[9 /* X10 */] <-0.06215538f ? 
                        1.0f : 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.55119765f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11228958f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3529278f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18545638f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.21736002f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.05837647f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.2744362f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046276446f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.10783986f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[5 /* X6 */] <0.097659625f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07893426f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.40250733f ? 
                 (data[17 /* X18 */] <-0.5646825f ? 
                     (data[27 /* X28 */] <-0.029288717f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.08170123f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_122_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        0.9166667f : 
         (data[22 /* X23 */] <0.064858675f ? 
             (data[21 /* X22 */] <0.06436515f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_123_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_123_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[34 /* X35 */] <-0.26757812f ? 
             (data[31 /* X32 */] <0.05404737f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.14615206f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13462293f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27229217f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24108702f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.7280026f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07907979f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.55544424f ? 
                         (data[27 /* X28 */] <-0.3269573f ? 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.011551202f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
        0.0f : 
         (data[18 /* X19 */] <-0.10728387f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.054680884f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.093949914f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.15790443f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[18 /* X19 */] <0.076902516f ? 
             (data[19 /* X20 */] <-0.021750346f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (data[18 /* X19 */] <0.16531198f ? 
             (data[2 /* X3 */] <-0.29892555f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.025040012f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.16691524f ? 
                    1.0f : 
                    0.0f))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_123_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (data[11 /* X12 */] <-0.5285059f ? 
            1.0f : 
            0.0f) : 
        0.85714287f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_124_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_124_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[13 /* X14 */] <0.07608046f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.14607725f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12685756f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1941526f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09459723f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15480751f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.12137907f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10993847f ? 
         (data[19 /* X20 */] <-0.39163476f ? 
             (data[8 /* X9 */] <-0.1710666f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.19681469f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.2265625f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X11 */] <-0.28100228f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16835178f ? 
                 (data[16 /* X17 */] <-0.42472312f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[19 /* X20 */] <-0.18007725f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.8688112f ? 
             (data[27 /* X28 */] <-0.30281976f ? 
                 (data[16 /* X17 */] <-0.2750434f ? 
                     (data[17 /* X18 */] <-0.15196948f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[19 /* X20 */] <0.035574913f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16844347f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.18844227f ? 
                0.0f : 
                 (data[17 /* X18 */] <0.0044145277f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X10 */] <-0.17960754f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.083170265f ? 
             (data[27 /* X28 */] <-0.14915064f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.36971098f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X7 */] <0.08352487f ? 
             (data[17 /* X18 */] <-0.29887566f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_124_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39317536f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <0.0906901f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_125_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_125_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[25 /* X26 */] <-0.39673588f ? 
             (data[35 /* X36 */] <-0.21085589f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.30281976f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.038235657f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.2207105f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21197714f ? 
             (data[35 /* X36 */] <-0.9551198f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40944535f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.15078475f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.86697596f ? 
             (data[27 /* X28 */] <-0.30281976f ? 
                 (data[35 /* X36 */] <-0.50631744f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19573504f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39166147f ? 
             (data[6 /* X7 */] <0.094102345f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.27668566f ? 
             (data[26 /* X27 */] <-0.044796076f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1328125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X12 */] <-0.060569067f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.21085589f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X7 */] <0.08027026f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_125_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.089734256f ? 
         (data[25 /* X26 */] <-0.49104676f ? 
             (data[35 /* X36 */] <-0.16971566f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20198564f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.115237586f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.026215333f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_126_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_126_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1384568f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.053819865f ? 
             (data[3 /* X4 */] <-0.1268796f ? 
                 (data[22 /* X23 */] <0.12908459f ? 
                     (data[3 /* X4 */] <-0.26917803f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.19215578f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.108690396f ? 
                         (data[32 /* X33 */] <0.0142040625f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.065542705f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.06189253f ? 
                    1.0f : 
                    0.0f))) : 
         (data[13 /* X14 */] <0.105855614f ? 
             (data[17 /* X18 */] <-0.52871275f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[30 /* X31 */] <0.0363143f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43048134f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.117792964f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18519096f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40944535f ? 
             (data[0 /* X1 */] <-0.140544f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2173311f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.075221874f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09137113f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.12614858f ? 
                    1.0f : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.085087575f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15567176f ? 
                     (data[18 /* X19 */] <0.32150203f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14363389f ? 
                             (data[3 /* X4 */] <-0.24012543f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.038165424f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11228958f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26254213f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14874603f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11212259f ? 
                     (data[0 /* X1 */] <0.35495764f ? 
                         (data[14 /* X15 */] <0.14978905f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1041638f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.17436415f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.13937455f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
            0.0f : 
             (data[31 /* X32 */] <0.066563584f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16615555f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X3 */] <-0.22534503f ? 
                     (data[21 /* X22 */] <0.1415764f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_126_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.1389864f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.34429184f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.155618f ? 
             (data[31 /* X32 */] <0.14366345f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_127_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_127_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14867187f ? 
            0.0f : 
             (data[7 /* X8 */] <0.18327692f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.06145f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.1030499f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X2 */] <-0.41290185f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1014387f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.028597621f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.2986199f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10212733f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12964529f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1328125f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.15744802f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.048073683f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)) : 
        0.8f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3716691f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.095359914f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11754108f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2890625f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12276894f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21995169f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.20516789f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.085206665f ? 
                    1.0f : 
                    0.0f)) : 
             (data[14 /* X15 */] <0.087050855f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.06431914f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.049410883f ? 
         (data[2 /* X3 */] <-0.22534503f ? 
             (data[4 /* X5 */] <0.12422879f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.15744802f ? 
                     (data[0 /* X1 */] <-0.12966369f ? 
                        0.0f : 
                        1.0f) : 
                     (data[28 /* X29 */] <0.07451966f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.492427f ? 
                 (data[16 /* X17 */] <-0.56771487f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20931719f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.17121811f ? 
                    1.0f : 
                    0.0f))) : 
         (data[24 /* X25 */] <-0.40884155f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_127_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        0.9166667f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15067253f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_128_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_128_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (data[35 /* X36 */] <-0.51005745f ? 
             (data[31 /* X32 */] <0.13014594f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.12074319f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17933688f ? 
                 (data[29 /* X30 */] <0.083224304f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16515234f ? 
                 (data[3 /* X4 */] <-0.12269428f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.13649479f ? 
                        1.0f : 
                         (data[35 /* X36 */] <-0.2519961f ? 
                             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.112449534f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (data[35 /* X36 */] <-0.93641967f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.18825898f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.75999415f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[11 /* X12 */] <-0.27453277f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.30435666f ? 
             (data[35 /* X36 */] <-0.33801654f ? 
                 (data[25 /* X26 */] <-0.22697626f ? 
                     (data[18 /* X19 */] <0.15666674f ? 
                        0.0f : 
                         (data[13 /* X14 */] <0.10184572f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (data[11 /* X12 */] <-0.17537886f ? 
             (data[0 /* X1 */] <0.27053884f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.59169734f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57012755f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.34157836f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1041638f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.041913908f ? 
             (data[35 /* X36 */] <-0.31931698f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.39042717f ? 
            1.0f : 
             (data[15 /* X16 */] <0.059717976f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.045736928f ? 
                     (data[6 /* X7 */] <0.11363f ? 
                         (data[25 /* X26 */] <-0.06240608f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[14 /* X15 */] <0.0879601f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_128_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[28 /* X29 */] <0.12600052f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.4843895f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15067253f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_129_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_129_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.105634764f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07925506f ? 
                 (data[31 /* X32 */] <0.03502273f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X12 */] <-0.15798344f ? 
                    1.0f : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.14680208f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24753335f ? 
             (data[35 /* X36 */] <-0.93641967f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X13 */] <0.116957f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.08985722f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[18 /* X19 */] <-0.105810374f ? 
             (data[33 /* X34 */] <-0.109375f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.30281976f ? 
                 (data[31 /* X32 */] <0.077077195f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10620859f ? 
             (data[22 /* X23 */] <0.089852996f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.531136f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.8222656f ? 
             (data[26 /* X27 */] <0.42688584f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[20 /* X21 */] <0.09539195f ? 
             (data[21 /* X22 */] <0.118567385f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.045478575f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.0026419256f ? 
                 (data[11 /* X12 */] <-0.58243173f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_129_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        0.9166667f : 
         (data[0 /* X1 */] <-0.15339033f ? 
             (data[22 /* X23 */] <0.065175064f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_130_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_130_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[27 /* X28 */] <-0.2935996f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.03502273f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20015214f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[34 /* X35 */] <-0.9550781f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.22265625f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.8f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
        0.75f : 
         (data[17 /* X18 */] <-0.53700584f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.082523644f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2413408f ? 
         (data[34 /* X35 */] <-0.1328125f ? 
             (data[33 /* X34 */] <-0.17578125f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.5332031f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35495764f ? 
                 (data[1 /* X2 */] <-0.21599467f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.04893601f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_130_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19192776f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14917058f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.11235671f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.0038785639f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_131_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_131_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[12 /* X13 */] <0.11995697f ? 
             (data[27 /* X28 */] <-0.14607725f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.5846603f ? 
                    1.0f : 
                    0.0f)) : 
             (data[26 /* X27 */] <-0.014364985f ? 
                 (data[16 /* X17 */] <-0.41404277f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09760606f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.39922193f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21737354f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.20139813f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[12 /* X13 */] <0.13820681f ? 
            0.0f : 
            1.0f) : 
         (data[19 /* X20 */] <-0.3220255f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.2164349f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.16186549f ? 
             (data[23 /* X24 */] <0.09361672f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.063204065f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.060388733f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4453125f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.01923077f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_131_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[23 /* X24 */] <0.09361672f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_132_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_132_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.107944526f ? 
         (data[3 /* X4 */] <-0.13687557f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.042555f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.04813814f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.124778055f ? 
                 (data[31 /* X32 */] <0.067064226f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[0 /* X1 */] <-0.23597394f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.93641967f ? 
                 (data[20 /* X21 */] <0.1755212f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22648677f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19219021f ? 
                        0.0f : 
                        1.0f)))) : 
        0.8f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3045339f ? 
         (data[18 /* X19 */] <-0.0851815f ? 
             (data[12 /* X13 */] <0.1389568f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22076118f ? 
                 (data[19 /* X20 */] <-0.28653845f ? 
                     (data[2 /* X3 */] <-0.33411625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.84375f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
         (data[18 /* X19 */] <0.08721696f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19930613f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.13708554f ? 
             (data[33 /* X34 */] <-0.6875f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.049410883f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5056884f ? 
             (data[24 /* X25 */] <-0.25922468f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.21254842f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13172089f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.30487883f ? 
                     (data[33 /* X34 */] <-0.140625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.04296875f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13822955f ? 
                     (data[16 /* X17 */] <-0.56011647f ? 
                         (data[24 /* X25 */] <0.024725892f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.05f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_132_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.195296f ? 
            1.0f : 
            0.0f) : 
         (data[8 /* X9 */] <-0.1710666f ? 
             (data[21 /* X22 */] <0.14228086f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_133_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_133_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07260615f ? 
            1.0f : 
             (data[5 /* X6 */] <0.097087115f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.10410258f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.26423725f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X6 */] <0.23048164f ? 
             (data[23 /* X24 */] <0.111701764f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (data[23 /* X24 */] <0.07260615f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13576074f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.02020818f ? 
                    1.0f : 
                    0.0f) : 
                 (data[32 /* X33 */] <0.15589434f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57012755f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.040966075f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.484375f ? 
                     (data[21 /* X22 */] <0.11743817f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
        0.018518519f : 
         (data[7 /* X8 */] <0.07005742f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14007226f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21737354f ? 
                 (data[20 /* X21 */] <0.09157627f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_133_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1345143f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.124733634f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2844935f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15234375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_134_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_134_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15051836f ? 
             (data[15 /* X16 */] <0.046973635f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.031284165f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.23787324f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.32843417f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18970782f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18983027f ? 
                     (data[35 /* X36 */] <-0.7755988f ? 
                        1.0f : 
                        0.0f) : 
                     (data[24 /* X25 */] <0.0048826057f ? 
                        1.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13725662f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.48505953f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2069562f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.075074606f ? 
                     (data[35 /* X36 */] <-0.5960779f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.22675428f ? 
                             (data[1 /* X2 */] <-0.35670492f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
             (data[22 /* X23 */] <0.09681344f ? 
                 (data[1 /* X2 */] <0.01373036f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[35 /* X36 */] <-0.14727555f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17022888f ? 
            1.0f : 
             (data[24 /* X25 */] <0.07052167f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.35160017f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.23211044f ? 
            0.0f : 
             (data[23 /* X24 */] <0.047872186f ? 
                1.0f : 
                0.0f)) : 
         (data[15 /* X16 */] <0.059717976f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.4765329f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_134_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2312637f ? 
            0.0f : 
            1.0f) : 
         (data[15 /* X16 */] <0.08084676f ? 
            0.0f : 
             (data[23 /* X24 */] <0.12074429f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_135_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_135_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (data[33 /* X34 */] <-0.26757812f ? 
             (data[27 /* X28 */] <-0.14556295f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[28 /* X29 */] <0.08669247f ? 
             (data[27 /* X28 */] <-0.13071033f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.22308558f ? 
                 (data[13 /* X14 */] <0.10621008f ? 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.140625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.14876877f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21963197f ? 
             (data[27 /* X28 */] <-0.4165349f ? 
                 (data[35 /* X36 */] <-0.97755986f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[27 /* X28 */] <-0.33662698f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.12407961f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1380331f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[6 /* X7 */] <0.102645695f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1784958f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24579482f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.13983685f ? 
                    1.0f : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.1720852f ? 
                 (data[18 /* X19 */] <0.27435032f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13360056f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2101724f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
             (data[27 /* X28 */] <-0.14579384f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20487022f ? 
            0.0f : 
             (data[12 /* X13 */] <0.14645673f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_135_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.35027403f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.40710562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_136_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_136_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (data[17 /* X18 */] <-0.58794916f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20929882f ? 
                0.0f : 
                1.0f)) : 
         (data[30 /* X31 */] <0.10775041f ? 
             (data[29 /* X30 */] <0.10447633f ? 
                 (data[22 /* X23 */] <0.15692636f ? 
                    0.0f : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6999282f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10144753f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1953125f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (data[27 /* X28 */] <-0.35814065f ? 
             (data[9 /* X10 */] <-0.16498679f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.013022997f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.05900934f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.18743047f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2924554f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22698803f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13315766f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3017199f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.11842623f ? 
         (data[19 /* X20 */] <-0.16779327f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21845895f ? 
                1.0f : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.30065706f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.15962303f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.055022694f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16451958f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.042555f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.029118828f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_136_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[19 /* X20 */] <-0.35478282f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0458949f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_137_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_137_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[5 /* X6 */] <0.1091098f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.250533f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[20 /* X21 */] <0.13027816f ? 
             (data[18 /* X19 */] <0.009121928f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.11688461f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14273885f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22948578f ? 
             (data[25 /* X26 */] <-0.4311316f ? 
                 (data[30 /* X31 */] <0.1337943f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.15838087f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.15671535f ? 
             (data[3 /* X4 */] <0.10743986f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.23807167f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.22265625f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28372496f ? 
             (data[27 /* X28 */] <-0.21369167f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23487633f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.12793888f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[6 /* X7 */] <0.31541574f ? 
                1.0f : 
                0.0f)) : 
         (data[20 /* X21 */] <0.124554634f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23487633f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.33328995f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.16250943f ? 
            0.0f : 
             (data[28 /* X29 */] <0.15212135f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (data[18 /* X19 */] <0.20951672f ? 
             (data[28 /* X29 */] <0.08669247f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07112081f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_137_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[1 /* X2 */] <-0.40469736f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39044556f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28044313f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_138_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_138_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.107944526f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11572741f ? 
             (data[35 /* X36 */] <-0.49135736f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22348972f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10197554f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.44104296f ? 
             (data[27 /* X28 */] <-0.23827873f ? 
                0.0f : 
                1.0f) : 
             (data[28 /* X29 */] <0.08009886f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.58176166f ? 
                     (data[4 /* X5 */] <0.1507567f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X9 */] <-0.15681288f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.15479767f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2226244f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21420889f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31775975f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.088033624f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15573123f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.1239053f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[27 /* X28 */] <-0.30589315f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4208839f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.003180306f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20153648f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.09188083f ? 
                0.0f : 
                1.0f)) : 
         (data[18 /* X19 */] <-0.11465132f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.33801654f ? 
                 (data[27 /* X28 */] <-0.37350756f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11489324f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (data[22 /* X23 */] <0.09712982f ? 
             (data[33 /* X34 */] <-0.62109375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <0.16383849f ? 
            1.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.026587406f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1041638f ? 
         (data[21 /* X22 */] <0.09033705f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0859375f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.2787353f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1294859f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0014451083f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.08108391f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_138_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2489915f ? 
             (data[11 /* X12 */] <-0.58591086f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.12008592f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14210783f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_139_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_139_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.047399238f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.26931414f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[13 /* X14 */] <0.076789394f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (data[28 /* X29 */] <0.06234684f ? 
             (data[26 /* X27 */] <0.62164485f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.13669418f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.2421875f ? 
                0.0f : 
                 (data[18 /* X19 */] <-0.020347893f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18883829f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.101132154f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
        0.024096385f : 
         (data[13 /* X14 */] <0.12783252f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.492427f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046276446f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.55773956f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.2413408f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2421875f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.29900602f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[33 /* X34 */] <-0.66796875f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20218842f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_139_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22219945f ? 
            0.0f : 
             (data[26 /* X27 */] <0.35385123f ? 
                1.0f : 
                0.0f)) : 
        0.85714287f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_140_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_140_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1384568f ? 
         (data[32 /* X33 */] <-0.11443579f ? 
             (data[15 /* X16 */] <0.038924575f ? 
                 (data[12 /* X13 */] <0.11018558f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.061557095f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16008894f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.056690075f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.29687634f ? 
                    0.0f : 
                    1.0f))) : 
         (data[16 /* X17 */] <-1.0097085f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.059532207f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.21469615f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.66561913f ? 
            0.0f : 
            1.0f) : 
         (data[32 /* X33 */] <0.04589794f ? 
            0.0f : 
             (data[20 /* X21 */] <0.14717616f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2173311f ? 
         (data[19 /* X20 */] <-0.35887748f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18587804f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2664649f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0020544566f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.06524946f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X12 */] <-0.12145305f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.31106317f ? 
                 (data[23 /* X24 */] <0.123403855f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (data[32 /* X33 */] <-0.29527733f ? 
             (data[18 /* X19 */] <0.10931932f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08583769f ? 
                     (data[12 /* X13 */] <0.099356204f ? 
                         (data[13 /* X14 */] <0.11188154f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.040957313f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.10289778f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_140_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39044556f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18723343f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.27105367f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_141_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_141_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[24 /* X25 */] <-0.39503077f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.34175655f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.03288778f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0789891f ? 
             (data[22 /* X23 */] <0.025943471f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (data[29 /* X30 */] <0.062597334f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23980473f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.2110781f ? 
             (data[32 /* X33 */] <0.047762286f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.11328125f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.12685756f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.117915116f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13347228f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3921842f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22448778f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.13601771f ? 
                    0.0f : 
                    1.0f)) : 
             (data[31 /* X32 */] <0.13615371f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[29 /* X30 */] <0.16041918f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.2100581f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.016654791f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.03908442f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.085087575f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.59324765f ? 
             (data[22 /* X23 */] <0.23728785f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_141_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
        0.011764706f : 
         (data[6 /* X7 */] <0.1962157f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_142_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_142_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077774726f ? 
         (data[11 /* X12 */] <-0.2884491f ? 
             (data[15 /* X16 */] <0.036241554f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.084605664f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18571953f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14941622f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.06808488f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16818371f ? 
                                1.0f : 
                                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.11616028f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
             (data[35 /* X36 */] <-0.9551198f ? 
                 (data[10 /* X11 */] <-0.04564774f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.2045553f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08471085f ? 
                    1.0f : 
                    0.0f))) : 
        0.8f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[20 /* X21 */] <0.13027816f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16971566f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[8 /* X9 */] <0.3597153f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07369086f ? 
             (data[35 /* X36 */] <-0.4053369f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.10931932f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.021276595f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_142_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27462113f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24073935f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_143_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_143_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14839156f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09997652f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17654215f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0703125f ? 
                     (data[29 /* X30 */] <0.08641565f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[32 /* X33 */] <0.021661445f ? 
                     (data[21 /* X22 */] <0.1626067f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5544227f ? 
                0.0f : 
                1.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[23 /* X24 */] <0.019148873f ? 
            1.0f : 
            0.0f) : 
         (data[16 /* X17 */] <-0.2750434f ? 
            0.0f : 
             (data[29 /* X30 */] <0.11385223f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.061712746f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[27 /* X28 */] <-0.5363968f ? 
            1.0f : 
            0.0f) : 
         (data[17 /* X18 */] <-0.052452385f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
            0.0f : 
            1.0f) : 
         (data[8 /* X9 */] <0.11536557f ? 
             (data[33 /* X34 */] <-0.6640625f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0742152f ? 
         (data[27 /* X28 */] <-0.14607725f ? 
             (data[17 /* X18 */] <-0.51923496f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.011538389f ? 
                 (data[26 /* X27 */] <0.06655458f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.640625f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_143_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[27 /* X28 */] <-0.39809462f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_144_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_144_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X3 */] <-0.07658441f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.15625f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19109581f ? 
                     (data[31 /* X32 */] <0.03502273f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[30 /* X31 */] <0.0363143f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.7465501f ? 
                1.0f : 
                0.0f)) : 
         (data[22 /* X23 */] <0.228274f ? 
             (data[3 /* X4 */] <-0.096891716f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.15794556f ? 
                 (data[8 /* X9 */] <-2.179602E-5f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[33 /* X34 */] <0.2890625f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22923027f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17777084f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3898824f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.060569067f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.106980495f ? 
                            0.0f : 
                             (data[15 /* X16 */] <0.08156499f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[4 /* X5 */] <0.11732766f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[8 /* X9 */] <0.116723076f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.40994132f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5546875f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.049706437f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.2714779f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X9 */] <-0.13848664f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X6 */] <0.095942095f ? 
             (data[24 /* X25 */] <-0.2546211f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_144_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1480303f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10734157f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.15744802f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X6 */] <0.09937715f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_145_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_145_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.107944526f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.12848037f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21085589f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2088133f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.36470106f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.0747338f ? 
             (data[14 /* X15 */] <0.108750805f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.13301384f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.53622085f ? 
                        0.0f : 
                        1.0f) : 
                     (data[15 /* X16 */] <0.07989064f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (data[0 /* X1 */] <-0.19009416f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <-0.41620272f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.065355465f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.29998538f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.058829524f ? 
            0.0f : 
             (data[20 /* X21 */] <0.13136834f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2714779f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25395685f ? 
            0.0f : 
             (data[7 /* X8 */] <0.09042832f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12219652f ? 
             (data[35 /* X36 */] <-0.2744362f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.015957395f ? 
                    0.0f : 
                    1.0f)) : 
             (data[32 /* X33 */] <-0.250533f ? 
                 (data[22 /* X23 */] <0.11630958f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.021276595f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_145_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.124868065f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X12 */] <-0.40673798f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_146_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_146_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07659549f ? 
             (data[32 /* X33 */] <-0.4332389f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1611098f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4283653f ? 
            0.0f : 
             (data[22 /* X23 */] <0.15376252f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97867906f ? 
             (data[10 /* X11 */] <-0.6869036f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.12953286f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.030128462f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20435221f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22336696f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[23 /* X24 */] <0.07499976f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1020541f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.16705064f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.09001949f ? 
         (data[7 /* X8 */] <0.05284258f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1678872f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.17578125f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14197992f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14530891f ? 
         (data[3 /* X4 */] <-0.30930597f ? 
            1.0f : 
            0.0f) : 
         (data[23 /* X24 */] <0.04361688f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.35255164f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.04346545f ? 
                 (data[13 /* X14 */] <0.08777784f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07447459f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_146_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.8194469f ? 
            0.0f : 
            1.0f) : 
         (data[28 /* X29 */] <0.15998296f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_147_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_147_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[7 /* X8 */] <0.05341641f ? 
             (data[27 /* X28 */] <-0.124563575f ? 
                 (data[2 /* X3 */] <-0.039794154f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09459723f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09209665f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18848601f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.13310072f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
        0.035714287f : 
         (data[3 /* X4 */] <-0.20809682f ? 
            0.0f : 
             (data[21 /* X22 */] <0.18236792f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3089077f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.009355723f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13880959f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.22068729f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[4 /* X5 */] <0.11361167f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11784464f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13657656f ? 
            0.0f : 
             (data[31 /* X32 */] <0.11062065f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.063204065f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13259774f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.099841475f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.30930597f ? 
             (data[7 /* X8 */] <0.09846191f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X3 */] <-0.5936676f ? 
                 (data[20 /* X21 */] <0.104658596f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_147_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[29 /* X30 */] <0.14166738f ? 
            0.0f : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_148_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_148_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[14 /* X15 */] <0.117510706f ? 
             (data[31 /* X32 */] <0.07657655f ? 
                1.0f : 
                0.0f) : 
             (data[16 /* X17 */] <-0.90816945f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.041030508f ? 
                     (data[27 /* X28 */] <-0.1030499f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22243714f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24747398f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.061712746f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.25360522f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.037039958f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.104487106f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2890625f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.26895642f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2633329f ? 
                 (data[26 /* X27 */] <-0.011321876f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.38580108f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.04680836f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22978128f ? 
             (data[33 /* X34 */] <-0.734375f ? 
                 (data[25 /* X26 */] <-0.30686313f ? 
                     (data[26 /* X27 */] <0.1469198f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16971566f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08325547f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.59456253f ? 
                 (data[1 /* X2 */] <-0.44528696f ? 
                     (data[8 /* X9 */] <0.017771278f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.015539315f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_148_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.01373036f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.078574516f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.40250733f ? 
                0.0f : 
                1.0f)) : 
         (data[21 /* X22 */] <0.17869799f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_149_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_149_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16515234f ? 
             (data[33 /* X34 */] <-0.19921875f ? 
                 (data[35 /* X36 */] <-0.42403698f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[14 /* X15 */] <0.13342257f ? 
                 (data[3 /* X4 */] <0.02305986f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.3984375f ? 
             (data[7 /* X8 */] <0.09925301f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[27 /* X28 */] <-0.40731478f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.18549609f ? 
             (data[7 /* X8 */] <0.081501804f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.5049204f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.4165559f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19142206f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.77734375f ? 
             (data[19 /* X20 */] <-0.19099635f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
         (data[11 /* X12 */] <-0.33889583f ? 
             (data[12 /* X13 */] <0.10995706f ? 
                 (data[9 /* X10 */] <-0.11307565f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.17773438f ? 
             (data[32 /* X33 */] <-0.66068906f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.050621755f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07034434f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0637425f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6662989f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.30544916f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_149_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28480604f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.093084805f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_150_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_150_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
            1.0f : 
            0.0f) : 
         (data[29 /* X30 */] <0.097600676f ? 
             (data[5 /* X6 */] <0.14107256f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.06857666f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.09910573f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.53125f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.08567807f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (data[34 /* X35 */] <-0.9765625f ? 
             (data[22 /* X23 */] <0.18413536f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.22265625f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11754108f ? 
                    0.0f : 
                    1.0f))) : 
        0.8f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[34 /* X35 */] <-0.578125f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.21061829f ? 
                 (data[35 /* X36 */] <-0.50631744f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.074467845f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.058879532f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.40634298f ? 
            0.0f : 
             (data[8 /* X9 */] <0.32034785f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[34 /* X35 */] <-0.1328125f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.12857544f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.018518519f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_150_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
        0.011111111f : 
         (data[26 /* X27 */] <-0.1710851f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_151_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_151_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09601033f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2421875f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05613364f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.042555f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.2519961f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X1 */] <-0.63604563f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47656178f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19140163f ? 
            0.0f : 
             (data[14 /* X15 */] <0.14797056f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.079757094f ? 
                    1.0f : 
                    0.0f))) : 
         (data[0 /* X1 */] <-0.63604563f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[11 /* X12 */] <-0.104057625f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17672186f ? 
            0.0f : 
             (data[23 /* X24 */] <0.0686168f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (data[19 /* X20 */] <-0.03812899f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.23795483f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.01373036f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.73046875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14530891f ? 
         (data[24 /* X25 */] <-0.5032153f ? 
            1.0f : 
            0.0f) : 
         (data[16 /* X17 */] <-0.29744172f ? 
             (data[18 /* X19 */] <0.20362274f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.077230275f ? 
                 (data[13 /* X14 */] <0.12038873f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.13766034f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_151_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0458949f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_152_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_152_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.049566906f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17315175f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.20790014f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.08603602f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
        0.04347826f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (data[0 /* X1 */] <-0.19009416f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.045455f ? 
            0.0f : 
             (data[30 /* X31 */] <0.10619745f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20646083f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[5 /* X6 */] <0.12514004f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.27148378f ? 
            0.0f : 
             (data[4 /* X5 */] <0.10405626f ? 
                1.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.34251726f ? 
                     (data[25 /* X26 */] <-0.29699537f ? 
                        0.0f : 
                         (data[26 /* X27 */] <0.09750477f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[0 /* X1 */] <0.0906901f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046276446f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0017838087f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.069691494f ? 
             (data[4 /* X5 */] <0.13272248f ? 
                 (data[26 /* X27 */] <0.16584311f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.48324767f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[17 /* X18 */] <-0.55003786f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_152_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19022375f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13680793f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_153_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_153_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
             (data[27 /* X28 */] <-0.14300387f ? 
                 (data[32 /* X33 */] <-0.4779832f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16645655f ? 
                1.0f : 
                0.0f)) : 
         (data[13 /* X14 */] <0.10550115f ? 
             (data[20 /* X21 */] <0.14881144f ? 
                 (data[32 /* X33 */] <0.63316685f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24414062f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13741253f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.1366698f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.2055168f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.11802152f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
        0.8f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
            0.0f : 
            1.0f) : 
         (data[13 /* X14 */] <0.10443775f ? 
             (data[27 /* X28 */] <-0.21061829f ? 
                 (data[12 /* X13 */] <0.090540186f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (data[33 /* X34 */] <-0.48828125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57012755f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2413408f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17773438f ? 
             (data[27 /* X28 */] <-0.13071033f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13331145f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[16 /* X17 */] <-0.5005199f ? 
             (data[12 /* X13 */] <0.14145678f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.5504479f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.609809f ? 
                     (data[32 /* X33 */] <-0.22443093f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_153_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[9 /* X10 */] <-0.11773542f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.25202253f ? 
            0.0f : 
             (data[28 /* X29 */] <0.18356779f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_154_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_154_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16546872f ? 
             (data[18 /* X19 */] <0.3421309f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24253249f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.08122945f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.39673588f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10552657f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.17933469f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.17373769f ? 
                 (data[31 /* X32 */] <0.06435158f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.070318446f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[5 /* X6 */] <0.12514004f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17609395f ? 
             (data[27 /* X28 */] <-0.2935996f ? 
                 (data[31 /* X32 */] <0.07696034f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[5 /* X6 */] <0.13716273f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[24 /* X25 */] <-0.42725596f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06340713f ? 
             (data[18 /* X19 */] <0.056273643f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_154_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4082968f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26882938f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[31 /* X32 */] <0.10861805f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_155_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_155_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (data[33 /* X34 */] <-0.37890625f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.08889162f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13966687f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[5 /* X6 */] <0.064454116f ? 
            1.0f : 
             (data[20 /* X21 */] <0.14118008f ? 
                 (data[2 /* X3 */] <-0.15496367f ? 
                     (data[34 /* X35 */] <-0.46875f ? 
                        1.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16112378f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.055357803f ? 
             (data[0 /* X1 */] <-0.14421438f ? 
                 (data[2 /* X3 */] <-0.14010206f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.347765f ? 
                0.0f : 
                1.0f)) : 
         (data[22 /* X23 */] <0.16483596f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.074477114f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.11497527f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.22265625f ? 
             (data[25 /* X26 */] <-0.22919534f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24381435f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3843207f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.1502796f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[20 /* X21 */] <0.13191344f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4018097f ? 
                     (data[34 /* X35 */] <-0.796875f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3792949f ? 
            0.0f : 
             (data[23 /* X24 */] <0.06595723f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.10223969f ? 
            0.0f : 
             (data[19 /* X20 */] <0.0055473973f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14579791f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10410258f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.58084106f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.018518519f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_155_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[17 /* X18 */] <-0.17329457f ? 
            0.0f : 
            1.0f) : 
        0.02173913f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_156_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_156_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1497067f ? 
             (data[27 /* X28 */] <-0.2935996f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17211278f ? 
                     (data[31 /* X32 */] <0.03502273f ? 
                        0.0f : 
                        1.0f) : 
                     (data[29 /* X30 */] <0.108226694f ? 
                        1.0f : 
                        0.0f))) : 
             (data[4 /* X5 */] <0.07804432f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13710399f ? 
            0.0f : 
             (data[4 /* X5 */] <0.1651047f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13214853f ? 
                    1.0f : 
                    0.0f))) : 
         (data[18 /* X19 */] <0.11521328f ? 
            0.0f : 
             (data[22 /* X23 */] <0.16135573f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.009012626f ? 
             (data[18 /* X19 */] <0.0032279643f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X5 */] <0.08122945f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.6660156f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.48358604f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026919963f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.26143056f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[2 /* X3 */] <-0.55965656f ? 
             (data[4 /* X5 */] <0.15024073f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.031304557f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_156_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.15625f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <-0.2828428f ? 
             (data[3 /* X4 */] <-0.19263065f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_157_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_157_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14839156f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
            0.0f : 
             (data[31 /* X32 */] <0.06325673f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.07659549f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.29861498f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
        0.02631579f : 
         (data[32 /* X33 */] <-0.045455f ? 
            0.0f : 
             (data[31 /* X32 */] <0.06906682f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.120970994f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
        0.75f : 
         (data[4 /* X5 */] <0.09396999f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35128725f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.46891722f ? 
                     (data[16 /* X17 */] <-0.5139589f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12238588f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1639046f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3622984f ? 
                    1.0f : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.04197656f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.19142297f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_157_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09810443f ? 
            0.0f : 
             (data[20 /* X21 */] <0.11338015f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.34175655f ? 
                    0.0f : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.104786895f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_158_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_158_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14839156f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
             (data[4 /* X5 */] <0.1422779f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.095359914f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.25115186f ? 
                        1.0f : 
                         (data[24 /* X25 */] <-0.21779232f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.44860744f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20156148f ? 
            0.0f : 
             (data[4 /* X5 */] <0.22509143f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20636371f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[19 /* X20 */] <-0.56361055f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.103027575f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.27233762f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27422705f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.04239935f ? 
            0.0f : 
             (data[0 /* X1 */] <0.30724266f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.9310192f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.8203125f ? 
                 (data[27 /* X28 */] <-0.17066431f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.26757812f ? 
             (data[32 /* X33 */] <-0.116300136f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07893991f ? 
                     (data[27 /* X28 */] <-0.12763695f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08258433f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_158_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
         (data[3 /* X4 */] <-0.3180524f ? 
             (data[4 /* X5 */] <0.17943782f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_159_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_159_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[27 /* X28 */] <-0.14761394f ? 
             (data[34 /* X35 */] <-0.17578125f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17654215f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.067564875f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16595656f ? 
                    1.0f : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.12319189f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.19574061f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38416937f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X3 */] <-0.27333233f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.2913296f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2771741f ? 
            0.0f : 
            1.0f) : 
         (data[22 /* X23 */] <0.15344614f ? 
             (data[34 /* X35 */] <-0.7578125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39645475f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[6 /* X7 */] <0.13315766f ? 
             (data[6 /* X7 */] <0.09336768f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.5776634f ? 
             (data[26 /* X27 */] <0.089100726f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <-0.33889583f ? 
                 (data[12 /* X13 */] <0.10995706f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.06616931f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
                 (data[32 /* X33 */] <-0.25426173f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.849878f ? 
                1.0f : 
                0.0f)) : 
        0.018518519f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_159_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15477195f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_160_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_160_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
             (data[15 /* X16 */] <0.038924575f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.28028083f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.046811f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X13 */] <0.12145696f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.41540626f ? 
                 (data[19 /* X20 */] <-0.39026988f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5888394f ? 
            0.0f : 
            1.0f) : 
         (data[33 /* X34 */] <-0.35546875f ? 
            0.0f : 
             (data[5 /* X6 */] <0.14403282f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21229208f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[24 /* X25 */] <-0.024441272f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2924554f ? 
             (data[25 /* X26 */] <-0.24472891f ? 
                 (data[34 /* X35 */] <-0.734375f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15155043f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[3 /* X4 */] <-0.11313515f ? 
            0.0f : 
             (data[7 /* X8 */] <0.058293946f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.101207145f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14228086f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.18627086f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16695026f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.64357746f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.018360259f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.099841475f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X7 */] <0.08027026f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_160_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9745391f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_161_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_161_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09186289f ? 
         (data[35 /* X36 */] <-0.14914556f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13182127f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.14654215f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.17384654f ? 
                    1.0f : 
                    0.0f))) : 
         (data[28 /* X29 */] <0.08491727f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
        0.046511628f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.66561913f ? 
             (data[12 /* X13 */] <0.116957f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.16702339f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.12499001f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[35 /* X36 */] <-0.93641967f ? 
             (data[7 /* X8 */] <0.1655998f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.80078125f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.31511328f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19196624f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (data[33 /* X34 */] <-0.48828125f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34730697f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5257869f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.5898439f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (data[35 /* X36 */] <-0.14914556f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13259774f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.045455f ? 
                    1.0f : 
                    0.0f) : 
                 (data[28 /* X29 */] <0.11712451f ? 
                    1.0f : 
                    0.0f))) : 
        0.021276595f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_161_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
        0.011111111f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_162_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_162_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[34 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14845671f ? 
                 (data[30 /* X31 */] <0.09222082f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.30281976f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43208092f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.2244485f ? 
             (data[5 /* X6 */] <0.13372767f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20806307f ? 
         (data[34 /* X35 */] <-0.80078125f ? 
             (data[33 /* X34 */] <0.22265625f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.07108404f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15345667f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.24442549f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
        0.024096385f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.421875f ? 
             (data[5 /* X6 */] <0.10624725f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (data[29 /* X30 */] <0.13322908f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.073777474f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.1193976f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48767567f ? 
                     (data[4 /* X5 */] <0.1300682f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.421875f ? 
             (data[6 /* X7 */] <0.16082183f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_162_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[34 /* X35 */] <-0.5332031f ? 
            0.0f : 
            1.0f) : 
        0.02173913f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_163_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_163_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.044921875f ? 
            0.0f : 
             (data[23 /* X24 */] <0.074467845f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19868901f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14058802f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.18299529f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
        0.0f : 
         (data[10 /* X11 */] <-0.53000057f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16971566f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.119148545f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.113409445f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.009744f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2733556f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[18 /* X19 */] <-0.4461868f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.2763062f ? 
             (data[23 /* X24 */] <0.066489145f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.103027575f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11667586f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[33 /* X34 */] <-0.6660156f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.019196268f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1328125f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.036915928f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (data[18 /* X19 */] <0.14173612f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14036255f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1673992f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.08433852f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.07140802f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_163_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.39222962f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.34130964f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_164_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_164_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.114080764f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15234375f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.077840164f ? 
                 (data[3 /* X4 */] <-0.026919963f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.099985614f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.022928964f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21407616f ? 
         (data[0 /* X1 */] <-0.23597394f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.6640195f ? 
                 (data[19 /* X20 */] <-0.46164984f ? 
                     (data[3 /* X4 */] <0.09802959f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.26255366f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21455051f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.3220255f ? 
             (data[21 /* X22 */] <0.18406175f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.50631744f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.065562285f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.31622806f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.11862112f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
        0.024096385f : 
         (data[34 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.16890977f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.066791624f ? 
             (data[0 /* X1 */] <-0.09162968f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0642915f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.11642923f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_164_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.30172792f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2793961f ? 
                0.0f : 
                 (data[35 /* X36 */] <0.107045785f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.19324039f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_165_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_165_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0901993f ? 
            0.0f : 
            1.0f) : 
         (data[28 /* X29 */] <0.08669247f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.015234079f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.11493721f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.655539f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22797713f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
        0.014492754f : 
         (data[30 /* X31 */] <0.11862112f ? 
             (data[3 /* X4 */] <-0.33929384f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.14341007f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24261992f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.11302354f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.19142297f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[27 /* X28 */] <-0.30281976f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.191329f ? 
                1.0f : 
                0.0f) : 
             (data[17 /* X18 */] <-0.2785925f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18820725f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16797404f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.12151708f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19720627f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17198278f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1636569f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.8824672f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.018518519f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_165_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
        0.011111111f : 
         (data[20 /* X21 */] <0.10983702f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_166_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_166_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
             (data[27 /* X28 */] <-0.14607725f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08743524f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.019502625f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19742349f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.0967801f ? 
            0.0f : 
             (data[6 /* X7 */] <0.23730513f ? 
                 (data[26 /* X27 */] <0.13863756f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[30 /* X31 */] <0.0363143f ? 
            1.0f : 
            0.0f) : 
         (data[17 /* X18 */] <-0.21120584f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.20665334f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18883829f ? 
            0.0f : 
            1.0f) : 
         (data[17 /* X18 */] <-0.23726985f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.24568899f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15364295f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15365303f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.20135139f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19044547f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13657656f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.16298601f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2413408f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.17773438f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.04691189f ? 
                 (data[34 /* X35 */] <-0.6015625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.30350897f ? 
             (data[32 /* X33 */] <-0.250533f ? 
                 (data[35 /* X36 */] <0.32396692f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_166_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[30 /* X31 */] <0.12056232f ? 
             (data[3 /* X4 */] <-0.47423938f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3358501f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_167_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_167_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.044921875f ? 
             (data[15 /* X16 */] <0.03959533f ? 
                 (data[20 /* X21 */] <0.15044674f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <-0.21318872f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07872315f ? 
                    1.0f : 
                    0.0f))) : 
         (data[20 /* X21 */] <0.15617025f ? 
            1.0f : 
             (data[5 /* X6 */] <0.12456753f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.734375f ? 
                 (data[9 /* X10 */] <-0.107612975f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.16134867f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.8f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (data[31 /* X32 */] <0.054548018f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18587804f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.734375f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2136488f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[32 /* X33 */] <0.051490977f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[33 /* X34 */] <-0.9550781f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1459103f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.171875f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.22672641f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (data[31 /* X32 */] <0.070318446f ? 
             (data[34 /* X35 */] <0.109375f ? 
                 (data[10 /* X11 */] <-0.1479758f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.243482f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.13322908f ? 
                     (data[25 /* X26 */] <0.015695438f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_167_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11612778f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13618404f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.21585836f ? 
                    1.0f : 
                    0.0f)) : 
             (data[24 /* X25 */] <0.06302706f ? 
                0.0f : 
                1.0f)) : 
        0.85714287f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_168_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_168_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10458659f ? 
         (data[15 /* X16 */] <0.05535807f ? 
             (data[11 /* X12 */] <-0.3331905f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.3884946f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.10405626f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.25975183f ? 
                     (data[21 /* X22 */] <0.18970782f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[34 /* X35 */] <-0.20117188f ? 
             (data[10 /* X11 */] <0.0942006f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (data[0 /* X1 */] <-0.13320324f ? 
             (data[11 /* X12 */] <-0.32631537f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[4 /* X5 */] <0.14785188f ? 
            0.0f : 
             (data[22 /* X23 */] <0.19425964f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[29 /* X30 */] <0.16323194f ? 
            1.0f : 
             (data[13 /* X14 */] <0.116844065f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.43667606f ? 
             (data[22 /* X23 */] <0.10187558f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[11 /* X12 */] <-0.31106317f ? 
             (data[27 /* X28 */] <0.044472463f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (data[29 /* X30 */] <0.11572741f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1793581f ? 
                 (data[35 /* X36 */] <-0.14727555f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.040966075f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.101661585f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[2 /* X3 */] <-0.33251667f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.05246961f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_168_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33758834f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X5 */] <0.13776562f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_169_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_169_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[7 /* X8 */] <0.06948359f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39900222f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.30281976f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.12895688f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.040009078f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[5 /* X6 */] <0.10052217f ? 
             (data[34 /* X35 */] <-0.0234375f ? 
                 (data[31 /* X32 */] <0.036024023f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[8 /* X9 */] <-0.32310644f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28372496f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.203125f ? 
                    0.0f : 
                    1.0f))) : 
         (data[30 /* X31 */] <0.11124457f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.1607313f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[8 /* X9 */] <0.13572805f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.14708939f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1728651f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.3220255f ? 
             (data[0 /* X1 */] <0.28889075f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.88671875f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.93318176f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.107306f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2557361f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3665028f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11746814f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.16702339f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.09021701f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[3 /* X4 */] <-0.20809682f ? 
             (data[5 /* X6 */] <0.11197234f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.06815651f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.112492025f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.15524456f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.77734375f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.8443384f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_169_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (data[8 /* X9 */] <-0.1710666f ? 
             (data[12 /* X13 */] <0.15195668f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.073500395f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_170_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_170_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.107944526f ? 
         (data[14 /* X15 */] <0.14524281f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.08984375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4318175f ? 
                 (data[35 /* X36 */] <-0.55119765f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25683278f ? 
                    1.0f : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.0459675f ? 
             (data[31 /* X32 */] <0.045035698f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25032356f ? 
                 (data[4 /* X5 */] <0.1035254f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.08497599f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[8 /* X9 */] <0.25518793f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.07741292f ? 
         (data[0 /* X1 */] <-0.13687362f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.15041941f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[24 /* X25 */] <0.033103682f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.103027575f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17777084f ? 
             (data[34 /* X35 */] <-0.7994788f ? 
                 (data[32 /* X33 */] <0.40944535f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.067064226f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.16186549f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.049410883f ? 
         (data[21 /* X22 */] <0.118567385f ? 
             (data[9 /* X10 */] <-0.5403535f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.049686525f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.06584914f ? 
                    1.0f : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.08386591f ? 
                    1.0f : 
                     (data[13 /* X14 */] <0.12002545f ? 
                         (data[32 /* X33 */] <-0.57670313f ? 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.099801615f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_170_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2243475f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9745391f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.19372255f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.029288717f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_171_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_171_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (data[33 /* X34 */] <-0.421875f ? 
             (data[1 /* X2 */] <-0.48947686f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7506206f ? 
             (data[4 /* X5 */] <0.06530377f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24311538f ? 
                     (data[28 /* X29 */] <0.08669247f ? 
                         (data[1 /* X2 */] <-0.23877192f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09272122f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.113381445f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[25 /* X26 */] <-0.4311316f ? 
             (data[1 /* X2 */] <-0.34179646f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16672836f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19841526f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.122464485f ? 
                        1.0f : 
                        0.0f)))) : 
        0.8f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[4 /* X5 */] <0.087599725f ? 
            0.0f : 
            1.0f) : 
         (data[34 /* X35 */] <-0.7558594f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.07796449f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.14851941f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12499959f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[33 /* X34 */] <-0.421875f ? 
             (data[1 /* X2 */] <-0.57699114f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.31852257f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.11862112f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.095942095f ? 
             (data[7 /* X8 */] <0.08641152f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_171_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15824416f ? 
             (data[11 /* X12 */] <-0.5024128f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.04296875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_172_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_172_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09186289f ? 
         (data[35 /* X36 */] <-0.17158568f ? 
             (data[18 /* X19 */] <0.32150203f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18070354f ? 
                     (data[13 /* X14 */] <0.10053863f ? 
                         (data[0 /* X1 */] <0.019756712f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17879178f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.06846168f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.09084774f ? 
                     (data[31 /* X32 */] <0.07115768f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[10 /* X11 */] <-0.5402334f ? 
             (data[28 /* X29 */] <0.083142065f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.103027575f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.64453125f ? 
                 (data[21 /* X22 */] <0.137764f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.57699114f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21889201f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10753671f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.09541975f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.54705524f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.09001949f ? 
         (data[22 /* X23 */] <0.09712982f ? 
             (data[21 /* X22 */] <0.12308424f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.40900242f ? 
             (data[31 /* X32 */] <0.04753894f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3202269f ? 
             (data[21 /* X22 */] <0.11517975f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12726852f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.15132733f ? 
                     (data[20 /* X21 */] <0.12864286f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6147268f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.41837147f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_172_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24677935f ? 
            1.0f : 
            0.0f) : 
         (data[14 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20211199f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.05748751f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_173_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_173_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07179157f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1886398f ? 
                1.0f : 
                0.0f) : 
             (data[20 /* X21 */] <0.0879052f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10993847f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.09326908f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.05748751f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25952768f ? 
             (data[28 /* X29 */] <0.07776146f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X7 */] <0.25032356f ? 
                1.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2556381f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[15 /* X16 */] <0.07950525f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.30435666f ? 
             (data[7 /* X8 */] <0.061163086f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.067527235f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2958881f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.080517f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5090401f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6816217f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23479506f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.06595723f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[5 /* X6 */] <0.095942095f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0674752f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.13878915f ? 
                    0.0f : 
                    1.0f)) : 
             (data[24 /* X25 */] <-0.47559372f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_173_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09372783f ? 
         (data[8 /* X9 */] <-0.1710666f ? 
             (data[1 /* X2 */] <-0.20505539f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15795417f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2553978f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_174_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_174_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0033944137f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.089893326f ? 
                 (data[2 /* X3 */] <-0.5945723f ? 
                     (data[35 /* X36 */] <-0.29687634f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.111832894f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (data[5 /* X6 */] <0.035828684f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07231607f ? 
             (data[21 /* X22 */] <0.15696064f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.5132688f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.46679688f ? 
             (data[34 /* X35 */] <-0.88671875f ? 
                 (data[9 /* X10 */] <-0.0027396658f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32037702f ? 
                 (data[35 /* X36 */] <-0.618518f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.058879532f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.7109375f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6155548f ? 
                 (data[7 /* X8 */] <0.061736915f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[33 /* X34 */] <-0.40039062f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1685576f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16971566f ? 
                    0.0f : 
                    1.0f))) : 
         (data[14 /* X15 */] <0.09250635f ? 
             (data[2 /* X3 */] <-0.11657383f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_174_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (data[3 /* X4 */] <-0.50672626f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <-0.03389879f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_175_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_175_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07872315f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.11377544f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.070289545f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.21374437f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[15 /* X16 */] <0.05032741f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.07991185f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.83451617f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.07047723f ? 
                        1.0f : 
                        0.0f)))) : 
        0.04347826f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.35814065f ? 
         (data[21 /* X22 */] <0.19140163f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24312262f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X1 */] <-0.13687362f ? 
             (data[11 /* X12 */] <-0.46762195f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.03959533f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2925412f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3089077f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.06713635f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.14200294f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23657204f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11356346f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.14530891f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21073647f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.016654791f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08813301f ? 
                 (data[27 /* X28 */] <-0.10716175f ? 
                     (data[12 /* X13 */] <0.12552859f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.16335171f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[5 /* X6 */] <0.04109842f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_175_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31250045f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_176_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_176_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[14 /* X15 */] <0.117510706f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.114080764f ? 
                 (data[1 /* X2 */] <-0.456659f ? 
                     (data[32 /* X33 */] <-0.5884112f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15979613f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.11228996f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.17681108f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043051787f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.188014f ? 
             (data[5 /* X6 */] <0.035532624f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18558413f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14978905f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.082224265f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.33816364f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
        0.0f : 
         (data[23 /* X24 */] <0.07499976f ? 
             (data[25 /* X26 */] <-0.26026246f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17970599f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.13760449f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36963916f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3402761f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.7450276f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.20547931f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.26102322f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24341747f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.10704458f ? 
                    1.0f : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.14743485f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09295043f ? 
             (data[0 /* X1 */] <0.36963916f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (data[5 /* X6 */] <0.10338471f ? 
            1.0f : 
             (data[29 /* X30 */] <0.11510235f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18603367f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.046318315f ? 
                     (data[10 /* X11 */] <-0.042359613f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_176_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.074962206f ? 
        0.028169014f : 
         (data[3 /* X4 */] <-0.13312708f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_177_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_177_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[27 /* X28 */] <-0.14607725f ? 
             (data[7 /* X8 */] <0.062310744f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <-0.28790334f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15395667f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20325837f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.23213196f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[27 /* X28 */] <-0.33816364f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.215255f ? 
                 (data[21 /* X22 */] <0.20777522f ? 
                     (data[16 /* X17 */] <-0.20336875f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.0836541f ? 
                0.0f : 
                 (data[9 /* X10 */] <0.14901897f ? 
                     (data[32 /* X33 */] <-0.17968789f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[28 /* X29 */] <0.07096925f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2173311f ? 
         (data[27 /* X28 */] <-0.30281976f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15433918f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18650374f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[28 /* X29 */] <0.1822998f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[3 /* X4 */] <-0.08814524f ? 
            0.0f : 
            1.0f) : 
         (data[33 /* X34 */] <-0.48963928f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.25790292f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.08970433f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1259171f ? 
             (data[8 /* X9 */] <0.30677286f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.103866175f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.10572645f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.5308642f ? 
             (data[25 /* X26 */] <-0.2336335f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_177_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (data[3 /* X4 */] <-0.45674643f ? 
            1.0f : 
            0.0f) : 
        0.85714287f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_178_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_178_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1384568f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.114666216f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.106123276f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18794021f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0023252345f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X6 */] <0.10338471f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.11487873f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17189978f ? 
             (data[27 /* X28 */] <-0.33662698f ? 
                 (data[31 /* X32 */] <0.08725035f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.07006812f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15584472f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.11534343f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.9545091f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (data[10 /* X11 */] <-0.6067466f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.040664412f ? 
             (data[21 /* X22 */] <0.17728648f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11212259f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
        0.027027028f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.47374517f ? 
             (data[21 /* X22 */] <0.11574435f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.16702339f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1603312f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17189978f ? 
         (data[24 /* X25 */] <-0.18786894f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.059406847f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16948254f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.05404737f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.11743817f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08698535f ? 
                    1.0f : 
                    0.0f) : 
                 (data[16 /* X17 */] <-0.6393895f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0901993f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_178_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
         (data[3 /* X4 */] <-0.31180495f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_179_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_179_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[24 /* X25 */] <-0.015234079f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16420318f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.033141468f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.28038123f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08386515f ? 
         (data[13 /* X14 */] <0.03602578f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07385276f ? 
             (data[17 /* X18 */] <-0.23253094f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.1730798f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.07859432f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.5015082f ? 
         (data[13 /* X14 */] <0.08671445f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.2935996f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.35798073f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.08864324f ? 
                 (data[11 /* X12 */] <0.022928964f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.067527235f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.07984062f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[8 /* X9 */] <0.3570003f ? 
             (data[21 /* X22 */] <0.15074997f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
            0.0f : 
            1.0f) : 
        0.018518519f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_179_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3550962f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3733244f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.086146295f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_180_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_180_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14345676f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18252203f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.13993049f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X7 */] <0.125063f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.40228355f ? 
             (data[31 /* X32 */] <0.0826896f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[34 /* X35 */] <-0.9765625f ? 
             (data[22 /* X23 */] <0.18666643f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21324268f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.12276894f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.25218952f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1924298f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21889201f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.83210737f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20818053f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.085206665f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[31 /* X32 */] <0.075575255f ? 
             (data[24 /* X25 */] <-0.056666445f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35128725f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18495639f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.08853f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.093457215f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046276446f ? 
         (data[20 /* X21 */] <0.08803315f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.12212414f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12610027f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.40250733f ? 
                 (data[6 /* X7 */] <0.08271122f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[15 /* X16 */] <0.0637425f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_180_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
         (data[29 /* X30 */] <0.14760545f ? 
            0.0f : 
            1.0f) : 
        0.02173913f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_181_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_181_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12219652f ? 
             (data[35 /* X36 */] <-0.21085589f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.111328125f ? 
            0.0f : 
             (data[20 /* X21 */] <0.12700757f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.10883396f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (data[0 /* X1 */] <-0.13320324f ? 
             (data[25 /* X26 */] <0.06594226f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.39194787f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.054278143f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (data[19 /* X20 */] <-0.53494793f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16971566f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0020544566f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.30948785f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.058879532f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37147436f ? 
             (data[33 /* X34 */] <-0.73046875f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.29687634f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.04584763f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.148186f ? 
                 (data[23 /* X24 */] <0.037233923f ? 
                     (data[0 /* X1 */] <-0.3073923f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[34 /* X35 */] <-0.06640625f ? 
                 (data[31 /* X32 */] <0.035366185f ? 
                     (data[20 /* X21 */] <0.047725994f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.018518519f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_181_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.33694103f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.31106317f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_182_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_182_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.3336772f ? 
        0.0f : 
         (data[15 /* X16 */] <0.03959533f ? 
             (data[23 /* X24 */] <0.037088342f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07405866f ? 
                 (data[34 /* X35 */] <-0.2421875f ? 
                     (data[24 /* X25 */] <-0.18096355f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1385619f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10212733f ? 
            0.0f : 
             (data[23 /* X24 */] <0.11243314f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15129924f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.17015094f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[32 /* X33 */] <0.20436732f ? 
            0.0f : 
             (data[31 /* X32 */] <0.06956747f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3089077f ? 
            0.0f : 
            1.0f) : 
         (data[28 /* X29 */] <0.09277888f ? 
            0.0f : 
             (data[18 /* X19 */] <0.162365f ? 
                 (data[10 /* X11 */] <-0.0047165183f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12420172f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05770571f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.07155584f ? 
                 (data[13 /* X14 */] <0.10053863f ? 
                     (data[34 /* X35 */] <-0.125f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_182_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19252378f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6662989f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_183_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_183_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.3336772f ? 
        0.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0668139f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.22265625f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23199256f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15266176f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.10945707f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64124745f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21963197f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18980737f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.05398627f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26092625f ? 
                 (data[12 /* X13 */] <0.13595682f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1818184f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.8f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3089077f ? 
            0.0f : 
            1.0f) : 
         (data[18 /* X19 */] <-0.049817715f ? 
            1.0f : 
             (data[6 /* X7 */] <0.14454879f ? 
                 (data[8 /* X9 */] <-0.07604171f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.191471f ? 
                     (data[12 /* X13 */] <0.11179905f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10381927f ? 
            0.0f : 
             (data[2 /* X3 */] <0.17134996f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.06640625f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17189978f ? 
         (data[21 /* X22 */] <0.11913199f ? 
             (data[34 /* X35 */] <-0.22265625f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41265774f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.2413408f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0859375f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.25426173f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.15168318f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.15186952f ? 
                     (data[16 /* X17 */] <-0.52590466f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_183_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[24 /* X25 */] <-0.010630483f ? 
            0.0f : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_184_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_184_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[15 /* X16 */] <0.055022694f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.89627796f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.09387022f ? 
             (data[33 /* X34 */] <-0.4453125f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97867906f ? 
            0.0f : 
            1.0f) : 
         (data[20 /* X21 */] <0.15426241f ? 
            0.0f : 
             (data[18 /* X19 */] <0.1122663f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.33988655f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13283026f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.51007205f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.19937792f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.1687129f ? 
                         (data[18 /* X19 */] <0.29777905f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22361153f ? 
         (data[18 /* X19 */] <0.10784583f ? 
             (data[30 /* X31 */] <0.11862112f ? 
                0.0f : 
                 (data[34 /* X35 */] <0.0703125f ? 
                    0.0f : 
                    1.0f)) : 
             (data[33 /* X34 */] <-0.9765625f ? 
                 (data[12 /* X13 */] <0.1499567f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.2829355f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13465177f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[32 /* X33 */] <-0.27290517f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.26843187f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X11 */] <-0.20425624f ? 
             (data[33 /* X34 */] <-0.91015625f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1861038f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.42759338f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_184_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15691438f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46814352f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14917058f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[10 /* X11 */] <-0.4686037f ? 
                0.0f : 
                1.0f)) : 
        0.85714287f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_185_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_185_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[14 /* X15 */] <0.0879601f ? 
             (data[23 /* X24 */] <0.1282057f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.03825382f ? 
                 (data[34 /* X35 */] <-0.0859375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.0789891f ? 
             (data[21 /* X22 */] <0.049120773f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19742349f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.421875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (data[23 /* X24 */] <0.017287178f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <-0.51005745f ? 
             (data[23 /* X24 */] <0.09357676f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7989131f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.22265625f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.30435666f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.22673947f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23487633f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.26262063f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[20 /* X21 */] <0.12728012f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.13721177f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
        0.024096385f : 
         (data[32 /* X33 */] <-0.250533f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.080832064f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13648015f ? 
                 (data[34 /* X35 */] <-0.3515625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.13680793f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.085692875f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_185_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18856321f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.12819107f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_186_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_186_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16610149f ? 
         (data[15 /* X16 */] <0.0489859f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.21983843f ? 
                 (data[19 /* X20 */] <-0.040858764f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[21 /* X22 */] <0.13324715f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.15558565f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8158727f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.13372767f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08185289f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.6645054f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.0859375f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.3684317f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.18603122f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2519509f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.35866383f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16673426f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16603263f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.047282558f ? 
             (data[19 /* X20 */] <-0.6386793f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.3125f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.22888923f ? 
                        1.0f : 
                        0.0f))) : 
             (data[6 /* X7 */] <0.2055727f ? 
                 (data[31 /* X32 */] <0.08008109f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17452765f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15022543f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.24117579f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1459103f ? 
             (data[33 /* X34 */] <-0.64453125f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <0.01373672f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.049410883f ? 
         (data[29 /* X30 */] <0.10385127f ? 
             (data[27 /* X28 */] <-0.14607725f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.66068906f ? 
                 (data[16 /* X17 */] <-0.14363988f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.38934356f ? 
                     (data[5 /* X6 */] <0.17723833f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[20 /* X21 */] <0.09184882f ? 
             (data[16 /* X17 */] <-0.34074515f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_186_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        0.9166667f : 
         (data[11 /* X12 */] <-0.42587295f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_187_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_187_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10907773f ? 
             (data[31 /* X32 */] <0.03502273f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.31818667f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.055512644f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.07818399f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[20 /* X21 */] <0.0872155f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.35814065f ? 
         (data[11 /* X12 */] <-0.11797396f ? 
            1.0f : 
            0.0f) : 
         (data[0 /* X1 */] <-0.19009416f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12250352f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2632313f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.32795358f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (data[11 /* X12 */] <-0.11797396f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17777084f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22130933f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.13695683f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18501012f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5531583f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18595637f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.28028083f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[0 /* X1 */] <-0.045114055f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
         (data[30 /* X31 */] <0.089114904f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.30724266f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.058711845f ? 
             (data[27 /* X28 */] <-0.20447151f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_187_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0458949f ? 
            0.0f : 
            1.0f) : 
         (data[21 /* X22 */] <0.1456685f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_188_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_188_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[16 /* X17 */] <-0.25115186f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09627628f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.0023252345f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0625f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18709064f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.26565942f ? 
                 (data[12 /* X13 */] <0.0839573f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13462293f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.38249406f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.17333423f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21407616f ? 
         (data[10 /* X11 */] <-0.65791065f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.13425955f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16540226f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22697185f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.23898654f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[14 /* X15 */] <0.15660843f ? 
             (data[25 /* X26 */] <-0.41337895f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.38791257f ? 
            0.0f : 
            1.0f) : 
         (data[28 /* X29 */] <0.09277888f ? 
            0.0f : 
             (data[23 /* X24 */] <0.07499976f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.039313298f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.1470556f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5293008f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.019200005f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.09209665f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1470556f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.0081014745f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.031648245f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08180538f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16722812f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.026220003f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.5441733f ? 
             (data[31 /* X32 */] <0.041030508f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_188_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21248874f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2626911f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_189_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_189_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[34 /* X35 */] <-0.5332031f ? 
             (data[7 /* X8 */] <0.08813301f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18716708f ? 
             (data[18 /* X19 */] <0.009121928f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19868901f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[10 /* X11 */] <-0.55217165f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.103027575f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19882652f ? 
                    0.0f : 
                    1.0f))) : 
        0.8f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.04327452f ? 
         (data[34 /* X35 */] <-0.19921875f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <-0.95698977f ? 
            1.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19823529f ? 
                 (data[27 /* X28 */] <-0.29974636f ? 
                     (data[30 /* X31 */] <0.10658827f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20754777f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.18398416f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[35 /* X36 */] <-0.43052357f ? 
                     (data[14 /* X15 */] <0.10250809f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (data[19 /* X20 */] <0.017831381f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12095056f ? 
            0.0f : 
             (data[7 /* X8 */] <0.06632754f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.15589434f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22906186f ? 
                     (data[30 /* X31 */] <0.1233744f ? 
                         (data[15 /* X16 */] <0.114719875f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.40039062f ? 
         (data[19 /* X20 */] <-0.083170265f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.07311106f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18595637f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[6 /* X7 */] <0.08352487f ? 
             (data[28 /* X29 */] <0.17190218f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.021113008f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.07179157f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_189_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10445943f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.28681505f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.16768816f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_190_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_190_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47749397f ? 
         (data[34 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09627628f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.12287381f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18615903f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.4337317f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06230807f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1933105f ? 
         (data[8 /* X9 */] <-0.32310644f ? 
             (data[11 /* X12 */] <0.1968832f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.4639738f ? 
                 (data[10 /* X11 */] <-0.086578965f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.53494793f ? 
            0.0f : 
             (data[14 /* X15 */] <0.15519279f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <-0.04327452f ? 
         (data[33 /* X34 */] <-0.24414062f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17609395f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.050131813f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.34508327f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24704902f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22157681f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13570367f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.07388518f ? 
                     (data[10 /* X11 */] <0.23027843f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.38219646f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.14024194f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49003515f ? 
             (data[11 /* X12 */] <-0.5024128f ? 
                0.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08453515f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.12456236f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[31 /* X32 */] <0.03877759f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14746788f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_190_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.01459145f ? 
        0.014925373f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2212368f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_191_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_191_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[8 /* X9 */] <0.122153066f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.008927222f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.38044167f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[27 /* X28 */] <-0.25057226f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0668139f ? 
             (data[7 /* X8 */] <0.04050528f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23836283f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.13639282f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[0 /* X1 */] <-0.23597394f ? 
             (data[9 /* X10 */] <0.25664335f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25971904f ? 
                 (data[19 /* X20 */] <-0.52129906f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.16912644f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.8f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11888259f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.2446257f ? 
                1.0f : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.2131124f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21455051f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3529278f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15654428f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[12 /* X13 */] <0.101207145f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.09581486f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14249167f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.06640574f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0047165183f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[33 /* X34 */] <-0.46875f ? 
                 (data[27 /* X28 */] <-0.13993049f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[22 /* X23 */] <0.12149137f ? 
             (data[19 /* X20 */] <0.049223788f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_191_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28044313f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_192_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_192_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.11443579f ? 
             (data[35 /* X36 */] <-0.36045665f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2289347f ? 
                 (data[8 /* X9 */] <0.10666508f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.012220042f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[12 /* X13 */] <0.110457055f ? 
             (data[7 /* X8 */] <0.09788808f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13830774f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10226031f ? 
         (data[10 /* X11 */] <-0.89838153f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.106427f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.39630073f ? 
             (data[19 /* X20 */] <-0.24832161f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40944535f ? 
                 (data[7 /* X8 */] <0.09442751f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2173311f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.069691494f ? 
            0.0f : 
             (data[26 /* X27 */] <-0.044796076f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.28653845f ? 
                     (data[20 /* X21 */] <0.17879178f ? 
                        1.0f : 
                        0.0f) : 
                     (data[27 /* X28 */] <-0.30435458f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[30 /* X31 */] <0.117068164f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.028771881f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16637461f ? 
             (data[26 /* X27 */] <-0.19695154f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15928769f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.21387888f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15215504f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.31106317f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20392439f ? 
             (data[26 /* X27 */] <0.16822156f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1419155f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.072305664f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[30 /* X31 */] <0.07824419f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_192_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0458949f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15668616f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3202269f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_193_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_193_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.28245452f ? 
         (data[12 /* X13 */] <0.08970725f ? 
            1.0f : 
             (data[15 /* X16 */] <0.040266085f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2528056f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.15597007f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.21431516f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (data[35 /* X36 */] <-0.2127259f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1564428f ? 
                1.0f : 
                 (data[18 /* X19 */] <0.4009094f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41265774f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (data[19 /* X20 */] <-0.32475528f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19623487f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X9 */] <-0.15749162f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.17094655f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.8f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <-0.11391457f ? 
         (data[26 /* X27 */] <-0.21673174f ? 
            0.0f : 
            1.0f) : 
         (data[35 /* X36 */] <-0.33988655f ? 
             (data[26 /* X27 */] <0.11648871f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.173738f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5592676f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10858258f ? 
         (data[19 /* X20 */] <0.060142882f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11366662f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11400808f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.021934826f ? 
            0.0f : 
             (data[8 /* X9 */] <-0.043461747f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0742152f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.50126797f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.17062612f ? 
                 (data[5 /* X6 */] <0.097087115f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13187759f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.0404254f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[14 /* X15 */] <0.12005806f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.114058204f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19888853f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_193_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23011333f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2793961f ? 
                 (data[14 /* X15 */] <0.12069308f ? 
                     (data[3 /* X4 */] <-0.34179285f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.20235018f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1657604f ? 
             (data[8 /* X9 */] <-0.15749162f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_09_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_194_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_194_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.046973635f ? 
         (data[32 /* X33 */] <-0.11443579f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.12523971f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[1 /* X2 */] <-0.4211063f ? 
             (data[1 /* X2 */] <-0.5436124f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.45561105f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.819542f ? 
                 (data[10 /* X11 */] <-0.3321663f ? 
                     (data[14 /* X15 */] <0.14978905f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31724647f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21963197f ? 
             (data[35 /* X36 */] <-0.97755986f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <0.2962315f ? 
                1.0f : 
                0.0f)) : 
         (data[24 /* X25 */] <0.0146892965f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15412673f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22104348f ? 
             (data[26 /* X27 */] <-0.06914095f ? 
                 (data[1 /* X2 */] <-0.16129823f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-0.796875f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.8651123f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.07851639f ? 
                 (data[0 /* X1 */] <0.105371624f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.058879532f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.68306124f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.04537239f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.17092511f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.05770571f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08369522f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.053703323f ? 
                    0.0f : 
                    1.0f))) : 
         (data[24 /* X25 */] <-0.5032153f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_194_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        0.9166667f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20542347f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1939709f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_195_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_195_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1384568f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.049656652f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08369522f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.121490195f ? 
                    1.0f : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.18007725f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21455051f ? 
                    1.0f : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.09322526f ? 
                     (data[26 /* X27 */] <0.3342524f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[4 /* X5 */] <0.06530377f ? 
            1.0f : 
             (data[15 /* X16 */] <0.034900047f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33751407f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.10638263f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26065877f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1877373f ? 
                 (data[0 /* X1 */] <-0.14421438f ? 
                     (data[30 /* X31 */] <0.1197462f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[2 /* X3 */] <0.6640195f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.40039062f ? 
             (data[19 /* X20 */] <-0.5513266f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.08124707f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16595656f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5729551f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19051518f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20014119f ? 
             (data[20 /* X21 */] <0.13027816f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10144753f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14927772f ? 
        0.027027028f : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.030155024f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.710204f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24906968f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05770571f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-7.1070314E-4f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.027167132f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13641226f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[13 /* X14 */] <0.0955761f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_195_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (data[30 /* X31 */] <0.11163281f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.021698179f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_196_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_196_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15527344f ? 
         (data[15 /* X16 */] <0.03288778f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.4053369f ? 
                 (data[17 /* X18 */] <-0.27992004f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.003180306f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17385681f ? 
                    1.0f : 
                     (data[32 /* X33 */] <0.6257095f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
        0.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07984062f ? 
             (data[21 /* X22 */] <0.032747183f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12724937f ? 
                 (data[21 /* X22 */] <0.15583141f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <0.22265625f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17777084f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1896542f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.42169943f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[0 /* X1 */] <0.14207545f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.84375f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5592676f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5320536f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5402626f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24341747f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.375f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17022888f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.058711845f ? 
             (data[35 /* X36 */] <-0.2557361f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.47559372f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.09541851f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.44527528f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_196_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
        0.011111111f : 
         (data[19 /* X20 */] <-0.066791624f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.148186f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_197_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_197_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.050918315f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.04057357f ? 
                 (data[34 /* X35 */] <-0.6953125f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.5809195f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.5113554f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.5190486f ? 
                    1.0f : 
                    0.0f) : 
                 (data[14 /* X15 */] <0.09321167f ? 
                     (data[31 /* X32 */] <0.10301705f ? 
                        1.0f : 
                        0.0f) : 
                     (data[28 /* X29 */] <0.082634866f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.65876335f ? 
        1.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19140163f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13372767f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.113957025f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18883829f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.2935996f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.19610903f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.053421557f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.734375f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.47781765f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17395648f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07966904f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09747202f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15123326f ? 
                     (data[34 /* X35 */] <-0.59375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.021276595f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_197_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12739237f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2284567f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <0.08749982f ? 
             (data[25 /* X26 */] <-0.2371838f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_198_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_198_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06956747f ? 
                 (data[10 /* X11 */] <-0.35263193f ? 
                     (data[35 /* X36 */] <-0.48950195f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.08466367f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[14 /* X15 */] <0.09205172f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.0804651f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.04057357f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.13669418f ? 
             (data[1 /* X2 */] <-0.33632684f ? 
                1.0f : 
                0.0f) : 
             (data[18 /* X19 */] <0.015015893f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.38791257f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.011522892f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21553603f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.02230554f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
         (data[13 /* X14 */] <0.0923859f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.060388733f ? 
             (data[18 /* X19 */] <0.09753139f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_198_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.155618f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.34130964f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_199_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_199_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.107944526f ? 
         (data[21 /* X22 */] <0.11630896f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20211199f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21085589f ? 
                 (data[26 /* X27 */] <0.067798965f ? 
                    0.0f : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.113419086f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X13 */] <0.09570719f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17728648f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.05485098f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3828125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.43128115f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19140163f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.02716858f ? 
                 (data[31 /* X32 */] <0.06906682f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3721099f ? 
                    0.0f : 
                    1.0f))) : 
        0.8f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[17 /* X18 */] <-0.13775276f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[21 /* X22 */] <0.16571203f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23160957f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.2413408f ? 
         (data[21 /* X22 */] <0.118567385f ? 
             (data[9 /* X10 */] <-0.555035f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.4053369f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09846191f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.12353603f ? 
             (data[1 /* X2 */] <-0.30350897f ? 
                 (data[9 /* X10 */] <-0.38934356f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.13187759f ? 
                     (data[27 /* X28 */] <-0.15222402f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_199_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3436044f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18996626f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.44888425f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}



