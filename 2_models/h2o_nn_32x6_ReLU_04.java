/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:50:40.740+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_04

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_04 > h2o_nn_32x6_ReLU_04.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_04.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_04", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_04 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_04_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_04_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_04_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_04_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_04_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_04_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_04_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_04_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_04_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_04.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_04_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24528301886792453,0.12264150943396226,0.12264150943396226,0.1320754716981132,0.24528301886792453,0.1320754716981132};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_04() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-1828062362828093568L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_04_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_04_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_04_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_04_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_04_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_04_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_04_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_04_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_04_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_04_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_04_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_04_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_04_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.3626195029867697;
      sa[1] = 0.4636822400987518;
      sa[2] = 0.505820333952559;
      sa[3] = 0.39254585282399523;
      sa[4] = 0.49828656761470985;
      sa[5] = 0.49664487784596983;
      sa[6] = 0.4912684650049531;
      sa[7] = 0.37855036472242604;
      sa[8] = 0.5482352085170926;
      sa[9] = 0.4875985344228202;
      sa[10] = 0.4614669039153961;
      sa[11] = 0.6165178627070412;
      sa[12] = 0.670126227205616;
      sa[13] = 0.4805589345090054;
      sa[14] = 0.627457616880639;
      sa[15] = 0.5282551396731573;
      sa[16] = 0.45323375772016244;
      sa[17] = 0.5474199141159806;
      sa[18] = 0.4481606655215773;
      sa[19] = 0.5353161928404857;
      sa[20] = 0.6122980879046203;
      sa[21] = 0.453464816890422;
      sa[22] = 0.45366953581649505;
      sa[23] = 0.505725472915008;
      sa[24] = 0.5157847249207113;
      sa[25] = 0.5437947179078287;
      sa[26] = 0.5070119984587542;
      sa[27] = 0.5083151973485284;
      sa[28] = 0.5109261577443222;
      sa[29] = 0.5538266046730007;
      sa[30] = 0.43256968568754883;
      sa[31] = 0.4742362255343275;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_04_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_04_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_04_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.0023647209848432302;
      sa[1] = -0.021094580644434785;
      sa[2] = -0.03492991596734318;
      sa[3] = -5.584229770374377E-4;
      sa[4] = -0.057586985302286064;
      sa[5] = 0.027813583928955173;
    }
  }
}
class h2o_nn_32x6_ReLU_04_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_04_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_04_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_04_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.028102227f;
      sa[1] = 0.17378889f;
      sa[2] = 0.11309f;
      sa[3] = 0.17748365f;
      sa[4] = -0.20292093f;
      sa[5] = -0.26098892f;
      sa[6] = -0.08057581f;
      sa[7] = 0.21488594f;
      sa[8] = 0.080703564f;
      sa[9] = -0.19647844f;
      sa[10] = -0.13113786f;
      sa[11] = -0.21197025f;
      sa[12] = 0.0018636347f;
      sa[13] = -0.3412896f;
      sa[14] = -0.22191261f;
      sa[15] = -0.09451822f;
      sa[16] = 0.06315021f;
      sa[17] = 0.099871814f;
      sa[18] = -0.15264712f;
      sa[19] = 0.2077107f;
      sa[20] = 0.1643159f;
      sa[21] = -0.32815692f;
      sa[22] = 0.21038587f;
      sa[23] = -0.14215395f;
      sa[24] = 0.1989976f;
      sa[25] = 0.18112864f;
      sa[26] = -0.20721829f;
      sa[27] = 0.31366217f;
      sa[28] = 0.15100114f;
      sa[29] = -0.33637935f;
      sa[30] = -0.24661559f;
      sa[31] = 0.031264845f;
      sa[32] = 0.2191723f;
      sa[33] = -0.18353193f;
      sa[34] = 0.06954285f;
      sa[35] = -0.10906158f;
      sa[36] = 0.067326196f;
      sa[37] = 0.20340814f;
      sa[38] = -0.048706587f;
      sa[39] = 0.20406191f;
      sa[40] = -0.07127755f;
      sa[41] = -0.1312307f;
      sa[42] = -0.21011178f;
      sa[43] = -0.1612215f;
      sa[44] = 0.31099933f;
      sa[45] = -0.2667088f;
      sa[46] = 0.04614615f;
      sa[47] = 0.019236915f;
      sa[48] = 0.22795063f;
      sa[49] = 0.27180448f;
      sa[50] = 0.20149916f;
      sa[51] = -0.43037283f;
      sa[52] = -0.13303906f;
      sa[53] = 0.11714268f;
      sa[54] = 0.24153492f;
      sa[55] = 0.24176489f;
      sa[56] = -0.18462244f;
      sa[57] = -0.34588042f;
      sa[58] = 0.20265883f;
      sa[59] = -0.28589693f;
      sa[60] = -0.15250905f;
      sa[61] = 0.15693268f;
      sa[62] = 0.12131968f;
      sa[63] = -0.22892419f;
      sa[64] = 0.11175131f;
      sa[65] = 0.05303947f;
      sa[66] = -0.015813034f;
      sa[67] = -0.01204614f;
      sa[68] = -0.09403003f;
      sa[69] = -0.10046443f;
      sa[70] = -0.09401344f;
      sa[71] = 0.39624605f;
      sa[72] = -0.17925936f;
      sa[73] = 0.25025445f;
      sa[74] = -0.1972173f;
      sa[75] = -0.0454946f;
      sa[76] = -0.12903868f;
      sa[77] = -0.04109034f;
      sa[78] = -0.023953913f;
      sa[79] = 0.25001943f;
      sa[80] = -0.30643547f;
      sa[81] = -0.017098429f;
      sa[82] = -0.006504212f;
      sa[83] = 0.16980714f;
      sa[84] = -0.051551685f;
      sa[85] = -0.20378473f;
      sa[86] = 0.08528905f;
      sa[87] = 0.31421974f;
      sa[88] = 0.24780464f;
      sa[89] = 0.10398792f;
      sa[90] = -0.1461839f;
      sa[91] = -0.006627078f;
      sa[92] = 0.10100243f;
      sa[93] = -0.1498017f;
      sa[94] = -0.14586233f;
      sa[95] = -0.13212004f;
      sa[96] = 0.075915925f;
      sa[97] = 0.062445167f;
      sa[98] = 0.12825105f;
      sa[99] = 0.046544142f;
      sa[100] = -0.05890935f;
      sa[101] = -0.15816197f;
      sa[102] = -0.24495426f;
      sa[103] = -0.009605179f;
      sa[104] = -0.04473148f;
      sa[105] = 0.0044900975f;
      sa[106] = -0.23205236f;
      sa[107] = 0.1899398f;
      sa[108] = 0.26533604f;
      sa[109] = -0.12389863f;
      sa[110] = -0.19620766f;
      sa[111] = 0.041444298f;
      sa[112] = 0.15418017f;
      sa[113] = 0.06899604f;
      sa[114] = -0.1426233f;
      sa[115] = 0.010922794f;
      sa[116] = -0.18730232f;
      sa[117] = 0.15544821f;
      sa[118] = -0.22993606f;
      sa[119] = 0.15549989f;
      sa[120] = 0.23682187f;
      sa[121] = 0.26778388f;
      sa[122] = 0.2823055f;
      sa[123] = 0.37287742f;
      sa[124] = 0.27555895f;
      sa[125] = 0.3997851f;
      sa[126] = -0.2731758f;
      sa[127] = -0.42386648f;
      sa[128] = 0.11745008f;
      sa[129] = 0.20173997f;
      sa[130] = -0.117343f;
      sa[131] = 0.26915953f;
      sa[132] = 0.12827294f;
      sa[133] = -0.25880224f;
      sa[134] = 0.039791763f;
      sa[135] = -0.2332433f;
      sa[136] = -0.20082244f;
      sa[137] = 0.05098123f;
      sa[138] = 0.19172639f;
      sa[139] = 0.09916896f;
      sa[140] = -0.121641114f;
      sa[141] = -0.054015927f;
      sa[142] = 0.1473075f;
      sa[143] = -0.22097212f;
      sa[144] = 0.24550682f;
      sa[145] = -0.26860413f;
      sa[146] = -0.39593402f;
      sa[147] = 0.093652695f;
      sa[148] = 0.21908945f;
      sa[149] = 0.12722786f;
      sa[150] = 0.31240073f;
      sa[151] = -0.124299295f;
      sa[152] = -0.024403024f;
      sa[153] = 0.23731229f;
      sa[154] = 0.17247085f;
      sa[155] = -0.12956426f;
      sa[156] = 0.07570589f;
      sa[157] = -0.27151278f;
      sa[158] = 0.052571f;
      sa[159] = 0.08925376f;
      sa[160] = -0.067432895f;
      sa[161] = 0.044847205f;
      sa[162] = 0.056039013f;
      sa[163] = -0.2885082f;
      sa[164] = 0.23336153f;
      sa[165] = 0.03985808f;
      sa[166] = 0.0068216403f;
      sa[167] = 0.091928214f;
      sa[168] = 0.039015595f;
      sa[169] = 0.23442063f;
      sa[170] = 0.100431964f;
      sa[171] = -0.012805428f;
      sa[172] = -0.10783295f;
      sa[173] = -0.162263f;
      sa[174] = -0.09481806f;
      sa[175] = -0.23415081f;
      sa[176] = -0.0029897923f;
      sa[177] = 0.07329794f;
      sa[178] = -0.07936201f;
      sa[179] = 0.16693455f;
      sa[180] = -0.06337776f;
      sa[181] = -0.42075083f;
      sa[182] = -0.21448083f;
      sa[183] = 0.47251827f;
      sa[184] = 0.22619985f;
      sa[185] = 0.08691266f;
      sa[186] = -0.34313202f;
      sa[187] = -0.05614274f;
      sa[188] = -0.0033317616f;
      sa[189] = 0.042978384f;
      sa[190] = 0.0039755194f;
      sa[191] = -0.40099975f;
      sa[192] = -0.1395847f;
      sa[193] = 0.14345239f;
      sa[194] = 0.05624293f;
      sa[195] = 0.07598687f;
      sa[196] = 0.11312099f;
      sa[197] = -0.21383381f;
      sa[198] = 0.22108354f;
      sa[199] = -0.07524052f;
      sa[200] = 0.009380382f;
      sa[201] = -0.30195948f;
      sa[202] = 0.11540493f;
      sa[203] = -0.11786579f;
      sa[204] = -0.22448201f;
      sa[205] = 0.1581337f;
      sa[206] = 0.34253988f;
      sa[207] = 0.05826369f;
      sa[208] = -0.28261954f;
      sa[209] = -0.12165365f;
      sa[210] = -0.3376713f;
      sa[211] = -0.34370825f;
      sa[212] = 0.34049824f;
      sa[213] = -0.46866757f;
      sa[214] = -0.012796923f;
      sa[215] = 0.0067427983f;
      sa[216] = 0.008033974f;
      sa[217] = 0.16311957f;
      sa[218] = -0.10671259f;
      sa[219] = 0.3718976f;
      sa[220] = -0.28355908f;
      sa[221] = 0.0036676934f;
      sa[222] = 0.14177996f;
      sa[223] = -0.095702045f;
      sa[224] = 0.09495849f;
      sa[225] = 0.11744276f;
      sa[226] = -0.21327613f;
      sa[227] = 0.016121f;
      sa[228] = 0.09286924f;
      sa[229] = 0.0674552f;
      sa[230] = 0.21295252f;
      sa[231] = -0.34894806f;
      sa[232] = -0.20181742f;
      sa[233] = 0.007584556f;
      sa[234] = 0.06984756f;
      sa[235] = -0.14011408f;
      sa[236] = -0.08700281f;
      sa[237] = -0.29690325f;
      sa[238] = -0.2686498f;
      sa[239] = 0.018548826f;
      sa[240] = 0.05884993f;
      sa[241] = -0.23578654f;
      sa[242] = -0.091518015f;
      sa[243] = -0.18376148f;
      sa[244] = -0.2231703f;
      sa[245] = -0.16755429f;
      sa[246] = -0.2658669f;
      sa[247] = -0.14157596f;
      sa[248] = 0.28499368f;
      sa[249] = 0.04087635f;
      sa[250] = -0.13852847f;
      sa[251] = -0.15110803f;
      sa[252] = -0.2928459f;
      sa[253] = -0.047325324f;
      sa[254] = -0.05257179f;
      sa[255] = 0.17824243f;
      sa[256] = -0.23888527f;
      sa[257] = 0.2506514f;
      sa[258] = -0.2805559f;
      sa[259] = -0.19859283f;
      sa[260] = -0.18914177f;
      sa[261] = -0.13262048f;
      sa[262] = -0.08860239f;
      sa[263] = 0.34337515f;
      sa[264] = -0.1272194f;
      sa[265] = 0.08581708f;
      sa[266] = -0.2508669f;
      sa[267] = -0.25273666f;
      sa[268] = 0.29038993f;
      sa[269] = -0.10001433f;
      sa[270] = -0.1484788f;
      sa[271] = 0.20147498f;
      sa[272] = -0.12172861f;
      sa[273] = -0.2069618f;
      sa[274] = 0.063017525f;
      sa[275] = -0.116722226f;
      sa[276] = 0.2753831f;
      sa[277] = -0.15670548f;
      sa[278] = -0.23381436f;
      sa[279] = 0.12561668f;
      sa[280] = -0.16930471f;
      sa[281] = 0.22644183f;
      sa[282] = -0.088203214f;
      sa[283] = -0.11088407f;
      sa[284] = 0.008738036f;
      sa[285] = -0.14406219f;
      sa[286] = 0.17413658f;
      sa[287] = 0.020769484f;
      sa[288] = -0.16987601f;
      sa[289] = -0.1236444f;
      sa[290] = -0.13966288f;
      sa[291] = -0.14218472f;
      sa[292] = 0.18619266f;
      sa[293] = -0.10705041f;
      sa[294] = 0.09346885f;
      sa[295] = 0.16377263f;
      sa[296] = 0.1634338f;
      sa[297] = 0.1890853f;
      sa[298] = -0.018526444f;
      sa[299] = -0.19684382f;
      sa[300] = -0.06064581f;
      sa[301] = -0.12936553f;
      sa[302] = 0.08780692f;
      sa[303] = -0.022736823f;
      sa[304] = -0.2226457f;
      sa[305] = -0.067480326f;
      sa[306] = 0.1756608f;
      sa[307] = -0.11480832f;
      sa[308] = 0.108754724f;
      sa[309] = 0.22766742f;
      sa[310] = 0.32271487f;
      sa[311] = 0.3753802f;
      sa[312] = -0.28016573f;
      sa[313] = -0.18733607f;
      sa[314] = -0.16020955f;
      sa[315] = 0.20070499f;
      sa[316] = -0.0373799f;
      sa[317] = -0.06124269f;
      sa[318] = 0.059969176f;
      sa[319] = 0.26115572f;
      sa[320] = -0.17618053f;
      sa[321] = 0.017795965f;
      sa[322] = 0.4712008f;
      sa[323] = -0.005416394f;
      sa[324] = -0.046739552f;
      sa[325] = 0.14602688f;
      sa[326] = -0.21554592f;
      sa[327] = 6.3421245E-4f;
      sa[328] = -0.11807771f;
      sa[329] = 0.19550626f;
      sa[330] = -0.19267087f;
      sa[331] = -0.040415008f;
      sa[332] = -0.24467438f;
      sa[333] = 0.071227334f;
      sa[334] = -0.06126664f;
      sa[335] = 0.35682398f;
      sa[336] = -0.14542416f;
      sa[337] = -0.15002663f;
      sa[338] = 0.30830416f;
      sa[339] = -0.24214137f;
      sa[340] = -0.35163963f;
      sa[341] = -0.34962773f;
      sa[342] = 0.2776817f;
      sa[343] = -0.031354077f;
      sa[344] = -0.18772052f;
      sa[345] = 0.13072287f;
      sa[346] = 0.16976243f;
      sa[347] = -0.17764248f;
      sa[348] = 0.31993404f;
      sa[349] = -0.2370969f;
      sa[350] = -0.16836165f;
      sa[351] = -0.14028665f;
      sa[352] = 0.15146926f;
      sa[353] = -0.08869803f;
      sa[354] = 0.036260888f;
      sa[355] = 0.051335424f;
      sa[356] = -0.08030166f;
      sa[357] = 0.27190703f;
      sa[358] = -0.45229554f;
      sa[359] = -0.007417517f;
      sa[360] = 0.020031417f;
      sa[361] = 0.009551097f;
      sa[362] = -0.046503257f;
      sa[363] = -0.07377825f;
      sa[364] = -0.12630394f;
      sa[365] = -0.2007029f;
      sa[366] = -0.016759014f;
      sa[367] = -0.25167334f;
      sa[368] = -0.24302384f;
      sa[369] = 0.32546905f;
      sa[370] = -0.15683681f;
      sa[371] = 0.3915192f;
      sa[372] = -0.020921268f;
      sa[373] = 0.29596388f;
      sa[374] = -0.14269799f;
      sa[375] = -0.2513417f;
      sa[376] = -0.22655615f;
      sa[377] = -0.15978655f;
      sa[378] = 0.23882334f;
      sa[379] = 0.14638378f;
      sa[380] = -0.12506871f;
      sa[381] = -0.10433167f;
      sa[382] = -0.06908743f;
      sa[383] = -0.06662183f;
      sa[384] = -0.048233785f;
      sa[385] = 0.1289485f;
      sa[386] = -0.2909601f;
      sa[387] = -0.21894689f;
      sa[388] = 0.08548436f;
      sa[389] = -0.0040841573f;
      sa[390] = 0.009731399f;
      sa[391] = -0.08361421f;
      sa[392] = 0.17508541f;
      sa[393] = 0.23839563f;
      sa[394] = -0.09071357f;
      sa[395] = 0.33599553f;
      sa[396] = 0.2540991f;
      sa[397] = -0.2544647f;
      sa[398] = 0.15757817f;
      sa[399] = 0.009508301f;
      sa[400] = 0.16230163f;
      sa[401] = 0.23130362f;
      sa[402] = -0.1299133f;
      sa[403] = 0.012453169f;
      sa[404] = 0.28089026f;
      sa[405] = -0.2529824f;
      sa[406] = -0.051193092f;
      sa[407] = 0.06565661f;
      sa[408] = -0.19244921f;
      sa[409] = -0.21694066f;
      sa[410] = -0.087677315f;
      sa[411] = 0.10006737f;
      sa[412] = -0.12079836f;
      sa[413] = 0.008452547f;
      sa[414] = 0.15645954f;
      sa[415] = 0.48562172f;
      sa[416] = -0.14817448f;
      sa[417] = 0.04310201f;
      sa[418] = 0.012879395f;
      sa[419] = 0.28002143f;
      sa[420] = 0.26252693f;
      sa[421] = 0.23414494f;
      sa[422] = 0.2241075f;
      sa[423] = -0.14277808f;
      sa[424] = 0.09823346f;
      sa[425] = -0.07660623f;
      sa[426] = -0.28832987f;
      sa[427] = 0.11555365f;
      sa[428] = -0.06091582f;
      sa[429] = -0.33092356f;
      sa[430] = 0.19061026f;
      sa[431] = 0.06472402f;
      sa[432] = -0.061664466f;
      sa[433] = 0.27483255f;
      sa[434] = 0.33295062f;
      sa[435] = -0.17344892f;
      sa[436] = -0.1600782f;
      sa[437] = -0.1463172f;
      sa[438] = 0.06303107f;
      sa[439] = 0.11248958f;
      sa[440] = 0.17645037f;
      sa[441] = -0.2266972f;
      sa[442] = 0.13250665f;
      sa[443] = 0.1217898f;
      sa[444] = -0.19353297f;
      sa[445] = 0.11847327f;
      sa[446] = 0.22447708f;
      sa[447] = 0.21200138f;
      sa[448] = 0.32529035f;
      sa[449] = 0.36063814f;
      sa[450] = -0.25826916f;
      sa[451] = 0.21451887f;
      sa[452] = 0.2086017f;
      sa[453] = 0.029412964f;
      sa[454] = -0.12419079f;
      sa[455] = 0.0661841f;
      sa[456] = 0.039328214f;
      sa[457] = 0.13820046f;
      sa[458] = -0.32439995f;
      sa[459] = 0.40357772f;
      sa[460] = 0.2682808f;
      sa[461] = 0.34153178f;
      sa[462] = 0.12447788f;
      sa[463] = 0.2899415f;
      sa[464] = -0.37343153f;
      sa[465] = 0.3491707f;
      sa[466] = -0.004533239f;
      sa[467] = 0.15247618f;
      sa[468] = 0.08459661f;
      sa[469] = 0.3409692f;
      sa[470] = 0.21626614f;
      sa[471] = -0.061406396f;
      sa[472] = 0.038619082f;
      sa[473] = -0.12743142f;
      sa[474] = 0.012211299f;
      sa[475] = 0.18354113f;
      sa[476] = 0.17978117f;
      sa[477] = -0.07947182f;
      sa[478] = 0.08694314f;
      sa[479] = -0.15250793f;
      sa[480] = -0.34251416f;
      sa[481] = -0.26549512f;
      sa[482] = -0.27356508f;
      sa[483] = 0.20888273f;
      sa[484] = 0.25426444f;
      sa[485] = 0.23647173f;
      sa[486] = 0.0024789176f;
      sa[487] = -0.119748145f;
      sa[488] = -0.19453426f;
      sa[489] = 0.14383072f;
      sa[490] = 0.02642083f;
      sa[491] = -0.09716023f;
      sa[492] = 0.21112795f;
      sa[493] = 0.23716451f;
      sa[494] = -0.20088623f;
      sa[495] = 0.33981615f;
      sa[496] = -0.057816833f;
      sa[497] = 0.034598827f;
      sa[498] = 0.09955784f;
      sa[499] = 0.12901682f;
      sa[500] = -0.1015667f;
      sa[501] = 0.078165494f;
      sa[502] = 0.35192442f;
      sa[503] = 0.15921f;
      sa[504] = -0.06561335f;
      sa[505] = -0.11121688f;
      sa[506] = 0.17007259f;
      sa[507] = -0.11094294f;
      sa[508] = 0.16776815f;
      sa[509] = 0.29036093f;
      sa[510] = 0.21309826f;
      sa[511] = 0.05575124f;
      sa[512] = 0.102987535f;
      sa[513] = -0.049315803f;
      sa[514] = 0.24849091f;
      sa[515] = -0.3505775f;
      sa[516] = 0.06903663f;
      sa[517] = 0.16276759f;
      sa[518] = 0.1539716f;
      sa[519] = -0.0022776981f;
      sa[520] = 0.22773273f;
      sa[521] = 0.19624962f;
      sa[522] = 0.005929881f;
      sa[523] = 0.14003138f;
      sa[524] = 0.23012869f;
      sa[525] = 0.21398671f;
      sa[526] = 0.024341647f;
      sa[527] = -0.102846004f;
      sa[528] = -0.021822376f;
      sa[529] = 0.10996054f;
      sa[530] = -0.21829471f;
      sa[531] = 0.30442894f;
      sa[532] = 0.20756944f;
      sa[533] = 0.19228421f;
      sa[534] = 0.22053067f;
      sa[535] = -0.003995956f;
      sa[536] = 0.032827977f;
      sa[537] = -0.26418558f;
      sa[538] = 0.29038537f;
      sa[539] = 0.25995967f;
      sa[540] = -0.27329817f;
      sa[541] = -0.25557664f;
      sa[542] = -0.17244536f;
      sa[543] = -0.04715974f;
      sa[544] = 0.17975996f;
      sa[545] = 0.106761895f;
      sa[546] = 0.12452977f;
      sa[547] = 0.26986772f;
      sa[548] = 0.020538477f;
      sa[549] = 0.079142645f;
      sa[550] = -0.06001815f;
      sa[551] = -0.12056806f;
      sa[552] = 0.024675518f;
      sa[553] = -0.09427625f;
      sa[554] = -0.13247709f;
      sa[555] = -0.067816995f;
      sa[556] = -0.19239758f;
      sa[557] = -0.24893124f;
      sa[558] = -0.14696567f;
      sa[559] = -0.10816322f;
      sa[560] = -0.31130785f;
      sa[561] = -0.09900447f;
      sa[562] = 0.20781085f;
      sa[563] = -0.048398785f;
      sa[564] = 0.15214449f;
      sa[565] = 0.017617654f;
      sa[566] = 0.32645535f;
      sa[567] = -0.028063642f;
      sa[568] = -0.11434067f;
      sa[569] = 0.004892394f;
      sa[570] = -0.05348033f;
      sa[571] = -0.036922324f;
      sa[572] = -0.0046452116f;
      sa[573] = 0.3021727f;
      sa[574] = 0.0617527f;
      sa[575] = -0.42833894f;
      sa[576] = -0.16267142f;
      sa[577] = -0.0985527f;
      sa[578] = 0.02819531f;
      sa[579] = 0.1329406f;
      sa[580] = 8.40102E-4f;
      sa[581] = -0.27312607f;
      sa[582] = 0.034043822f;
      sa[583] = -0.11710223f;
      sa[584] = 0.07711936f;
      sa[585] = 0.07777991f;
      sa[586] = -0.2528575f;
      sa[587] = -0.22360295f;
      sa[588] = 0.041977443f;
      sa[589] = 0.029518142f;
      sa[590] = -0.02765826f;
      sa[591] = -0.19561549f;
      sa[592] = -0.3908638f;
      sa[593] = -0.32250315f;
      sa[594] = 0.059743505f;
      sa[595] = 0.06246164f;
      sa[596] = 0.22391334f;
      sa[597] = -0.096296586f;
      sa[598] = 0.20521334f;
      sa[599] = -0.028041169f;
      sa[600] = -0.2989707f;
      sa[601] = 0.14678404f;
      sa[602] = 0.052274443f;
      sa[603] = -0.020172399f;
      sa[604] = 0.13562556f;
      sa[605] = 0.07949357f;
      sa[606] = 0.08207291f;
      sa[607] = -0.09194996f;
      sa[608] = 0.05462339f;
      sa[609] = -0.009381247f;
      sa[610] = 0.09016651f;
      sa[611] = -0.06333206f;
      sa[612] = -0.13030808f;
      sa[613] = 0.28643999f;
      sa[614] = 0.12644862f;
      sa[615] = -0.09046245f;
      sa[616] = 0.045927648f;
      sa[617] = -0.22339147f;
      sa[618] = -0.15736525f;
      sa[619] = -0.14531636f;
      sa[620] = 0.0028982607f;
      sa[621] = -0.1903175f;
      sa[622] = -0.21792704f;
      sa[623] = -0.3007205f;
      sa[624] = -0.048907798f;
      sa[625] = 0.33831564f;
      sa[626] = 8.787915E-4f;
      sa[627] = 0.2562841f;
      sa[628] = -0.0511556f;
      sa[629] = 0.02561653f;
      sa[630] = -0.25983238f;
      sa[631] = 0.41469398f;
      sa[632] = 0.08471465f;
      sa[633] = -0.16299942f;
      sa[634] = -0.22557376f;
      sa[635] = 0.1962617f;
      sa[636] = -0.067948624f;
      sa[637] = 0.055365533f;
      sa[638] = -0.21892059f;
      sa[639] = 0.057880413f;
      sa[640] = -0.11824937f;
      sa[641] = -0.2722672f;
      sa[642] = 0.22592612f;
      sa[643] = -0.3228f;
      sa[644] = -0.081588954f;
      sa[645] = -0.25540885f;
      sa[646] = 0.34766284f;
      sa[647] = -0.19025975f;
      sa[648] = 0.006401285f;
      sa[649] = -0.032198668f;
      sa[650] = 0.09577637f;
      sa[651] = -0.10420537f;
      sa[652] = 0.058702115f;
      sa[653] = -0.11713514f;
      sa[654] = -0.16147491f;
      sa[655] = -0.16457255f;
      sa[656] = 0.15049814f;
      sa[657] = 0.24486484f;
      sa[658] = -0.21574657f;
      sa[659] = -0.08258705f;
      sa[660] = -0.19085772f;
      sa[661] = -0.049977805f;
      sa[662] = -0.2311956f;
      sa[663] = 0.21511514f;
      sa[664] = -0.17518461f;
      sa[665] = 0.3429782f;
      sa[666] = 0.030226426f;
      sa[667] = -0.34626055f;
      sa[668] = 0.2674813f;
      sa[669] = -0.15077272f;
      sa[670] = 0.09688973f;
      sa[671] = -0.008121573f;
      sa[672] = -0.20899454f;
      sa[673] = 0.19882327f;
      sa[674] = 0.24657819f;
      sa[675] = -0.36903098f;
      sa[676] = -0.05647549f;
      sa[677] = -0.17618729f;
      sa[678] = 0.22666286f;
      sa[679] = -0.0120402295f;
      sa[680] = 0.080342256f;
      sa[681] = 0.13381742f;
      sa[682] = -0.11140883f;
      sa[683] = -0.16688077f;
      sa[684] = -0.010269541f;
      sa[685] = 0.099359356f;
      sa[686] = -0.21262436f;
      sa[687] = -0.17595398f;
      sa[688] = -0.25023422f;
      sa[689] = -0.21938622f;
      sa[690] = -0.028857522f;
      sa[691] = 0.10746239f;
      sa[692] = -0.17891513f;
      sa[693] = -0.18915512f;
      sa[694] = 0.2595289f;
      sa[695] = -0.25120738f;
      sa[696] = -0.10625118f;
      sa[697] = -0.15753165f;
      sa[698] = -0.20808196f;
      sa[699] = 0.267437f;
      sa[700] = 0.17346635f;
      sa[701] = 0.12703617f;
      sa[702] = 0.10718801f;
      sa[703] = -0.032594524f;
      sa[704] = -0.25406554f;
      sa[705] = -0.0095685f;
      sa[706] = -0.124458306f;
      sa[707] = 0.028312227f;
      sa[708] = -0.06772093f;
      sa[709] = -0.29732156f;
      sa[710] = 0.22765122f;
      sa[711] = 0.15771285f;
      sa[712] = 0.037485436f;
      sa[713] = 0.1603624f;
      sa[714] = 0.1947581f;
      sa[715] = 0.08178193f;
      sa[716] = 0.008917724f;
      sa[717] = 0.1012475f;
      sa[718] = 0.04892748f;
      sa[719] = 0.113310754f;
      sa[720] = -0.27030072f;
      sa[721] = 0.23584393f;
      sa[722] = -0.04005432f;
      sa[723] = 0.23854211f;
      sa[724] = 0.030412272f;
      sa[725] = -0.20816875f;
      sa[726] = -0.1826189f;
      sa[727] = -0.3482494f;
      sa[728] = -0.06278154f;
      sa[729] = -0.12660685f;
      sa[730] = 0.11493597f;
      sa[731] = -0.40053833f;
      sa[732] = 0.23841739f;
      sa[733] = 0.32296005f;
      sa[734] = -0.049213983f;
      sa[735] = 0.28792936f;
      sa[736] = 0.07995164f;
      sa[737] = 0.21607336f;
      sa[738] = -0.33094448f;
      sa[739] = -0.11900105f;
      sa[740] = -0.28036058f;
      sa[741] = -0.352829f;
      sa[742] = 0.059446167f;
      sa[743] = -0.09683587f;
      sa[744] = 0.16830844f;
      sa[745] = -0.20078203f;
      sa[746] = 0.05256585f;
      sa[747] = -0.2060638f;
      sa[748] = -0.11184757f;
      sa[749] = -0.1585933f;
      sa[750] = 0.25678465f;
      sa[751] = 0.2332196f;
      sa[752] = 0.0015452311f;
      sa[753] = 0.06718405f;
      sa[754] = -0.0084939115f;
      sa[755] = -0.027478484f;
      sa[756] = -0.16473886f;
      sa[757] = 0.22955976f;
      sa[758] = -0.20369057f;
      sa[759] = 0.13351153f;
      sa[760] = -0.1181652f;
      sa[761] = 0.027817547f;
      sa[762] = -0.13752593f;
      sa[763] = 0.07136732f;
      sa[764] = 0.09749035f;
      sa[765] = -0.1702019f;
      sa[766] = -0.23136857f;
      sa[767] = -0.08255472f;
      sa[768] = -0.16148938f;
      sa[769] = -0.27292264f;
      sa[770] = -0.027319934f;
      sa[771] = -0.0738799f;
      sa[772] = -0.006392924f;
      sa[773] = -0.30230835f;
      sa[774] = -0.015081723f;
      sa[775] = 0.22176613f;
      sa[776] = -0.05831656f;
      sa[777] = 0.038324993f;
      sa[778] = 0.14475717f;
      sa[779] = -0.23973264f;
      sa[780] = -0.055275884f;
      sa[781] = -0.0805295f;
      sa[782] = 0.1713111f;
      sa[783] = -0.17196424f;
      sa[784] = -0.13404065f;
      sa[785] = -0.11188268f;
      sa[786] = -0.07603207f;
      sa[787] = -0.24904428f;
      sa[788] = -0.24391676f;
      sa[789] = -0.0058857407f;
      sa[790] = -0.024553472f;
      sa[791] = -0.11922108f;
      sa[792] = 0.19514881f;
      sa[793] = -0.11329439f;
      sa[794] = -0.27299598f;
      sa[795] = -0.12821734f;
      sa[796] = 0.26847616f;
      sa[797] = -0.2204849f;
      sa[798] = -0.2446809f;
      sa[799] = -0.07913839f;
      sa[800] = 0.15402517f;
      sa[801] = 0.07772445f;
      sa[802] = 0.19282116f;
      sa[803] = 0.26302883f;
      sa[804] = 0.19539875f;
      sa[805] = 0.23663442f;
      sa[806] = 0.23226851f;
      sa[807] = 0.2768039f;
      sa[808] = -0.05580356f;
      sa[809] = -0.17819473f;
      sa[810] = 0.108914785f;
      sa[811] = 0.032430597f;
      sa[812] = 0.16576883f;
      sa[813] = -0.240576f;
      sa[814] = 0.101210855f;
      sa[815] = -0.08580552f;
      sa[816] = -0.18751311f;
      sa[817] = -0.19914784f;
      sa[818] = 0.0154784825f;
      sa[819] = -0.043597765f;
      sa[820] = -0.2878187f;
      sa[821] = -0.18286073f;
      sa[822] = -0.2895854f;
      sa[823] = 0.13743524f;
      sa[824] = 0.11777916f;
      sa[825] = 0.45618758f;
      sa[826] = -0.32225454f;
      sa[827] = -0.3527371f;
      sa[828] = 0.08057788f;
      sa[829] = -0.1291418f;
      sa[830] = 0.1528256f;
      sa[831] = 0.29126778f;
      sa[832] = 0.14454897f;
      sa[833] = 0.10425975f;
      sa[834] = 0.21033251f;
      sa[835] = -0.023465643f;
      sa[836] = 0.1915019f;
      sa[837] = -0.1698878f;
      sa[838] = 0.119167745f;
      sa[839] = -0.15639363f;
      sa[840] = 0.21578921f;
      sa[841] = 0.14013799f;
      sa[842] = 0.1947581f;
      sa[843] = 0.14643745f;
      sa[844] = 0.06195064f;
      sa[845] = 0.17090236f;
      sa[846] = -0.2391994f;
      sa[847] = -0.22000408f;
      sa[848] = 0.18619421f;
      sa[849] = 0.20998281f;
      sa[850] = -0.013959676f;
      sa[851] = 0.10304437f;
      sa[852] = 0.25239402f;
      sa[853] = 0.19410478f;
      sa[854] = 0.2444834f;
      sa[855] = 0.050745323f;
      sa[856] = 0.094544485f;
      sa[857] = -0.1518284f;
      sa[858] = 0.16894944f;
      sa[859] = 0.14051391f;
      sa[860] = 0.3789625f;
      sa[861] = -0.039523575f;
      sa[862] = -0.33163399f;
      sa[863] = -0.16346546f;
      sa[864] = -0.14543532f;
      sa[865] = 0.21450149f;
      sa[866] = -0.26184332f;
      sa[867] = -0.12180045f;
      sa[868] = -0.124245316f;
      sa[869] = 0.16286287f;
      sa[870] = -0.024688685f;
      sa[871] = 0.17576773f;
      sa[872] = 0.18958738f;
      sa[873] = -0.07431563f;
      sa[874] = -0.030263498f;
      sa[875] = -0.3272364f;
      sa[876] = -0.2894061f;
      sa[877] = -0.30263063f;
      sa[878] = -0.041302085f;
      sa[879] = 0.096814655f;
      sa[880] = -0.19212006f;
      sa[881] = -0.18712905f;
      sa[882] = 0.2119669f;
      sa[883] = 0.14793831f;
      sa[884] = -0.10286172f;
      sa[885] = -0.0551916f;
      sa[886] = 0.13533376f;
      sa[887] = 0.0072971554f;
      sa[888] = -0.23401384f;
      sa[889] = -0.028514568f;
      sa[890] = -0.27547628f;
      sa[891] = 0.50812644f;
      sa[892] = 0.14082552f;
      sa[893] = 0.26825622f;
      sa[894] = -0.009614011f;
      sa[895] = 0.19606808f;
      sa[896] = -0.27551422f;
      sa[897] = 0.16257238f;
      sa[898] = 0.21314944f;
      sa[899] = 0.3237529f;
      sa[900] = -0.23696697f;
      sa[901] = 0.23090596f;
      sa[902] = -0.14440367f;
      sa[903] = -0.24027286f;
      sa[904] = 0.12491144f;
      sa[905] = 0.18035856f;
      sa[906] = -0.27007532f;
      sa[907] = -0.29455242f;
      sa[908] = -0.24545628f;
      sa[909] = 0.010450393f;
      sa[910] = 0.04540123f;
      sa[911] = -0.21980251f;
      sa[912] = -0.02122839f;
      sa[913] = 0.07068114f;
      sa[914] = -0.18558279f;
      sa[915] = 0.0019373801f;
      sa[916] = 0.34469068f;
      sa[917] = 0.04141882f;
      sa[918] = 0.089890994f;
      sa[919] = 0.26163003f;
      sa[920] = 0.10637164f;
      sa[921] = -0.13533625f;
      sa[922] = -0.17279728f;
      sa[923] = -0.12791708f;
      sa[924] = -0.018443638f;
      sa[925] = -0.16652445f;
      sa[926] = 0.022381887f;
      sa[927] = -0.05885706f;
      sa[928] = 0.22036669f;
      sa[929] = 0.09293325f;
      sa[930] = 0.14345615f;
      sa[931] = -0.10204749f;
      sa[932] = 0.21028014f;
      sa[933] = -0.065369606f;
      sa[934] = 0.23955655f;
      sa[935] = -0.1866158f;
      sa[936] = 0.116444334f;
      sa[937] = 0.101234965f;
      sa[938] = -0.1914407f;
      sa[939] = 0.09913015f;
      sa[940] = -0.06857293f;
      sa[941] = -0.32287613f;
      sa[942] = -0.2539327f;
      sa[943] = -0.2299687f;
      sa[944] = -0.15618695f;
      sa[945] = 0.0044680145f;
      sa[946] = 0.022582375f;
      sa[947] = 0.13765329f;
      sa[948] = 0.10210181f;
      sa[949] = -0.18656735f;
      sa[950] = 0.08524005f;
      sa[951] = -0.17005427f;
      sa[952] = -0.31664276f;
      sa[953] = -0.26632002f;
      sa[954] = -0.177921f;
      sa[955] = -0.012224317f;
      sa[956] = 0.0064911367f;
      sa[957] = 0.04250003f;
      sa[958] = 0.10152149f;
      sa[959] = -0.20590667f;
      sa[960] = 0.23842359f;
      sa[961] = -0.18380158f;
      sa[962] = -0.0016451584f;
      sa[963] = -0.086703576f;
      sa[964] = -0.16155471f;
      sa[965] = 0.24040692f;
      sa[966] = -0.1008243f;
      sa[967] = -0.29202422f;
      sa[968] = 0.12688933f;
      sa[969] = -0.1073876f;
      sa[970] = 0.37398195f;
      sa[971] = 0.08328387f;
      sa[972] = -0.24388923f;
      sa[973] = -0.2445673f;
      sa[974] = -0.22183253f;
      sa[975] = -0.21642049f;
      sa[976] = -0.13895725f;
      sa[977] = 0.041465662f;
      sa[978] = -0.11000844f;
      sa[979] = 0.10583859f;
      sa[980] = 0.11246635f;
      sa[981] = -0.22917739f;
      sa[982] = 0.15627807f;
      sa[983] = 0.0076062996f;
      sa[984] = -0.23724507f;
      sa[985] = 0.14503361f;
      sa[986] = -0.21608843f;
      sa[987] = 0.11230995f;
      sa[988] = 0.20161504f;
      sa[989] = 0.24327296f;
      sa[990] = 0.27934024f;
      sa[991] = -0.066306606f;
      sa[992] = -0.23114328f;
      sa[993] = -0.115153484f;
      sa[994] = -0.19056328f;
      sa[995] = -0.3021374f;
      sa[996] = 0.31307068f;
      sa[997] = 0.21382032f;
      sa[998] = 0.1082369f;
      sa[999] = 0.014517551f;
      sa[1000] = 0.020176213f;
      sa[1001] = 0.18616778f;
      sa[1002] = 0.26129034f;
      sa[1003] = -0.1031024f;
      sa[1004] = 0.24466193f;
      sa[1005] = -0.1691295f;
      sa[1006] = -0.28806415f;
      sa[1007] = -0.011898114f;
      sa[1008] = 0.269212f;
      sa[1009] = 0.17173511f;
      sa[1010] = -0.07184007f;
      sa[1011] = 0.2528695f;
      sa[1012] = 0.019180706f;
      sa[1013] = 0.24111167f;
      sa[1014] = 0.32826754f;
      sa[1015] = -0.09625877f;
      sa[1016] = 0.27449435f;
      sa[1017] = 0.12990448f;
      sa[1018] = -0.02206669f;
      sa[1019] = 0.14677131f;
      sa[1020] = -0.20210002f;
      sa[1021] = 0.12966852f;
      sa[1022] = 0.23315403f;
      sa[1023] = 0.26096535f;
      sa[1024] = 0.04760672f;
      sa[1025] = 0.24144569f;
      sa[1026] = 0.08802548f;
      sa[1027] = 0.027150517f;
      sa[1028] = 0.33340874f;
      sa[1029] = 0.047474198f;
      sa[1030] = -0.12568648f;
      sa[1031] = 0.060603894f;
      sa[1032] = -0.32885128f;
      sa[1033] = 0.06693963f;
      sa[1034] = -0.10484985f;
      sa[1035] = 0.22893468f;
      sa[1036] = 0.34064347f;
      sa[1037] = 0.1333926f;
      sa[1038] = -0.0821219f;
      sa[1039] = 0.45710883f;
      sa[1040] = -0.048303295f;
      sa[1041] = 0.36861998f;
      sa[1042] = -0.22238956f;
      sa[1043] = -0.104565404f;
      sa[1044] = 0.20622166f;
      sa[1045] = 0.40464997f;
      sa[1046] = 0.017266314f;
      sa[1047] = -0.42018813f;
      sa[1048] = 0.11484542f;
      sa[1049] = 0.011464404f;
      sa[1050] = 0.047573287f;
      sa[1051] = -0.18949541f;
      sa[1052] = 0.21821111f;
      sa[1053] = 0.36444134f;
      sa[1054] = 0.34256604f;
      sa[1055] = 0.16354801f;
      sa[1056] = 0.3391731f;
      sa[1057] = -0.037365295f;
      sa[1058] = 0.2907008f;
      sa[1059] = -0.022283984f;
      sa[1060] = -0.089803725f;
      sa[1061] = 0.20472549f;
      sa[1062] = 0.04096339f;
      sa[1063] = 0.3020534f;
      sa[1064] = 0.10582091f;
      sa[1065] = -0.066692844f;
      sa[1066] = 0.13006769f;
      sa[1067] = -0.34199613f;
      sa[1068] = -0.07603519f;
      sa[1069] = 0.32191244f;
      sa[1070] = 0.02523189f;
      sa[1071] = 0.103144005f;
      sa[1072] = -0.14898078f;
      sa[1073] = 0.15491043f;
      sa[1074] = 0.227482f;
      sa[1075] = -0.11664025f;
      sa[1076] = -0.17704076f;
      sa[1077] = 0.09957253f;
      sa[1078] = -0.12380434f;
      sa[1079] = 0.043061335f;
      sa[1080] = 0.21616796f;
      sa[1081] = 0.2184173f;
      sa[1082] = -0.36461118f;
      sa[1083] = 0.15559933f;
      sa[1084] = 0.1583652f;
      sa[1085] = -0.2878063f;
      sa[1086] = -0.320631f;
      sa[1087] = -0.37554985f;
      sa[1088] = -0.15366559f;
      sa[1089] = -0.019095307f;
      sa[1090] = -0.2637353f;
      sa[1091] = -0.04038287f;
      sa[1092] = -0.24371974f;
      sa[1093] = -0.31024724f;
      sa[1094] = -0.0024160598f;
      sa[1095] = -0.3413183f;
      sa[1096] = 0.058427982f;
      sa[1097] = -0.21403427f;
      sa[1098] = 0.03911389f;
      sa[1099] = -0.027629226f;
      sa[1100] = -0.14075187f;
      sa[1101] = 0.07229943f;
      sa[1102] = -0.15336902f;
      sa[1103] = 0.12471872f;
      sa[1104] = -0.27988878f;
      sa[1105] = -0.11585038f;
      sa[1106] = -0.046926193f;
      sa[1107] = 0.085511476f;
      sa[1108] = -0.23504584f;
      sa[1109] = 0.1675391f;
      sa[1110] = 0.101089455f;
      sa[1111] = -0.34989852f;
      sa[1112] = 0.23327065f;
      sa[1113] = 0.12062856f;
      sa[1114] = 0.10788145f;
      sa[1115] = 0.15528528f;
      sa[1116] = -0.025254378f;
      sa[1117] = 0.011129443f;
      sa[1118] = -0.05203733f;
      sa[1119] = -0.044644997f;
      sa[1120] = 0.17599526f;
      sa[1121] = 0.21004432f;
      sa[1122] = 0.23958781f;
      sa[1123] = 0.2313418f;
      sa[1124] = 0.08033629f;
      sa[1125] = 0.009400151f;
      sa[1126] = 0.26931182f;
      sa[1127] = 0.26932108f;
      sa[1128] = 0.07803571f;
      sa[1129] = 0.024338324f;
      sa[1130] = 0.2392771f;
      sa[1131] = 0.35903198f;
      sa[1132] = -0.025327971f;
      sa[1133] = 0.0064282417f;
      sa[1134] = 0.09090048f;
      sa[1135] = -0.2870266f;
      sa[1136] = -0.027084155f;
      sa[1137] = 0.1485455f;
      sa[1138] = -0.14407025f;
      sa[1139] = -0.03690388f;
      sa[1140] = 0.32268727f;
      sa[1141] = -0.19381073f;
      sa[1142] = 0.0081627825f;
      sa[1143] = 0.024783362f;
      sa[1144] = -0.17350557f;
      sa[1145] = 0.22424841f;
      sa[1146] = 0.35119954f;
      sa[1147] = 0.038139112f;
      sa[1148] = -0.012727635f;
      sa[1149] = -0.02100266f;
      sa[1150] = -0.28171954f;
      sa[1151] = -0.32755286f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_04_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_04_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_04_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2622356f;
      sa[1] = -0.12395577f;
      sa[2] = -0.5573815f;
      sa[3] = -0.9486648f;
      sa[4] = 0.058342427f;
      sa[5] = 0.3050945f;
      sa[6] = 1.2271657f;
      sa[7] = -0.70100105f;
      sa[8] = -0.9449097f;
      sa[9] = 0.6776094f;
      sa[10] = -0.17241275f;
      sa[11] = 0.4381666f;
      sa[12] = 0.059625484f;
      sa[13] = -0.00605728f;
      sa[14] = -1.2846999f;
      sa[15] = 1.1910821f;
      sa[16] = 1.5696591f;
      sa[17] = -0.45228833f;
      sa[18] = 0.066061586f;
      sa[19] = -0.45113254f;
      sa[20] = 1.1665407f;
      sa[21] = 0.085712716f;
      sa[22] = -0.9611726f;
      sa[23] = 0.79310536f;
      sa[24] = -1.373187f;
      sa[25] = 0.46563748f;
      sa[26] = -0.20017472f;
      sa[27] = 1.5139645f;
      sa[28] = -1.4041835f;
      sa[29] = -0.5412738f;
      sa[30] = 0.33669597f;
      sa[31] = -0.6311675f;
      sa[32] = -1.1778543f;
      sa[33] = -1.4978671f;
      sa[34] = -0.076096684f;
      sa[35] = 1.4191742f;
      sa[36] = -0.290017f;
      sa[37] = -0.10183028f;
      sa[38] = 0.18087748f;
      sa[39] = 0.7262454f;
      sa[40] = -0.72524565f;
      sa[41] = -1.3613341f;
      sa[42] = -1.090601f;
      sa[43] = -1.4904187f;
      sa[44] = 0.050774693f;
      sa[45] = -1.3331882f;
      sa[46] = 1.0391213f;
      sa[47] = 1.2663631f;
      sa[48] = -1.3048841f;
      sa[49] = -1.0764424f;
      sa[50] = 0.44579387f;
      sa[51] = -0.33188337f;
      sa[52] = 0.89023817f;
      sa[53] = 0.79089665f;
      sa[54] = -0.24114065f;
      sa[55] = 1.1401825f;
      sa[56] = -0.97896284f;
      sa[57] = -1.0763558f;
      sa[58] = -0.06866509f;
      sa[59] = -0.21818502f;
      sa[60] = 1.3788788f;
      sa[61] = -0.59978247f;
      sa[62] = -0.28594667f;
      sa[63] = 0.68116266f;
      sa[64] = 1.2506832f;
      sa[65] = -0.6249475f;
      sa[66] = 0.6343111f;
      sa[67] = 1.5430554f;
      sa[68] = 0.6989936f;
      sa[69] = -1.1358286f;
      sa[70] = -1.4740382f;
      sa[71] = -0.48823935f;
      sa[72] = -1.2987416f;
      sa[73] = 1.2265451f;
      sa[74] = 1.3951416f;
      sa[75] = -0.1405512f;
      sa[76] = 0.9149067f;
      sa[77] = 0.44277447f;
      sa[78] = -1.4223623f;
      sa[79] = 0.9363977f;
      sa[80] = -0.82378405f;
      sa[81] = 0.05479309f;
      sa[82] = 0.8222678f;
      sa[83] = -0.60015166f;
      sa[84] = -1.6518834f;
      sa[85] = -1.3035113f;
      sa[86] = 0.3052583f;
      sa[87] = 1.1702299f;
      sa[88] = -1.5950401f;
      sa[89] = -0.6131778f;
      sa[90] = -1.1865468f;
      sa[91] = 1.4924078f;
      sa[92] = -0.29044545f;
      sa[93] = 0.32070288f;
      sa[94] = -1.5315144f;
      sa[95] = -0.18648946f;
      sa[96] = -1.0318757f;
      sa[97] = 0.19621061f;
      sa[98] = -0.028737668f;
      sa[99] = 0.32663396f;
      sa[100] = -1.2516322f;
      sa[101] = -0.45334646f;
      sa[102] = 1.1777055f;
      sa[103] = 0.059142634f;
      sa[104] = -0.21038885f;
      sa[105] = -0.7203448f;
      sa[106] = 1.3708378f;
      sa[107] = 1.2081734f;
      sa[108] = 0.8131722f;
      sa[109] = 0.16691132f;
      sa[110] = 0.73819983f;
      sa[111] = -0.8476188f;
      sa[112] = -1.1520456f;
      sa[113] = 0.2253626f;
      sa[114] = 0.044141844f;
      sa[115] = -0.4124392f;
      sa[116] = 1.1931396f;
      sa[117] = 0.039291497f;
      sa[118] = -1.4316132f;
      sa[119] = -0.7543496f;
      sa[120] = -0.34052134f;
      sa[121] = 1.0660803f;
      sa[122] = -0.07203714f;
      sa[123] = 0.34081024f;
      sa[124] = -0.71443564f;
      sa[125] = 0.7929062f;
      sa[126] = -1.1544185f;
      sa[127] = 0.41664332f;
      sa[128] = -0.95651585f;
      sa[129] = 0.7590083f;
      sa[130] = -0.44088218f;
      sa[131] = 0.8287967f;
      sa[132] = 0.43986675f;
      sa[133] = 0.6598148f;
      sa[134] = 0.57290316f;
      sa[135] = -1.0859929f;
      sa[136] = 0.5464396f;
      sa[137] = -0.6442237f;
      sa[138] = -0.094684884f;
      sa[139] = 1.1692026f;
      sa[140] = -0.7869987f;
      sa[141] = -0.13312446f;
      sa[142] = 0.2697923f;
      sa[143] = -0.84003437f;
      sa[144] = 0.9703582f;
      sa[145] = -0.78430355f;
      sa[146] = 0.04516428f;
      sa[147] = -0.3263885f;
      sa[148] = -0.92778975f;
      sa[149] = 1.0579789f;
      sa[150] = -1.2130874f;
      sa[151] = -1.6012138f;
      sa[152] = 1.5271502f;
      sa[153] = -0.622495f;
      sa[154] = 1.3659393f;
      sa[155] = -1.5383599f;
      sa[156] = -1.4931242f;
      sa[157] = -1.1506315f;
      sa[158] = -0.19216335f;
      sa[159] = -0.6817542f;
      sa[160] = 1.3238919f;
      sa[161] = -1.1074173f;
      sa[162] = 1.5217282f;
      sa[163] = -0.7344237f;
      sa[164] = 0.74715346f;
      sa[165] = -0.5429487f;
      sa[166] = 1.3452214f;
      sa[167] = -1.3676488f;
      sa[168] = 1.0700921f;
      sa[169] = -1.4976151f;
      sa[170] = 1.1312243f;
      sa[171] = 0.8750683f;
      sa[172] = 1.5355117f;
      sa[173] = 1.5410542f;
      sa[174] = -0.08829267f;
      sa[175] = 0.017183779f;
      sa[176] = -0.75837386f;
      sa[177] = 0.14698279f;
      sa[178] = -1.03862f;
      sa[179] = -0.21039525f;
      sa[180] = -1.3930752f;
      sa[181] = -0.9384035f;
      sa[182] = 0.31390467f;
      sa[183] = -1.0138388f;
      sa[184] = 1.5350611f;
      sa[185] = 1.233437f;
      sa[186] = -0.48331836f;
      sa[187] = -1.0051409f;
      sa[188] = -0.5268118f;
      sa[189] = -0.7123231f;
      sa[190] = -1.4315165f;
      sa[191] = -1.0368571f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_04 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_04_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_04_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_04_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_04_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_04_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


