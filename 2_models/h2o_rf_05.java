/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:50:51.030+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_05

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_05 > h2o_rf_05.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_05.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_05", algorithm="drf")
public class h2o_rf_05 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_05.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_rf_05_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.29347826086956524,0.13043478260869565,0.14130434782608695,0.29347826086956524,0.14130434782608695};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.29347826086956524,0.13043478260869565,0.14130434782608695,0.29347826086956524,0.14130434782608695};

  public h2o_rf_05() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-7558783110846329616L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_05_Forest_0.score0(data,preds);
    h2o_rf_05_Forest_1.score0(data,preds);
    h2o_rf_05_Forest_2.score0(data,preds);
    h2o_rf_05_Forest_3.score0(data,preds);
    h2o_rf_05_Forest_4.score0(data,preds);
    h2o_rf_05_Forest_5.score0(data,preds);
    h2o_rf_05_Forest_6.score0(data,preds);
    h2o_rf_05_Forest_7.score0(data,preds);
    h2o_rf_05_Forest_8.score0(data,preds);
    h2o_rf_05_Forest_9.score0(data,preds);
    h2o_rf_05_Forest_10.score0(data,preds);
    h2o_rf_05_Forest_11.score0(data,preds);
    h2o_rf_05_Forest_12.score0(data,preds);
    h2o_rf_05_Forest_13.score0(data,preds);
    h2o_rf_05_Forest_14.score0(data,preds);
    h2o_rf_05_Forest_15.score0(data,preds);
    h2o_rf_05_Forest_16.score0(data,preds);
    h2o_rf_05_Forest_17.score0(data,preds);
    h2o_rf_05_Forest_18.score0(data,preds);
    h2o_rf_05_Forest_19.score0(data,preds);
    h2o_rf_05_Forest_20.score0(data,preds);
    h2o_rf_05_Forest_21.score0(data,preds);
    h2o_rf_05_Forest_22.score0(data,preds);
    h2o_rf_05_Forest_23.score0(data,preds);
    h2o_rf_05_Forest_24.score0(data,preds);
    h2o_rf_05_Forest_25.score0(data,preds);
    h2o_rf_05_Forest_26.score0(data,preds);
    h2o_rf_05_Forest_27.score0(data,preds);
    h2o_rf_05_Forest_28.score0(data,preds);
    h2o_rf_05_Forest_29.score0(data,preds);
    h2o_rf_05_Forest_30.score0(data,preds);
    h2o_rf_05_Forest_31.score0(data,preds);
    h2o_rf_05_Forest_32.score0(data,preds);
    h2o_rf_05_Forest_33.score0(data,preds);
    h2o_rf_05_Forest_34.score0(data,preds);
    h2o_rf_05_Forest_35.score0(data,preds);
    h2o_rf_05_Forest_36.score0(data,preds);
    h2o_rf_05_Forest_37.score0(data,preds);
    h2o_rf_05_Forest_38.score0(data,preds);
    h2o_rf_05_Forest_39.score0(data,preds);
    h2o_rf_05_Forest_40.score0(data,preds);
    h2o_rf_05_Forest_41.score0(data,preds);
    h2o_rf_05_Forest_42.score0(data,preds);
    h2o_rf_05_Forest_43.score0(data,preds);
    h2o_rf_05_Forest_44.score0(data,preds);
    h2o_rf_05_Forest_45.score0(data,preds);
    h2o_rf_05_Forest_46.score0(data,preds);
    h2o_rf_05_Forest_47.score0(data,preds);
    h2o_rf_05_Forest_48.score0(data,preds);
    h2o_rf_05_Forest_49.score0(data,preds);
    h2o_rf_05_Forest_50.score0(data,preds);
    h2o_rf_05_Forest_51.score0(data,preds);
    h2o_rf_05_Forest_52.score0(data,preds);
    h2o_rf_05_Forest_53.score0(data,preds);
    h2o_rf_05_Forest_54.score0(data,preds);
    h2o_rf_05_Forest_55.score0(data,preds);
    h2o_rf_05_Forest_56.score0(data,preds);
    h2o_rf_05_Forest_57.score0(data,preds);
    h2o_rf_05_Forest_58.score0(data,preds);
    h2o_rf_05_Forest_59.score0(data,preds);
    h2o_rf_05_Forest_60.score0(data,preds);
    h2o_rf_05_Forest_61.score0(data,preds);
    h2o_rf_05_Forest_62.score0(data,preds);
    h2o_rf_05_Forest_63.score0(data,preds);
    h2o_rf_05_Forest_64.score0(data,preds);
    h2o_rf_05_Forest_65.score0(data,preds);
    h2o_rf_05_Forest_66.score0(data,preds);
    h2o_rf_05_Forest_67.score0(data,preds);
    h2o_rf_05_Forest_68.score0(data,preds);
    h2o_rf_05_Forest_69.score0(data,preds);
    h2o_rf_05_Forest_70.score0(data,preds);
    h2o_rf_05_Forest_71.score0(data,preds);
    h2o_rf_05_Forest_72.score0(data,preds);
    h2o_rf_05_Forest_73.score0(data,preds);
    h2o_rf_05_Forest_74.score0(data,preds);
    h2o_rf_05_Forest_75.score0(data,preds);
    h2o_rf_05_Forest_76.score0(data,preds);
    h2o_rf_05_Forest_77.score0(data,preds);
    h2o_rf_05_Forest_78.score0(data,preds);
    h2o_rf_05_Forest_79.score0(data,preds);
    h2o_rf_05_Forest_80.score0(data,preds);
    h2o_rf_05_Forest_81.score0(data,preds);
    h2o_rf_05_Forest_82.score0(data,preds);
    h2o_rf_05_Forest_83.score0(data,preds);
    h2o_rf_05_Forest_84.score0(data,preds);
    h2o_rf_05_Forest_85.score0(data,preds);
    h2o_rf_05_Forest_86.score0(data,preds);
    h2o_rf_05_Forest_87.score0(data,preds);
    h2o_rf_05_Forest_88.score0(data,preds);
    h2o_rf_05_Forest_89.score0(data,preds);
    h2o_rf_05_Forest_90.score0(data,preds);
    h2o_rf_05_Forest_91.score0(data,preds);
    h2o_rf_05_Forest_92.score0(data,preds);
    h2o_rf_05_Forest_93.score0(data,preds);
    h2o_rf_05_Forest_94.score0(data,preds);
    h2o_rf_05_Forest_95.score0(data,preds);
    h2o_rf_05_Forest_96.score0(data,preds);
    h2o_rf_05_Forest_97.score0(data,preds);
    h2o_rf_05_Forest_98.score0(data,preds);
    h2o_rf_05_Forest_99.score0(data,preds);
    h2o_rf_05_Forest_100.score0(data,preds);
    h2o_rf_05_Forest_101.score0(data,preds);
    h2o_rf_05_Forest_102.score0(data,preds);
    h2o_rf_05_Forest_103.score0(data,preds);
    h2o_rf_05_Forest_104.score0(data,preds);
    h2o_rf_05_Forest_105.score0(data,preds);
    h2o_rf_05_Forest_106.score0(data,preds);
    h2o_rf_05_Forest_107.score0(data,preds);
    h2o_rf_05_Forest_108.score0(data,preds);
    h2o_rf_05_Forest_109.score0(data,preds);
    h2o_rf_05_Forest_110.score0(data,preds);
    h2o_rf_05_Forest_111.score0(data,preds);
    h2o_rf_05_Forest_112.score0(data,preds);
    h2o_rf_05_Forest_113.score0(data,preds);
    h2o_rf_05_Forest_114.score0(data,preds);
    h2o_rf_05_Forest_115.score0(data,preds);
    h2o_rf_05_Forest_116.score0(data,preds);
    h2o_rf_05_Forest_117.score0(data,preds);
    h2o_rf_05_Forest_118.score0(data,preds);
    h2o_rf_05_Forest_119.score0(data,preds);
    h2o_rf_05_Forest_120.score0(data,preds);
    h2o_rf_05_Forest_121.score0(data,preds);
    h2o_rf_05_Forest_122.score0(data,preds);
    h2o_rf_05_Forest_123.score0(data,preds);
    h2o_rf_05_Forest_124.score0(data,preds);
    h2o_rf_05_Forest_125.score0(data,preds);
    h2o_rf_05_Forest_126.score0(data,preds);
    h2o_rf_05_Forest_127.score0(data,preds);
    h2o_rf_05_Forest_128.score0(data,preds);
    h2o_rf_05_Forest_129.score0(data,preds);
    h2o_rf_05_Forest_130.score0(data,preds);
    h2o_rf_05_Forest_131.score0(data,preds);
    h2o_rf_05_Forest_132.score0(data,preds);
    h2o_rf_05_Forest_133.score0(data,preds);
    h2o_rf_05_Forest_134.score0(data,preds);
    h2o_rf_05_Forest_135.score0(data,preds);
    h2o_rf_05_Forest_136.score0(data,preds);
    h2o_rf_05_Forest_137.score0(data,preds);
    h2o_rf_05_Forest_138.score0(data,preds);
    h2o_rf_05_Forest_139.score0(data,preds);
    h2o_rf_05_Forest_140.score0(data,preds);
    h2o_rf_05_Forest_141.score0(data,preds);
    h2o_rf_05_Forest_142.score0(data,preds);
    h2o_rf_05_Forest_143.score0(data,preds);
    h2o_rf_05_Forest_144.score0(data,preds);
    h2o_rf_05_Forest_145.score0(data,preds);
    h2o_rf_05_Forest_146.score0(data,preds);
    h2o_rf_05_Forest_147.score0(data,preds);
    h2o_rf_05_Forest_148.score0(data,preds);
    h2o_rf_05_Forest_149.score0(data,preds);
    h2o_rf_05_Forest_150.score0(data,preds);
    h2o_rf_05_Forest_151.score0(data,preds);
    h2o_rf_05_Forest_152.score0(data,preds);
    h2o_rf_05_Forest_153.score0(data,preds);
    h2o_rf_05_Forest_154.score0(data,preds);
    h2o_rf_05_Forest_155.score0(data,preds);
    h2o_rf_05_Forest_156.score0(data,preds);
    h2o_rf_05_Forest_157.score0(data,preds);
    h2o_rf_05_Forest_158.score0(data,preds);
    h2o_rf_05_Forest_159.score0(data,preds);
    h2o_rf_05_Forest_160.score0(data,preds);
    h2o_rf_05_Forest_161.score0(data,preds);
    h2o_rf_05_Forest_162.score0(data,preds);
    h2o_rf_05_Forest_163.score0(data,preds);
    h2o_rf_05_Forest_164.score0(data,preds);
    h2o_rf_05_Forest_165.score0(data,preds);
    h2o_rf_05_Forest_166.score0(data,preds);
    h2o_rf_05_Forest_167.score0(data,preds);
    h2o_rf_05_Forest_168.score0(data,preds);
    h2o_rf_05_Forest_169.score0(data,preds);
    h2o_rf_05_Forest_170.score0(data,preds);
    h2o_rf_05_Forest_171.score0(data,preds);
    h2o_rf_05_Forest_172.score0(data,preds);
    h2o_rf_05_Forest_173.score0(data,preds);
    h2o_rf_05_Forest_174.score0(data,preds);
    h2o_rf_05_Forest_175.score0(data,preds);
    h2o_rf_05_Forest_176.score0(data,preds);
    h2o_rf_05_Forest_177.score0(data,preds);
    h2o_rf_05_Forest_178.score0(data,preds);
    h2o_rf_05_Forest_179.score0(data,preds);
    h2o_rf_05_Forest_180.score0(data,preds);
    h2o_rf_05_Forest_181.score0(data,preds);
    h2o_rf_05_Forest_182.score0(data,preds);
    h2o_rf_05_Forest_183.score0(data,preds);
    h2o_rf_05_Forest_184.score0(data,preds);
    h2o_rf_05_Forest_185.score0(data,preds);
    h2o_rf_05_Forest_186.score0(data,preds);
    h2o_rf_05_Forest_187.score0(data,preds);
    h2o_rf_05_Forest_188.score0(data,preds);
    h2o_rf_05_Forest_189.score0(data,preds);
    h2o_rf_05_Forest_190.score0(data,preds);
    h2o_rf_05_Forest_191.score0(data,preds);
    h2o_rf_05_Forest_192.score0(data,preds);
    h2o_rf_05_Forest_193.score0(data,preds);
    h2o_rf_05_Forest_194.score0(data,preds);
    h2o_rf_05_Forest_195.score0(data,preds);
    h2o_rf_05_Forest_196.score0(data,preds);
    h2o_rf_05_Forest_197.score0(data,preds);
    h2o_rf_05_Forest_198.score0(data,preds);
    h2o_rf_05_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_05 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_rf_05_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_05_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_rf_05_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_rf_05_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_rf_05_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}

class h2o_rf_05_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_0_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[13 /* X14 */] <0.07597373f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.42403698f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10319115f ? 
             (data[30 /* X31 */] <0.03709078f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10146244f ? 
         (data[13 /* X14 */] <0.03621536f ? 
            1.0f : 
            0.0f) : 
         (data[25 /* X26 */] <-0.26581016f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.20436732f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17318934f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.042555f ? 
                0.0f : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.5288911f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[13 /* X14 */] <0.09162057f ? 
             (data[29 /* X30 */] <0.17135772f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.039397504f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[27 /* X28 */] <-0.28346995f ? 
             (data[35 /* X36 */] <-0.2744362f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.26581016f ? 
            0.0f : 
             (data[30 /* X31 */] <0.08212659f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_1_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.10833277f ? 
         (data[35 /* X36 */] <-0.085565224f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1941232f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.033325076f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.09038575f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.089893326f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23093955f ? 
         (data[35 /* X36 */] <-0.51005745f ? 
             (data[31 /* X32 */] <0.065359235f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.29758462f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.084636055f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.27595544f ? 
            0.0f : 
             (data[8 /* X9 */] <-9.776116E-4f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <0.088074096f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.17378384f ? 
        0.035714287f : 
         (data[29 /* X30 */] <0.102288626f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.15962303f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09680554f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.09320149f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6704649f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09059471f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_2_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (data[10 /* X11 */] <-0.3260745f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.13277964f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.03302255f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.20942578f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.16971566f ? 
                     (data[26 /* X27 */] <0.18343711f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[10 /* X11 */] <-0.8707717f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.90611434f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13438539f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15153672f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.106945515f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[3 /* X4 */] <-0.13187759f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-0.32765335f ? 
                 (data[5 /* X6 */] <0.07876684f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.32137817f ? 
                    1.0f : 
                    0.0f))) : 
        0.023255814f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39355522f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0389894f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_3_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1387072f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19990067f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18252203f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.06477589f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.46288517f ? 
            0.0f : 
             (data[31 /* X32 */] <0.07157007f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[20 /* X21 */] <0.03652149f ? 
            1.0f : 
            0.0f) : 
         (data[28 /* X29 */] <0.092018075f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.29778677f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23984262f ? 
             (data[22 /* X23 */] <0.0970616f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.107988514f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.087090164f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X9 */] <0.32170534f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.060430657f ? 
             (data[28 /* X29 */] <0.100894086f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.12782505f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.014600216f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.102371804f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.29762384f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.18188299f ? 
             (data[31 /* X32 */] <0.11212259f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.32901695f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_4_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[13 /* X14 */] <0.07699975f ? 
            1.0f : 
             (data[13 /* X14 */] <0.092321835f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.25061786f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-2.905869E-4f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[35 /* X36 */] <-0.5960779f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14053933f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.12864286f ? 
             (data[30 /* X31 */] <0.047961492f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (data[13 /* X14 */] <0.15805551f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6835975f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.21982983f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16695026f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.0869762f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (data[16 /* X17 */] <-0.25712472f ? 
             (data[0 /* X1 */] <-0.14751528f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.032878894f ? 
                    0.0f : 
                    1.0f)) : 
             (data[19 /* X20 */] <-0.081876665f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[17 /* X18 */] <-0.08207057f ? 
            0.0f : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_5_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20436302f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3908794f ? 
             (data[14 /* X15 */] <0.09796184f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1933421f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23093955f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25074455f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2557361f ? 
        0.0f : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1193976f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.335405f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.17223427f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1368849f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.062627554f ? 
             (data[3 /* X4 */] <-0.29181302f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X5 */] <0.14652474f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.052843656f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20578873f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36692652f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.0708044f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.014600216f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.11089148f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.24308269f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_6_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08633131f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09946776f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.5809195f ? 
             (data[30 /* X31 */] <0.18539836f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
        0.7777778f : 
         (data[1 /* X2 */] <-0.7684287f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.93641967f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.15044674f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[9 /* X10 */] <-0.022848394f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.18864645f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.170965f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.4332389f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.40550113f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19653136f ? 
             (data[3 /* X4 */] <-0.33679485f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2418332f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_7_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06856617f ? 
                 (data[9 /* X10 */] <-0.44377017f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.11541222f ? 
                         (data[33 /* X34 */] <-0.025f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[1 /* X2 */] <-0.38008398f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.044444446f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.038235657f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.0259435f ? 
                 (data[14 /* X15 */] <0.17524804f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.053421557f ? 
        0.0f : 
         (data[21 /* X22 */] <0.15950136f ? 
             (data[19 /* X20 */] <0.004174355f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2378001f ? 
                 (data[9 /* X10 */] <-0.17214693f ? 
                     (data[4 /* X5 */] <0.11732766f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.57699114f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07456437f ? 
         (data[27 /* X28 */] <-0.10074916f ? 
             (data[23 /* X24 */] <0.046276446f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09009406f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06366548f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18708196f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_8_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[34 /* X35 */] <-0.46679688f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.099201806f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.21887788f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[14 /* X15 */] <0.14069657f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.71444976f ? 
            0.0f : 
             (data[31 /* X32 */] <0.046822842f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11512648f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[34 /* X35 */] <0.49023438f ? 
             (data[28 /* X29 */] <0.08922847f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.27135786f ? 
                     (data[32 /* X33 */] <-0.27130845f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13026832f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.5225155f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.03877759f ? 
             (data[17 /* X18 */] <-0.09747202f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[31 /* X32 */] <0.10286059f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14241183f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_9_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13026832f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.107045785f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.103646845f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.108532846f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.59121376f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18755366f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13832861f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.6364526f ? 
            1.0f : 
             (data[26 /* X27 */] <0.067798965f ? 
                 (data[27 /* X28 */] <-0.34656778f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[32 /* X33 */] <-0.069691494f ? 
             (data[27 /* X28 */] <-0.2124849f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.086974666f ? 
                1.0f : 
                0.0f)) : 
         (data[13 /* X14 */] <0.09367262f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33758834f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16882876f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_10_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.058052555f ? 
             (data[13 /* X14 */] <0.053401235f ? 
                0.0f : 
                1.0f) : 
             (data[14 /* X15 */] <0.14160581f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[27 /* X28 */] <-0.40309292f ? 
            1.0f : 
            0.0f) : 
         (data[20 /* X21 */] <0.11637818f ? 
             (data[4 /* X5 */] <0.14440131f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.01530533f ? 
        0.7777778f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17393099f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.18216704f ? 
                 (data[26 /* X27 */] <0.07225664f ? 
                     (data[12 /* X13 */] <0.19330843f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
             (data[34 /* X35 */] <-0.4453125f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X10 */] <-0.26177618f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.10464601f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[27 /* X28 */] <-0.18619414f ? 
            0.0f : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_11_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1387072f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10600731f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077609435f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.46875f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13002244f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[34 /* X35 */] <-0.19921875f ? 
                1.0f : 
                0.0f)) : 
        0.07692308f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11001125f ? 
         (data[27 /* X28 */] <-0.34130964f ? 
            1.0f : 
             (data[23 /* X24 */] <0.009937094f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.1887161f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.2829127f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.02210774f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11382489f ? 
                 (data[2 /* X3 */] <-0.22710237f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[8 /* X9 */] <0.31899035f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10600731f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19987713f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.265625f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.15784305f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.06294073f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.209593f ? 
                    0.0f : 
                    1.0f))) : 
         (data[17 /* X18 */] <-0.5133113f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2844105f ? 
            0.0f : 
            1.0f) : 
         (data[14 /* X15 */] <0.12705782f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15585056f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_12_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (data[20 /* X21 */] <0.09624742f ? 
                 (data[31 /* X32 */] <0.041030508f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.39272898f ? 
             (data[10 /* X11 */] <-0.17608544f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[20 /* X21 */] <0.08530766f ? 
             (data[6 /* X7 */] <0.38457617f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.37229884f ? 
                 (data[28 /* X29 */] <0.17393099f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.023535835f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09801367f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13773523f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5402626f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.037519123f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.42675853f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[18 /* X19 */] <0.20096016f ? 
            0.0f : 
             (data[6 /* X7 */] <0.111189045f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.03502273f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.090750076f ? 
                         (data[19 /* X20 */] <-0.25839216f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.058690246f ? 
            1.0f : 
             (data[5 /* X6 */] <0.10166718f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09353769f ? 
        0.016393442f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18268523f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_13_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17292036f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20047842f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[15 /* X16 */] <0.044033453f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[35 /* X36 */] <-0.95698977f ? 
            1.0f : 
             (data[22 /* X23 */] <0.023779618f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28257993f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.003180306f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13773523f ? 
        0.020833334f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.17773438f ? 
             (data[32 /* X33 */] <-0.7725498f ? 
                1.0f : 
                0.0f) : 
             (data[26 /* X27 */] <0.11953182f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.053552683f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[24 /* X25 */] <-0.5216297f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17164858f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3764282f ? 
                 (data[26 /* X27 */] <0.049540307f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78585935f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X8 */] <0.07571934f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_14_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.0317533f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.089893326f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.09387022f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.67421436f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13051647f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17389883f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[32 /* X33 */] <-7.1070314E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (data[33 /* X34 */] <-0.8453125f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16909228f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X1 */] <0.5296229f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[24 /* X25 */] <-0.44567034f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08345183f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14579791f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.041466143f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <0.1328125f ? 
                 (data[15 /* X16 */] <0.071696766f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27709427f ? 
             (data[3 /* X4 */] <-0.47673836f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[7 /* X8 */] <0.0646249f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_15_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[35 /* X36 */] <4.552246E-4f ? 
             (data[27 /* X28 */] <-0.14149983f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.053819865f ? 
            1.0f : 
             (data[2 /* X3 */] <0.08477194f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1792468f ? 
             (data[30 /* X31 */] <0.03709078f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.112908624f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.28306654f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (data[19 /* X20 */] <-0.0829523f ? 
             (data[35 /* X36 */] <-0.3164917f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2528616f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.28306654f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_16_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1387072f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20313175f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.0879602f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1294859f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.041931722f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13354038f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[19 /* X20 */] <-0.29915547f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14651541f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.028771881f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
            0.0f : 
            1.0f) : 
         (data[21 /* X22 */] <0.14651541f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.08889162f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.059406847f ? 
                 (data[35 /* X36 */] <-0.4090769f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.14097041f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.043012314f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.10510223f ? 
                 (data[16 /* X17 */] <-0.5975793f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[17 /* X18 */] <-0.37588295f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.33304638f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_17_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (data[27 /* X28 */] <-0.33079332f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09734011f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.0879601f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.089220434f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42003682f ? 
             (data[35 /* X36 */] <-0.93641967f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.29887044f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[11 /* X12 */] <-0.27670217f ? 
             (data[2 /* X3 */] <-0.0030135915f ? 
                 (data[9 /* X10 */] <-0.36831108f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.058212634f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.051502414f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16938198f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (data[14 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X10 */] <-0.24315843f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_18_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.109170765f ? 
            1.0f : 
             (data[22 /* X23 */] <0.14732563f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.5809195f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[12 /* X13 */] <0.104701184f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25243053f ? 
             (data[22 /* X23 */] <0.023687651f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5546875f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[33 /* X34 */] <-0.4453125f ? 
             (data[21 /* X22 */] <0.118567385f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.082642876f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.04614283f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.04153238f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4463947f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19653136f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2844105f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2418332f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_19_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.067885704f ? 
             (data[29 /* X30 */] <0.11697753f ? 
                 (data[29 /* X30 */] <0.1145241f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4f ? 
             (data[4 /* X5 */] <0.073896214f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[20 /* X21 */] <0.08639786f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35447106f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.3328125f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13755344f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.14249167f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21235089f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[35 /* X36 */] <-0.085565224f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14249167f ? 
                1.0f : 
                0.0f)) : 
         (data[13 /* X14 */] <0.09367262f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2699506f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X5 */] <0.123167075f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_20_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[27 /* X28 */] <-0.14544345f ? 
             (data[5 /* X6 */] <0.10291148f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.033055823f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19366007f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.008148214f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[30 /* X31 */] <0.0363143f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23980473f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20639183f ? 
                    0.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.13570885f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.03680431f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16863865f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.22670616f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21272598f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6416044f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.40234375f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.067798965f ? 
                     (data[13 /* X14 */] <0.11239752f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (data[29 /* X30 */] <0.10635152f ? 
            1.0f : 
             (data[5 /* X6 */] <0.09731068f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.046369057f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23361184f ? 
                        1.0f : 
                        0.0f) : 
                     (data[28 /* X29 */] <0.090750076f ? 
                         (data[13 /* X14 */] <0.14112616f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
        0.02739726f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.28306654f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_21_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[24 /* X25 */] <-0.33288223f ? 
             (data[12 /* X13 */] <0.12523578f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09654224f ? 
             (data[20 /* X21 */] <0.08885079f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (data[0 /* X1 */] <-0.13701701f ? 
             (data[12 /* X13 */] <0.16994739f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09654224f ? 
             (data[20 /* X21 */] <0.06377634f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37739804f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21956345f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.054321736f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.265625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[24 /* X25 */] <-0.07968443f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16418083f ? 
                 (data[27 /* X28 */] <-0.14675799f ? 
                     (data[20 /* X21 */] <0.18751332f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.49417844f ? 
                 (data[19 /* X20 */] <-0.13565855f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17270799f ? 
                    1.0f : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.038829662f ? 
             (data[8 /* X9 */] <-0.24708652f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9745391f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12712725f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.16085786f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_22_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (data[33 /* X34 */] <-0.1328125f ? 
             (data[16 /* X17 */] <-0.46916223f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.090213336f ? 
                1.0f : 
                0.0f)) : 
        0.044444446f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24753335f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.01530533f ? 
        0.7777778f : 
         (data[26 /* X27 */] <0.12090255f ? 
             (data[33 /* X34 */] <-0.578125f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <-0.84375f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.040746037f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07456437f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.178125f ? 
             (data[26 /* X27 */] <0.067798965f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.11220057f ? 
                     (data[27 /* X28 */] <-0.22037213f ? 
                        0.0f : 
                        1.0f) : 
                     (data[14 /* X15 */] <0.14468265f ? 
                        0.0f : 
                         (data[22 /* X23 */] <0.19318868f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (data[14 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X10 */] <-0.2307466f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_23_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[34 /* X35 */] <-0.24414062f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.31429082f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22823411f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[34 /* X35 */] <-0.9765625f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31090903f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12765916f ? 
                    0.0f : 
                    1.0f))) : 
         (data[22 /* X23 */] <0.15888059f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.42982066f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.01530533f ? 
         (data[34 /* X35 */] <0.13476562f ? 
            0.0f : 
            1.0f) : 
         (data[26 /* X27 */] <0.068697184f ? 
             (data[26 /* X27 */] <0.039549794f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15446444f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.09992539f ? 
                     (data[6 /* X7 */] <0.110133685f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13065656f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35990095f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11916716f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[13 /* X14 */] <0.09341611f ? 
                1.0f : 
                0.0f)) : 
        0.025f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.098068744f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19560955f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X7 */] <0.08027026f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_24_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[35 /* X36 */] <-0.44647712f ? 
            1.0f : 
             (data[15 /* X16 */] <0.032878894f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.052185677f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.050630774f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.066062935f ? 
            1.0f : 
             (data[23 /* X24 */] <0.08563802f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.85462236f ? 
             (data[27 /* X28 */] <-0.39914933f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.2034177f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (data[18 /* X19 */] <0.22670616f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17524804f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.052111246f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.37260014f ? 
             (data[15 /* X16 */] <0.058757473f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.11608981f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.47559372f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13488969f ? 
                1.0f : 
                0.0f)) : 
        0.025f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9745391f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14516538f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_25_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10748979f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06956747f ? 
                 (data[2 /* X3 */] <-0.55768913f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.5809195f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
         (data[10 /* X11 */] <-0.89919066f ? 
            1.0f : 
            0.0f) : 
         (data[23 /* X24 */] <0.11808472f ? 
             (data[31 /* X32 */] <0.051375326f ? 
                0.0f : 
                1.0f) : 
             (data[25 /* X26 */] <-0.33121586f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
        0.027027028f : 
         (data[7 /* X8 */] <0.06496109f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.55714625f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.09598312f ? 
                     (data[24 /* X25 */] <-0.033648465f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21479936f ? 
            0.0f : 
             (data[25 /* X26 */] <0.11779231f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.35145196f ? 
            0.0f : 
            1.0f) : 
         (data[31 /* X32 */] <0.14516538f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_26_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09468054f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.113014385f ? 
             (data[13 /* X14 */] <0.10162429f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.265625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.11306666f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.20499922f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.26321468f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[22 /* X23 */] <0.02359089f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35121644f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20740622f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0019300516f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[9 /* X10 */] <-0.09938803f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.22673947f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (data[18 /* X19 */] <-0.15090176f ? 
            1.0f : 
             (data[6 /* X7 */] <0.12176652f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23439166f ? 
                    0.0f : 
                     (data[21 /* X22 */] <0.1626067f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.40469736f ? 
             (data[32 /* X33 */] <-0.7725498f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46353993f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (data[27 /* X28 */] <-0.10863639f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5060067f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.058347147f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.010603494f ? 
                 (data[26 /* X27 */] <0.14083359f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17570494f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.21255225f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_27_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08909545f ? 
            1.0f : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
        0.7777778f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3040246f ? 
             (data[27 /* X28 */] <-0.24758318f ? 
                 (data[2 /* X3 */] <-0.058690246f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.104786895f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.2124849f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X7 */] <0.08027026f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16329734f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2554907f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.96072835f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_28_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1803918f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2700346f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.21292521f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.11443579f ? 
            0.0f : 
             (data[14 /* X15 */] <0.115237586f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23707698f ? 
             (data[35 /* X36 */] <-0.9551198f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.045455f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13773523f ? 
        0.020833334f : 
         (data[32 /* X33 */] <-0.6364526f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46353993f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[14 /* X15 */] <0.11614683f ? 
             (data[30 /* X31 */] <0.12250352f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.12730259f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14346847f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.073777474f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.11920017f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.849878f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.44738755f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.012387498f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.061185222f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[23 /* X24 */] <0.11755281f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_29_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18805842f ? 
             (data[26 /* X27 */] <0.19256644f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.3884946f ? 
                    0.0f : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.07348149f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.17878056f ? 
             (data[22 /* X23 */] <0.16581357f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
        0.028985508f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
             (data[15 /* X16 */] <0.061434567f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43688822f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.45123073f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.46967894f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.13395001f ? 
             (data[21 /* X22 */] <0.1202612f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.06705474f ? 
                    1.0f : 
                    0.0f) : 
                 (data[32 /* X33 */] <-0.25426173f ? 
                     (data[20 /* X21 */] <0.17938265f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.14990164f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06009602f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
        0.013333334f : 
         (data[34 /* X35 */] <-0.33203125f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_30_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077754766f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
             (data[14 /* X15 */] <0.0879601f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.6073334f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.051043477f ? 
                         (data[13 /* X14 */] <0.10008525f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13893414f ? 
                1.0f : 
                 (data[8 /* X9 */] <0.21717796f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08898634f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18829726f ? 
                 (data[28 /* X29 */] <0.11002146f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.15021291f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
        0.029411765f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39139575f ? 
             (data[26 /* X27 */] <0.055626526f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19119622f ? 
             (data[4 /* X5 */] <0.13112992f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.050282095f ? 
                     (data[18 /* X19 */] <0.27390715f ? 
                         (data[2 /* X3 */] <-0.25347462f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
        0.02631579f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11151855f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16831581f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.38550776f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33929384f ? 
                1.0f : 
                0.0f)) : 
        0.85714287f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_31_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.094228975f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.18799327f ? 
                 (data[21 /* X22 */] <0.11630896f ? 
                     (data[14 /* X15 */] <0.16070005f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (data[8 /* X9 */] <-0.18599908f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14573027f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13690686f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38538983f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (data[15 /* X16 */] <0.05886902f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6748489f ? 
             (data[33 /* X34 */] <-0.6662337f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17728648f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[15 /* X16 */] <0.0387968f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
                 (data[14 /* X15 */] <0.08068611f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.58793044f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21479936f ? 
            0.0f : 
             (data[6 /* X7 */] <0.08271122f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18471661f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_32_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.099201806f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5313726f ? 
                 (data[22 /* X23 */] <0.11323853f ? 
                     (data[10 /* X11 */] <-0.038423564f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.15196948f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[12 /* X13 */] <0.086740255f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.67297006f ? 
             (data[22 /* X23 */] <0.04159783f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.05655061f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.15998296f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34940267f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17395887f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3620468f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (data[18 /* X19 */] <0.17378384f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13822825f ? 
                 (data[12 /* X13 */] <0.10873207f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.11286423f ? 
                        1.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.31253704f ? 
                             (data[16 /* X17 */] <-0.39166427f ? 
                                1.0f : 
                                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.29477265f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16882876f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_33_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
             (data[34 /* X35 */] <-0.6015625f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.06165766f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09673154f ? 
            1.0f : 
             (data[12 /* X13 */] <0.118590966f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
        0.015384615f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.06640625f ? 
             (data[31 /* X32 */] <0.051043477f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (data[7 /* X8 */] <0.06227153f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.03429221f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[18 /* X19 */] <-0.035044793f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.29144984f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16457094f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[32 /* X33 */] <-0.34188595f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X6 */] <0.098232135f ? 
             (data[15 /* X16 */] <0.10657002f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08971138f ? 
        0.028571429f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_34_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[22 /* X23 */] <0.11034979f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15554929f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.094228975f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.265625f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38416937f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X10 */] <-0.07249573f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.28681505f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (data[18 /* X19 */] <0.08796385f ? 
             (data[1 /* X2 */] <0.035608936f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.20985582f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5592676f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[8 /* X9 */] <0.31899035f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[18 /* X19 */] <0.1423165f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.024669647f ? 
                 (data[34 /* X35 */] <-0.1328125f ? 
                     (data[8 /* X9 */] <0.10314809f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.025f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (data[3 /* X4 */] <-0.24683118f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17200583f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17729579f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4947366f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_35_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13741253f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.14402805f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X5 */] <0.11998194f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.09205172f ? 
             (data[31 /* X32 */] <0.16619262f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
         (data[27 /* X28 */] <-0.25980827f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.2883991f ? 
                 (data[30 /* X31 */] <0.12793888f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2557361f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.07494891f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.07301517f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.057191294f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[24 /* X25 */] <-0.44567034f ? 
            1.0f : 
            0.0f) : 
         (data[19 /* X20 */] <-0.07327156f ? 
             (data[30 /* X31 */] <0.040973175f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.014600216f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.11089148f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.28306654f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_36_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06230807f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.55951566f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23803242f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4f ? 
            0.0f : 
             (data[15 /* X16 */] <0.03979472f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[32 /* X33 */] <0.24911162f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25671554f ? 
             (data[10 /* X11 */] <-0.89919066f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.070240356f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.4614372f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12238588f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[32 /* X33 */] <-0.27290517f ? 
             (data[6 /* X7 */] <0.11444365f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.08562475f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06165766f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (data[11 /* X12 */] <-0.58847165f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3109375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_37_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13741253f ? 
             (data[32 /* X33 */] <-0.38476592f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.0021620058f ? 
                 (data[28 /* X29 */] <0.14357999f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.017857144f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38416937f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.16686346f ? 
            0.0f : 
             (data[29 /* X30 */] <0.11260211f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.5328125f ? 
             (data[3 /* X4 */] <-0.28681505f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
             (data[15 /* X16 */] <0.037067953f ? 
                 (data[9 /* X10 */] <-0.27729097f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X7 */] <0.08027026f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08971138f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.6381286f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18698421f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2705716f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_38_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18073948f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16885749f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.33288223f ? 
                 (data[14 /* X15 */] <0.0879601f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10089911f ? 
            0.0f : 
             (data[26 /* X27 */] <0.2808166f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.14914556f ? 
             (data[26 /* X27 */] <0.016066106f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5541189f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22157681f ? 
                 (data[26 /* X27 */] <-0.16956356f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.8407487f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[17 /* X18 */] <-0.52041966f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-2.5814454E-4f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.29291904f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22475582f ? 
                        1.0f : 
                        0.0f) : 
                     (data[19 /* X20 */] <0.0106281815f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13065656f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.16890977f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (data[11 /* X12 */] <-0.5276083f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.47423938f ? 
                1.0f : 
                0.0f)) : 
        0.85714287f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_39_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (data[3 /* X4 */] <-0.24683118f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[24 /* X25 */] <-0.30065706f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[21 /* X22 */] <0.1623244f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25243053f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25796503f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.62633044f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2561383f ? 
            1.0f : 
             (data[4 /* X5 */] <0.15979613f ? 
                 (data[3 /* X4 */] <-0.24683118f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5996094f ? 
            0.0f : 
            1.0f) : 
         (data[19 /* X20 */] <-0.06789337f ? 
             (data[3 /* X4 */] <-0.47423938f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.284181f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_40_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[27 /* X28 */] <-0.14544345f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15189938f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20018955f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17900299f ? 
                 (data[22 /* X23 */] <0.04155414f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
         (data[27 /* X28 */] <-0.34525326f ? 
            1.0f : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (data[26 /* X27 */] <-0.009800321f ? 
             (data[16 /* X17 */] <-0.07793812f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21102217f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.1831768f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.21814804f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08345183f ? 
             (data[25 /* X26 */] <-0.39562634f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.14683785f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14346847f ? 
                         (data[18 /* X19 */] <-0.12658611f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.014600216f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19979793f ? 
            0.0f : 
            1.0f) : 
         (data[8 /* X9 */] <-0.06789672f ? 
             (data[10 /* X11 */] <-0.20134676f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X12 */] <-0.5487241f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_41_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.077831775f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.5288911f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X7 */] <0.092881866f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.045455f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11676119f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.32581294f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.097067736f ? 
             (data[32 /* X33 */] <0.047762286f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.07819784f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[15 /* X16 */] <0.05451874f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.39248514f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17508484f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.089361414f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.04346545f ? 
             (data[16 /* X17 */] <-0.561742f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08829758f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[6 /* X7 */] <0.092881866f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[15 /* X16 */] <0.066788755f ? 
             (data[16 /* X17 */] <-0.28400272f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.25986433f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_42_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09734011f ? 
            1.0f : 
            0.0f) : 
         (data[14 /* X15 */] <0.09205172f ? 
             (data[18 /* X19 */] <0.06507852f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97906137f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.20962825f ? 
             (data[10 /* X11 */] <-0.34028402f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (data[18 /* X19 */] <-0.1652051f ? 
            1.0f : 
             (data[18 /* X19 */] <0.0759972f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21476817f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.17684875f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2939318f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[33 /* X34 */] <-0.7546875f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06065375f ? 
             (data[18 /* X19 */] <0.05935719f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2312637f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_43_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3870732f ? 
             (data[34 /* X35 */] <-0.265625f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.052936517f ? 
                     (data[0 /* X1 */] <-0.08915801f ? 
                         (data[12 /* X13 */] <0.14733249f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2074114f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2067357f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.373228f ? 
            0.0f : 
             (data[22 /* X23 */] <0.15888059f ? 
                 (data[10 /* X11 */] <-0.70341545f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49003515f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.31899035f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15261236f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.10090069f ? 
                    1.0f : 
                    0.0f)) : 
             (data[19 /* X20 */] <0.0063256305f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (data[27 /* X28 */] <-0.12572539f ? 
             (data[5 /* X6 */] <0.095942095f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.026819415f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.008729211f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4453707f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
        0.85714287f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13060956f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_44_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.18430148f ? 
             (data[32 /* X33 */] <-0.116300136f ? 
                 (data[34 /* X35 */] <-0.6015625f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.29874635f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1929677f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23525849f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.0901993f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13773523f ? 
        0.020833334f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.31356034f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21653584f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.3984375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.081876665f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.116300136f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10469277f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.77734375f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.059053853f ? 
                    1.0f : 
                    0.0f))) : 
        0.02631579f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
        0.012658228f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_45_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
             (data[31 /* X32 */] <0.035523377f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.5809195f ? 
             (data[21 /* X22 */] <0.19253084f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5455671f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.18950833f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.21555625f ? 
             (data[6 /* X7 */] <0.13722591f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X1 */] <-0.04253261f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (data[26 /* X27 */] <-0.003714103f ? 
             (data[0 /* X1 */] <0.12543966f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.070819095f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[21 /* X22 */] <0.11800278f ? 
            1.0f : 
             (data[6 /* X7 */] <0.111189045f ? 
                 (data[17 /* X18 */] <-0.14723057f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.008396914f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.079058774f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1716404f ? 
         (data[3 /* X4 */] <-0.24308269f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.04145352f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13940793f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13438539f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_46_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
        0.03846154f : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18406175f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.07083304f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.14727555f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.16091287f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.5790927f ? 
             (data[27 /* X28 */] <-0.26043472f ? 
                 (data[5 /* X6 */] <0.11763002f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21793814f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.043849856f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21235089f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[2 /* X3 */] <-0.24113671f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.4183927f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.71111f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.5890925f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[20 /* X21 */] <0.09184882f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21085589f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
        0.012658228f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_47_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (data[26 /* X27 */] <0.18343711f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.04107858f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15049538f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.017857144f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14752278f ? 
             (data[27 /* X28 */] <-0.3781167f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X2 */] <-0.29803932f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (data[26 /* X27 */] <-0.009800321f ? 
             (data[34 /* X35 */] <0.3984375f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5348326f ? 
                0.0f : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.19921875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[9 /* X10 */] <-0.26177618f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.26583672f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.073143855f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[24 /* X25 */] <-0.41114336f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.0505047f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.64579374f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (data[11 /* X12 */] <-0.4257553f ? 
             (data[34 /* X35 */] <-0.3984375f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <0.2699506f ? 
             (data[25 /* X26 */] <-0.43778884f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_48_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.34158373f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.06640625f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.033312675f ? 
             (data[25 /* X26 */] <-0.25804338f ? 
                 (data[23 /* X24 */] <0.08297845f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12013297f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31744987f ? 
             (data[19 /* X20 */] <-0.28624782f ? 
                 (data[33 /* X34 */] <0.2625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X1 */] <-0.63743436f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16844347f ? 
             (data[18 /* X19 */] <-0.07509412f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.0863089f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[7 /* X8 */] <0.0644568f ? 
             (data[34 /* X35 */] <-0.22265625f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X13 */] <0.09320619f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.64579374f ? 
                     (data[1 /* X2 */] <-0.25975183f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0750023f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
        0.025f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18708196f ? 
            1.0f : 
             (data[7 /* X8 */] <0.076055534f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_49_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07369782f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10906302f ? 
                 (data[8 /* X9 */] <-0.11948166f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15891805f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.15367675f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
        0.030303031f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11001125f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.110259496f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35625f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.40463945f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.27703944f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20131983f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.22305313f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.044427697f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20392439f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.1784958f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.020779755f ? 
                     (data[12 /* X13 */] <0.097662054f ? 
                         (data[10 /* X11 */] <-0.19703229f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.08122945f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X9 */] <-0.010881783f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.09995375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.5133113f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
        0.012658228f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_50_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (data[20 /* X21 */] <0.09757234f ? 
                 (data[30 /* X31 */] <0.1155152f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.0879601f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.089220434f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
        0.015384615f : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19036783f ? 
             (data[0 /* X1 */] <-0.18600892f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-0.18555844f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12793888f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[8 /* X9 */] <0.2674054f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16575068f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[22 /* X23 */] <0.119593754f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3389044f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21801049f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.2359182f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[7 /* X8 */] <0.04848753f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22294462f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07978697f ? 
                 (data[23 /* X24 */] <0.05119986f ? 
                     (data[9 /* X10 */] <-0.5917241f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X12 */] <-0.30527067f ? 
                         (data[24 /* X25 */] <0.70292693f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.40550113f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11253271f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.264372f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.2203383f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.0646249f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_51_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18260746f ? 
             (data[11 /* X12 */] <-0.3077549f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.39673588f ? 
            1.0f : 
             (data[14 /* X15 */] <0.08068611f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[20 /* X21 */] <0.14445066f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.042974565f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.024779635f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.13229953f ? 
                    1.0f : 
                     (data[10 /* X11 */] <-0.5834242f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[13 /* X14 */] <0.13933061f ? 
             (data[31 /* X32 */] <0.11062065f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <-0.49903977f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[13 /* X14 */] <0.09418563f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07327156f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.070318446f ? 
             (data[26 /* X27 */] <0.122574925f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.08212659f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.25167787f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.124138154f ? 
                 (data[11 /* X12 */] <-0.58847165f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.1986827f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_52_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.094228975f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21434435f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.3889691f ? 
            1.0f : 
             (data[14 /* X15 */] <0.07432137f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[10 /* X11 */] <-0.64815634f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16090271f ? 
             (data[22 /* X23 */] <0.025455311f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (data[27 /* X28 */] <-0.17436329f ? 
             (data[17 /* X18 */] <-0.2562255f ? 
                 (data[31 /* X32 */] <0.06305904f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <-0.07509412f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08218205f ? 
                 (data[2 /* X3 */] <-0.18343997f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
        0.046511628f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.41551012f ? 
             (data[13 /* X14 */] <0.10778042f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15969281f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09779844f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[10 /* X11 */] <-0.46974826f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13060956f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_53_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[35 /* X36 */] <-0.42403698f ? 
             (data[3 /* X4 */] <-0.28681505f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.058052555f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.50892097f ? 
                1.0f : 
                0.0f) : 
             (data[14 /* X15 */] <0.14069657f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2598082f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.016923998f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16882876f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.081897765f ? 
                1.0f : 
                0.0f)) : 
         (data[31 /* X32 */] <0.05179445f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.008260717f ? 
             (data[11 /* X12 */] <-0.2953338f ? 
                 (data[2 /* X3 */] <-0.2645273f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.06497293f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.045048587f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.025f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[13 /* X14 */] <0.08649046f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15417705f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_54_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
                 (data[29 /* X30 */] <0.08572455f ? 
                     (data[15 /* X16 */] <0.068127304f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.38121998f ? 
             (data[32 /* X33 */] <-0.3400216f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <0.0f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.10036565f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13936125f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.019121297f ? 
            0.0f : 
             (data[7 /* X8 */] <0.07437456f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21235089f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
            0.0f : 
             (data[28 /* X29 */] <0.096836485f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.14573027f ? 
                     (data[15 /* X16 */] <0.05920366f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[24 /* X25 */] <-0.07968443f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4786187f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X3 */] <0.10816251f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12446768f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_55_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07369782f ? 
         (data[14 /* X15 */] <0.13978732f ? 
             (data[33 /* X34 */] <-0.2f ? 
                 (data[15 /* X16 */] <0.03555599f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[28 /* X29 */] <0.08669247f ? 
                 (data[33 /* X34 */] <-0.04375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2507304f ? 
            0.0f : 
             (data[23 /* X24 */] <0.09250491f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2694179f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.04375f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16744469f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[23 /* X24 */] <0.09840394f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.250533f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.625f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24113671f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.13869217f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07482004f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X7 */] <0.08759313f ? 
             (data[17 /* X18 */] <-0.11642766f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.5544886f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7500031f ? 
                    0.0f : 
                     (data[18 /* X19 */] <0.3883338f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19653136f ? 
            0.0f : 
             (data[30 /* X31 */] <0.09532674f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.41706052f ? 
            1.0f : 
             (data[28 /* X29 */] <0.23885266f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_56_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08430937f ? 
         (data[33 /* X34 */] <-0.4f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10469277f ? 
                    1.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11471743f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
        0.7777778f : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.38589674f ? 
             (data[1 /* X2 */] <-0.7465501f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.15206163f ? 
                     (data[34 /* X35 */] <-0.390625f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.255262f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[7 /* X8 */] <0.102951154f ? 
            1.0f : 
             (data[29 /* X30 */] <0.1607317f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1041638f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.178125f ? 
            1.0f : 
            0.0f) : 
         (data[23 /* X24 */] <0.045478575f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15822157f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <-0.42035055f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.75f ? 
                     (data[6 /* X7 */] <0.12013922f ? 
                         (data[21 /* X22 */] <0.11743817f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.11171821f ? 
                                 (data[10 /* X11 */] <-0.1943999f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.27709427f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14036255f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_57_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.035025872f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.1210651f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0031963254f ? 
             (data[35 /* X36 */] <-0.6820983f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106498994f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.5162963f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
         (data[31 /* X32 */] <0.015497438f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.0901993f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.07428396f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.14958535f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.121650346f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
             (data[13 /* X14 */] <0.10162429f ? 
                 (data[5 /* X6 */] <0.09479708f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.96993554f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.023255814f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
        0.02739726f : 
         (data[31 /* X32 */] <0.123637505f ? 
             (data[13 /* X14 */] <0.12727484f ? 
                 (data[4 /* X5 */] <0.16616641f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_58_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[34 /* X35 */] <-0.13476562f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11136482f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10146244f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.094112076f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13473454f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.14696673f ? 
             (data[11 /* X12 */] <-0.2829127f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25479794f ? 
             (data[7 /* X8 */] <0.051513284f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[22 /* X23 */] <0.097639345f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.18602818f ? 
                 (data[20 /* X21 */] <0.14608596f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05864593f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10766259f ? 
                 (data[15 /* X16 */] <0.037106972f ? 
                     (data[32 /* X33 */] <-0.26917648f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.10947681f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (data[11 /* X12 */] <-0.47295547f ? 
            1.0f : 
            0.0f) : 
        0.7058824f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_59_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.09121724f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.13169411f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.18514185f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[15 /* X16 */] <0.039906267f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.05705126f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23093955f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.093559705f ? 
            0.0f : 
             (data[23 /* X24 */] <0.12446768f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1568675f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08920942f ? 
             (data[8 /* X9 */] <0.2714779f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18564509f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.24341747f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19755737f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.20544976f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07069285f ? 
             (data[3 /* X4 */] <-0.2693221f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.067588806f ? 
                     (data[32 /* X33 */] <-0.3884946f ? 
                        1.0f : 
                        0.0f) : 
                     (data[17 /* X18 */] <-0.23726985f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.059984475f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
        0.013333334f : 
         (data[29 /* X30 */] <0.14166738f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.05190987f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_60_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.094228975f ? 
             (data[32 /* X33 */] <-0.38476592f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1906567f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2067357f ? 
             (data[25 /* X26 */] <-0.39562634f ? 
                 (data[16 /* X17 */] <0.18960777f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[22 /* X23 */] <0.15916947f ? 
             (data[22 /* X23 */] <0.025491985f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
        0.027027028f : 
         (data[26 /* X27 */] <0.089100726f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.6569596f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[15 /* X16 */] <0.05886902f ? 
             (data[32 /* X33 */] <0.021661445f ? 
                 (data[22 /* X23 */] <0.11323853f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.009153437f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[16 /* X17 */] <-0.23323318f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13060956f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_61_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09468054f ? 
         (data[13 /* X14 */] <0.10111128f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.1328125f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.10239531f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22306623f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.2557361f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.094228975f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (data[26 /* X27 */] <0.022152325f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.55586857f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24113671f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16615443f ? 
             (data[35 /* X36 */] <-0.4053369f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7109375f ? 
             (data[4 /* X5 */] <0.10087112f ? 
                 (data[10 /* X11 */] <-0.23608108f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.060906984f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21248874f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.097017616f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.55493766f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_62_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14112616f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.060555797f ? 
            1.0f : 
             (data[23 /* X24 */] <0.081914626f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[18 /* X19 */] <0.07795152f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22298363f ? 
             (data[8 /* X9 */] <-0.15749162f ? 
                 (data[23 /* X24 */] <0.14878759f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11356346f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.081876665f ? 
             (data[34 /* X35 */] <-6.9671875E-4f ? 
                 (data[23 /* X24 */] <0.047310602f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17689624f ? 
                    1.0f : 
                    0.0f)) : 
             (data[24 /* X25 */] <-0.36971098f ? 
                 (data[10 /* X11 */] <-0.26134238f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18723343f ? 
            0.0f : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_63_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.090213336f ? 
            1.0f : 
            0.0f) : 
         (data[25 /* X26 */] <-0.5809195f ? 
             (data[2 /* X3 */] <-0.07428396f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23707698f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11695939f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.170215f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[32 /* X33 */] <0.13538653f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
        0.049382716f : 
        0.8181818f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_05_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.085565224f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.07042709f ? 
                 (data[18 /* X19 */] <0.09654585f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.008396914f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11173813f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X9 */] <-0.13305664f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.25477657f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1582336f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10906302f ? 
            0.0f : 
             (data[27 /* X28 */] <0.024131967f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_64_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[14 /* X15 */] <0.1006896f ? 
             (data[13 /* X14 */] <0.1067544f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08909545f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.06302706f ? 
                 (data[3 /* X4 */] <-0.106887676f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.86248136f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08909545f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38457617f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.3077549f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
             (data[6 /* X7 */] <0.072133735f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.58794916f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.023255814f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13680793f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_65_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.090213336f ? 
            1.0f : 
             (data[28 /* X29 */] <0.08669247f ? 
                1.0f : 
                0.0f)) : 
        0.017857144f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11001125f ? 
         (data[27 /* X28 */] <-0.337366f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X11 */] <-0.21555625f ? 
            1.0f : 
             (data[26 /* X27 */] <0.18648022f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.116149634f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[13 /* X14 */] <0.123683766f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5565526f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07102749f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20233423f ? 
                 (data[2 /* X3 */] <-0.23957734f ? 
                     (data[3 /* X4 */] <-0.10188969f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.011886875f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4802767f ? 
            0.0f : 
            1.0f) : 
         (data[22 /* X23 */] <0.12363799f ? 
             (data[28 /* X29 */] <0.24595349f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_66_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[34 /* X35 */] <-0.24414062f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11068364f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.024182135f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.35442263f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[28 /* X29 */] <0.07096925f ? 
             (data[28 /* X29 */] <0.050970484f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.36234224f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.14281438f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.27595544f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.15261236f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.15024073f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[14 /* X15 */] <0.14524281f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[7 /* X8 */] <0.06916353f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.081876665f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34749782f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1868698f ? 
                 (data[14 /* X15 */] <0.095234096f ? 
                     (data[34 /* X35 */] <0.26562703f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.20573854f ? 
                    1.0f : 
                    0.0f))) : 
        0.025f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[24 /* X25 */] <-0.010630483f ? 
            0.0f : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_67_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (data[20 /* X21 */] <0.107111536f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.20392439f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
                 (data[29 /* X30 */] <0.06572264f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.48750094f ? 
                         (data[0 /* X1 */] <0.2231695f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22948578f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15808691f ? 
                0.0f : 
                1.0f)) : 
         (data[15 /* X16 */] <0.07627013f ? 
             (data[29 /* X30 */] <0.08072407f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3091593f ? 
            0.0f : 
            1.0f) : 
         (data[32 /* X33 */] <-0.7501777f ? 
             (data[23 /* X24 */] <0.051063664f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.08083533f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.058757473f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
                 (data[14 /* X15 */] <0.095234096f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.59375f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.8415306f ? 
            1.0f : 
             (data[7 /* X8 */] <0.033358745f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.12582135f ? 
                     (data[16 /* X17 */] <-0.37060958f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[6 /* X7 */] <0.060742605f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_68_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (data[35 /* X36 */] <-0.4053369f ? 
                1.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.26864418f ? 
                     (data[2 /* X3 */] <-0.29301283f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[32 /* X33 */] <0.047762286f ? 
                1.0f : 
                0.0f)) : 
        0.044444446f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.41691807f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07936608f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.29687634f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.7109375f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.05262778f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.17400993f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.421875f ? 
             (data[35 /* X36 */] <-0.31931645f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.31764948f ? 
                1.0f : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.5032153f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.19236857f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.45680803f ? 
                1.0f : 
                0.0f)) : 
        0.9230769f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_69_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.10833277f ? 
         (data[35 /* X36 */] <-0.2127259f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8002697f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.0832553f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.26562184f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
             (data[12 /* X13 */] <0.0965589f ? 
                 (data[3 /* X4 */] <-0.056907855f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[20 /* X21 */] <0.1738859f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[35 /* X36 */] <-0.5960779f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.57775944f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.18240078f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16843493f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[33 /* X34 */] <-0.5328125f ? 
            1.0f : 
             (data[18 /* X19 */] <-0.17746769f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.59961134f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.11842623f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.058175478f ? 
             (data[18 /* X19 */] <0.11084918f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.29527733f ? 
             (data[2 /* X3 */] <-0.22086488f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.10166718f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
            1.0f : 
            0.0f) : 
         (data[18 /* X19 */] <0.1508985f ? 
             (data[25 /* X26 */] <-0.6153152f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_70_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11068364f ? 
             (data[35 /* X36 */] <-0.809259f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.03502273f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[15 /* X16 */] <0.039906267f ? 
             (data[26 /* X27 */] <0.09518695f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.57129586f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.086643875f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.7681188f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (data[3 /* X4 */] <-0.10563818f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13755344f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13208559f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[2 /* X3 */] <-0.24113671f ? 
             (data[35 /* X36 */] <-0.4053369f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.04651123f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05987293f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (data[22 /* X23 */] <0.048819672f ? 
            1.0f : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_71_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09673154f ? 
             (data[29 /* X30 */] <0.08572455f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2344892f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.5809195f ? 
             (data[31 /* X32 */] <0.13114724f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
         (data[34 /* X35 */] <-0.6660156f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13335493f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.3781167f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[30 /* X31 */] <0.11823288f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.66875f ? 
                1.0f : 
                 (data[26 /* X27 */] <0.037367873f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2276191f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[9 /* X10 */] <-0.19144246f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.073143855f ? 
                 (data[29 /* X30 */] <0.086057335f ? 
                    1.0f : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.08319566f ? 
                    0.0f : 
                    1.0f)) : 
             (data[33 /* X34 */] <-0.734375f ? 
                 (data[35 /* X36 */] <0.25664657f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0337656f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.0925973f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.035546735f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3974608f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.11861663f ? 
                0.0f : 
                1.0f)) : 
        0.85714287f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_72_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
            1.0f : 
             (data[14 /* X15 */] <0.12213279f ? 
                1.0f : 
                0.0f)) : 
        0.017857144f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24753335f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13894668f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2177867f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X3 */] <-0.039977785f ? 
                 (data[2 /* X3 */] <-0.29696098f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (data[17 /* X18 */] <-0.41971785f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.25922468f ? 
                0.0f : 
                1.0f)) : 
         (data[18 /* X19 */] <-0.07509412f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20131983f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34940267f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[14 /* X15 */] <0.0897786f ? 
             (data[14 /* X15 */] <0.08568108f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X3 */] <-0.5420954f ? 
                 (data[19 /* X20 */] <-0.11414579f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.07968443f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.21640672f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (data[14 /* X15 */] <0.08568698f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.41581842f ? 
            1.0f : 
             (data[14 /* X15 */] <0.12373387f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_73_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
        0.03846154f : 
         (data[27 /* X28 */] <-0.34525326f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.0021620058f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16062057f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3398253f ? 
             (data[0 /* X1 */] <-0.046032034f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.041177776f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.13492715f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20157342f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34940267f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.037519123f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.33882776f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[3 /* X4 */] <-0.13812506f ? 
            1.0f : 
             (data[23 /* X24 */] <0.04680836f ? 
                 (data[13 /* X14 */] <0.06744344f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.25664657f ? 
                    0.0f : 
                    1.0f))) : 
        0.023255814f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21704304f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <0.07539895f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_74_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[25 /* X26 */] <-0.39673588f ? 
             (data[1 /* X2 */] <-0.3582054f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.052521873f ? 
                 (data[34 /* X35 */] <-0.21875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.24797744f ? 
             (data[22 /* X23 */] <0.18430148f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8174337f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.13941966f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13868053f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.100329f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (data[18 /* X19 */] <0.25531283f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.67659867f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.14007226f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.07472653f ? 
                     (data[22 /* X23 */] <0.15021437f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35990095f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.62164485f ? 
                 (data[4 /* X5 */] <0.12582135f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14346847f ? 
                         (data[34 /* X35 */] <-0.46875f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X7 */] <0.08027026f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24679725f ? 
            0.0f : 
             (data[1 /* X2 */] <1.0420233f ? 
                1.0f : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.33988655f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_75_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09468054f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10863639f ? 
             (data[32 /* X33 */] <-0.116300136f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.34040043f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[27 /* X28 */] <-0.3781167f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.060739413f ? 
             (data[3 /* X4 */] <-0.029418953f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18860352f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.25228056f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19626907f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.32713532f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6640625f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14174704f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24113671f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.048161387f ? 
             (data[3 /* X4 */] <-0.16374855f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.042553052f ? 
                    1.0f : 
                     (data[33 /* X34 */] <-0.2f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.388847f ? 
             (data[33 /* X34 */] <-0.6875f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28534982f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[34 /* X35 */] <0.33203125f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05877927f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33429587f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21373986f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22823815f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_76_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.11443579f ? 
             (data[13 /* X14 */] <0.10111128f ? 
                 (data[6 /* X7 */] <0.11363f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06956747f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.14631698f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13551445f ? 
            0.0f : 
             (data[14 /* X15 */] <0.1597908f ? 
                1.0f : 
                0.0f)) : 
         (data[13 /* X14 */] <0.1298399f ? 
             (data[10 /* X11 */] <-0.21455626f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.01530533f ? 
        0.7777778f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16985478f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20392439f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
                 (data[26 /* X27 */] <-0.12087381f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21370922f ? 
                0.0f : 
                1.0f)) : 
         (data[13 /* X14 */] <0.08649046f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[28 /* X29 */] <0.15034616f ? 
            0.0f : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_77_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09209665f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15403385f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23875242f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[6 /* X7 */] <0.090440914f ? 
             (data[9 /* X10 */] <-0.10766259f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23093955f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15666862f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1929677f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.053691242f ? 
                    0.0f : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.421875f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13773523f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.13111293f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.10205739f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.061965797f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[17 /* X18 */] <-0.17210984f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.13545418f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.14433356f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1212762f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.009552544f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.114625834f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
        0.012658228f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_78_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (data[10 /* X11 */] <-0.21555625f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08642078f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.1794772f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16581357f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.0879601f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23093955f ? 
         (data[34 /* X35 */] <-0.6660156f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07740032f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.14790338f ? 
                    0.0f : 
                    1.0f)) : 
             (data[27 /* X28 */] <-0.37022948f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[34 /* X35 */] <0.13476562f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.116091914f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.59961134f ? 
             (data[22 /* X23 */] <0.097639345f ? 
                 (data[29 /* X30 */] <0.15438162f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[9 /* X10 */] <-0.20592293f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.04691189f ? 
                 (data[18 /* X19 */] <0.20525116f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.04654822f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.023191407f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.2706911f ? 
                    1.0f : 
                    0.0f))) : 
         (data[18 /* X19 */] <0.32253847f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.32773384f ? 
             (data[3 /* X4 */] <-0.33679485f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10816218f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_79_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[15 /* X16 */] <0.032878894f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09734011f ? 
             (data[8 /* X9 */] <-0.2688065f ? 
                 (data[15 /* X16 */] <0.04042485f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[22 /* X23 */] <0.1698578f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.017553134f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11398583f ? 
                 (data[27 /* X28 */] <-0.25206652f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.092221156f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[8 /* X9 */] <0.06785313f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[17 /* X18 */] <-0.51923496f ? 
             (data[27 /* X28 */] <-0.1677906f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
             (data[8 /* X9 */] <-0.2769515f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.3835218f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20229816f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16329734f ? 
                0.0f : 
                 (data[19 /* X20 */] <-0.24765092f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4642607f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_80_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[34 /* X35 */] <-0.24414062f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.22329146f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08653233f ? 
             (data[33 /* X34 */] <-0.4220495f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.17799631f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[23 /* X24 */] <0.08457419f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
        0.028985508f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.265625f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[34 /* X35 */] <0.13476562f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.43196586f ? 
                0.0f : 
                1.0f)) : 
        0.04f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[19 /* X20 */] <-0.08833049f ? 
             (data[11 /* X12 */] <-0.5189135f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.10614509f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.421875f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.53295743f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.009506454f ? 
             (data[11 /* X12 */] <-0.5139451f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <-0.4096079f ? 
                1.0f : 
                0.0f)) : 
         (data[15 /* X16 */] <0.08965561f ? 
            0.0f : 
             (data[29 /* X30 */] <0.16260688f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_81_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06230807f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.18240078f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.26843816f ? 
                    0.0f : 
                    1.0f))) : 
         (data[14 /* X15 */] <0.09387022f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1424404f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.012132851f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2598082f ? 
                 (data[0 /* X1 */] <-0.23850025f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.13714626f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13431506f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13773523f ? 
         (data[26 /* X27 */] <0.069320515f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.26541653f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.18875895f ? 
             (data[32 /* X33 */] <-0.6383169f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.13643847f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64382666f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
        0.046511628f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.0808508f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39839458f ? 
                 (data[27 /* X28 */] <-0.14845458f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.088074096f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.51097244f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (data[11 /* X12 */] <-0.51270294f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.37979725f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_82_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1387072f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19990067f ? 
                 (data[31 /* X32 */] <0.035824805f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[28 /* X29 */] <0.13741253f ? 
             (data[6 /* X7 */] <0.13559861f ? 
                 (data[3 /* X4 */] <-0.12387044f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (data[10 /* X11 */] <-0.6860483f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.25980827f ? 
                 (data[27 /* X28 */] <-0.27204436f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.41808772f ? 
             (data[21 /* X22 */] <0.12647188f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.09001949f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.31335258f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.49003515f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08377155f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.13478495f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08308498f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (data[34 /* X35 */] <-0.04296875f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19632936f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.058045734f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.095117025f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.02631579f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20156455f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20081262f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_83_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15068115f ? 
            1.0f : 
             (data[29 /* X30 */] <0.09697562f ? 
                1.0f : 
                0.0f)) : 
        0.017857144f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11001125f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.24747398f ? 
            0.0f : 
             (data[18 /* X19 */] <0.11084918f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.07445839f ? 
             (data[20 /* X21 */] <0.07849395f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17011128f ? 
            0.0f : 
             (data[18 /* X19 */] <0.23099716f ? 
                1.0f : 
                0.0f)) : 
         (data[30 /* X31 */] <0.12095056f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[24 /* X25 */] <-0.4824991f ? 
            1.0f : 
             (data[28 /* X29 */] <0.06437564f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.097112335f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.27818695f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.28665146f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.12666593f ? 
             (data[27 /* X28 */] <-0.18257558f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4473865f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0389894f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.06920024f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_84_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.004112242f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.1430587f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0234375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X5 */] <0.12263622f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.095234096f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.93641967f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42003682f ? 
             (data[34 /* X35 */] <-0.734375f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07794332f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26278222f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.30668566f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (data[18 /* X19 */] <-0.035044793f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17344585f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.20544976f ? 
                    1.0f : 
                    0.0f))) : 
         (data[17 /* X18 */] <-0.18514185f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6398547f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[33 /* X34 */] <-0.84375f ? 
             (data[16 /* X17 */] <-0.11974833f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X7 */] <0.08352487f ? 
                 (data[18 /* X19 */] <0.17489642f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.08088584f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.020614518f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06857349f ? 
                     (data[26 /* X27 */] <0.08605762f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.242654f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.17649075f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.3328125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_85_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1387072f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
             (data[25 /* X26 */] <-0.47995135f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.10853729f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19856656f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26278222f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.06690382f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.62109375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11169223f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.17051788f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.019311372f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13125f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[13 /* X14 */] <0.123683766f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21141042f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.38231185f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13245952f ? 
                 (data[1 /* X2 */] <-0.6426269f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X6 */] <0.09479708f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1422779f ? 
                0.0f : 
                1.0f)) : 
         (data[30 /* X31 */] <0.07824419f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09353769f ? 
         (data[22 /* X23 */] <0.06470773f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.41926157f ? 
            1.0f : 
             (data[4 /* X5 */] <0.15178496f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_86_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.05880353f ? 
             (data[32 /* X33 */] <-0.31764948f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <0.24911162f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10694518f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.017857144f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2453125f ? 
             (data[10 /* X11 */] <-0.68762714f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.1986827f ? 
                0.0f : 
                1.0f)) : 
         (data[24 /* X25 */] <-0.015234079f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (data[18 /* X19 */] <0.07795152f ? 
             (data[32 /* X33 */] <-0.4295102f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X11 */] <-0.31344387f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[33 /* X34 */] <-0.24375f ? 
             (data[10 /* X11 */] <-0.27713072f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.26074186f ? 
                     (data[16 /* X17 */] <-0.08391101f ? 
                        1.0f : 
                        0.0f) : 
                     (data[31 /* X32 */] <0.07907979f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13774928f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.016532108f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[29 /* X30 */] <0.13291655f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11136482f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.11257145f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_87_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.044228274f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.066062935f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.085106105f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.069691494f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34478283f ? 
                 (data[0 /* X1 */] <-0.37847713f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23093955f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
             (data[35 /* X36 */] <-0.9551198f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09154739f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.053421557f ? 
        0.0f : 
         (data[26 /* X27 */] <0.014544552f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.40250733f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.45061094f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.05190536f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[5 /* X6 */] <0.095942095f ? 
             (data[11 /* X12 */] <-0.36489195f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <0.16520184f ? 
             (data[25 /* X26 */] <-0.28467235f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.060542203f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.24679725f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.14051643f ? 
                0.0f : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.33988655f ? 
             (data[1 /* X2 */] <0.0653153f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_88_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.09937918f ? 
             (data[27 /* X28 */] <-0.14675799f ? 
                1.0f : 
                 (data[34 /* X35 */] <0.0f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.2890625f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.0060268864f ? 
                 (data[33 /* X34 */] <0.04375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
         (data[5 /* X6 */] <0.031248614f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07445839f ? 
             (data[24 /* X25 */] <-0.0060268864f ? 
                 (data[5 /* X6 */] <0.15433799f ? 
                     (data[0 /* X1 */] <0.11144196f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08377155f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20156455f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[2 /* X3 */] <-0.3081897f ? 
             (data[27 /* X28 */] <-0.08891831f ? 
                 (data[33 /* X34 */] <-0.33125f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[18 /* X19 */] <0.20811182f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.13187759f ? 
                    1.0f : 
                    0.0f))) : 
         (data[8 /* X9 */] <0.13437055f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.079947166f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
        0.012658228f : 
         (data[27 /* X28 */] <-0.03370771f ? 
             (data[10 /* X11 */] <-0.02274386f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_89_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (data[31 /* X32 */] <0.043283425f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2938559f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.065625f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20105617f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[20 /* X21 */] <0.15780555f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8174337f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.067832455f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12238588f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.170965f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <-0.421875f ? 
                 (data[27 /* X28 */] <-0.12046723f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.098232135f ? 
             (data[6 /* X7 */] <0.10305252f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2881427f ? 
         (data[11 /* X12 */] <-0.51270294f ? 
            1.0f : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_90_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.10833277f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.41319185f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20578873f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3154189f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.061557095f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.35625f ? 
             (data[9 /* X10 */] <-0.52552766f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.09157627f ? 
                     (data[13 /* X14 */] <0.12115759f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.552637f ? 
        0.71428573f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.178125f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.1831768f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.060931478f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.1558286f ? 
                1.0f : 
                0.0f)) : 
        0.04f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07456437f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20951742f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.040697195f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15511565f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24249853f ? 
             (data[11 /* X12 */] <-0.65554553f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[31 /* X32 */] <0.123637505f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_91_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[14 /* X15 */] <0.09387022f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12342251f ? 
                1.0f : 
                0.0f) : 
             (data[16 /* X17 */] <-0.56472844f ? 
                 (data[20 /* X21 */] <0.10816231f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09673154f ? 
             (data[20 /* X21 */] <0.04524304f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X13 */] <0.118590966f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20434402f ? 
            0.0f : 
             (data[23 /* X24 */] <0.07074445f ? 
                0.0f : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.34175655f ? 
            1.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-2.905869E-4f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (data[15 /* X16 */] <0.05864593f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.46288517f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.058757473f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.0982388f ? 
                 (data[34 /* X35 */] <-0.06944688f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[6 /* X7 */] <0.049758304f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.30533528f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.08404228f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_92_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[1 /* X2 */] <-0.5058858f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.46484375f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15959455f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22306623f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.073935926f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5541189f ? 
             (data[33 /* X34 */] <-0.975f ? 
                 (data[35 /* X36 */] <0.084605664f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22127783f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.1176127f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[7 /* X8 */] <0.06916353f ? 
             (data[35 /* X36 */] <-0.27817622f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.10123814f ? 
                 (data[35 /* X36 */] <-0.22872587f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.025f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1962157f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.27817622f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_93_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.107045785f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.069691494f ? 
            0.0f : 
             (data[20 /* X21 */] <0.12537228f ? 
                 (data[28 /* X29 */] <0.07046205f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.052044775f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
        0.015384615f : 
         (data[32 /* X33 */] <-0.023082852f ? 
            0.0f : 
             (data[5 /* X6 */] <0.10968231f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (data[4 /* X5 */] <0.1186548f ? 
             (data[33 /* X34 */] <-0.6f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.107145965f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.1792468f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[35 /* X36 */] <-0.17158568f ? 
            0.0f : 
             (data[5 /* X6 */] <0.06809341f ? 
                0.0f : 
                1.0f)) : 
        0.023255814f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.78585935f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_94_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077754766f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20392439f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19123445f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.19022141f ? 
                     (data[1 /* X2 */] <-0.50041616f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <0.04440512f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18999012f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.19671044f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14565508f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.49287897f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.7328125f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.21594475f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20392439f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.48324767f ? 
                 (data[17 /* X18 */] <-0.5784713f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X10 */] <-0.26088974f ? 
                1.0f : 
                0.0f)) : 
        0.02631579f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.014600216f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.19332437f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.12455237f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
             (data[0 /* X1 */] <-0.109021634f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_95_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2007673f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14887981f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2750434f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21407616f ? 
         (data[10 /* X11 */] <-0.5518476f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1487649f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.085106105f ? 
                    0.0f : 
                    1.0f))) : 
         (data[21 /* X22 */] <0.14510389f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[0 /* X1 */] <0.08869572f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29124895f ? 
             (data[33 /* X34 */] <-0.84375f ? 
                 (data[6 /* X7 */] <0.094102345f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[16 /* X17 */] <0.06839762f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12572539f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.099841475f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1972227f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2664819f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05987293f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15511565f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.36591187f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14373513f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.3077549f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_96_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07659549f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.02905431f ? 
                0.0f : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.7752727f ? 
            1.0f : 
             (data[12 /* X13 */] <0.08937453f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.14675799f ? 
                     (data[7 /* X8 */] <0.05823719f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28315243f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
             (data[20 /* X21 */] <0.011447034f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3570003f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.065625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <4.552246E-4f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20277603f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.049140587f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.425f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[12 /* X13 */] <0.08937453f ? 
                0.0f : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.3168536f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17824668f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[14 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2117469f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_97_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07482428f ? 
             (data[24 /* X25 */] <-0.25922468f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.12950644f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.15192601f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.021875f ? 
             (data[14 /* X15 */] <0.14648415f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.45731694f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08563802f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[8 /* X9 */] <-0.044819247f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.111356035f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.11992131f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.1487963f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[33 /* X34 */] <-0.2671875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
             (data[9 /* X10 */] <-0.34969333f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1569879f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2671875f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.015833957f ? 
         (data[23 /* X24 */] <0.046276446f ? 
            1.0f : 
             (data[7 /* X8 */] <0.049159918f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22348972f ? 
                    1.0f : 
                    0.0f) : 
                 (data[32 /* X33 */] <-0.25426173f ? 
                     (data[3 /* X4 */] <-0.12188163f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[17 /* X18 */] <-0.51923496f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.103644654f ? 
         (data[31 /* X32 */] <0.16118614f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3550962f ? 
             (data[11 /* X12 */] <-0.48910287f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_98_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[30 /* X31 */] <0.10619745f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15970258f ? 
                1.0f : 
                0.0f) : 
             (data[30 /* X31 */] <0.11748225f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.09009406f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X7 */] <0.072133735f ? 
            1.0f : 
             (data[6 /* X7 */] <0.09025021f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.11554952f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[32 /* X33 */] <0.24911162f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3040246f ? 
             (data[34 /* X35 */] <-0.88671875f ? 
                 (data[0 /* X1 */] <0.09744427f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.12116657f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16006157f ? 
             (data[3 /* X4 */] <-0.38927367f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <0.20690265f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[32 /* X33 */] <-0.27290517f ? 
             (data[24 /* X25 */] <-0.33288223f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <0.20811182f ? 
             (data[17 /* X18 */] <-0.35100368f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.3219972f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16210397f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.01373036f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.2793961f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.13291797f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33304638f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_99_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07369782f ? 
         (data[21 /* X22 */] <0.11913199f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.03863576f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <-0.035044793f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.048073683f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.23486418f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.004429043f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11001125f ? 
         (data[20 /* X21 */] <0.042245008f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.34130964f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21733348f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.0625f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[13 /* X14 */] <0.10906295f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15035862f ? 
                 (data[21 /* X22 */] <0.17615725f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2538783f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13773523f ? 
        0.020833334f : 
         (data[26 /* X27 */] <0.020630771f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17372811f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (data[2 /* X3 */] <-0.24113671f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20012243f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.65151507f ? 
                     (data[34 /* X35 */] <-0.59375f ? 
                        0.0f : 
                        1.0f) : 
                     (data[33 /* X34 */] <-0.175f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.062627554f ? 
                 (data[9 /* X10 */] <-0.48829213f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X10 */] <-0.33521286f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
        0.012658228f : 
         (data[13 /* X14 */] <0.09392912f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_100_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[13 /* X14 */] <0.07597373f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.015562886f ? 
            1.0f : 
             (data[22 /* X23 */] <0.108616546f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
        0.01724138f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.015562886f ? 
            0.0f : 
             (data[22 /* X23 */] <0.108616546f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07389644f ? 
            1.0f : 
            0.0f) : 
         (data[33 /* X34 */] <-0.8f ? 
             (data[17 /* X18 */] <-0.33678696f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20198564f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[13 /* X14 */] <0.09162057f ? 
             (data[7 /* X8 */] <0.055883825f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16885898f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13322908f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.14454879f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16702074f ? 
            0.0f : 
            1.0f) : 
        0.8f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_101_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[34 /* X35 */] <-0.24414062f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10206369f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24072526f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (data[10 /* X11 */] <-0.6860483f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.03009887f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18587804f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07257136f ? 
            0.0f : 
             (data[20 /* X21 */] <0.16943417f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16575068f ? 
                     (data[30 /* X31 */] <0.13104479f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[31 /* X32 */] <0.070318446f ? 
            1.0f : 
             (data[13 /* X14 */] <0.09341611f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.112409286f ? 
                    1.0f : 
                    0.0f))) : 
        0.025f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18471661f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_102_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[15 /* X16 */] <0.04894146f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.099985614f ? 
                 (data[32 /* X33 */] <-0.45561105f ? 
                    0.0f : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.12508471f ? 
                     (data[1 /* X2 */] <-0.3473996f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.68163985f ? 
                 (data[30 /* X31 */] <0.09843265f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.16987339f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.13098873f ? 
                            0.0f : 
                             (data[33 /* X34 */] <0.12f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.096115164f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[14 /* X15 */] <0.103417344f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X2 */] <-0.6480965f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11398583f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3179408f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.2980605f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.081876665f ? 
         (data[3 /* X4 */] <-0.08814524f ? 
             (data[11 /* X12 */] <-0.4915871f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.250533f ? 
                1.0f : 
                0.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33429587f ? 
            1.0f : 
            0.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_103_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09468054f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
             (data[35 /* X36 */] <-0.36045665f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.265625f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.12572539f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[23 /* X24 */] <0.009840393f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X13 */] <0.120985754f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11228958f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.40900242f ? 
             (data[8 /* X9 */] <0.32577783f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.17578125f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.05190987f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
             (data[18 /* X19 */] <0.11084918f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.1328125f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.34179285f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
        0.013333334f : 
         (data[35 /* X36 */] <-0.38289678f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_104_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10147944f ? 
             (data[14 /* X15 */] <0.09432485f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
            0.0f : 
             (data[4 /* X5 */] <0.12703614f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
         (data[19 /* X20 */] <-0.19804554f ? 
             (data[33 /* X34 */] <-0.35625f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24727598f ? 
             (data[27 /* X28 */] <-0.35182595f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08377155f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.106985494f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16615555f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.06572264f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.8824672f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19759761f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.030955255f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (data[3 /* X4 */] <-0.47548887f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X5 */] <0.13458048f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_105_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[22 /* X23 */] <0.11034979f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.24670999f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.46484375f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043051787f ? 
             (data[29 /* X30 */] <0.1159946f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06857349f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.14827152f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[32 /* X33 */] <0.18199518f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.046710547f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
         (data[19 /* X20 */] <-0.26473507f ? 
             (data[28 /* X29 */] <0.13690534f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.20934631f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.009552544f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.02135987f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19841526f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.021967703f ? 
             (data[23 /* X24 */] <0.038829662f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (data[3 /* X4 */] <-0.47298986f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.33304638f ? 
            1.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.91929597f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_106_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2039454f ? 
            0.0f : 
            1.0f) : 
         (data[32 /* X33 */] <-0.20392439f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11068364f ? 
                 (data[0 /* X1 */] <0.0064592995f ? 
                     (data[17 /* X18 */] <-0.18040293f ? 
                        1.0f : 
                        0.0f) : 
                     (data[27 /* X28 */] <-0.34656778f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3723714f ? 
             (data[10 /* X11 */] <-0.68762714f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1108179f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.29144984f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[14 /* X15 */] <0.13524106f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6398547f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (data[4 /* X5 */] <0.11892023f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.024669647f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.13377492f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23071225f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.11842623f ? 
         (data[4 /* X5 */] <0.124759644f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.21832302f ? 
                 (data[17 /* X18 */] <-0.47421533f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[32 /* X33 */] <-0.27290517f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.12470979f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27915236f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14516538f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_107_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16610244f ? 
            1.0f : 
             (data[30 /* X31 */] <0.10619745f ? 
                1.0f : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.39272898f ? 
             (data[15 /* X16 */] <0.03979472f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2744301f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15888059f ? 
             (data[30 /* X31 */] <0.047961492f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16831574f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.055634197f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.097146444f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[28 /* X29 */] <0.088721275f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10337824f ? 
             (data[20 /* X21 */] <0.09266647f ? 
                 (data[7 /* X8 */] <0.070340216f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07471076f ? 
                 (data[21 /* X22 */] <0.045168526f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.47559372f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2744301f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2626911f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_108_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14876533f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1570295f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5126796f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X8 */] <0.048151333f ? 
                1.0f : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.29874635f ? 
             (data[35 /* X36 */] <-0.4678425f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (data[13 /* X14 */] <0.036471866f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97763103f ? 
                    0.0f : 
                    1.0f)) : 
             (data[28 /* X29 */] <0.09176448f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.022848394f ? 
            1.0f : 
             (data[30 /* X31 */] <0.1419155f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2540687f ? 
                1.0f : 
                0.0f)) : 
        0.023255814f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.8194469f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16882876f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_109_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[13 /* X14 */] <0.07597373f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.17578125f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.090213336f ? 
             (data[7 /* X8 */] <0.04445319f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.1335176f ? 
                     (data[13 /* X14 */] <0.17726538f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19909641f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.090213336f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.265625f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.20211945f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[13 /* X14 */] <0.12830088f ? 
            0.0f : 
             (data[34 /* X35 */] <0.1328125f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23735175f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21956345f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.16985478f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.21992405f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08283465f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06009602f ? 
                 (data[27 /* X28 */] <-0.14675799f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[17 /* X18 */] <-0.39365387f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (data[3 /* X4 */] <-0.47548887f ? 
            1.0f : 
            0.0f) : 
         (data[5 /* X6 */] <0.09880464f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_110_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07369782f ? 
         (data[34 /* X35 */] <-0.1328125f ? 
             (data[31 /* X32 */] <0.035853393f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.465625f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23093955f ? 
         (data[19 /* X20 */] <-0.28624782f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.44647712f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.11954888f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.37857962f ? 
            0.0f : 
             (data[0 /* X1 */] <0.41936138f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.008733298f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.21538976f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.49023438f ? 
            0.0f : 
             (data[0 /* X1 */] <0.36460108f ? 
                1.0f : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.14914556f ? 
             (data[5 /* X6 */] <0.09479708f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06433476f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22238737f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.14029597f ? 
                0.0f : 
                1.0f)) : 
         (data[13 /* X14 */] <0.103932835f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_111_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.077754766f ? 
         (data[34 /* X35 */] <-0.2890625f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19123445f ? 
                 (data[32 /* X33 */] <-0.25426173f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3398253f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19841526f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.04889174f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.22070312f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29203835f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5307601f ? 
             (data[32 /* X33 */] <-0.9291549f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.12483543f ? 
                0.0f : 
                1.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24113671f ? 
         (data[34 /* X35 */] <-0.46679688f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.9291549f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.7109375f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3202269f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.013944614f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.058045734f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.014600216f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.33935282f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21040739f ? 
                0.0f : 
                 (data[14 /* X15 */] <0.14527453f ? 
                    1.0f : 
                    0.0f))) : 
         (data[34 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14349678f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.13251464f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_112_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[34 /* X35 */] <-0.6015625f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16590099f ? 
             (data[20 /* X21 */] <0.09157627f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.15886086f ? 
                    0.0f : 
                    1.0f)) : 
             (data[14 /* X15 */] <0.13485704f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11001125f ? 
        0.04109589f : 
         (data[25 /* X26 */] <-0.11158412f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23112108f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (data[33 /* X34 */] <-0.6671875f ? 
             (data[18 /* X19 */] <0.16520184f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.14024194f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.010308043f ? 
             (data[18 /* X19 */] <0.15661983f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[4 /* X5 */] <0.1271485f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15959455f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1502022f ? 
            0.0f : 
             (data[20 /* X21 */] <0.13627422f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21248874f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_113_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[17 /* X18 */] <-0.47540003f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.16003609f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.17578125f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.25712472f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.20307828f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11366662f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
         (data[19 /* X20 */] <-0.29270166f ? 
             (data[22 /* X23 */] <0.14732563f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.01530533f ? 
         (data[10 /* X11 */] <-0.2755519f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57012755f ? 
             (data[32 /* X33 */] <-0.88441056f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.081876665f ? 
             (data[20 /* X21 */] <0.08612531f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.4453125f ? 
                    0.0f : 
                    1.0f)) : 
             (data[13 /* X14 */] <0.12470979f ? 
                 (data[2 /* X3 */] <-0.45165187f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.302126f ? 
             (data[11 /* X12 */] <-0.5835032f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.85714287f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_114_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.099201806f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X7 */] <0.090440914f ? 
             (data[25 /* X26 */] <-0.58202904f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (data[34 /* X35 */] <-0.8886719f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.1345829f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1147703f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[18 /* X19 */] <0.07938185f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15117317f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17142172f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12688307f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.04398346f ? 
            0.0f : 
             (data[23 /* X24 */] <0.063345276f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.18545009f ? 
                     (data[18 /* X19 */] <0.17150038f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.082334004f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12800258f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[14 /* X15 */] <0.07159362f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_115_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08898634f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.12312323f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.11984022f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
        0.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.178125f ? 
            0.0f : 
             (data[7 /* X8 */] <0.08714998f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
        0.029411765f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16739653f ? 
             (data[1 /* X2 */] <-0.4074322f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13065656f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.15888059f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.31942663f ? 
                    1.0f : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.0404254f ? 
                1.0f : 
                0.0f)) : 
        0.025f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.01373036f ? 
         (data[11 /* X12 */] <-0.48786077f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.27794427f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_116_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
             (data[35 /* X36 */] <-0.4053369f ? 
                 (data[15 /* X16 */] <0.06857349f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09015928f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
        0.028985508f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[8 /* X9 */] <0.2701204f ? 
            0.0f : 
            1.0f) : 
         (data[32 /* X33 */] <-0.7501777f ? 
             (data[26 /* X27 */] <0.39645475f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (data[4 /* X5 */] <0.11520424f ? 
             (data[12 /* X13 */] <0.118590966f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.31818035f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.3225702f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.007581388f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.14124273f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[29 /* X30 */] <0.098225735f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
        0.013333334f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13680793f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.28385973f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_117_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
        0.060606062f : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (data[32 /* X33 */] <-0.20578873f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.15744802f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1431782f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.03697504f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.25538352f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1929677f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12366981f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1041638f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.1747934f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.14727555f ? 
                0.0f : 
                1.0f)) : 
         (data[22 /* X23 */] <0.12883772f ? 
             (data[16 /* X17 */] <-0.6453624f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.31818035f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.09937715f ? 
                         (data[16 /* X17 */] <-0.16890928f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.2583297f ? 
                            0.0f : 
                             (data[17 /* X18 */] <-0.3547948f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[13 /* X14 */] <0.083668895f ? 
                 (data[7 /* X8 */] <0.06888434f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[14 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22160785f ? 
                0.0f : 
                 (data[35 /* X36 */] <0.15192601f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_118_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06230807f ? 
            1.0f : 
             (data[12 /* X13 */] <0.108532846f ? 
                1.0f : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.39503077f ? 
             (data[17 /* X18 */] <-0.34626475f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X6 */] <0.076476805f ? 
                 (data[1 /* X2 */] <-0.1634961f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42315555f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6486544f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21777748f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2557361f ? 
        0.0f : 
         (data[18 /* X19 */] <0.10941885f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4f ? 
                1.0f : 
                0.0f) : 
             (data[22 /* X23 */] <0.09879484f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[6 /* X7 */] <0.10101839f ? 
             (data[12 /* X13 */] <0.1502022f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20811182f ? 
             (data[17 /* X18 */] <-0.3604815f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.11352056f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29136917f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_119_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13894668f ? 
             (data[18 /* X19 */] <0.29679248f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.051544126f ? 
                1.0f : 
                0.0f)) : 
        0.017857144f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[35 /* X36 */] <-0.6596582f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8288764f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2235842f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.48237893f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[9 /* X10 */] <-0.29073712f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[34 /* X35 */] <0.13476562f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25128967f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.59961134f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21956345f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[2 /* X3 */] <-0.1382182f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.13202928f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.121574506f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14608371f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[5 /* X6 */] <0.13201015f ? 
            1.0f : 
             (data[31 /* X32 */] <0.061056446f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
        0.012658228f : 
         (data[9 /* X10 */] <-0.19971702f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_120_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[13 /* X14 */] <0.10111128f ? 
             (data[34 /* X35 */] <-0.1328125f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.077831775f ? 
            1.0f : 
             (data[22 /* X23 */] <0.14501464f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
        0.015384615f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.045455f ? 
            0.0f : 
             (data[14 /* X15 */] <0.1506983f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17036779f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.33203125f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.40900242f ? 
            1.0f : 
             (data[22 /* X23 */] <0.12479348f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.48130545f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.0234375f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2540687f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.265625f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3796158f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.023255814f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08971138f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1266414f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.2705716f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_121_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.10833277f ? 
         (data[34 /* X35 */] <-0.2890625f ? 
             (data[28 /* X29 */] <0.07401245f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.07257136f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.04723081f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[7 /* X8 */] <0.07319788f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42315555f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1929677f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.15749162f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[17 /* X18 */] <-0.008617473f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0f ? 
             (data[28 /* X29 */] <0.07401245f ? 
                 (data[27 /* X28 */] <-0.10995092f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0072873747f ? 
                1.0f : 
                 (data[10 /* X11 */] <0.022847436f ? 
                    0.0f : 
                    1.0f))) : 
        0.032258064f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.10275076f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11562713f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.13431506f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_122_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09468054f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[22 /* X23 */] <0.04159783f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.08572455f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (data[34 /* X35 */] <-0.8886719f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.116914615f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29203835f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57012755f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.68184775f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17190681f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
        0.6666667f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.16634355f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.17799631f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.060542203f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12864399f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_123_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.07697508f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06956747f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24218705f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
        0.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.1795449f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.46837732f ? 
                0.0f : 
                1.0f) : 
             (data[16 /* X17 */] <-0.59459287f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (data[18 /* X19 */] <0.08796385f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.38417128f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18229243f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.08759313f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[18 /* X19 */] <0.20811182f ? 
             (data[16 /* X17 */] <-0.4661758f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.33679485f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.06215253f ? 
                    1.0f : 
                    0.0f))) : 
        0.025f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (data[11 /* X12 */] <-0.5276083f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13915761f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.37234458f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_124_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[13 /* X14 */] <0.07597373f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.14412892f ? 
                 (data[28 /* X29 */] <0.15161416f ? 
                    1.0f : 
                     (data[18 /* X19 */] <0.02216853f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08653233f ? 
            1.0f : 
             (data[20 /* X21 */] <0.1389997f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11001125f ? 
         (data[19 /* X20 */] <-0.3938116f ? 
             (data[8 /* X9 */] <-0.1710666f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.051622603f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.7578125f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X11 */] <-0.21555625f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.05654253f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.14893569f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[13 /* X14 */] <0.123683766f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.41414198f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5076826f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.081876665f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.07660477f ? 
                 (data[20 /* X21 */] <0.09702724f ? 
                     (data[34 /* X35 */] <-0.375f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X5 */] <0.114673376f ? 
                 (data[17 /* X18 */] <0.046034656f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.25157103f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.46967268f ? 
                1.0f : 
                0.0f)) : 
         (data[16 /* X17 */] <-0.37658247f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21075831f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_125_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[25 /* X26 */] <-0.39673588f ? 
             (data[35 /* X36 */] <-0.21085589f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (data[29 /* X30 */] <0.06572264f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21232224f ? 
             (data[27 /* X28 */] <-0.36234224f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.048073683f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6660156f ? 
            1.0f : 
            0.0f) : 
         (data[17 /* X18 */] <-0.21476004f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.039114352f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.18841577f ? 
                0.0f : 
                1.0f)) : 
        0.023255814f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08971138f ? 
         (data[25 /* X26 */] <-0.49104676f ? 
             (data[35 /* X36 */] <-0.16971566f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.19633646f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_126_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1387072f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17437579f ? 
             (data[3 /* X4 */] <-0.1268796f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.17276882f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.18184617f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16971566f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.10540928f ? 
                        1.0f : 
                        0.0f))) : 
             (data[12 /* X13 */] <0.08390767f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.35589924f ? 
             (data[31 /* X32 */] <0.062057745f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[30 /* X31 */] <0.0363143f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.13300677f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.16070005f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.22070312f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.11228958f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.21674143f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16882876f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6363553f ? 
                     (data[4 /* X5 */] <0.11732766f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1710133f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.14687154f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1041638f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.098353714f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.17062612f ? 
             (data[30 /* X31 */] <0.07591475f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.11705608f ? 
                     (data[24 /* X25 */] <-0.2362067f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.15076531f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.08058174f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.17088778f ? 
                    1.0f : 
                     (data[35 /* X36 */] <0.47298333f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.1366846f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.38927367f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.034416936f ? 
             (data[31 /* X32 */] <0.14516538f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_127_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16548346f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09168861f ? 
             (data[13 /* X14 */] <0.11957968f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09943462f ? 
                    1.0f : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.04358727f ? 
                    0.0f : 
                     (data[32 /* X33 */] <0.118607424f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.110259496f ? 
            0.0f : 
             (data[7 /* X8 */] <0.12487741f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X13 */] <0.11451982f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21801049f ? 
            0.0f : 
             (data[7 /* X8 */] <0.106934495f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.06227153f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.049410883f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.22242425f ? 
             (data[7 /* X8 */] <0.050427705f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.0026614063f ? 
                     (data[15 /* X16 */] <0.0377869f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.4884571f ? 
                 (data[10 /* X11 */] <-0.2234504f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.16688609f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.16029713f ? 
                    0.0f : 
                    1.0f))) : 
         (data[24 /* X25 */] <-0.40884155f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.5277643f ? 
                 (data[28 /* X29 */] <0.104951695f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[11 /* X12 */] <-0.4257553f ? 
             (data[31 /* X32 */] <0.11562713f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_128_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (data[35 /* X36 */] <-0.44647712f ? 
             (data[31 /* X32 */] <0.13014594f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.11957968f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.50892097f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15211803f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15375917f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.049488977f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.16151172f ? 
                        0.0f : 
                         (data[7 /* X8 */] <0.05014384f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.23703602f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11274372f ? 
            0.0f : 
             (data[29 /* X30 */] <0.11135199f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18744938f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.50892097f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.1760913f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12213556f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17318934f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.12537228f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1041638f ? 
         (data[28 /* X29 */] <0.08618527f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.24791943f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[24 /* X25 */] <-0.39042717f ? 
            1.0f : 
             (data[15 /* X16 */] <0.058757473f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.047663916f ? 
                     (data[33 /* X34 */] <-0.2625f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.28556553f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22160785f ? 
            0.0f : 
             (data[25 /* X26 */] <-0.191471f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_129_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.109170765f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20156455f ? 
                 (data[20 /* X21 */] <0.09690888f ? 
                     (data[29 /* X30 */] <0.098225735f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[22 /* X23 */] <0.14732563f ? 
                1.0f : 
                0.0f)) : 
        0.017857144f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24753335f ? 
             (data[35 /* X36 */] <-0.93641967f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X13 */] <0.116914615f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[14 /* X15 */] <0.14524281f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2314887f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.9765625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[14 /* X15 */] <0.12751245f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.094176464f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.040029213f ? 
                 (data[33 /* X34 */] <-0.15625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.094581775f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.3870732f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.023255814f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[14 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_130_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08430937f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[33 /* X34 */] <0.021875f ? 
                 (data[13 /* X14 */] <0.123683766f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[15 /* X16 */] <0.094228975f ? 
            0.0f : 
            1.0f) : 
        0.060240965f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.088763244f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.13887076f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.77466786f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.084586926f ? 
                1.0f : 
                 (data[13 /* X14 */] <0.09790174f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10906302f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2844105f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.09810443f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_131_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[12 /* X13 */] <0.12122524f ? 
             (data[15 /* X16 */] <0.03934854f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.099201806f ? 
             (data[0 /* X1 */] <0.11144196f ? 
                 (data[33 /* X34 */] <8.675391E-4f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2865311f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21737354f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.10862167f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.046710547f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[6 /* X7 */] <0.12949622f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.06835845f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15822157f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3564015f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[23 /* X24 */] <0.038829662f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.078756705f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (data[6 /* X7 */] <0.049758304f ? 
            1.0f : 
            0.0f) : 
         (data[23 /* X24 */] <0.09361672f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_132_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.10833277f ? 
         (data[3 /* X4 */] <-0.16436447f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08369522f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.025265874f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.15808985f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (data[0 /* X1 */] <-0.13701701f ? 
             (data[21 /* X22 */] <0.17389883f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.64685357f ? 
            0.0f : 
            1.0f) : 
         (data[8 /* X9 */] <0.116723076f ? 
            0.0f : 
             (data[31 /* X32 */] <0.051043477f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.049410883f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.025040012f ? 
             (data[35 /* X36 */] <-0.16971566f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.24070908f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.1138894f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.09479708f ? 
                 (data[8 /* X9 */] <-0.010881783f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.0404254f ? 
             (data[2 /* X3 */] <-0.064927734f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.51878524f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_133_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (data[28 /* X29 */] <0.07350525f ? 
                 (data[32 /* X33 */] <-0.17968789f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26287517f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.008181188f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[5 /* X6 */] <0.23048164f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.01530533f ? 
         (data[8 /* X9 */] <0.29048288f ? 
            0.0f : 
            1.0f) : 
         (data[33 /* X34 */] <-0.9765625f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5523692f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21801049f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[23 /* X24 */] <0.037233923f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1125f ? 
                1.0f : 
                0.0f) : 
             (data[28 /* X29 */] <0.07350525f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.65730816f ? 
                     (data[31 /* X32 */] <0.059053853f ? 
                        0.0f : 
                        1.0f) : 
                     (data[30 /* X31 */] <0.07513827f ? 
                         (data[33 /* X34 */] <-0.225f ? 
                            1.0f : 
                            0.0f) : 
                         (data[9 /* X10 */] <-0.42886487f ? 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.11920042f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14166738f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.191471f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.1345549f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12420172f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_134_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (data[8 /* X9 */] <0.0013357025f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09946776f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.0879601f ? 
             (data[24 /* X25 */] <-0.17635995f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.552637f ? 
         (data[3 /* X4 */] <-0.016923998f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12925489f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.13437659f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.54537034f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.27861828f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.024669647f ? 
                    0.0f : 
                     (data[1 /* X2 */] <0.07745086f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[21 /* X22 */] <0.17022888f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.2324036f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[6 /* X7 */] <0.08352487f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10559395f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.19247678f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07845953f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1496803f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.059984475f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
        0.012658228f : 
         (data[13 /* X14 */] <0.09392912f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_135_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (data[33 /* X34 */] <-0.2671875f ? 
             (data[27 /* X28 */] <-0.14556295f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.2127259f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14924428f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.05206285f ? 
                     (data[13 /* X14 */] <0.09803321f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[6 /* X7 */] <0.10061157f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.64815634f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25375766f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.070240356f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.19405448f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[35 /* X36 */] <-0.23338102f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[30 /* X31 */] <0.11823288f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
             (data[27 /* X28 */] <-0.14504889f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20512383f ? 
            0.0f : 
             (data[14 /* X15 */] <0.09432485f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.25154707f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33758834f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_136_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (data[19 /* X20 */] <-0.30668494f ? 
            1.0f : 
             (data[12 /* X13 */] <0.09703785f ? 
                1.0f : 
                0.0f)) : 
         (data[30 /* X31 */] <0.114738725f ? 
             (data[32 /* X33 */] <-0.116300136f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.40288374f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.36602366f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.042555f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[2 /* X3 */] <-0.07428396f ? 
            0.0f : 
            1.0f) : 
         (data[30 /* X31 */] <0.039808456f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18474637f ? 
                0.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.28830028f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.11842623f ? 
         (data[9 /* X10 */] <-0.5689691f ? 
            0.0f : 
             (data[26 /* X27 */] <0.07084207f ? 
                0.0f : 
                1.0f)) : 
         (data[24 /* X25 */] <-0.29605344f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.13725089f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.2669197f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08608887f ? 
                     (data[35 /* X36 */] <0.077125624f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.28886893f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_137_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[1 /* X2 */] <-0.6480965f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17502804f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.08297845f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18069962f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24706896f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19021071f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22948578f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20081262f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16362514f ? 
             (data[6 /* X7 */] <0.13641226f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1617806f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6398547f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22127783f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.056972746f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14036255f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.0072873747f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2617147f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[20 /* X21 */] <0.09184882f ? 
             (data[6 /* X7 */] <0.2584601f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33758834f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39355522f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_138_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.10833277f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1773685f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16971566f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.05933026f ? 
                    0.0f : 
                    1.0f)) : 
             (data[16 /* X17 */] <-0.81558967f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.44104296f ? 
             (data[27 /* X28 */] <-0.18619414f ? 
                0.0f : 
                1.0f) : 
             (data[28 /* X29 */] <0.08009886f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.5230228f ? 
                     (data[4 /* X5 */] <0.20371518f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X9 */] <-0.15681288f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.084513165f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21420889f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10761445f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.14769855f ? 
                    1.0f : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.16454498f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.29758462f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.27703944f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21102217f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.08562475f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[20 /* X21 */] <0.14526832f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5313726f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1041638f ? 
         (data[10 /* X11 */] <-0.34975702f ? 
             (data[33 /* X34 */] <-0.265625f ? 
                1.0f : 
                0.0f) : 
             (data[35 /* X36 */] <-0.27817622f ? 
                0.0f : 
                1.0f)) : 
         (data[17 /* X18 */] <-0.3225702f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10206369f ? 
                 (data[2 /* X3 */] <-0.22086488f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.179168f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[6 /* X7 */] <0.080935925f ? 
                 (data[25 /* X26 */] <0.096192904f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.27863336f ? 
             (data[11 /* X12 */] <-0.5835032f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[25 /* X26 */] <0.11809063f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.338927f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_139_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07369782f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.047401678f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.24024631f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.030303031f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2453125f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2744301f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.25546744f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.29073712f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.37641892f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.27595544f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.053584505f ? 
             (data[15 /* X16 */] <0.05028001f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046276446f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.55773956f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[29 /* X30 */] <0.10572645f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15625f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14723057f ? 
                 (data[32 /* X33 */] <-0.29900602f ? 
                     (data[1 /* X2 */] <-0.2690098f ? 
                        1.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.061504096f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.13438539f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X3 */] <-0.11482762f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_140_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1387072f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.069691494f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15948159f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.116409466f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08640925f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16062057f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.25643432f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.26021475f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.059229326f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.15142879f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.67421436f ? 
            0.0f : 
            1.0f) : 
         (data[32 /* X33 */] <-7.1070314E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.31023914f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
             (data[18 /* X19 */] <0.21097249f ? 
                 (data[23 /* X24 */] <0.04361688f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.082443245f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.015966726f ? 
                        1.0f : 
                        0.0f) : 
                     (data[12 /* X13 */] <0.099356204f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3903283f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.27049163f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_141_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[24 /* X25 */] <-0.32827863f ? 
             (data[21 /* X22 */] <0.16147749f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.09021701f ? 
                    0.0f : 
                    1.0f)) : 
             (data[13 /* X14 */] <0.08572094f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09095715f ? 
             (data[31 /* X32 */] <0.019502625f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[28 /* X29 */] <0.13842694f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
             (data[35 /* X36 */] <-0.93641967f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.17715648f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (data[29 /* X30 */] <0.13322908f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21289557f ? 
                1.0f : 
                0.0f) : 
             (data[13 /* X14 */] <0.10778042f ? 
                 (data[22 /* X23 */] <0.16061383f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2791805f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22062527f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_142_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[4 /* X5 */] <0.1271485f ? 
             (data[15 /* X16 */] <0.036894534f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07302978f ? 
                    0.0f : 
                     (data[14 /* X15 */] <0.16433704f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16070005f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.1896937f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.12798898f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[31 /* X32 */] <0.051043477f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.12002883f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[22 /* X23 */] <0.14703676f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X6 */] <0.040408753f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23707698f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21716714f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.04706471f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16486512f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.079735965f ? 
             (data[35 /* X36 */] <-0.18841577f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.16178468f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.062635295f ? 
                        1.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.14226998f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (data[5 /* X6 */] <0.12285001f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.41121912f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5132755f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2382391f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_143_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10600731f ? 
             (data[16 /* X17 */] <-0.24517897f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19908704f ? 
                     (data[34 /* X35 */] <-0.8125f ? 
                         (data[32 /* X33 */] <0.58096516f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.07021241f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[23 /* X24 */] <0.015691439f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.059998475f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (data[26 /* X27 */] <-0.12087381f ? 
            1.0f : 
             (data[33 /* X34 */] <-0.66875f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17116782f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.31220284f ? 
            0.0f : 
             (data[4 /* X5 */] <0.087599725f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07456437f ? 
         (data[27 /* X28 */] <-0.14544345f ? 
             (data[17 /* X18 */] <-0.51923496f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.008729211f ? 
                 (data[2 /* X3 */] <-0.620064f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.640625f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[24 /* X25 */] <-0.042855658f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.31925887f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_144_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X3 */] <-0.565486f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.2890625f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1906567f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.734375f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
             (data[34 /* X35 */] <-0.88671875f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.5546875f ? 
            1.0f : 
             (data[23 /* X24 */] <0.104786895f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26574174f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.095942095f ? 
             (data[8 /* X9 */] <-0.013596781f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14809592f ? 
            0.0f : 
             (data[29 /* X30 */] <0.16092184f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.09937715f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_145_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.10833277f ? 
         (data[8 /* X9 */] <0.02984317f ? 
             (data[35 /* X36 */] <-0.38289678f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.21085589f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09008026f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (data[0 /* X1 */] <-0.19125806f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09760606f ? 
             (data[7 /* X8 */] <0.055211432f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[8 /* X9 */] <0.2701204f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22051908f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.153688f ? 
            0.0f : 
             (data[16 /* X17 */] <0.07138406f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (data[28 /* X29 */] <0.100894086f ? 
             (data[35 /* X36 */] <-0.31931645f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.018085048f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.40250733f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19051082f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.02631579f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21678944f ? 
            0.0f : 
             (data[23 /* X24 */] <0.06595723f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_146_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.07659549f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16113359f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.15625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[28 /* X29 */] <0.08288847f ? 
             (data[35 /* X36 */] <-0.23329599f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9533154f ? 
             (data[28 /* X29 */] <0.064882845f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18252203f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06305904f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.09001949f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.45123073f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16985478f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5541189f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.077577844f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.12881388f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
             (data[3 /* X4 */] <-0.14615367f ? 
                 (data[14 /* X15 */] <0.10614509f ? 
                     (data[13 /* X14 */] <0.09410274f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.14727555f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05920366f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.8194469f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_147_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[7 /* X8 */] <0.052353773f ? 
             (data[27 /* X28 */] <-0.14675799f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.090213336f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16682824f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
        0.038961038f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.24322233f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.16253245f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (data[7 /* X8 */] <0.06496109f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.100541934f ? 
                1.0f : 
                0.0f)) : 
         (data[26 /* X27 */] <-0.009800321f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5538376f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (data[7 /* X8 */] <0.06983592f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06656134f ? 
                 (data[35 /* X36 */] <-0.31931645f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.12288447f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19979793f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.18728916f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_148_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[1 /* X2 */] <-0.50315094f ? 
             (data[16 /* X17 */] <-0.39748758f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.265366f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.37140164f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
        0.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.0025528702f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.9296875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021927249f ? 
             (data[34 /* X35 */] <0.17578125f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4506677f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.04695474f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.0949338f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[2 /* X3 */] <-0.22554299f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.4183927f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.09541851f ? 
             (data[16 /* X17 */] <-0.1557275f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1826294f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12714204f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[34 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.37760285f ? 
                0.0f : 
                 (data[26 /* X27 */] <-0.17564978f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_149_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1785459f ? 
             (data[5 /* X6 */] <0.12685756f ? 
                1.0f : 
                 (data[32 /* X33 */] <0.118607424f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.106498994f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.3984375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18404195f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (data[11 /* X12 */] <-0.34004974f ? 
             (data[24 /* X25 */] <-0.0014232903f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09255289f ? 
             (data[19 /* X20 */] <0.0020230797f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.124410845f ? 
         (data[9 /* X10 */] <-0.43450752f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08311564f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07101261f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.116300136f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.054452367f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (data[23 /* X24 */] <0.093084805f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_150_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
            1.0f : 
            0.0f) : 
         (data[29 /* X30 */] <0.097600676f ? 
             (data[22 /* X23 */] <0.1421259f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.465625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
         (data[34 /* X35 */] <-0.9765625f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.20459767f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18756093f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1125f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34940267f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.18882321f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[34 /* X35 */] <-0.1328125f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X6 */] <0.098232135f ? 
             (data[22 /* X23 */] <0.17505752f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
        0.012658228f : 
         (data[27 /* X28 */] <-0.03370771f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_151_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2421875f ? 
                 (data[31 /* X32 */] <0.03502273f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X1 */] <-0.63743436f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.47656178f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3040246f ? 
             (data[0 /* X1 */] <-0.1335176f ? 
                 (data[10 /* X11 */] <-0.15398179f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11385223f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[6 /* X7 */] <0.13641226f ? 
            0.0f : 
             (data[34 /* X35 */] <0.0f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1832893f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.665625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.124410845f ? 
         (data[24 /* X25 */] <-0.5032153f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.3984375f ? 
                0.0f : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.25264508f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06966782f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.036024023f ? 
                 (data[23 /* X24 */] <0.018085048f ? 
                    0.0f : 
                    1.0f) : 
                 (data[13 /* X14 */] <0.08620129f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9745391f ? 
            0.0f : 
            1.0f) : 
         (data[21 /* X22 */] <0.1456685f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_152_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09468054f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.049566906f ? 
             (data[32 /* X33 */] <-0.20578873f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1328125f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.38964602f ? 
            1.0f : 
            0.0f) : 
         (data[20 /* X21 */] <0.03652149f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.7465501f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18533918f ? 
                    0.0f : 
                     (data[2 /* X3 */] <-0.21525313f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[0 /* X1 */] <0.0047095884f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046276446f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.0017838087f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.250533f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13104479f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20328417f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.020188069f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.09486632f ? 
                 (data[24 /* X25 */] <-0.1165132f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17570494f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.0072873747f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_153_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09468054f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
             (data[35 /* X36 */] <-0.31931645f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14876877f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.21779232f ? 
                        1.0f : 
                        0.0f))) : 
             (data[18 /* X19 */] <0.0078652f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
             (data[27 /* X28 */] <-0.25980827f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.4053369f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.13200179f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[13 /* X14 */] <0.123683766f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.39220265f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.54104245f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.10086952f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.1041638f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.178125f ? 
            1.0f : 
            0.0f) : 
         (data[16 /* X17 */] <-0.5199318f ? 
            1.0f : 
             (data[15 /* X16 */] <0.058534384f ? 
                 (data[30 /* X31 */] <0.099985614f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.08909328f ? 
                         (data[32 /* X33 */] <-0.3437503f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
        0.024691358f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_154_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.033103682f ? 
             (data[27 /* X28 */] <-0.20459767f ? 
                 (data[31 /* X32 */] <0.05705126f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.39673588f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
        0.7777778f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42315555f ? 
             (data[27 /* X28 */] <-0.24666288f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[5 /* X6 */] <0.13430017f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15067253f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[24 /* X25 */] <-0.42725596f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06009602f ? 
             (data[18 /* X19 */] <0.05935719f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5521081f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.046435717f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4211225f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_155_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (data[33 /* X34 */] <-0.421875f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.04734027f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.1444547f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[5 /* X6 */] <0.064454116f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.18728916f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34240383f ? 
                     (data[21 /* X22 */] <0.18744938f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1635595f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[34 /* X35 */] <-0.6875f ? 
                     (data[21 /* X22 */] <0.17841569f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
             (data[0 /* X1 */] <-0.1335176f ? 
                 (data[33 /* X34 */] <-0.21875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19556756f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.18642312f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17011128f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.0064592995f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X6 */] <0.10223969f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3040246f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14579791f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10352531f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.40550113f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.39355522f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_156_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08633131f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19987074f ? 
                 (data[31 /* X32 */] <0.036024023f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[18 /* X19 */] <-0.012159463f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.11257145f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.110259496f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.18090318f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.14517784f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.06705474f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13773523f ? 
        0.020833334f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.037519123f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[17 /* X18 */] <-0.52041966f ? 
             (data[4 /* X5 */] <0.12847564f ? 
                0.0f : 
                1.0f) : 
             (data[33 /* X34 */] <-0.24375f ? 
                 (data[29 /* X30 */] <0.09947586f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.4398077f ? 
                        0.0f : 
                         (data[15 /* X16 */] <0.05028087f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.07145534f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08258433f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[11 /* X12 */] <-0.4257553f ? 
             (data[5 /* X6 */] <0.12113248f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_157_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08430937f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.089893326f ? 
                 (data[29 /* X30 */] <0.10058317f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[28 /* X29 */] <0.1079949f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8848535f ? 
             (data[8 /* X9 */] <-0.15749162f ? 
                 (data[23 /* X24 */] <0.14878759f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.32675156f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12238588f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.069691494f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1344792f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4963784f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.08433852f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.39450115f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14391376f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22819075f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_158_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (data[34 /* X35 */] <-0.24414062f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.11443579f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08308498f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.15959455f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.073143855f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[19 /* X20 */] <-0.29592857f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14651541f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[13 /* X14 */] <0.123683766f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22615314f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <-0.9310192f ? 
            1.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17395887f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.16253245f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
             (data[32 /* X33 */] <-0.38476592f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35990095f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.058690246f ? 
                    1.0f : 
                     (data[8 /* X9 */] <0.20703192f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21983264f ? 
            0.0f : 
             (data[21 /* X22 */] <0.12421345f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_159_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[27 /* X28 */] <-0.14675799f ? 
             (data[34 /* X35 */] <-0.17578125f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
             (data[30 /* X31 */] <0.03709078f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34185943f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1929677f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.421875f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (data[5 /* X6 */] <0.13487269f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.44140625f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.40463945f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17011128f ? 
            0.0f : 
             (data[26 /* X27 */] <0.13474737f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.067885704f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.375f ? 
                 (data[32 /* X33 */] <-0.32137817f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.88943845f ? 
                1.0f : 
                0.0f)) : 
         (data[13 /* X14 */] <0.09392912f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (data[6 /* X7 */] <0.049758304f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16882876f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_160_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
             (data[15 /* X16 */] <0.03800999f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.29384008f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0068957377f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.023956446f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11319427f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08265219f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.1792431f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[32 /* X33 */] <-0.43137455f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11807994f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.21610717f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.778125f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.020614518f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20392439f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.018202204f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.06640625f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.14062303f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X7 */] <0.08027026f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9653319f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X10 */] <-0.24315843f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_161_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.1546875f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11068364f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20664601f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.17200714f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.2453125f ? 
            0.0f : 
             (data[7 /* X8 */] <0.098580614f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.023956446f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[8 /* X9 */] <0.2674054f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4451445f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18229243f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.7334316f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.421875f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13259774f ? 
                 (data[1 /* X2 */] <-0.6441717f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[32 /* X33 */] <-0.250533f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.5133113f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[8 /* X9 */] <-0.15206163f ? 
             (data[28 /* X29 */] <0.18052459f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X12 */] <-0.42699742f ? 
                 (data[32 /* X33 */] <-0.07528453f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_162_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[34 /* X35 */] <-0.24414062f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08633131f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09905241f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10988144f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.25683278f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.17436329f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.35075182f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18516614f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.421875f ? 
             (data[7 /* X8 */] <0.057228606f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[24 /* X25 */] <-0.07047723f ? 
             (data[35 /* X36 */] <-0.27776155f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.06496109f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.09880615f ? 
             (data[6 /* X7 */] <0.2584601f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19979793f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.32553518f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_163_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
        0.03846154f : 
         (data[13 /* X14 */] <0.13137893f ? 
             (data[23 /* X24 */] <0.0202127f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.07794332f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12572539f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.028604317f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X4 */] <-0.19341189f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[10 /* X11 */] <-0.64815634f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.6596582f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.16115467f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (data[18 /* X19 */] <-0.15090176f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13415071f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.09964305f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <0.014930733f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.42675853f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[18 /* X19 */] <0.16520184f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16365694f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16688664f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17165032f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.06190584f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3926248f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22819075f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3419246f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_164_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[0 /* X1 */] <-0.09152452f ? 
             (data[24 /* X25 */] <-0.05206285f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22823411f ? 
                 (data[1 /* X2 */] <-0.5115633f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
        0.0f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22298363f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09840394f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17011128f ? 
            0.0f : 
             (data[0 /* X1 */] <0.0057285996f ? 
                0.0f : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.2890625f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.42494744f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0012038336f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.24382783f ? 
                 (data[0 /* X1 */] <-0.0906663f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[21 /* X22 */] <0.09880615f ? 
             (data[2 /* X3 */] <0.2687778f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.30642855f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.7802493f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (data[9 /* X10 */] <-0.14800104f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_165_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (data[32 /* X33 */] <-0.0901993f ? 
            0.0f : 
            1.0f) : 
         (data[28 /* X29 */] <0.08669247f ? 
             (data[16 /* X17 */] <-0.2630976f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.08707572f ? 
                    0.0f : 
                    1.0f)) : 
             (data[29 /* X30 */] <0.092600204f ? 
                 (data[3 /* X4 */] <-0.096891716f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.09375f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.11855366f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
        0.015384615f : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.042555f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.020560868f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.33556935f ? 
                     (data[25 /* X26 */] <-0.32905394f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22978128f ? 
             (data[9 /* X10 */] <-0.36831108f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18327287f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[30 /* X31 */] <0.117068164f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[27 /* X28 */] <-0.129669f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.034416936f ? 
                1.0f : 
                0.0f)) : 
        0.023255814f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4947366f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_166_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09468054f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
             (data[1 /* X2 */] <-0.609809f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20951742f ? 
                    0.0f : 
                     (data[19 /* X20 */] <0.018501641f ? 
                        1.0f : 
                        0.0f))) : 
             (data[26 /* X27 */] <0.07084207f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[30 /* X31 */] <0.0363143f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.22683924f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.21774614f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19044547f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.008367922f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24113671f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.178125f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.056907855f ? 
                 (data[35 /* X36 */] <-0.19215578f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.31546184f ? 
             (data[8 /* X9 */] <0.07599812f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.11092754f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.75390625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[19 /* X20 */] <-0.12705345f ? 
            0.0f : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_167_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.077659324f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <-0.14807253f ? 
             (data[15 /* X16 */] <0.051172372f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19152333f ? 
            0.0f : 
             (data[20 /* X21 */] <0.1733408f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.01530533f ? 
         (data[14 /* X15 */] <0.1302402f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17318934f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.221251f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.23583584f ? 
                    0.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08411117f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.021594692f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[2 /* X3 */] <-0.22242425f ? 
             (data[15 /* X16 */] <0.038456175f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.060083892f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15073074f ? 
                     (data[35 /* X36 */] <-0.091086715f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.09375666f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.0862488f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.11687875f ? 
            0.0f : 
             (data[15 /* X16 */] <0.081289686f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16934176f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_168_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.054407194f ? 
             (data[11 /* X12 */] <-0.33338866f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18952407f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.25975183f ? 
                        1.0f : 
                        0.0f))) : 
             (data[22 /* X23 */] <0.180835f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07302978f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.24414062f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.34185943f ? 
             (data[34 /* X35 */] <-0.88671875f ? 
                 (data[11 /* X12 */] <-0.14266597f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21448684f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (data[29 /* X30 */] <0.1135397f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6629577f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.008729211f ? 
                     (data[16 /* X17 */] <-0.9559525f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.30859375f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.32396692f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.030026788f ? 
                    1.0f : 
                    0.0f))) : 
        0.02631579f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.33758834f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_169_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (data[7 /* X8 */] <0.06966782f ? 
            1.0f : 
             (data[12 /* X13 */] <0.118590966f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.6760033f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.10052217f ? 
             (data[27 /* X28 */] <-0.12046723f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (data[8 /* X9 */] <-0.15613411f ? 
             (data[30 /* X31 */] <0.123279996f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.28372496f ? 
                0.0f : 
                 (data[0 /* X1 */] <-0.58898133f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2557361f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36921778f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12679705f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.0064592995f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X6 */] <0.08907199f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[3 /* X4 */] <-0.2930625f ? 
             (data[5 /* X6 */] <0.09937715f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.07327156f ? 
             (data[0 /* X1 */] <-0.21750371f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.01504454f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.77734375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (data[8 /* X9 */] <-0.1710666f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.20350602f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.07336597f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_170_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.10833277f ? 
         (data[3 /* X4 */] <-0.1568675f ? 
            0.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2890625f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.102483355f ? 
                     (data[32 /* X33 */] <-0.3139208f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.04615282f ? 
             (data[32 /* X33 */] <-0.45561105f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X13 */] <0.08554286f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1939709f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.0010615618f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[14 /* X15 */] <0.14069657f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.67421436f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.13624169f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20156455f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.05815735f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.06909759f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.11092754f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.77734375f ? 
            0.0f : 
             (data[27 /* X28 */] <0.039906424f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[14 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10359881f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.0875f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_171_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (data[33 /* X34 */] <-0.4f ? 
             (data[1 /* X2 */] <-0.6480965f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.113014385f ? 
             (data[31 /* X32 */] <0.050042182f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15265517f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[23 /* X24 */] <0.08484015f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X2 */] <-0.7684287f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.15206163f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.117407545f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1335449f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.19801778f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12366981f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.3773628f ? 
                 (data[7 /* X8 */] <0.05353046f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.049441148f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[5 /* X6 */] <0.095942095f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10791212f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16569094f ? 
             (data[11 /* X12 */] <-0.42699742f ? 
                 (data[6 /* X7 */] <0.17026335f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.28306654f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_172_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
         (data[35 /* X36 */] <-0.44647712f ? 
             (data[21 /* X22 */] <0.17276962f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[32 /* X33 */] <-0.11443579f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.03540548f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.43631136f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
        0.04f : 
         (data[32 /* X33 */] <-0.023082852f ? 
            0.0f : 
             (data[21 /* X22 */] <0.18744938f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29203835f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.1660382f ? 
             (data[18 /* X19 */] <-0.22384876f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22418405f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.06656134f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.16375442f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.17062612f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1680782f ? 
                 (data[3 /* X4 */] <-0.14939189f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.16570945f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1814304f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.024669647f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13641226f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6143264f ? 
            0.0f : 
             (data[28 /* X29 */] <0.08973567f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (data[11 /* X12 */] <-0.4257553f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.059251845f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_173_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.077831775f ? 
             (data[20 /* X21 */] <0.09600895f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.13403744f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[28 /* X29 */] <0.08669247f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.0879601f ? 
             (data[6 /* X7 */] <0.066438176f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11001125f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.09326908f ? 
            0.0f : 
             (data[1 /* X2 */] <0.05748751f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.378125f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.0060268864f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[8 /* X9 */] <0.2674054f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1942286f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.8453125f ? 
             (data[24 /* X25 */] <-0.07968443f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <2.7656555E-4f ? 
             (data[30 /* X31 */] <0.09144434f ? 
                 (data[25 /* X26 */] <-0.13377492f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.058757473f ? 
                 (data[14 /* X15 */] <0.08068611f ? 
                    0.0f : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.34175655f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.14036255f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.13670169f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09353769f ? 
         (data[8 /* X9 */] <-0.1710666f ? 
             (data[1 /* X2 */] <-0.20505539f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[13 /* X14 */] <0.13343099f ? 
             (data[24 /* X25 */] <-0.0014232903f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16489308f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_174_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.043051787f ? 
             (data[0 /* X1 */] <-0.1335176f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.089893326f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.17878056f ? 
             (data[35 /* X36 */] <-0.042555f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
         (data[5 /* X6 */] <0.035828684f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.07445839f ? 
             (data[21 /* X22 */] <0.14510389f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.6671875f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2554907f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.61535877f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4f ? 
            1.0f : 
            0.0f) : 
         (data[14 /* X15 */] <0.09387022f ? 
             (data[0 /* X1 */] <-0.021116983f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (data[3 /* X4 */] <-0.43175653f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <-0.03370771f ? 
             (data[0 /* X1 */] <-0.023168173f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_175_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09574437f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.05106013f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18229243f ? 
                     (data[21 /* X22 */] <0.11884875f ? 
                         (data[32 /* X33 */] <0.13352218f ? 
                            0.0f : 
                            1.0f) : 
                         (data[33 /* X34 */] <-0.525f ? 
                             (data[24 /* X25 */] <-0.15495218f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[23 /* X24 */] <0.04034788f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.044444446f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24753335f ? 
             (data[0 /* X1 */] <-0.13701701f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.51992446f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11356346f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07456437f ? 
         (data[23 /* X24 */] <0.04361688f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4f ? 
                 (data[18 /* X19 */] <0.12515251f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.10469277f ? 
                         (data[23 /* X24 */] <0.057959344f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.28409126f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12399396f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.284181f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_176_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[14 /* X15 */] <0.1006896f ? 
             (data[29 /* X30 */] <0.19260974f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.11136482f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19007896f ? 
                 (data[1 /* X2 */] <-0.5441733f ? 
                     (data[10 /* X11 */] <-0.15181576f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.088829495f ? 
             (data[13 /* X14 */] <0.05596629f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.24609101f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.23428786f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.02135987f ? 
                    1.0f : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.19701193f ? 
                1.0f : 
                0.0f)) : 
         (data[13 /* X14 */] <0.11521909f ? 
            0.0f : 
             (data[19 /* X20 */] <0.0063256305f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.013148409f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13493496f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.27397305f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17165032f ? 
            0.0f : 
             (data[29 /* X30 */] <0.09510044f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.074962206f ? 
        0.032258064f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2844105f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_177_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.045455f ? 
             (data[5 /* X6 */] <0.09937715f ? 
                 (data[27 /* X28 */] <-0.099621885f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.16368802f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.28624782f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11001125f ? 
         (data[27 /* X28 */] <-0.34525326f ? 
            1.0f : 
             (data[8 /* X9 */] <-0.15206163f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16653846f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.14376077f ? 
            1.0f : 
            0.0f) : 
         (data[33 /* X34 */] <-0.6677338f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.111799866f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.10338942f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.11520424f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.31130844f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (data[3 /* X4 */] <-0.47548887f ? 
            1.0f : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_178_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1387072f ? 
         (data[11 /* X12 */] <-0.3350813f ? 
            0.0f : 
             (data[31 /* X32 */] <0.04353375f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.14725876f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.265625f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.11100859f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[1 /* X2 */] <-0.4730679f ? 
            1.0f : 
             (data[31 /* X32 */] <0.043033104f ? 
                 (data[27 /* X28 */] <-0.10469277f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20471875f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21003366f ? 
                0.0f : 
                1.0f)) : 
         (data[14 /* X15 */] <0.14569743f ? 
            0.0f : 
             (data[29 /* X30 */] <0.12510331f ? 
                 (data[31 /* X32 */] <0.028980201f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (data[18 /* X19 */] <0.08796385f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.21476817f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.33663782f ? 
             (data[9 /* X10 */] <-0.33521286f ? 
                 (data[31 /* X32 */] <0.06647254f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17174391f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.07968443f ? 
             (data[14 /* X15 */] <0.16070005f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.07528453f ? 
                     (data[6 /* X7 */] <0.13315766f ? 
                         (data[5 /* X6 */] <0.09345015f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.044033594f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X6 */] <0.09776006f ? 
                 (data[7 /* X8 */] <0.05487524f ? 
                    0.0f : 
                    1.0f) : 
                 (data[29 /* X30 */] <0.11197705f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6658184f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.28681505f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_179_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.053819865f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18406175f ? 
             (data[21 /* X22 */] <0.048891403f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[34 /* X35 */] <-0.77734375f ? 
            1.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.058423463f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25243053f ? 
             (data[21 /* X22 */] <0.047426954f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8792605f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.110106714f ? 
                        0.0f : 
                         (data[3 /* X4 */] <-0.06190584f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[13 /* X14 */] <0.16318563f ? 
             (data[4 /* X5 */] <0.13214095f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[34 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9745391f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20512383f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.27802983f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (data[8 /* X9 */] <0.06785313f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.24256732f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.03370771f ? 
             (data[21 /* X22 */] <0.15477896f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_180_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09468054f ? 
         (data[34 /* X35 */] <-0.17773438f ? 
             (data[23 /* X24 */] <0.009800916f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (data[34 /* X35 */] <-0.9765625f ? 
             (data[22 /* X23 */] <0.22589931f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X13 */] <0.116914615f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[30]) || data[30 /* X31 */] <0.12075644f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35290208f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19378738f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.35305363f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.05920366f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28248915f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.046276446f ? 
         (data[0 /* X1 */] <-0.12301932f ? 
            0.0f : 
            1.0f) : 
         (data[18 /* X19 */] <0.21097249f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.4f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1047417f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.065450214f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.16186549f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.095713094f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.09190707f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29136917f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14516538f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_181_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (data[28 /* X29 */] <0.10140129f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.08369522f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.065625f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.16676788f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08374369f ? 
         (data[22 /* X23 */] <0.023687651f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.734375f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24435098f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.4946287f ? 
             (data[33 /* X34 */] <-0.75625f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.045829404f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.107045785f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <0.17578125f ? 
                 (data[1 /* X2 */] <-0.5147601f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.023255814f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.08971138f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.28044313f ? 
            0.0f : 
            1.0f) : 
         (data[34 /* X35 */] <-0.31054688f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.25598964f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_182_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1546875f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                 (data[34 /* X35 */] <-0.6015625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.04921627f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.090224735f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[14 /* X15 */] <0.14069657f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.8848535f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.9404424f ? 
                 (data[34 /* X35 */] <-0.890625f ? 
                     (data[13 /* X14 */] <0.1427755f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.11356346f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06065375f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.021661445f ? 
                 (data[34 /* X35 */] <-0.1328125f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.1206057f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.08433852f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19252378f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5428098f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2626911f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_183_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[14 /* X15 */] <0.14660668f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08984375f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.35546875f ? 
                 (data[20 /* X21 */] <0.17661138f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25708047f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24706896f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.15035895f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[12 /* X13 */] <0.12242263f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.26968333f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.13755344f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.15849002f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.06640625f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.015833957f ? 
         (data[21 /* X22 */] <0.11913199f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.046215273f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.44038764f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.6453624f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.072032355f ? 
                    1.0f : 
                    0.0f))) : 
         (data[24 /* X25 */] <-0.5032153f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[29 /* X30 */] <0.14166738f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3491233f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_184_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.06901967f ? 
            1.0f : 
            0.0f) : 
         (data[14 /* X15 */] <0.09387022f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.1838454f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.97906137f ? 
            0.0f : 
            1.0f) : 
         (data[20 /* X21 */] <0.15998593f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15049538f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13773523f ? 
         (data[18 /* X19 */] <0.09368519f ? 
             (data[17 /* X18 */] <-0.2135753f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.29874635f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.43688822f ? 
                 (data[4 /* X5 */] <0.13112992f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
        0.046511628f : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.010308043f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13259774f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12553151f ? 
            0.0f : 
             (data[35 /* X36 */] <0.3202269f ? 
                0.0f : 
                1.0f)) : 
         (data[20 /* X21 */] <0.1845153f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_185_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[14 /* X15 */] <0.0879601f ? 
             (data[23 /* X24 */] <0.1282057f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.038902357f ? 
                 (data[17 /* X18 */] <-0.5416158f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09654224f ? 
             (data[21 /* X22 */] <0.049120773f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (data[23 /* X24 */] <0.017287178f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.36582404f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16882876f ? 
            0.0f : 
            1.0f) : 
         (data[19 /* X20 */] <0.10635994f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.08283465f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.08833049f ? 
                1.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7087284f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.12727581f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4003174f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20479842f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.16329734f ? 
            0.0f : 
             (data[31 /* X32 */] <0.08514959f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.12686129f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_186_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.13625082f ? 
        0.060606062f : 
         (data[13 /* X14 */] <0.11957968f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.265625f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.12697849f ? 
                     (data[33 /* X34 */] <-0.1125f ? 
                         (data[31 /* X32 */] <0.039027914f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.11698428f ? 
             (data[1 /* X2 */] <-0.7684287f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.27290517f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.3860078f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16676284f ? 
            0.0f : 
             (data[19 /* X20 */] <0.12034323f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14779529f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36340037f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.066062935f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.4f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.049410883f ? 
         (data[29 /* X30 */] <0.10572645f ? 
             (data[27 /* X28 */] <-0.15990338f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.11352056f ? 
                 (data[32 /* X33 */] <-0.19921719f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.035719495f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21261111f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[21 /* X22 */] <0.1117921f ? 
             (data[16 /* X17 */] <-0.1794772f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29136917f ? 
             (data[11 /* X12 */] <-0.42699742f ? 
                 (data[1 /* X2 */] <-0.0190875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_187_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2007673f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18072659f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12572539f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.048195396f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.5809195f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23071225f ? 
             (data[0 /* X1 */] <-0.20350602f ? 
                 (data[26 /* X27 */] <0.7981452f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.01530533f ? 
         (data[24 /* X25 */] <-0.3559002f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5541189f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21102217f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.17510802f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.5107422f ? 
         (data[30 /* X31 */] <0.07164411f ? 
             (data[26 /* X27 */] <0.11648871f ? 
                0.0f : 
                1.0f) : 
             (data[22 /* X23 */] <0.15599185f ? 
                 (data[5 /* X6 */] <0.09021701f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.47987512f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.11743817f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.059984475f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.9745391f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_188_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.018202204f ? 
            0.0f : 
             (data[23 /* X24 */] <0.07553167f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.43297207f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20707177f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.06956747f ? 
                 (data[21 /* X22 */] <0.09598312f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.44647712f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17332427f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[10 /* X11 */] <-0.4365928f ? 
             (data[29 /* X30 */] <0.09510044f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.13665174f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.7519713f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4652586f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.88627493f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5296229f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21956345f ? 
                 (data[18 /* X19 */] <0.092445254f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.042880032f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[19 /* X20 */] <-0.008733298f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.018202204f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.012779457f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X2 */] <-0.5441733f ? 
             (data[31 /* X32 */] <0.041030508f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[10 /* X11 */] <-0.016623372f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2626911f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_189_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[34 /* X35 */] <-0.3984375f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.101132154f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X11 */] <-0.49185193f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24753335f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.38449132f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.08303565f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[26 /* X27 */] <0.01530533f ? 
        0.7777778f : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.132986f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.008148214f ? 
                 (data[32 /* X33 */] <-0.7911933f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.013057707f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09585995f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0123046385f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.40198797f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[29 /* X30 */] <0.10572645f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.21222463f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.17581517f ? 
             (data[3 /* X4 */] <-0.33429587f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.16104443f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.030832864f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_190_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (data[34 /* X35 */] <-0.6015625f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.094228975f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.38380533f ? 
                 (data[24 /* X25 */] <-0.31907144f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.19325657f ? 
         (data[8 /* X9 */] <-0.32310644f ? 
             (data[11 /* X12 */] <0.19902575f ? 
                1.0f : 
                0.0f) : 
             (data[19 /* X20 */] <-0.45834985f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.16900332f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31734654f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (data[33 /* X34 */] <-0.821875f ? 
             (data[30 /* X31 */] <0.15123326f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.05179445f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.51171875f ? 
             (data[30 /* X31 */] <0.09144434f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.08833049f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.0022794714f ? 
                1.0f : 
                0.0f)) : 
        0.025f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.014600216f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.12312323f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.3499866f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_191_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[28 /* X29 */] <0.1143349f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
                 (data[17 /* X18 */] <-0.4661188f ? 
                     (data[30 /* X31 */] <0.099985614f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.1996118f ? 
             (data[7 /* X8 */] <0.040418845f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.4309524f ? 
             (data[10 /* X11 */] <-0.5518476f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.11197705f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.7328125f ? 
         (data[8 /* X9 */] <0.3529278f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.080832064f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.15730992f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.114058204f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.20578873f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.113231726f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.023255814f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.13455316f ? 
        0.012658228f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_192_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09468054f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.11443579f ? 
             (data[12 /* X13 */] <0.0965589f ? 
                 (data[8 /* X9 */] <0.043418154f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16971566f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.12319189f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.15744802f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23093955f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21963197f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.23819678f ? 
                 (data[35 /* X36 */] <-0.5960779f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.028771881f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.16637461f ? 
             (data[26 /* X27 */] <-0.12087381f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.08477194f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.31148124f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07740032f ? 
                 (data[10 /* X11 */] <-0.21081975f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.080257975f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.11443579f ? 
             (data[26 /* X27 */] <0.11953182f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07570752f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5375476f ? 
                     (data[8 /* X9 */] <-0.029141933f ? 
                         (data[14 /* X15 */] <0.14251506f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.37056455f ? 
                 (data[5 /* X6 */] <0.13372767f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[30 /* X31 */] <0.07824419f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12686129f ? 
        0.013333334f : 
         (data[28 /* X29 */] <0.15668616f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3202269f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_193_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18547326f ? 
         (data[19 /* X20 */] <-0.22493649f ? 
            1.0f : 
             (data[15 /* X16 */] <0.04693364f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.058326207f ? 
                     (data[14 /* X15 */] <0.12796707f ? 
                         (data[9 /* X10 */] <-0.10352531f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.10843095f ? 
                            0.0f : 
                             (data[31 /* X32 */] <0.04143103f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18252203f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.07654846f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.11482112f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[13 /* X14 */] <0.07699975f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18815514f ? 
         (data[29 /* X30 */] <0.06290987f ? 
            1.0f : 
             (data[20 /* X21 */] <0.0872155f ? 
                 (data[8 /* X9 */] <0.032558165f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[14 /* X15 */] <0.15524456f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.033141468f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.15880722f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[18 /* X19 */] <0.10870368f ? 
         (data[13 /* X14 */] <0.117527634f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46353993f ? 
                1.0f : 
                0.0f)) : 
        0.04f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.07456437f ? 
         (data[26 /* X27 */] <0.069320515f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.16971566f ? 
                 (data[24 /* X25 */] <-0.46638653f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.00788186f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.14573027f ? 
            0.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.10445943f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.173738f ? 
                    1.0f : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.14569743f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2468956f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_194_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.045818184f ? 
         (data[32 /* X33 */] <-0.11443579f ? 
             (data[35 /* X36 */] <-0.2557361f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[1 /* X2 */] <-0.4211063f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.48103735f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5213061f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8174337f ? 
                 (data[10 /* X11 */] <-0.29731178f ? 
                     (data[14 /* X15 */] <0.14978905f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.04242704f ? 
         (data[1 /* X2 */] <-0.7684287f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.8503992f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.19043468f ? 
                    0.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2875f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[12 /* X13 */] <0.120985754f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
        0.0f : 
         (data[15 /* X16 */] <0.07901858f ? 
             (data[1 /* X2 */] <-0.26002553f ? 
                 (data[12 /* X13 */] <0.10613042f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[17 /* X18 */] <-0.12590548f ? 
                 (data[18 /* X19 */] <0.07366052f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.05886902f ? 
         (data[32 /* X33 */] <-0.20392439f ? 
            1.0f : 
             (data[28 /* X29 */] <0.06995485f ? 
                 (data[1 /* X2 */] <-0.057481524f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.023255814f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.33367112f ? 
        1.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.10359881f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <1.0389894f ? 
                0.0f : 
                1.0f) : 
             (data[14 /* X15 */] <0.14797056f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_195_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X13 */] <0.1387072f ? 
         (data[15 /* X16 */] <0.045818184f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.107045785f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.050042182f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.23088843f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15008532f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[4 /* X5 */] <0.06530377f ? 
            1.0f : 
             (data[15 /* X16 */] <0.034440532f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33556914f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.40872976f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24367139f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.8288764f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2242867f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X3 */] <0.08477194f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.10144753f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.097235836f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.14933433f ? 
         (data[26 /* X27 */] <-0.12087381f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5546875f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.33398113f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.1059661f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.13880959f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.045455f ? 
                 (data[35 /* X36 */] <-0.28191626f ? 
                    0.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09109536f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (data[26 /* X27 */] <0.22756219f ? 
             (data[18 /* X19 */] <0.25674316f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_196_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.15546875f ? 
         (data[15 /* X16 */] <0.03800999f ? 
             (data[9 /* X10 */] <-0.29384008f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (data[21 /* X22 */] <0.032652345f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.023082852f ? 
        0.0f : 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.077831775f ? 
             (data[21 /* X22 */] <0.032747183f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.16332911f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.5322475f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5565526f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.27744865f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.17395887f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.1850873f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[17 /* X18 */] <-0.12827493f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[19 /* X20 */] <-0.02164095f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.06875932f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.059984475f ? 
             (data[35 /* X36 */] <-0.21085589f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.4801973f ? 
                1.0f : 
                0.0f)) : 
         (data[21 /* X22 */] <0.09541851f ? 
             (data[27 /* X28 */] <-0.094176464f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.12891966f ? 
            0.0f : 
            1.0f) : 
         (data[19 /* X20 */] <-0.06681774f ? 
             (data[9 /* X10 */] <-0.20075133f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_197_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.07369782f ? 
         (data[33 /* X34 */] <-0.4f ? 
             (data[13 /* X14 */] <0.09854622f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.4453125f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.046435717f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.20027393f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19261745f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24651189f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15994388f ? 
         (data[19 /* X20 */] <-0.26796198f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16578816f ? 
             (data[4 /* X5 */] <0.16457385f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.053421557f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.7109375f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.012675101f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X13 */] <0.101348475f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.16251855f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.35990095f ? 
                 (data[25 /* X26 */] <-0.48315147f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.15589213f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123637505f ? 
        0.012658228f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_198_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.2127259f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18575557f ? 
             (data[25 /* X26 */] <-0.48217043f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[14 /* X15 */] <0.0934156f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.05748751f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[21 /* X22 */] <0.1623244f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23071225f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.18803988f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07936608f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18886091f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.085565224f ? 
         (data[13 /* X14 */] <0.090338044f ? 
            1.0f : 
            0.0f) : 
         (data[15 /* X16 */] <0.06009602f ? 
             (data[18 /* X19 */] <0.07938185f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.155618f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.3419246f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_199_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[30 /* X31 */] <0.10833277f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.16409197f ? 
             (data[7 /* X8 */] <0.05353046f ? 
                1.0f : 
                 (data[0 /* X1 */] <0.0064592995f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10212733f ? 
                         (data[32 /* X33 */] <-0.16477312f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.47540003f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.11728276f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.44375f ? 
                 (data[24 /* X25 */] <-0.3835218f ? 
                     (data[33 /* X34 */] <-0.5149902f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.28947476f ? 
         (data[21 /* X22 */] <0.1623244f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.110259496f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17107579f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.24113671f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.66009706f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09185671f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.2f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34940267f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[17 /* X18 */] <-0.14723057f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.148186f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3926248f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X7 */] <0.108748086f ? 
             (data[25 /* X26 */] <-0.6153152f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}



