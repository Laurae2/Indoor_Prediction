/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:52:00.134+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_Tanh_09

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_Tanh_09 > h2o_nn_32x6_Tanh_09.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_Tanh_09.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_Tanh_09", algorithm="deeplearning")
public class h2o_nn_32x6_Tanh_09 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_09_Activation_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_09_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_09_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_Tanh_09_Bias_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_09_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_09_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_Tanh_09_Weight_0.VALUES,
      /* Tanh */ h2o_nn_32x6_Tanh_09_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_Tanh_09_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_Tanh_09.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_Tanh_09_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_Tanh_09() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(1542105899786970848L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = 1 - 2 / (1 + Math.exp(2*ACTIVATION[i][r]));
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_Tanh_09_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_Tanh_09_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Tanh layer
class h2o_nn_32x6_Tanh_09_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_09_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_Tanh_09_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_09_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_Tanh_09_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Tanh layer
class h2o_nn_32x6_Tanh_09_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_Tanh_09_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.09477591401840546;
      sa[1] = 0.11161590333738847;
      sa[2] = -0.01798087003654108;
      sa[3] = -0.21995404511549418;
      sa[4] = -0.011736808468612301;
      sa[5] = 0.09902686222156112;
      sa[6] = 0.3660953753890872;
      sa[7] = -0.16080706028563074;
      sa[8] = -0.13950731178895315;
      sa[9] = 0.021312348302354907;
      sa[10] = -0.06988596945269746;
      sa[11] = 0.07637386138468538;
      sa[12] = 0.05822226627969833;
      sa[13] = 0.10517545976523145;
      sa[14] = -0.12250114047882207;
      sa[15] = 0.032684489855007055;
      sa[16] = 0.07176094659499;
      sa[17] = 0.017889667999959332;
      sa[18] = -0.056393328838920766;
      sa[19] = 0.07776775590325484;
      sa[20] = 0.17313622583903676;
      sa[21] = -0.03062094038835934;
      sa[22] = -0.4464892852168654;
      sa[23] = 0.008479237514336466;
      sa[24] = -0.1183126647721528;
      sa[25] = 0.1901001781205;
      sa[26] = -0.02230050269113846;
      sa[27] = 0.12031646586169956;
      sa[28] = -0.2732588964447023;
      sa[29] = 0.004703344663791262;
      sa[30] = 0.2789494308373082;
      sa[31] = -0.15587233719699642;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_Tanh_09_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_Tanh_09_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.1389099522407321;
      sa[1] = -0.18563464893263285;
      sa[2] = -0.13671719232450108;
      sa[3] = -0.013818391335054256;
      sa[4] = -0.08005436052875355;
      sa[5] = -0.07017063131230704;
    }
  }
}
class h2o_nn_32x6_Tanh_09_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Tanh layer
class h2o_nn_32x6_Tanh_09_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_Tanh_09_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.04983385f;
      sa[1] = 0.078315035f;
      sa[2] = 0.041233405f;
      sa[3] = -0.017406482f;
      sa[4] = -0.23536065f;
      sa[5] = -0.15884872f;
      sa[6] = -0.12168666f;
      sa[7] = 0.2606039f;
      sa[8] = 0.025926484f;
      sa[9] = -0.121962786f;
      sa[10] = -0.15511002f;
      sa[11] = -0.10391307f;
      sa[12] = 0.06774208f;
      sa[13] = -0.22705787f;
      sa[14] = -0.21462283f;
      sa[15] = 0.03304561f;
      sa[16] = -0.0592997f;
      sa[17] = 0.14136517f;
      sa[18] = -0.24714674f;
      sa[19] = 0.115844004f;
      sa[20] = 0.1730211f;
      sa[21] = -0.36966264f;
      sa[22] = 0.14591944f;
      sa[23] = -0.19039987f;
      sa[24] = 0.23557977f;
      sa[25] = -0.063998565f;
      sa[26] = -0.11912667f;
      sa[27] = 0.39337522f;
      sa[28] = 0.24331284f;
      sa[29] = -0.25123307f;
      sa[30] = -0.10759215f;
      sa[31] = 0.28163338f;
      sa[32] = 0.23392266f;
      sa[33] = -0.08774677f;
      sa[34] = -0.041171275f;
      sa[35] = -0.14758599f;
      sa[36] = 0.25592038f;
      sa[37] = 0.16768064f;
      sa[38] = -0.33555582f;
      sa[39] = 0.23607858f;
      sa[40] = -0.11400462f;
      sa[41] = -0.06708552f;
      sa[42] = -0.18101503f;
      sa[43] = -0.18142396f;
      sa[44] = 0.32638612f;
      sa[45] = -0.41555023f;
      sa[46] = 0.07558189f;
      sa[47] = 0.10428442f;
      sa[48] = 0.11142609f;
      sa[49] = 0.25637877f;
      sa[50] = 0.15271974f;
      sa[51] = -0.47856507f;
      sa[52] = -0.22798504f;
      sa[53] = 0.08009841f;
      sa[54] = 0.16865157f;
      sa[55] = 0.036425315f;
      sa[56] = -0.3640901f;
      sa[57] = -0.5102261f;
      sa[58] = 0.16101843f;
      sa[59] = -0.42096367f;
      sa[60] = -0.50679815f;
      sa[61] = 0.26138836f;
      sa[62] = 0.11623402f;
      sa[63] = -0.045326676f;
      sa[64] = -0.047262978f;
      sa[65] = -0.08106293f;
      sa[66] = -0.06168065f;
      sa[67] = -0.12376827f;
      sa[68] = -0.22365136f;
      sa[69] = 0.05409811f;
      sa[70] = 0.014993546f;
      sa[71] = 0.37180057f;
      sa[72] = -0.33889374f;
      sa[73] = 0.34425586f;
      sa[74] = -0.06577748f;
      sa[75] = -0.13975444f;
      sa[76] = -0.09815704f;
      sa[77] = -0.0040980084f;
      sa[78] = -0.043762166f;
      sa[79] = 0.40451428f;
      sa[80] = -0.330878f;
      sa[81] = 0.054279864f;
      sa[82] = -0.1059218f;
      sa[83] = 0.10911375f;
      sa[84] = 0.11849954f;
      sa[85] = 0.025114613f;
      sa[86] = 0.23111965f;
      sa[87] = 0.58981544f;
      sa[88] = 0.34308195f;
      sa[89] = 0.14461458f;
      sa[90] = -0.19740595f;
      sa[91] = 0.103156194f;
      sa[92] = 0.22915159f;
      sa[93] = -0.07394298f;
      sa[94] = -0.074022934f;
      sa[95] = -0.024451021f;
      sa[96] = 0.2622828f;
      sa[97] = -0.11537359f;
      sa[98] = 0.2463556f;
      sa[99] = 0.10639715f;
      sa[100] = 0.11547749f;
      sa[101] = -0.014345634f;
      sa[102] = -0.07534793f;
      sa[103] = 0.19756255f;
      sa[104] = -0.05722623f;
      sa[105] = -0.10500574f;
      sa[106] = -0.22527994f;
      sa[107] = 0.1244312f;
      sa[108] = 0.17509697f;
      sa[109] = -0.019476293f;
      sa[110] = -0.103604905f;
      sa[111] = 0.15031187f;
      sa[112] = 0.110130854f;
      sa[113] = 0.001884074f;
      sa[114] = -0.046107367f;
      sa[115] = 0.018994043f;
      sa[116] = -0.16178861f;
      sa[117] = -0.08379218f;
      sa[118] = -0.37181723f;
      sa[119] = 0.116749264f;
      sa[120] = 0.29447332f;
      sa[121] = 0.3294019f;
      sa[122] = 0.45213813f;
      sa[123] = 0.59890723f;
      sa[124] = 0.3076978f;
      sa[125] = 0.16473714f;
      sa[126] = -0.30882674f;
      sa[127] = -0.4632308f;
      sa[128] = 0.13316956f;
      sa[129] = 0.19792071f;
      sa[130] = 0.021658272f;
      sa[131] = 0.36639994f;
      sa[132] = 0.21305636f;
      sa[133] = -0.24432841f;
      sa[134] = -0.07979546f;
      sa[135] = -0.4559496f;
      sa[136] = -0.29344228f;
      sa[137] = -0.093049206f;
      sa[138] = -0.0012671012f;
      sa[139] = -0.23889261f;
      sa[140] = -0.102091685f;
      sa[141] = -0.15414111f;
      sa[142] = 0.18826412f;
      sa[143] = -0.2692425f;
      sa[144] = 0.09605089f;
      sa[145] = -0.25427672f;
      sa[146] = -0.45328376f;
      sa[147] = -0.09637968f;
      sa[148] = 0.12392534f;
      sa[149] = 0.10803585f;
      sa[150] = 0.19629647f;
      sa[151] = -0.2219077f;
      sa[152] = -0.07998029f;
      sa[153] = 0.2902306f;
      sa[154] = 0.103342764f;
      sa[155] = -0.07435386f;
      sa[156] = 0.12808713f;
      sa[157] = -0.21828789f;
      sa[158] = 0.055987448f;
      sa[159] = 0.14710522f;
      sa[160] = -0.08616843f;
      sa[161] = 0.13216205f;
      sa[162] = 0.009138566f;
      sa[163] = -0.38443613f;
      sa[164] = 0.18851209f;
      sa[165] = -0.07626276f;
      sa[166] = -0.11470994f;
      sa[167] = -0.031218989f;
      sa[168] = 0.12688054f;
      sa[169] = 0.0960305f;
      sa[170] = 0.2137516f;
      sa[171] = 0.1647627f;
      sa[172] = -0.09493297f;
      sa[173] = -0.17004886f;
      sa[174] = -0.08377018f;
      sa[175] = -0.12997882f;
      sa[176] = 0.001351138f;
      sa[177] = 0.060203094f;
      sa[178] = -0.1254501f;
      sa[179] = 0.117795184f;
      sa[180] = -0.12399817f;
      sa[181] = -0.41230106f;
      sa[182] = -0.25464272f;
      sa[183] = 0.22426634f;
      sa[184] = 0.30832553f;
      sa[185] = 0.110601686f;
      sa[186] = -0.3377363f;
      sa[187] = -0.022441544f;
      sa[188] = -0.15608053f;
      sa[189] = 0.22038636f;
      sa[190] = 0.04235909f;
      sa[191] = -0.3137638f;
      sa[192] = -0.2444373f;
      sa[193] = 0.052050263f;
      sa[194] = -0.057762593f;
      sa[195] = 0.06791787f;
      sa[196] = 0.13506773f;
      sa[197] = 0.017108046f;
      sa[198] = 0.368782f;
      sa[199] = -0.107012205f;
      sa[200] = -0.03602157f;
      sa[201] = -0.27747896f;
      sa[202] = 0.045540012f;
      sa[203] = -0.14436916f;
      sa[204] = -0.3855985f;
      sa[205] = 0.24915731f;
      sa[206] = 0.43322295f;
      sa[207] = 0.10270344f;
      sa[208] = -0.3442527f;
      sa[209] = -0.11722952f;
      sa[210] = -0.45373952f;
      sa[211] = -0.3997525f;
      sa[212] = 0.30008072f;
      sa[213] = -0.22331128f;
      sa[214] = -0.043390434f;
      sa[215] = 0.12242374f;
      sa[216] = 0.11508544f;
      sa[217] = 0.07317168f;
      sa[218] = -0.13722147f;
      sa[219] = 0.26473078f;
      sa[220] = -0.11724578f;
      sa[221] = 0.10304014f;
      sa[222] = 0.18717375f;
      sa[223] = 0.042500876f;
      sa[224] = 0.097400114f;
      sa[225] = 0.3733367f;
      sa[226] = -0.11066655f;
      sa[227] = -0.14706078f;
      sa[228] = 0.09232933f;
      sa[229] = 0.057003327f;
      sa[230] = 0.16835746f;
      sa[231] = -0.35617808f;
      sa[232] = -0.27957633f;
      sa[233] = 0.23289694f;
      sa[234] = 0.35062054f;
      sa[235] = -0.112675324f;
      sa[236] = 0.023536652f;
      sa[237] = -0.12972526f;
      sa[238] = -0.269301f;
      sa[239] = 0.15006681f;
      sa[240] = 0.07309073f;
      sa[241] = -0.18479608f;
      sa[242] = 0.13201907f;
      sa[243] = -0.1721077f;
      sa[244] = -0.027096234f;
      sa[245] = 0.08787892f;
      sa[246] = -0.08770793f;
      sa[247] = 0.07469022f;
      sa[248] = 0.18187949f;
      sa[249] = 0.10492708f;
      sa[250] = -0.11524918f;
      sa[251] = -0.034482703f;
      sa[252] = -0.1281397f;
      sa[253] = -0.14093551f;
      sa[254] = -0.015836762f;
      sa[255] = 0.40390268f;
      sa[256] = -0.1304828f;
      sa[257] = 0.27237436f;
      sa[258] = -0.14422381f;
      sa[259] = -0.13462308f;
      sa[260] = -0.047565132f;
      sa[261] = -0.110828735f;
      sa[262] = -0.104955554f;
      sa[263] = 0.2911119f;
      sa[264] = -0.12559412f;
      sa[265] = 0.059091456f;
      sa[266] = -0.20496334f;
      sa[267] = -0.23982424f;
      sa[268] = 0.25526205f;
      sa[269] = -0.14443508f;
      sa[270] = -0.09507664f;
      sa[271] = 0.32380125f;
      sa[272] = -0.03179213f;
      sa[273] = -0.047740526f;
      sa[274] = 0.19890375f;
      sa[275] = -0.0014242283f;
      sa[276] = 0.12020592f;
      sa[277] = -0.1146445f;
      sa[278] = -0.28289723f;
      sa[279] = 0.024802284f;
      sa[280] = -0.16356431f;
      sa[281] = 0.25676432f;
      sa[282] = -0.1122017f;
      sa[283] = -0.14726715f;
      sa[284] = 0.06347805f;
      sa[285] = -0.17813753f;
      sa[286] = 0.22271638f;
      sa[287] = 0.07014659f;
      sa[288] = -0.2987548f;
      sa[289] = -0.16056614f;
      sa[290] = -0.17968577f;
      sa[291] = -0.11380744f;
      sa[292] = 0.11080705f;
      sa[293] = -0.18059857f;
      sa[294] = -0.047316045f;
      sa[295] = 0.09327964f;
      sa[296] = 0.009326016f;
      sa[297] = 0.27415574f;
      sa[298] = -0.036801852f;
      sa[299] = -0.27296486f;
      sa[300] = -0.055130184f;
      sa[301] = -0.16310917f;
      sa[302] = 0.01933162f;
      sa[303] = -0.04495185f;
      sa[304] = -0.14181347f;
      sa[305] = 0.07160091f;
      sa[306] = 0.3585968f;
      sa[307] = -0.112557285f;
      sa[308] = 0.07643537f;
      sa[309] = 0.15495853f;
      sa[310] = 0.21320815f;
      sa[311] = 0.35195777f;
      sa[312] = -0.12849626f;
      sa[313] = -0.19105457f;
      sa[314] = -0.024646493f;
      sa[315] = 0.16171004f;
      sa[316] = -7.619424E-4f;
      sa[317] = -0.033256162f;
      sa[318] = 0.09853256f;
      sa[319] = 0.3615223f;
      sa[320] = -0.1732783f;
      sa[321] = 0.06293822f;
      sa[322] = 0.38216296f;
      sa[323] = 0.025330307f;
      sa[324] = 0.10046468f;
      sa[325] = 0.1897899f;
      sa[326] = -0.39706072f;
      sa[327] = 0.035019547f;
      sa[328] = -0.16586523f;
      sa[329] = 0.24963266f;
      sa[330] = -0.20835604f;
      sa[331] = -0.033738505f;
      sa[332] = -0.12152256f;
      sa[333] = 0.011872996f;
      sa[334] = -0.056446612f;
      sa[335] = 0.465397f;
      sa[336] = -0.1814614f;
      sa[337] = -0.11045584f;
      sa[338] = 0.26236436f;
      sa[339] = -0.18973687f;
      sa[340] = -0.48289925f;
      sa[341] = -0.38217372f;
      sa[342] = 0.050623424f;
      sa[343] = -0.13909942f;
      sa[344] = -0.25998363f;
      sa[345] = 0.058183685f;
      sa[346] = 0.13018656f;
      sa[347] = -0.3277092f;
      sa[348] = 0.1176776f;
      sa[349] = -0.26990354f;
      sa[350] = -0.29676807f;
      sa[351] = 0.08907962f;
      sa[352] = 0.046635434f;
      sa[353] = -0.2191335f;
      sa[354] = -0.0073449565f;
      sa[355] = -0.018689062f;
      sa[356] = -0.10883257f;
      sa[357] = 0.3374976f;
      sa[358] = -0.3526935f;
      sa[359] = -0.041301526f;
      sa[360] = 0.29341206f;
      sa[361] = 0.041509856f;
      sa[362] = -0.17252852f;
      sa[363] = 0.058456764f;
      sa[364] = -0.23843902f;
      sa[365] = -0.14076033f;
      sa[366] = -0.022168152f;
      sa[367] = -0.22924952f;
      sa[368] = -0.016426513f;
      sa[369] = 0.17363212f;
      sa[370] = -0.15681042f;
      sa[371] = 0.29322058f;
      sa[372] = 0.02093875f;
      sa[373] = 0.3866979f;
      sa[374] = -0.078081176f;
      sa[375] = -0.17080414f;
      sa[376] = -0.21430655f;
      sa[377] = -0.32047713f;
      sa[378] = 0.037496474f;
      sa[379] = 0.11943834f;
      sa[380] = -0.139045f;
      sa[381] = -0.16216815f;
      sa[382] = -0.043103382f;
      sa[383] = -0.12098194f;
      sa[384] = -0.06661482f;
      sa[385] = 0.10344151f;
      sa[386] = -0.45770088f;
      sa[387] = -0.09305619f;
      sa[388] = 0.09133217f;
      sa[389] = -0.03890454f;
      sa[390] = 0.09665929f;
      sa[391] = -0.028042074f;
      sa[392] = 0.120830655f;
      sa[393] = 0.11859378f;
      sa[394] = 0.018944744f;
      sa[395] = 0.27655992f;
      sa[396] = 0.43455222f;
      sa[397] = -0.32600802f;
      sa[398] = -0.11686788f;
      sa[399] = -0.12187299f;
      sa[400] = 0.09531165f;
      sa[401] = 0.26453808f;
      sa[402] = -0.19501759f;
      sa[403] = 0.0052657085f;
      sa[404] = 0.30518466f;
      sa[405] = -0.3979551f;
      sa[406] = -0.035117548f;
      sa[407] = 0.059755154f;
      sa[408] = -0.2960272f;
      sa[409] = -0.20236373f;
      sa[410] = -0.17442928f;
      sa[411] = 0.09032408f;
      sa[412] = -0.18077071f;
      sa[413] = 0.008979557f;
      sa[414] = 0.123502776f;
      sa[415] = 0.392211f;
      sa[416] = -0.27551863f;
      sa[417] = -0.09206126f;
      sa[418] = -0.10010319f;
      sa[419] = 0.124905474f;
      sa[420] = 0.13081108f;
      sa[421] = 0.2524061f;
      sa[422] = 0.33782923f;
      sa[423] = 0.120323f;
      sa[424] = 0.020640112f;
      sa[425] = -0.12122683f;
      sa[426] = -0.24616867f;
      sa[427] = 0.17913544f;
      sa[428] = -0.16092749f;
      sa[429] = -0.30508232f;
      sa[430] = 0.30103678f;
      sa[431] = 0.07943411f;
      sa[432] = 0.028268073f;
      sa[433] = 0.22039165f;
      sa[434] = 0.41490087f;
      sa[435] = -0.12748662f;
      sa[436] = -0.24332881f;
      sa[437] = -0.15064637f;
      sa[438] = 0.01667683f;
      sa[439] = 0.13811229f;
      sa[440] = 0.35714066f;
      sa[441] = -0.23307154f;
      sa[442] = 0.105687186f;
      sa[443] = 0.09759246f;
      sa[444] = -0.103204586f;
      sa[445] = 0.22543664f;
      sa[446] = 0.29584634f;
      sa[447] = 0.24563973f;
      sa[448] = 0.29479948f;
      sa[449] = 0.284116f;
      sa[450] = -0.34315905f;
      sa[451] = 0.22226232f;
      sa[452] = 0.22174783f;
      sa[453] = -0.02053487f;
      sa[454] = -0.11871997f;
      sa[455] = 0.051695738f;
      sa[456] = 0.11042776f;
      sa[457] = -0.004157436f;
      sa[458] = -0.2546352f;
      sa[459] = 0.38601854f;
      sa[460] = 0.3572064f;
      sa[461] = 0.39841443f;
      sa[462] = 0.25829425f;
      sa[463] = 0.43485466f;
      sa[464] = -0.3251931f;
      sa[465] = 0.20353548f;
      sa[466] = -0.034288947f;
      sa[467] = 0.068508044f;
      sa[468] = 0.058925677f;
      sa[469] = 0.27892116f;
      sa[470] = 0.103304975f;
      sa[471] = -0.15048277f;
      sa[472] = -0.04692767f;
      sa[473] = -0.05108886f;
      sa[474] = -0.056849938f;
      sa[475] = 0.16185713f;
      sa[476] = 0.1564463f;
      sa[477] = -0.1766494f;
      sa[478] = 0.08147934f;
      sa[479] = -0.123493105f;
      sa[480] = -0.24943933f;
      sa[481] = -0.11650772f;
      sa[482] = -0.24724163f;
      sa[483] = 0.28253007f;
      sa[484] = 0.21476944f;
      sa[485] = 0.09538371f;
      sa[486] = -0.14900537f;
      sa[487] = -0.15836005f;
      sa[488] = -0.21011545f;
      sa[489] = 0.018075773f;
      sa[490] = -0.044529f;
      sa[491] = -0.20218867f;
      sa[492] = 0.24699603f;
      sa[493] = 0.13956872f;
      sa[494] = -0.14803457f;
      sa[495] = 0.2726367f;
      sa[496] = 0.048266534f;
      sa[497] = 0.10285887f;
      sa[498] = 0.24676535f;
      sa[499] = 0.3101804f;
      sa[500] = -0.15901795f;
      sa[501] = 0.059548933f;
      sa[502] = 0.30473104f;
      sa[503] = 0.06398671f;
      sa[504] = -0.10679339f;
      sa[505] = -0.10245518f;
      sa[506] = 0.33835164f;
      sa[507] = 0.028061863f;
      sa[508] = 0.18832716f;
      sa[509] = 0.19544801f;
      sa[510] = 0.25888568f;
      sa[511] = 0.022978833f;
      sa[512] = 0.10302426f;
      sa[513] = -0.027705977f;
      sa[514] = 0.19153571f;
      sa[515] = -0.38118035f;
      sa[516] = 0.06262253f;
      sa[517] = 0.05877653f;
      sa[518] = 0.18796709f;
      sa[519] = -0.10583572f;
      sa[520] = 0.47125146f;
      sa[521] = 0.2084702f;
      sa[522] = 0.15757371f;
      sa[523] = 0.26525792f;
      sa[524] = 0.27360305f;
      sa[525] = 0.28698292f;
      sa[526] = 0.12032817f;
      sa[527] = 0.056603864f;
      sa[528] = 0.1417376f;
      sa[529] = 0.22224309f;
      sa[530] = -0.26273626f;
      sa[531] = 0.024573818f;
      sa[532] = 0.17747667f;
      sa[533] = 0.17113549f;
      sa[534] = 0.122614406f;
      sa[535] = -0.08318474f;
      sa[536] = 0.027053358f;
      sa[537] = -0.4740166f;
      sa[538] = 0.29637605f;
      sa[539] = 0.38088265f;
      sa[540] = -0.38398954f;
      sa[541] = -0.17275262f;
      sa[542] = 0.025346432f;
      sa[543] = -0.14593351f;
      sa[544] = 0.2267074f;
      sa[545] = 0.087614134f;
      sa[546] = 0.08856854f;
      sa[547] = 0.22760025f;
      sa[548] = -0.042573005f;
      sa[549] = 0.330797f;
      sa[550] = -0.041708425f;
      sa[551] = -0.10220977f;
      sa[552] = 0.032852605f;
      sa[553] = -0.13813978f;
      sa[554] = -0.17814443f;
      sa[555] = -0.16758175f;
      sa[556] = -0.23002464f;
      sa[557] = -0.09331716f;
      sa[558] = -0.117969096f;
      sa[559] = -0.016820146f;
      sa[560] = -0.24091998f;
      sa[561] = 5.4984307E-4f;
      sa[562] = 0.18826175f;
      sa[563] = 0.017558113f;
      sa[564] = 0.22344582f;
      sa[565] = -0.029388169f;
      sa[566] = 0.29258624f;
      sa[567] = -0.11540416f;
      sa[568] = -0.044011965f;
      sa[569] = 0.0803366f;
      sa[570] = -0.056412645f;
      sa[571] = -0.03360892f;
      sa[572] = 0.19213118f;
      sa[573] = 0.3382236f;
      sa[574] = -0.08630718f;
      sa[575] = -0.4793334f;
      sa[576] = -0.1604162f;
      sa[577] = -0.11104517f;
      sa[578] = -0.1214187f;
      sa[579] = 0.02863464f;
      sa[580] = 0.02407971f;
      sa[581] = -0.16170138f;
      sa[582] = -0.026202668f;
      sa[583] = -0.33691633f;
      sa[584] = 0.018839573f;
      sa[585] = 0.14564995f;
      sa[586] = -0.15193096f;
      sa[587] = -0.17719275f;
      sa[588] = -0.09403402f;
      sa[589] = -0.013479306f;
      sa[590] = -0.19257891f;
      sa[591] = -0.5467161f;
      sa[592] = -0.44004378f;
      sa[593] = -0.19840398f;
      sa[594] = 0.037160117f;
      sa[595] = -0.09042026f;
      sa[596] = 0.070580944f;
      sa[597] = -0.19128382f;
      sa[598] = 0.026481397f;
      sa[599] = -0.25947413f;
      sa[600] = -0.54410195f;
      sa[601] = 0.2381502f;
      sa[602] = 0.10471509f;
      sa[603] = 0.36573532f;
      sa[604] = 0.059750322f;
      sa[605] = 0.040270668f;
      sa[606] = 0.0022674347f;
      sa[607] = -0.26112583f;
      sa[608] = -0.005113135f;
      sa[609] = 0.12582617f;
      sa[610] = 0.13355012f;
      sa[611] = 0.0123363575f;
      sa[612] = 0.057134606f;
      sa[613] = 0.15059383f;
      sa[614] = 0.10262454f;
      sa[615] = -0.10895953f;
      sa[616] = -0.04636224f;
      sa[617] = -0.22498842f;
      sa[618] = -0.16406354f;
      sa[619] = -0.10727381f;
      sa[620] = 0.07398444f;
      sa[621] = -0.28880885f;
      sa[622] = -0.25420135f;
      sa[623] = -0.099138536f;
      sa[624] = 8.0718906E-5f;
      sa[625] = 0.36368635f;
      sa[626] = 0.051659334f;
      sa[627] = 0.35679576f;
      sa[628] = -0.1976496f;
      sa[629] = -0.14586163f;
      sa[630] = -0.41312003f;
      sa[631] = 0.24217297f;
      sa[632] = 0.074171625f;
      sa[633] = -0.22012436f;
      sa[634] = -0.21060242f;
      sa[635] = 0.15320997f;
      sa[636] = -0.07754798f;
      sa[637] = -0.027102862f;
      sa[638] = -0.24293493f;
      sa[639] = 2.7846155E-4f;
      sa[640] = -0.09825595f;
      sa[641] = -0.2743618f;
      sa[642] = 0.32944834f;
      sa[643] = -0.2014023f;
      sa[644] = -0.15660171f;
      sa[645] = -0.25156406f;
      sa[646] = 0.30926582f;
      sa[647] = -0.2667075f;
      sa[648] = 0.07568101f;
      sa[649] = 0.0034427033f;
      sa[650] = 0.11031295f;
      sa[651] = -0.022018598f;
      sa[652] = 0.05080963f;
      sa[653] = -0.09847087f;
      sa[654] = -0.028437631f;
      sa[655] = -0.15752298f;
      sa[656] = 0.33799905f;
      sa[657] = -0.0692278f;
      sa[658] = -0.2878608f;
      sa[659] = 0.0708226f;
      sa[660] = -0.18186371f;
      sa[661] = 0.0056798183f;
      sa[662] = -0.11590997f;
      sa[663] = 0.24402885f;
      sa[664] = -0.22594267f;
      sa[665] = 0.070656955f;
      sa[666] = -0.19038233f;
      sa[667] = -0.3792961f;
      sa[668] = 0.2531699f;
      sa[669] = -0.14675029f;
      sa[670] = 0.2123704f;
      sa[671] = -0.0032096237f;
      sa[672] = -0.31858706f;
      sa[673] = 0.21214867f;
      sa[674] = 0.05547243f;
      sa[675] = -0.41016337f;
      sa[676] = -0.1861829f;
      sa[677] = -0.33065823f;
      sa[678] = 0.09524786f;
      sa[679] = -0.21771426f;
      sa[680] = 0.1268478f;
      sa[681] = 0.13913745f;
      sa[682] = -0.100163296f;
      sa[683] = -0.2439229f;
      sa[684] = -0.16922475f;
      sa[685] = -0.067650475f;
      sa[686] = -0.18012889f;
      sa[687] = -0.15604307f;
      sa[688] = -0.116872475f;
      sa[689] = -0.2705619f;
      sa[690] = -0.08549408f;
      sa[691] = 0.09984098f;
      sa[692] = -0.3352279f;
      sa[693] = -0.026134623f;
      sa[694] = 0.24992125f;
      sa[695] = -0.49335623f;
      sa[696] = -0.15538874f;
      sa[697] = -0.27522492f;
      sa[698] = -0.32046148f;
      sa[699] = 0.18437894f;
      sa[700] = 0.19234352f;
      sa[701] = 0.29668313f;
      sa[702] = 0.49573657f;
      sa[703] = -0.0068230606f;
      sa[704] = -0.22112583f;
      sa[705] = 0.11432549f;
      sa[706] = -0.17450427f;
      sa[707] = 0.13889511f;
      sa[708] = 0.024771644f;
      sa[709] = -0.33702752f;
      sa[710] = 0.4671935f;
      sa[711] = -0.04734455f;
      sa[712] = 0.13811052f;
      sa[713] = 0.3510084f;
      sa[714] = 0.2222947f;
      sa[715] = 0.22031283f;
      sa[716] = 0.052628417f;
      sa[717] = 0.12242343f;
      sa[718] = 0.02294629f;
      sa[719] = 0.18471247f;
      sa[720] = -0.063656084f;
      sa[721] = 0.2559706f;
      sa[722] = 0.023550346f;
      sa[723] = 0.24455574f;
      sa[724] = 0.18973053f;
      sa[725] = -0.2222637f;
      sa[726] = -0.17983708f;
      sa[727] = -0.3266501f;
      sa[728] = -0.018554635f;
      sa[729] = 0.00272789f;
      sa[730] = 0.2208563f;
      sa[731] = -0.4821023f;
      sa[732] = 0.10092662f;
      sa[733] = 0.16011699f;
      sa[734] = -0.21038975f;
      sa[735] = 0.14558941f;
      sa[736] = 0.050023f;
      sa[737] = 0.31047183f;
      sa[738] = -0.18578082f;
      sa[739] = -0.044660512f;
      sa[740] = -0.2620037f;
      sa[741] = -0.23692767f;
      sa[742] = 0.0643489f;
      sa[743] = -0.048313636f;
      sa[744] = 0.018351128f;
      sa[745] = 0.021513017f;
      sa[746] = 0.00250281f;
      sa[747] = -0.23722067f;
      sa[748] = -0.12279562f;
      sa[749] = -0.0762532f;
      sa[750] = 0.2642722f;
      sa[751] = 0.13390155f;
      sa[752] = 0.002098925f;
      sa[753] = 0.104838f;
      sa[754] = -0.0025191733f;
      sa[755] = 0.15074188f;
      sa[756] = -0.22831878f;
      sa[757] = 0.19039336f;
      sa[758] = -0.2022802f;
      sa[759] = 0.02576691f;
      sa[760] = -0.05629156f;
      sa[761] = 0.003326894f;
      sa[762] = -0.087244496f;
      sa[763] = 0.08168329f;
      sa[764] = 0.015237638f;
      sa[765] = -0.06318757f;
      sa[766] = -0.20277639f;
      sa[767] = -0.036412448f;
      sa[768] = -0.22186835f;
      sa[769] = -0.35712996f;
      sa[770] = -0.04500023f;
      sa[771] = -0.09672615f;
      sa[772] = 0.012716073f;
      sa[773] = -0.2500436f;
      sa[774] = 0.2211782f;
      sa[775] = 0.27558905f;
      sa[776] = -0.0750724f;
      sa[777] = 0.06849875f;
      sa[778] = 0.15358442f;
      sa[779] = -0.2074145f;
      sa[780] = -0.115456976f;
      sa[781] = 0.074848756f;
      sa[782] = 0.18002278f;
      sa[783] = -0.23947199f;
      sa[784] = -0.24123277f;
      sa[785] = -0.19192645f;
      sa[786] = -0.22734194f;
      sa[787] = -0.3797577f;
      sa[788] = -0.2475036f;
      sa[789] = 0.091919206f;
      sa[790] = -0.028583532f;
      sa[791] = -0.02110349f;
      sa[792] = 0.02747475f;
      sa[793] = -0.012297223f;
      sa[794] = -0.07148337f;
      sa[795] = -0.2153877f;
      sa[796] = 0.17152244f;
      sa[797] = -0.2713242f;
      sa[798] = -0.2853455f;
      sa[799] = -0.08463242f;
      sa[800] = 0.11181687f;
      sa[801] = 0.14283554f;
      sa[802] = 0.10705822f;
      sa[803] = 0.27190173f;
      sa[804] = 0.3330815f;
      sa[805] = 0.2982039f;
      sa[806] = 0.32758224f;
      sa[807] = 0.43212885f;
      sa[808] = 0.028382538f;
      sa[809] = -0.2059148f;
      sa[810] = 0.029796125f;
      sa[811] = 0.10632782f;
      sa[812] = 0.19981772f;
      sa[813] = -0.2575243f;
      sa[814] = 0.10728257f;
      sa[815] = -0.019829875f;
      sa[816] = 0.11646344f;
      sa[817] = -0.45227036f;
      sa[818] = 0.0028743162f;
      sa[819] = -0.005239595f;
      sa[820] = -0.22859646f;
      sa[821] = -0.18902797f;
      sa[822] = -0.28970626f;
      sa[823] = 0.22424856f;
      sa[824] = 0.21730892f;
      sa[825] = 0.42164358f;
      sa[826] = -0.42639235f;
      sa[827] = -0.42077723f;
      sa[828] = 0.07306313f;
      sa[829] = -0.051010482f;
      sa[830] = 0.32941657f;
      sa[831] = 0.26532316f;
      sa[832] = 0.18552034f;
      sa[833] = 0.09675715f;
      sa[834] = 0.23137972f;
      sa[835] = -0.021015339f;
      sa[836] = 0.2124985f;
      sa[837] = -0.085511506f;
      sa[838] = 0.16509974f;
      sa[839] = -0.13580433f;
      sa[840] = 0.22506653f;
      sa[841] = 0.12421217f;
      sa[842] = 0.20262696f;
      sa[843] = 0.12221202f;
      sa[844] = 0.06466321f;
      sa[845] = 0.17964335f;
      sa[846] = -0.3171077f;
      sa[847] = -0.003371017f;
      sa[848] = 0.2523719f;
      sa[849] = 0.29779536f;
      sa[850] = 0.03674898f;
      sa[851] = 0.15842561f;
      sa[852] = 0.27533853f;
      sa[853] = 0.15411346f;
      sa[854] = 0.12267945f;
      sa[855] = -0.019683192f;
      sa[856] = 0.121592514f;
      sa[857] = -0.120186836f;
      sa[858] = 0.14476441f;
      sa[859] = 0.053269193f;
      sa[860] = 0.4727304f;
      sa[861] = -0.09920552f;
      sa[862] = -0.3603101f;
      sa[863] = -0.20296733f;
      sa[864] = -0.2740458f;
      sa[865] = 0.17348301f;
      sa[866] = -0.33262658f;
      sa[867] = -0.14938231f;
      sa[868] = -0.21316215f;
      sa[869] = 0.1195584f;
      sa[870] = -0.12371488f;
      sa[871] = 0.10793803f;
      sa[872] = 0.0869525f;
      sa[873] = -0.0638221f;
      sa[874] = -0.09686501f;
      sa[875] = -0.3452766f;
      sa[876] = -0.2543168f;
      sa[877] = -0.27808818f;
      sa[878] = -0.04319182f;
      sa[879] = 0.13628508f;
      sa[880] = -0.12926212f;
      sa[881] = -0.112500414f;
      sa[882] = 0.33327055f;
      sa[883] = 0.08239922f;
      sa[884] = -0.1460907f;
      sa[885] = -0.14354213f;
      sa[886] = 0.047859013f;
      sa[887] = -0.0167661f;
      sa[888] = -0.09437576f;
      sa[889] = -0.028795717f;
      sa[890] = -0.15588683f;
      sa[891] = 0.5091463f;
      sa[892] = 0.15441902f;
      sa[893] = 0.25580058f;
      sa[894] = 0.00953488f;
      sa[895] = 0.28009135f;
      sa[896] = -0.28067768f;
      sa[897] = 0.20618653f;
      sa[898] = 0.0770309f;
      sa[899] = 0.37738436f;
      sa[900] = -0.04044587f;
      sa[901] = 0.13062346f;
      sa[902] = -0.24908346f;
      sa[903] = -0.16546428f;
      sa[904] = 0.13462906f;
      sa[905] = 0.2536767f;
      sa[906] = -0.36730918f;
      sa[907] = -0.21531689f;
      sa[908] = -0.22710304f;
      sa[909] = 0.13146147f;
      sa[910] = 0.17640685f;
      sa[911] = -0.3552565f;
      sa[912] = -0.101933f;
      sa[913] = 0.067706205f;
      sa[914] = -0.30994853f;
      sa[915] = -0.050201066f;
      sa[916] = 0.27739727f;
      sa[917] = 0.15504359f;
      sa[918] = 0.04637692f;
      sa[919] = 0.3238828f;
      sa[920] = 0.06302167f;
      sa[921] = -0.17694072f;
      sa[922] = -0.25230122f;
      sa[923] = -0.1777474f;
      sa[924] = -0.08626624f;
      sa[925] = -0.14648677f;
      sa[926] = 0.123639524f;
      sa[927] = 0.16246845f;
      sa[928] = 0.27624097f;
      sa[929] = 0.2081852f;
      sa[930] = 0.2735778f;
      sa[931] = 0.11500767f;
      sa[932] = 0.16800623f;
      sa[933] = -0.03988988f;
      sa[934] = 0.30966964f;
      sa[935] = -0.15180214f;
      sa[936] = 0.04816423f;
      sa[937] = 0.11047033f;
      sa[938] = -0.27124178f;
      sa[939] = 0.06668043f;
      sa[940] = -0.05467338f;
      sa[941] = -0.34892437f;
      sa[942] = -0.23845461f;
      sa[943] = -0.27009517f;
      sa[944] = -0.27039912f;
      sa[945] = -0.048284497f;
      sa[946] = 0.0030420548f;
      sa[947] = 0.15958746f;
      sa[948] = 0.038761303f;
      sa[949] = -0.2598991f;
      sa[950] = 0.055711366f;
      sa[951] = -0.20357384f;
      sa[952] = -0.28085703f;
      sa[953] = -0.26526442f;
      sa[954] = -0.010503379f;
      sa[955] = -0.0087891575f;
      sa[956] = -0.042161174f;
      sa[957] = 0.021993835f;
      sa[958] = 0.08507063f;
      sa[959] = -0.22799143f;
      sa[960] = 0.14799099f;
      sa[961] = -0.07992068f;
      sa[962] = 0.06435256f;
      sa[963] = -0.109108225f;
      sa[964] = -0.27127147f;
      sa[965] = 0.16363083f;
      sa[966] = -0.21361029f;
      sa[967] = -0.43939465f;
      sa[968] = 0.067922726f;
      sa[969] = -0.015153079f;
      sa[970] = 0.404893f;
      sa[971] = 0.11929291f;
      sa[972] = -0.08110531f;
      sa[973] = -0.20671879f;
      sa[974] = -0.28500372f;
      sa[975] = -0.18521579f;
      sa[976] = -0.11242301f;
      sa[977] = 0.10764315f;
      sa[978] = -0.075560674f;
      sa[979] = 0.15931234f;
      sa[980] = 0.18998164f;
      sa[981] = -0.21488503f;
      sa[982] = 0.21185707f;
      sa[983] = 0.07422594f;
      sa[984] = -0.2958162f;
      sa[985] = 0.11034734f;
      sa[986] = -0.24924764f;
      sa[987] = 0.10331581f;
      sa[988] = 0.118722886f;
      sa[989] = 0.22503732f;
      sa[990] = 0.10515527f;
      sa[991] = -0.17143443f;
      sa[992] = -0.2707677f;
      sa[993] = -0.12922835f;
      sa[994] = -0.20236553f;
      sa[995] = -0.3448306f;
      sa[996] = 0.10126175f;
      sa[997] = 0.20652379f;
      sa[998] = -0.025017321f;
      sa[999] = 0.17590944f;
      sa[1000] = -0.0136253135f;
      sa[1001] = 0.1775428f;
      sa[1002] = 0.27329695f;
      sa[1003] = -0.14006032f;
      sa[1004] = 0.2013276f;
      sa[1005] = -0.16487494f;
      sa[1006] = -0.17576025f;
      sa[1007] = -0.035158314f;
      sa[1008] = 0.075240776f;
      sa[1009] = 0.14287603f;
      sa[1010] = 0.25649014f;
      sa[1011] = 0.31840068f;
      sa[1012] = -0.010015185f;
      sa[1013] = 0.07900169f;
      sa[1014] = 0.32101092f;
      sa[1015] = -0.22090332f;
      sa[1016] = 0.22371398f;
      sa[1017] = 0.15300572f;
      sa[1018] = -0.047069017f;
      sa[1019] = 0.04572472f;
      sa[1020] = -0.18559512f;
      sa[1021] = 0.028816342f;
      sa[1022] = 0.28137496f;
      sa[1023] = 0.13952957f;
      sa[1024] = 0.11529027f;
      sa[1025] = 0.16250433f;
      sa[1026] = 0.14207678f;
      sa[1027] = 0.29062682f;
      sa[1028] = 0.39885062f;
      sa[1029] = 0.100143105f;
      sa[1030] = -0.061862934f;
      sa[1031] = 0.16578156f;
      sa[1032] = -0.04720989f;
      sa[1033] = 0.038614124f;
      sa[1034] = -0.1725597f;
      sa[1035] = -0.33767843f;
      sa[1036] = 0.31216508f;
      sa[1037] = 0.08235597f;
      sa[1038] = -0.2195804f;
      sa[1039] = 0.27101362f;
      sa[1040] = 0.043089435f;
      sa[1041] = 0.1142554f;
      sa[1042] = -0.29960275f;
      sa[1043] = -0.09723277f;
      sa[1044] = 0.35544318f;
      sa[1045] = 0.36373603f;
      sa[1046] = -0.043690026f;
      sa[1047] = -0.11440542f;
      sa[1048] = 0.102396384f;
      sa[1049] = 0.011291988f;
      sa[1050] = 0.12032903f;
      sa[1051] = -0.094346605f;
      sa[1052] = 0.30090803f;
      sa[1053] = 0.1951846f;
      sa[1054] = 0.31170547f;
      sa[1055] = 0.24204849f;
      sa[1056] = 0.3310343f;
      sa[1057] = -0.014480256f;
      sa[1058] = 0.35619584f;
      sa[1059] = -0.026467305f;
      sa[1060] = -0.16244762f;
      sa[1061] = -0.030867556f;
      sa[1062] = -0.14299841f;
      sa[1063] = 0.14389886f;
      sa[1064] = 0.08268001f;
      sa[1065] = -0.090994634f;
      sa[1066] = 0.22112367f;
      sa[1067] = -0.36743975f;
      sa[1068] = -0.1894518f;
      sa[1069] = 0.31615332f;
      sa[1070] = -0.10405242f;
      sa[1071] = 0.08164972f;
      sa[1072] = -0.21839534f;
      sa[1073] = 0.084555775f;
      sa[1074] = 0.20852031f;
      sa[1075] = -0.18888393f;
      sa[1076] = -0.17185594f;
      sa[1077] = 0.0969735f;
      sa[1078] = -0.026968114f;
      sa[1079] = -0.0588554f;
      sa[1080] = 0.14532262f;
      sa[1081] = 0.029130744f;
      sa[1082] = -0.3991313f;
      sa[1083] = 0.038086884f;
      sa[1084] = 0.30462012f;
      sa[1085] = -0.19227822f;
      sa[1086] = -0.256921f;
      sa[1087] = -0.38475177f;
      sa[1088] = -0.26974285f;
      sa[1089] = 0.0867432f;
      sa[1090] = -0.22282861f;
      sa[1091] = -0.07720653f;
      sa[1092] = -0.34412053f;
      sa[1093] = -0.37865397f;
      sa[1094] = -0.11066999f;
      sa[1095] = -0.5685217f;
      sa[1096] = -0.038876448f;
      sa[1097] = -0.063505f;
      sa[1098] = 0.20223208f;
      sa[1099] = -0.113401175f;
      sa[1100] = -0.15443325f;
      sa[1101] = 0.1277163f;
      sa[1102] = -0.20931648f;
      sa[1103] = 0.12925196f;
      sa[1104] = -0.4273056f;
      sa[1105] = -0.07588055f;
      sa[1106] = 0.07659874f;
      sa[1107] = 0.053421073f;
      sa[1108] = -0.2604118f;
      sa[1109] = 0.21456584f;
      sa[1110] = 0.039702207f;
      sa[1111] = -0.4154796f;
      sa[1112] = 0.23483703f;
      sa[1113] = 0.23076852f;
      sa[1114] = 0.032637425f;
      sa[1115] = 0.21916482f;
      sa[1116] = 0.07467231f;
      sa[1117] = -0.08335067f;
      sa[1118] = 0.0717693f;
      sa[1119] = 0.16971713f;
      sa[1120] = 0.20548414f;
      sa[1121] = 0.11552254f;
      sa[1122] = 0.35860342f;
      sa[1123] = 0.29647976f;
      sa[1124] = 0.16924837f;
      sa[1125] = -0.11779443f;
      sa[1126] = 0.28838617f;
      sa[1127] = 0.2278306f;
      sa[1128] = 0.04954574f;
      sa[1129] = -0.04083269f;
      sa[1130] = 0.32912272f;
      sa[1131] = 0.35275006f;
      sa[1132] = 0.046470094f;
      sa[1133] = -0.1706444f;
      sa[1134] = 0.09221006f;
      sa[1135] = -0.067387335f;
      sa[1136] = -0.00667459f;
      sa[1137] = 0.21892366f;
      sa[1138] = 1.7360292E-4f;
      sa[1139] = 0.13420065f;
      sa[1140] = 0.32010186f;
      sa[1141] = -0.11480249f;
      sa[1142] = -0.14741305f;
      sa[1143] = -0.4535652f;
      sa[1144] = -0.2799032f;
      sa[1145] = 0.11938441f;
      sa[1146] = 0.22734153f;
      sa[1147] = -0.223314f;
      sa[1148] = -0.005845342f;
      sa[1149] = -0.07984402f;
      sa[1150] = -0.24914806f;
      sa[1151] = -0.33400553f;
    }
  }
}
// Neuron weights connecting Tanh and Softmax layer
class h2o_nn_32x6_Tanh_09_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_Tanh_09_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.238817f;
      sa[1] = 0.05024002f;
      sa[2] = -0.62253803f;
      sa[3] = -1.3676257f;
      sa[4] = 0.1506422f;
      sa[5] = 0.573001f;
      sa[6] = 1.334513f;
      sa[7] = -0.71500194f;
      sa[8] = -0.92168856f;
      sa[9] = 0.77534294f;
      sa[10] = -0.0716485f;
      sa[11] = 0.4604622f;
      sa[12] = 0.083133824f;
      sa[13] = 0.004350048f;
      sa[14] = -1.3953516f;
      sa[15] = 1.1483003f;
      sa[16] = 1.7045102f;
      sa[17] = -0.52437377f;
      sa[18] = 0.14635122f;
      sa[19] = -0.24715863f;
      sa[20] = 1.2004435f;
      sa[21] = 0.06104546f;
      sa[22] = -0.9678293f;
      sa[23] = 0.7374095f;
      sa[24] = -1.2796035f;
      sa[25] = 0.5716679f;
      sa[26] = -0.26588494f;
      sa[27] = 1.64256f;
      sa[28] = -1.335444f;
      sa[29] = -0.43155953f;
      sa[30] = 0.5567385f;
      sa[31] = -0.62902737f;
      sa[32] = -1.0638732f;
      sa[33] = -1.6275548f;
      sa[34] = 0.090112366f;
      sa[35] = 1.4005997f;
      sa[36] = -0.3503361f;
      sa[37] = -0.06939954f;
      sa[38] = 0.23321441f;
      sa[39] = 0.77694595f;
      sa[40] = -0.7408919f;
      sa[41] = -1.4130126f;
      sa[42] = -0.99132717f;
      sa[43] = -1.5755606f;
      sa[44] = 0.02797677f;
      sa[45] = -1.3321117f;
      sa[46] = 1.2751973f;
      sa[47] = 1.2345734f;
      sa[48] = -1.4237711f;
      sa[49] = -1.1183449f;
      sa[50] = 0.50908697f;
      sa[51] = -0.3249448f;
      sa[52] = 0.7904163f;
      sa[53] = 0.8129982f;
      sa[54] = -0.16855076f;
      sa[55] = 1.1745745f;
      sa[56] = -1.1162187f;
      sa[57] = -1.0837021f;
      sa[58] = 0.016872432f;
      sa[59] = -0.27915958f;
      sa[60] = 1.5903115f;
      sa[61] = -0.6601796f;
      sa[62] = -0.41190568f;
      sa[63] = 0.68155116f;
      sa[64] = 1.3915195f;
      sa[65] = -0.655002f;
      sa[66] = 0.6601564f;
      sa[67] = 1.6205925f;
      sa[68] = 0.63022846f;
      sa[69] = -1.2015324f;
      sa[70] = -1.4714152f;
      sa[71] = -0.41212338f;
      sa[72] = -1.3457285f;
      sa[73] = 1.4002213f;
      sa[74] = 1.3807609f;
      sa[75] = -0.2638131f;
      sa[76] = 1.004988f;
      sa[77] = 0.4410378f;
      sa[78] = -1.4727552f;
      sa[79] = 0.9955864f;
      sa[80] = -0.8288179f;
      sa[81] = 0.2801271f;
      sa[82] = 0.9189901f;
      sa[83] = -0.86676246f;
      sa[84] = -1.6011174f;
      sa[85] = -1.1435863f;
      sa[86] = 0.6047379f;
      sa[87] = 1.1383643f;
      sa[88] = -1.5555898f;
      sa[89] = -0.88047147f;
      sa[90] = -0.93299013f;
      sa[91] = 1.425414f;
      sa[92] = -0.30167806f;
      sa[93] = 0.3221895f;
      sa[94] = -1.5446572f;
      sa[95] = -0.13025345f;
      sa[96] = -0.93090534f;
      sa[97] = 0.21981604f;
      sa[98] = -0.04995842f;
      sa[99] = 0.544195f;
      sa[100] = -1.2843847f;
      sa[101] = -0.81677985f;
      sa[102] = 1.0191023f;
      sa[103] = 0.24013132f;
      sa[104] = -0.3602561f;
      sa[105] = -0.8922388f;
      sa[106] = 1.3500925f;
      sa[107] = 1.3181285f;
      sa[108] = 1.041085f;
      sa[109] = 0.33255333f;
      sa[110] = 0.91148376f;
      sa[111] = -1.0033242f;
      sa[112] = -1.3294595f;
      sa[113] = 0.40455997f;
      sa[114] = 3.9273908E-4f;
      sa[115] = -0.5494312f;
      sa[116] = 1.2324345f;
      sa[117] = -0.03286224f;
      sa[118] = -1.4256346f;
      sa[119] = -0.63283604f;
      sa[120] = -0.59857476f;
      sa[121] = 0.9971815f;
      sa[122] = -0.0333568f;
      sa[123] = 0.02156329f;
      sa[124] = -0.65890914f;
      sa[125] = 0.8536476f;
      sa[126] = -1.280163f;
      sa[127] = 0.3600317f;
      sa[128] = -1.0433866f;
      sa[129] = 0.9436961f;
      sa[130] = -0.4736579f;
      sa[131] = 0.87544954f;
      sa[132] = 0.52336425f;
      sa[133] = 0.9082544f;
      sa[134] = 0.69161636f;
      sa[135] = -0.9644661f;
      sa[136] = 0.6685149f;
      sa[137] = -0.54733634f;
      sa[138] = 0.006533855f;
      sa[139] = 1.218797f;
      sa[140] = -0.737834f;
      sa[141] = -0.10874211f;
      sa[142] = 0.27422985f;
      sa[143] = -0.76024956f;
      sa[144] = 1.1103224f;
      sa[145] = -0.75003904f;
      sa[146] = 0.10177478f;
      sa[147] = -0.17224498f;
      sa[148] = -0.8659811f;
      sa[149] = 1.4041667f;
      sa[150] = -1.1856962f;
      sa[151] = -2.1083915f;
      sa[152] = 1.743228f;
      sa[153] = -0.5485254f;
      sa[154] = 1.621533f;
      sa[155] = -1.3882895f;
      sa[156] = -1.7211794f;
      sa[157] = -1.1018113f;
      sa[158] = 0.20166323f;
      sa[159] = -0.69619495f;
      sa[160] = 1.4450003f;
      sa[161] = -1.2867289f;
      sa[162] = 1.8511989f;
      sa[163] = -0.81676966f;
      sa[164] = 0.77766937f;
      sa[165] = -0.5116768f;
      sa[166] = 1.2823294f;
      sa[167] = -1.4249575f;
      sa[168] = 1.1025451f;
      sa[169] = -1.5589609f;
      sa[170] = 1.0300403f;
      sa[171] = 0.8626682f;
      sa[172] = 1.5974317f;
      sa[173] = 1.5836682f;
      sa[174] = -0.056053337f;
      sa[175] = 0.0706732f;
      sa[176] = -0.82411045f;
      sa[177] = -0.08641069f;
      sa[178] = -1.16984f;
      sa[179] = 0.04397877f;
      sa[180] = -1.071851f;
      sa[181] = -1.0018209f;
      sa[182] = 0.29761395f;
      sa[183] = -0.99182445f;
      sa[184] = 1.606174f;
      sa[185] = 1.3926245f;
      sa[186] = -0.52615756f;
      sa[187] = -0.85445744f;
      sa[188] = -0.5805067f;
      sa[189] = -0.8453478f;
      sa[190] = -1.4504042f;
      sa[191] = -1.144108f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_Tanh_09 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_Tanh_09_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_Tanh_09_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_Tanh_09_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_Tanh_09_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_Tanh_09_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


