/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:52:34.562+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_11

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_11 > h2o_nn_32x6_ReLU_11.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_11.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_11", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_11 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 6; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,6};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_11_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_11_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_11_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_11_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_11_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_11_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_11_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_11_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_11_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_11.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_11_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2548076923076923,0.18269230769230768,0.057692307692307696,0.125,0.2548076923076923,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_11() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-40163659880878432L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_11_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_11_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_11_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_11_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_11_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_11_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_11_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_11_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_11_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.37538604571361645;
      sa[1] = 0.49919768395547015;
      sa[2] = 0.5914160181050749;
      sa[3] = 0.49520203400734414;
      sa[4] = 0.5465894476431622;
      sa[5] = 0.568956310998562;
      sa[6] = 0.48770361887228353;
      sa[7] = 0.6108685783170308;
      sa[8] = 0.48984450159298365;
      sa[9] = 0.575658600892123;
      sa[10] = 0.24862941068530356;
      sa[11] = 0.6231628691215846;
      sa[12] = 0.5749114981822556;
      sa[13] = 0.5332368235098875;
      sa[14] = 0.6216651427175104;
      sa[15] = 0.4504749120834196;
      sa[16] = 0.4949694931355693;
      sa[17] = 0.6055787650457758;
      sa[18] = 0.5094417192233283;
      sa[19] = 0.5303849999366353;
      sa[20] = 0.39156397946785365;
      sa[21] = 0.43934962114530524;
      sa[22] = 0.38966623952403506;
      sa[23] = 0.5350275724168887;
      sa[24] = 0.5272733891069795;
      sa[25] = 0.47101686700946604;
      sa[26] = 0.38808621893322776;
      sa[27] = 0.2805700529239508;
      sa[28] = 0.40807755591722156;
      sa[29] = 0.35818809408652413;
      sa[30] = 0.5471717446954261;
      sa[31] = 0.497652875350197;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_11_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[6];
  static {
    h2o_nn_32x6_ReLU_11_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.005852047829670608;
      sa[1] = -0.02776881300957203;
      sa[2] = -0.035800833292815096;
      sa[3] = -0.0062922214656491995;
      sa[4] = -0.022257202074161486;
      sa[5] = -0.01720918433741486;
    }
  }
}
class h2o_nn_32x6_ReLU_11_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_11_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_11_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = -0.07349973f;
      sa[1] = 0.23829322f;
      sa[2] = 0.14923622f;
      sa[3] = 0.08435519f;
      sa[4] = -0.18792683f;
      sa[5] = -0.20403522f;
      sa[6] = -0.122351095f;
      sa[7] = 0.15163544f;
      sa[8] = 0.037181046f;
      sa[9] = -0.07927987f;
      sa[10] = -0.08909243f;
      sa[11] = -0.19857585f;
      sa[12] = 0.012816521f;
      sa[13] = -0.30871472f;
      sa[14] = -0.28864712f;
      sa[15] = -0.14265251f;
      sa[16] = 0.089570545f;
      sa[17] = 0.16110241f;
      sa[18] = -0.06043167f;
      sa[19] = 0.0898607f;
      sa[20] = 0.16114017f;
      sa[21] = -0.339372f;
      sa[22] = 0.1529275f;
      sa[23] = -0.312232f;
      sa[24] = 0.30442438f;
      sa[25] = 0.13013093f;
      sa[26] = -0.16364412f;
      sa[27] = 0.32119468f;
      sa[28] = 0.16673224f;
      sa[29] = -0.3003238f;
      sa[30] = -0.1921895f;
      sa[31] = 0.02566194f;
      sa[32] = 0.2269274f;
      sa[33] = -0.24415824f;
      sa[34] = 0.11724206f;
      sa[35] = -0.036278393f;
      sa[36] = 0.118361995f;
      sa[37] = 0.17126568f;
      sa[38] = -0.26570338f;
      sa[39] = -0.05220137f;
      sa[40] = -0.0091010975f;
      sa[41] = -0.0013327494f;
      sa[42] = -0.113690674f;
      sa[43] = 0.02261035f;
      sa[44] = 0.26672664f;
      sa[45] = -0.43944734f;
      sa[46] = -0.02250648f;
      sa[47] = 0.019013917f;
      sa[48] = 0.25477132f;
      sa[49] = 0.33232814f;
      sa[50] = 0.25727656f;
      sa[51] = -0.29152688f;
      sa[52] = -0.1383624f;
      sa[53] = 0.13434583f;
      sa[54] = 0.1080796f;
      sa[55] = 0.2029594f;
      sa[56] = -0.20253934f;
      sa[57] = -0.38452053f;
      sa[58] = 0.24654132f;
      sa[59] = -0.2838492f;
      sa[60] = -0.29717556f;
      sa[61] = 0.17311256f;
      sa[62] = 0.04250772f;
      sa[63] = 0.1178866f;
      sa[64] = 0.097431466f;
      sa[65] = 0.039947715f;
      sa[66] = 0.035421763f;
      sa[67] = 0.07209939f;
      sa[68] = -0.42443326f;
      sa[69] = 0.07397002f;
      sa[70] = 0.063663036f;
      sa[71] = 0.37137237f;
      sa[72] = -0.20174773f;
      sa[73] = 0.1805212f;
      sa[74] = -0.10166305f;
      sa[75] = 0.030055128f;
      sa[76] = -0.13755217f;
      sa[77] = -0.053041864f;
      sa[78] = -0.055038095f;
      sa[79] = 0.1509689f;
      sa[80] = -0.30538085f;
      sa[81] = 0.049326383f;
      sa[82] = 0.05835608f;
      sa[83] = 0.06448752f;
      sa[84] = -0.045784295f;
      sa[85] = -0.18102057f;
      sa[86] = 0.112142794f;
      sa[87] = 0.212856f;
      sa[88] = 0.19563617f;
      sa[89] = 0.13052163f;
      sa[90] = -0.016562784f;
      sa[91] = 0.06276472f;
      sa[92] = 0.07784578f;
      sa[93] = -0.1649041f;
      sa[94] = -0.15514156f;
      sa[95] = -0.23940079f;
      sa[96] = 0.18066633f;
      sa[97] = 0.0067659705f;
      sa[98] = 0.27713585f;
      sa[99] = -0.04750013f;
      sa[100] = -0.05661039f;
      sa[101] = -0.11234875f;
      sa[102] = -0.19725f;
      sa[103] = -0.082933456f;
      sa[104] = 0.03168618f;
      sa[105] = -0.13160409f;
      sa[106] = -0.14333759f;
      sa[107] = 0.13066204f;
      sa[108] = 0.09786939f;
      sa[109] = -0.14995041f;
      sa[110] = -0.16699408f;
      sa[111] = 0.1607861f;
      sa[112] = 0.19210151f;
      sa[113] = 0.15635209f;
      sa[114] = 0.07854444f;
      sa[115] = -0.0088592f;
      sa[116] = -0.3133377f;
      sa[117] = -0.07888969f;
      sa[118] = -0.3940723f;
      sa[119] = -0.09209601f;
      sa[120] = 0.2107998f;
      sa[121] = 0.3111832f;
      sa[122] = 0.54320866f;
      sa[123] = 0.38603303f;
      sa[124] = 0.2855188f;
      sa[125] = 0.32928064f;
      sa[126] = -0.44301075f;
      sa[127] = -0.11038945f;
      sa[128] = -0.011366177f;
      sa[129] = 0.10359274f;
      sa[130] = -0.04700314f;
      sa[131] = 0.33283347f;
      sa[132] = 0.11350556f;
      sa[133] = -0.22479017f;
      sa[134] = -0.04485382f;
      sa[135] = -0.07690035f;
      sa[136] = -0.33887988f;
      sa[137] = -0.113220006f;
      sa[138] = 0.095099494f;
      sa[139] = -0.0993957f;
      sa[140] = -0.06518884f;
      sa[141] = -0.061524726f;
      sa[142] = 0.23357444f;
      sa[143] = -0.19838348f;
      sa[144] = 0.19007215f;
      sa[145] = -0.16495727f;
      sa[146] = -0.38572678f;
      sa[147] = -8.2948065E-4f;
      sa[148] = 0.14364558f;
      sa[149] = 0.1423522f;
      sa[150] = 0.2562426f;
      sa[151] = -0.212331f;
      sa[152] = -0.015568133f;
      sa[153] = 0.3242397f;
      sa[154] = 0.23640135f;
      sa[155] = -0.11728255f;
      sa[156] = 0.12478716f;
      sa[157] = -0.20010014f;
      sa[158] = 0.1144392f;
      sa[159] = 0.15251586f;
      sa[160] = 0.050168242f;
      sa[161] = 0.19151716f;
      sa[162] = 0.046957955f;
      sa[163] = -0.2079871f;
      sa[164] = 0.18612184f;
      sa[165] = -0.06897952f;
      sa[166] = -0.086588524f;
      sa[167] = -0.09691144f;
      sa[168] = 0.16266376f;
      sa[169] = 0.21217215f;
      sa[170] = 0.124858685f;
      sa[171] = 0.026700068f;
      sa[172] = -0.11354231f;
      sa[173] = -0.16810139f;
      sa[174] = -0.065572344f;
      sa[175] = -0.26276663f;
      sa[176] = 0.0835877f;
      sa[177] = 0.05241739f;
      sa[178] = -0.04133508f;
      sa[179] = 0.06918109f;
      sa[180] = -0.0985575f;
      sa[181] = -0.29185674f;
      sa[182] = -0.27397093f;
      sa[183] = 0.06926622f;
      sa[184] = 0.21221638f;
      sa[185] = 0.07507423f;
      sa[186] = -0.37924892f;
      sa[187] = 0.032954223f;
      sa[188] = 0.060828686f;
      sa[189] = 0.1532626f;
      sa[190] = 0.047847558f;
      sa[191] = -0.018065786f;
      sa[192] = -0.0067685065f;
      sa[193] = 0.2249034f;
      sa[194] = 0.13064581f;
      sa[195] = 0.3494748f;
      sa[196] = 0.24487025f;
      sa[197] = -0.014208099f;
      sa[198] = 0.26455888f;
      sa[199] = -0.09635348f;
      sa[200] = 0.09873024f;
      sa[201] = -0.26275802f;
      sa[202] = 0.11295725f;
      sa[203] = 0.06275111f;
      sa[204] = -0.27186322f;
      sa[205] = 0.25365725f;
      sa[206] = 0.33471695f;
      sa[207] = 0.20893146f;
      sa[208] = -0.14505996f;
      sa[209] = -0.0448648f;
      sa[210] = -0.28020182f;
      sa[211] = -0.16833857f;
      sa[212] = 0.3495702f;
      sa[213] = -0.18056817f;
      sa[214] = -0.03766845f;
      sa[215] = 0.048005328f;
      sa[216] = 0.09854879f;
      sa[217] = 0.1780841f;
      sa[218] = -0.15231812f;
      sa[219] = 0.21455218f;
      sa[220] = -0.23693566f;
      sa[221] = -0.03350438f;
      sa[222] = 0.12625991f;
      sa[223] = 0.02893182f;
      sa[224] = 0.20630418f;
      sa[225] = 0.30760986f;
      sa[226] = -0.16228698f;
      sa[227] = 0.15304044f;
      sa[228] = 0.18708867f;
      sa[229] = 0.05715352f;
      sa[230] = 0.18183348f;
      sa[231] = -0.25868934f;
      sa[232] = -0.21731558f;
      sa[233] = 0.09682469f;
      sa[234] = 0.20428123f;
      sa[235] = -0.18571357f;
      sa[236] = 0.0953623f;
      sa[237] = -0.1766547f;
      sa[238] = -0.21603347f;
      sa[239] = 0.23105872f;
      sa[240] = 0.07657574f;
      sa[241] = -0.20662953f;
      sa[242] = -0.015894342f;
      sa[243] = -0.25253615f;
      sa[244] = -0.06002604f;
      sa[245] = -0.05574355f;
      sa[246] = -0.15761587f;
      sa[247] = 0.08312052f;
      sa[248] = 0.18838388f;
      sa[249] = 0.15459768f;
      sa[250] = -0.19199674f;
      sa[251] = -0.092492804f;
      sa[252] = -0.18722491f;
      sa[253] = -0.19386466f;
      sa[254] = -0.08348162f;
      sa[255] = 0.44068813f;
      sa[256] = -0.018202355f;
      sa[257] = 0.3241924f;
      sa[258] = -0.11537979f;
      sa[259] = -0.09759998f;
      sa[260] = -0.14601111f;
      sa[261] = -0.14529626f;
      sa[262] = -0.2754975f;
      sa[263] = 0.27804092f;
      sa[264] = -0.10358547f;
      sa[265] = 0.10961937f;
      sa[266] = -0.21222255f;
      sa[267] = -0.17465624f;
      sa[268] = 0.12488841f;
      sa[269] = -0.07784009f;
      sa[270] = -0.29254127f;
      sa[271] = 0.22342615f;
      sa[272] = -0.002483059f;
      sa[273] = 0.017913887f;
      sa[274] = 0.23314103f;
      sa[275] = 0.11849286f;
      sa[276] = 0.021978915f;
      sa[277] = -0.16102056f;
      sa[278] = -0.2668585f;
      sa[279] = 0.100943506f;
      sa[280] = -0.08466534f;
      sa[281] = 0.34776318f;
      sa[282] = -0.020747487f;
      sa[283] = 0.067047596f;
      sa[284] = 0.027334752f;
      sa[285] = -0.16153935f;
      sa[286] = 0.1049613f;
      sa[287] = 0.09025483f;
      sa[288] = -0.30895683f;
      sa[289] = -0.17386529f;
      sa[290] = -0.10756012f;
      sa[291] = -0.17645551f;
      sa[292] = 0.10251198f;
      sa[293] = -0.107725486f;
      sa[294] = 0.019420741f;
      sa[295] = 0.08687856f;
      sa[296] = 0.091403246f;
      sa[297] = 0.2783155f;
      sa[298] = 0.10049953f;
      sa[299] = -0.1586172f;
      sa[300] = 0.041227855f;
      sa[301] = -0.025501046f;
      sa[302] = 0.18113653f;
      sa[303] = 0.051186103f;
      sa[304] = -0.14457598f;
      sa[305] = 0.08578077f;
      sa[306] = 0.35159135f;
      sa[307] = -0.054111455f;
      sa[308] = 0.04459776f;
      sa[309] = 0.099558085f;
      sa[310] = 0.22773424f;
      sa[311] = 0.28147912f;
      sa[312] = -0.1262794f;
      sa[313] = -0.1301131f;
      sa[314] = -0.060814742f;
      sa[315] = 0.19156763f;
      sa[316] = -0.009107141f;
      sa[317] = -0.072954476f;
      sa[318] = 0.11927312f;
      sa[319] = 0.26694068f;
      sa[320] = -0.10126521f;
      sa[321] = 0.027957939f;
      sa[322] = 0.46308526f;
      sa[323] = 0.04529402f;
      sa[324] = 0.12563257f;
      sa[325] = 0.22142063f;
      sa[326] = -0.3722501f;
      sa[327] = -0.021449838f;
      sa[328] = -0.075245805f;
      sa[329] = 0.24905224f;
      sa[330] = -0.15137786f;
      sa[331] = 0.045567513f;
      sa[332] = -0.16264822f;
      sa[333] = 0.05649359f;
      sa[334] = -0.06685848f;
      sa[335] = 0.35859844f;
      sa[336] = -0.17762792f;
      sa[337] = -0.14879248f;
      sa[338] = 0.27809736f;
      sa[339] = -0.21684566f;
      sa[340] = -0.36414352f;
      sa[341] = -0.44788706f;
      sa[342] = 0.067571625f;
      sa[343] = -0.22283727f;
      sa[344] = -0.1941967f;
      sa[345] = 0.16496967f;
      sa[346] = 0.21685225f;
      sa[347] = -0.25320235f;
      sa[348] = 0.1770691f;
      sa[349] = -0.28697106f;
      sa[350] = -0.2936377f;
      sa[351] = -0.005194965f;
      sa[352] = 0.102320954f;
      sa[353] = -0.10328507f;
      sa[354] = 0.0246664f;
      sa[355] = -0.024321144f;
      sa[356] = -0.11456614f;
      sa[357] = 0.36410695f;
      sa[358] = -0.46592665f;
      sa[359] = -0.102644876f;
      sa[360] = 0.10385556f;
      sa[361] = -0.014007611f;
      sa[362] = -0.17072609f;
      sa[363] = 0.10310581f;
      sa[364] = -0.18060261f;
      sa[365] = -0.2134333f;
      sa[366] = -0.032347053f;
      sa[367] = -0.28888124f;
      sa[368] = -0.19662194f;
      sa[369] = 0.25344342f;
      sa[370] = -0.13174185f;
      sa[371] = 0.15026878f;
      sa[372] = -0.08188342f;
      sa[373] = 0.25829375f;
      sa[374] = -0.1672141f;
      sa[375] = -0.29328412f;
      sa[376] = -0.23593587f;
      sa[377] = -0.28430635f;
      sa[378] = 0.07728762f;
      sa[379] = 0.06726445f;
      sa[380] = -0.19908808f;
      sa[381] = -0.20748483f;
      sa[382] = -0.08063032f;
      sa[383] = -0.18418829f;
      sa[384] = -0.04164006f;
      sa[385] = 0.11427114f;
      sa[386] = -0.35334498f;
      sa[387] = -0.1955714f;
      sa[388] = -0.021488354f;
      sa[389] = -0.12654431f;
      sa[390] = -0.04977879f;
      sa[391] = -0.1700069f;
      sa[392] = 0.17581631f;
      sa[393] = 0.27886212f;
      sa[394] = -0.0722019f;
      sa[395] = 0.22264296f;
      sa[396] = 0.32589144f;
      sa[397] = -0.3025597f;
      sa[398] = 0.06397304f;
      sa[399] = -0.10460598f;
      sa[400] = 0.19076636f;
      sa[401] = 0.3231462f;
      sa[402] = -0.0970848f;
      sa[403] = 0.16144621f;
      sa[404] = 0.22796443f;
      sa[405] = -0.3300988f;
      sa[406] = -0.0312556f;
      sa[407] = 0.08975011f;
      sa[408] = -0.1376293f;
      sa[409] = -0.105559826f;
      sa[410] = -0.038912043f;
      sa[411] = 0.1850659f;
      sa[412] = -0.106341965f;
      sa[413] = 0.006686019f;
      sa[414] = 0.08710375f;
      sa[415] = 0.29928973f;
      sa[416] = -0.1634223f;
      sa[417] = -0.010653116f;
      sa[418] = 0.045660388f;
      sa[419] = 0.21902052f;
      sa[420] = 0.24542078f;
      sa[421] = 0.24466352f;
      sa[422] = 0.22046755f;
      sa[423] = 0.041148778f;
      sa[424] = 0.1288144f;
      sa[425] = -0.04642962f;
      sa[426] = -0.17435034f;
      sa[427] = 0.19362739f;
      sa[428] = -0.23658451f;
      sa[429] = -0.3343526f;
      sa[430] = 0.21038094f;
      sa[431] = -0.011128467f;
      sa[432] = 0.007123988f;
      sa[433] = 0.06217172f;
      sa[434] = 0.37390003f;
      sa[435] = 0.0043071443f;
      sa[436] = -0.188083f;
      sa[437] = -0.15309027f;
      sa[438] = 0.02151967f;
      sa[439] = 0.03086217f;
      sa[440] = 0.24703251f;
      sa[441] = -0.20385337f;
      sa[442] = 0.14651366f;
      sa[443] = -0.027977278f;
      sa[444] = -0.2504054f;
      sa[445] = 0.05010007f;
      sa[446] = 0.16725494f;
      sa[447] = 0.0071551222f;
      sa[448] = 0.18457448f;
      sa[449] = 0.2174876f;
      sa[450] = -0.12162686f;
      sa[451] = 0.08367012f;
      sa[452] = 0.15181518f;
      sa[453] = -0.0014611785f;
      sa[454] = -0.13677587f;
      sa[455] = -0.08011052f;
      sa[456] = 0.06660386f;
      sa[457] = -0.01148999f;
      sa[458] = -0.15182407f;
      sa[459] = 0.24009708f;
      sa[460] = 0.20228474f;
      sa[461] = 0.322093f;
      sa[462] = 0.12096671f;
      sa[463] = 0.19811478f;
      sa[464] = -0.28684053f;
      sa[465] = 0.13382548f;
      sa[466] = -0.052081805f;
      sa[467] = 0.10401698f;
      sa[468] = -0.011292576f;
      sa[469] = 0.2829125f;
      sa[470] = 0.2024602f;
      sa[471] = -0.014920585f;
      sa[472] = 0.026817612f;
      sa[473] = -0.05093866f;
      sa[474] = -0.031802155f;
      sa[475] = 0.16205692f;
      sa[476] = 0.15378112f;
      sa[477] = -0.046861924f;
      sa[478] = 0.19701819f;
      sa[479] = -0.14654715f;
      sa[480] = -0.29202193f;
      sa[481] = -0.17022665f;
      sa[482] = -0.27434188f;
      sa[483] = 0.17924297f;
      sa[484] = 0.27214465f;
      sa[485] = 0.068781435f;
      sa[486] = 0.023761934f;
      sa[487] = -0.23731975f;
      sa[488] = -0.21033056f;
      sa[489] = 0.05492259f;
      sa[490] = -0.013345769f;
      sa[491] = -0.28247762f;
      sa[492] = 0.23944028f;
      sa[493] = 0.20716505f;
      sa[494] = -0.15482052f;
      sa[495] = 0.17134176f;
      sa[496] = -0.027562289f;
      sa[497] = 0.07550196f;
      sa[498] = 0.20828499f;
      sa[499] = 0.11647448f;
      sa[500] = -0.10136504f;
      sa[501] = 0.03482067f;
      sa[502] = 0.20957851f;
      sa[503] = -0.0067622503f;
      sa[504] = -0.19198534f;
      sa[505] = -0.19459704f;
      sa[506] = 0.2825103f;
      sa[507] = 0.017309759f;
      sa[508] = 0.15304695f;
      sa[509] = 0.25712353f;
      sa[510] = 0.23118632f;
      sa[511] = 0.02319435f;
      sa[512] = 0.03937847f;
      sa[513] = -0.07976565f;
      sa[514] = 0.2092048f;
      sa[515] = -0.32248637f;
      sa[516] = 0.08927665f;
      sa[517] = 0.1455936f;
      sa[518] = 0.21649878f;
      sa[519] = -0.0092439465f;
      sa[520] = 0.21698233f;
      sa[521] = 0.2623772f;
      sa[522] = 0.083286166f;
      sa[523] = 0.26697904f;
      sa[524] = 0.26618987f;
      sa[525] = 0.24117897f;
      sa[526] = 0.07296661f;
      sa[527] = 0.06718819f;
      sa[528] = 0.023534045f;
      sa[529] = 0.17946199f;
      sa[530] = -0.1922923f;
      sa[531] = 0.10761168f;
      sa[532] = 0.21257001f;
      sa[533] = 0.19999458f;
      sa[534] = 0.20389512f;
      sa[535] = 0.04499422f;
      sa[536] = 0.07225926f;
      sa[537] = -0.28411943f;
      sa[538] = 0.25951803f;
      sa[539] = 0.32437152f;
      sa[540] = -0.23678306f;
      sa[541] = -0.13373664f;
      sa[542] = -0.03972542f;
      sa[543] = -0.051388595f;
      sa[544] = 0.1174888f;
      sa[545] = 0.009555674f;
      sa[546] = 0.008112952f;
      sa[547] = 0.1837563f;
      sa[548] = 0.14792177f;
      sa[549] = 0.22307357f;
      sa[550] = -0.035832673f;
      sa[551] = -0.043149315f;
      sa[552] = -0.04743872f;
      sa[553] = -0.18701245f;
      sa[554] = -0.28149882f;
      sa[555] = -0.21457356f;
      sa[556] = -0.23761372f;
      sa[557] = -0.19577464f;
      sa[558] = -0.10757689f;
      sa[559] = -0.034965806f;
      sa[560] = -0.26276916f;
      sa[561] = -0.039861612f;
      sa[562] = 0.12704436f;
      sa[563] = -0.023577692f;
      sa[564] = 0.21613118f;
      sa[565] = -0.045784373f;
      sa[566] = 0.30915377f;
      sa[567] = -0.22625504f;
      sa[568] = -0.08916127f;
      sa[569] = 0.03039997f;
      sa[570] = -0.09363509f;
      sa[571] = -0.029748656f;
      sa[572] = 0.1253134f;
      sa[573] = 0.26017487f;
      sa[574] = 0.059885565f;
      sa[575] = -0.37057278f;
      sa[576] = -0.10478584f;
      sa[577] = -0.0034527294f;
      sa[578] = -0.11451467f;
      sa[579] = -0.12620923f;
      sa[580] = 0.023769552f;
      sa[581] = -0.18885726f;
      sa[582] = 0.0051115565f;
      sa[583] = 0.055257414f;
      sa[584] = 0.2117146f;
      sa[585] = 0.12696448f;
      sa[586] = -0.12891728f;
      sa[587] = 0.03846411f;
      sa[588] = 0.117526546f;
      sa[589] = 0.09380046f;
      sa[590] = -0.0070612887f;
      sa[591] = 0.11730182f;
      sa[592] = -0.35054067f;
      sa[593] = -0.25030223f;
      sa[594] = 0.025180236f;
      sa[595] = -0.13143182f;
      sa[596] = 0.29729325f;
      sa[597] = -0.051877033f;
      sa[598] = 0.17853343f;
      sa[599] = 0.029739983f;
      sa[600] = -0.35556453f;
      sa[601] = 0.21156777f;
      sa[602] = -0.0048712725f;
      sa[603] = 0.21206705f;
      sa[604] = 0.24129428f;
      sa[605] = 0.14433083f;
      sa[606] = 0.14494056f;
      sa[607] = 0.05687108f;
      sa[608] = 0.038268287f;
      sa[609] = 0.23389035f;
      sa[610] = 0.047651496f;
      sa[611] = -0.16374172f;
      sa[612] = 0.055847753f;
      sa[613] = 0.06416233f;
      sa[614] = 0.20726848f;
      sa[615] = -0.09456843f;
      sa[616] = 0.12157259f;
      sa[617] = -0.18005554f;
      sa[618] = -0.11422214f;
      sa[619] = -0.1302419f;
      sa[620] = -0.0692353f;
      sa[621] = -0.28488883f;
      sa[622] = -0.31261036f;
      sa[623] = -0.44351104f;
      sa[624] = -0.06840992f;
      sa[625] = 0.2684023f;
      sa[626] = -0.0513025f;
      sa[627] = 0.16505267f;
      sa[628] = -0.2556095f;
      sa[629] = -0.10432274f;
      sa[630] = -0.39554712f;
      sa[631] = 0.19809677f;
      sa[632] = 0.08280563f;
      sa[633] = -0.096293986f;
      sa[634] = -0.15701301f;
      sa[635] = 0.09903675f;
      sa[636] = -0.0122214975f;
      sa[637] = -0.08666515f;
      sa[638] = -0.18440366f;
      sa[639] = -0.10064192f;
      sa[640] = -0.14584589f;
      sa[641] = -0.23689468f;
      sa[642] = 0.30142137f;
      sa[643] = -0.34463832f;
      sa[644] = -0.37904328f;
      sa[645] = -0.3248841f;
      sa[646] = 0.2429261f;
      sa[647] = -0.20249358f;
      sa[648] = 0.042419877f;
      sa[649] = -0.07781352f;
      sa[650] = 0.036484938f;
      sa[651] = -0.04436229f;
      sa[652] = 0.103724696f;
      sa[653] = -0.08912761f;
      sa[654] = 0.0028898807f;
      sa[655] = -0.1647057f;
      sa[656] = 0.07652087f;
      sa[657] = 0.027970951f;
      sa[658] = -0.30312327f;
      sa[659] = -0.089197084f;
      sa[660] = -0.26746768f;
      sa[661] = -0.07831573f;
      sa[662] = -0.21194991f;
      sa[663] = 0.16366749f;
      sa[664] = -0.23421875f;
      sa[665] = 0.15077083f;
      sa[666] = -0.12001681f;
      sa[667] = -0.41972953f;
      sa[668] = 0.20239668f;
      sa[669] = -0.13502777f;
      sa[670] = 0.16162312f;
      sa[671] = -0.0032814161f;
      sa[672] = -0.31460315f;
      sa[673] = 0.17872426f;
      sa[674] = 0.17873573f;
      sa[675] = -0.3093084f;
      sa[676] = -0.17290439f;
      sa[677] = -0.24770395f;
      sa[678] = 0.15049313f;
      sa[679] = -0.15976298f;
      sa[680] = 0.08860826f;
      sa[681] = 0.2186942f;
      sa[682] = -0.06968826f;
      sa[683] = -0.15741561f;
      sa[684] = -0.12618057f;
      sa[685] = 0.031479727f;
      sa[686] = -0.11860207f;
      sa[687] = -0.18555729f;
      sa[688] = -0.28792626f;
      sa[689] = -0.26281464f;
      sa[690] = -0.07425765f;
      sa[691] = 0.05725666f;
      sa[692] = -0.20311128f;
      sa[693] = -0.116220854f;
      sa[694] = 0.29665437f;
      sa[695] = -0.1338085f;
      sa[696] = -0.023969542f;
      sa[697] = -0.13461371f;
      sa[698] = -0.15486978f;
      sa[699] = 0.3213514f;
      sa[700] = 0.22275232f;
      sa[701] = 0.21962328f;
      sa[702] = 0.3545538f;
      sa[703] = 0.025617298f;
      sa[704] = -0.21590626f;
      sa[705] = -0.04688883f;
      sa[706] = -0.16442728f;
      sa[707] = 0.06616781f;
      sa[708] = 0.059755f;
      sa[709] = -0.26269153f;
      sa[710] = 0.35777965f;
      sa[711] = 0.025205603f;
      sa[712] = 0.11393761f;
      sa[713] = 0.18248926f;
      sa[714] = 0.21832529f;
      sa[715] = 0.13147573f;
      sa[716] = 0.05751898f;
      sa[717] = 0.07155686f;
      sa[718] = 0.04486821f;
      sa[719] = 0.1470123f;
      sa[720] = -0.24072431f;
      sa[721] = 0.34768212f;
      sa[722] = -0.06315618f;
      sa[723] = 0.15860876f;
      sa[724] = 0.013317204f;
      sa[725] = -0.32682097f;
      sa[726] = -0.29311058f;
      sa[727] = -0.35528895f;
      sa[728] = -0.002277743f;
      sa[729] = -0.10241283f;
      sa[730] = 0.07414316f;
      sa[731] = -0.23225658f;
      sa[732] = 0.19563502f;
      sa[733] = 0.17699882f;
      sa[734] = -0.2364753f;
      sa[735] = 0.25652617f;
      sa[736] = 0.06382035f;
      sa[737] = 0.10433975f;
      sa[738] = -0.31457853f;
      sa[739] = -0.2906251f;
      sa[740] = -0.09104173f;
      sa[741] = -0.22552441f;
      sa[742] = 0.09067618f;
      sa[743] = 0.10526863f;
      sa[744] = 0.044141192f;
      sa[745] = -0.19684216f;
      sa[746] = 0.008920514f;
      sa[747] = -0.30927145f;
      sa[748] = -0.041552566f;
      sa[749] = -0.15185238f;
      sa[750] = 0.2025688f;
      sa[751] = 0.30854145f;
      sa[752] = -0.035736848f;
      sa[753] = 0.17190494f;
      sa[754] = -0.05415212f;
      sa[755] = 0.15665445f;
      sa[756] = -0.2557912f;
      sa[757] = 0.29568306f;
      sa[758] = -0.22783373f;
      sa[759] = -0.10797394f;
      sa[760] = -0.14883068f;
      sa[761] = 0.04291092f;
      sa[762] = -0.08287237f;
      sa[763] = 0.12557013f;
      sa[764] = 0.08530358f;
      sa[765] = -0.05906095f;
      sa[766] = -0.16735093f;
      sa[767] = 0.10930059f;
      sa[768] = -0.11933327f;
      sa[769] = -0.21725997f;
      sa[770] = 0.07091889f;
      sa[771] = 0.087063886f;
      sa[772] = 0.070188425f;
      sa[773] = -0.16275434f;
      sa[774] = 0.037656095f;
      sa[775] = 0.4162209f;
      sa[776] = -0.04513812f;
      sa[777] = 0.016389783f;
      sa[778] = 0.15024664f;
      sa[779] = -0.09857639f;
      sa[780] = -0.09066619f;
      sa[781] = 0.076906495f;
      sa[782] = 0.09402934f;
      sa[783] = -0.030479038f;
      sa[784] = -0.11383875f;
      sa[785] = -0.14961354f;
      sa[786] = -0.098508045f;
      sa[787] = -0.19351304f;
      sa[788] = -0.32984102f;
      sa[789] = 0.12419301f;
      sa[790] = -0.006668212f;
      sa[791] = 0.003214166f;
      sa[792] = 0.16769992f;
      sa[793] = -0.086789526f;
      sa[794] = -0.20389456f;
      sa[795] = 0.048380833f;
      sa[796] = 0.20517579f;
      sa[797] = -0.24604385f;
      sa[798] = -0.27730703f;
      sa[799] = -0.15070449f;
      sa[800] = 0.14822912f;
      sa[801] = 0.117083386f;
      sa[802] = 0.21971835f;
      sa[803] = 0.09726968f;
      sa[804] = 0.1608078f;
      sa[805] = 0.23268703f;
      sa[806] = 0.2537947f;
      sa[807] = 0.20672226f;
      sa[808] = -0.041158497f;
      sa[809] = -0.15182833f;
      sa[810] = 0.08343007f;
      sa[811] = 0.21666363f;
      sa[812] = 0.09576444f;
      sa[813] = -0.31534952f;
      sa[814] = 0.053726796f;
      sa[815] = -0.1861958f;
      sa[816] = -0.14171469f;
      sa[817] = -0.24042954f;
      sa[818] = -0.018412339f;
      sa[819] = -0.05114708f;
      sa[820] = -0.35837495f;
      sa[821] = -0.25247028f;
      sa[822] = -0.34656173f;
      sa[823] = 0.02583205f;
      sa[824] = 0.29870588f;
      sa[825] = 0.35511687f;
      sa[826] = -0.25405982f;
      sa[827] = -0.34222156f;
      sa[828] = 0.1830561f;
      sa[829] = -0.03592378f;
      sa[830] = 0.22769523f;
      sa[831] = 0.43067366f;
      sa[832] = 0.150689f;
      sa[833] = 0.02010855f;
      sa[834] = 0.1635494f;
      sa[835] = -0.07038083f;
      sa[836] = 0.27719605f;
      sa[837] = -0.13006626f;
      sa[838] = 0.067802444f;
      sa[839] = -0.16035107f;
      sa[840] = 0.12845613f;
      sa[841] = 0.002110004f;
      sa[842] = 0.06543659f;
      sa[843] = -0.02943265f;
      sa[844] = 0.020716032f;
      sa[845] = 0.11291785f;
      sa[846] = -0.24996962f;
      sa[847] = -0.1942573f;
      sa[848] = 0.26775596f;
      sa[849] = 0.33512548f;
      sa[850] = 0.008587381f;
      sa[851] = 0.16254438f;
      sa[852] = 0.16018718f;
      sa[853] = 0.086999625f;
      sa[854] = 0.20552447f;
      sa[855] = -0.086625665f;
      sa[856] = 0.09638049f;
      sa[857] = -0.12542482f;
      sa[858] = 0.08479587f;
      sa[859] = 0.10508259f;
      sa[860] = 0.47437468f;
      sa[861] = -0.094946556f;
      sa[862] = -0.3431997f;
      sa[863] = -0.105666555f;
      sa[864] = -0.39283744f;
      sa[865] = 0.1757313f;
      sa[866] = -0.26261964f;
      sa[867] = -0.24234726f;
      sa[868] = -0.19834925f;
      sa[869] = 0.2192415f;
      sa[870] = -0.037669558f;
      sa[871] = 0.14465795f;
      sa[872] = 0.11712102f;
      sa[873] = -0.028774563f;
      sa[874] = 0.06246595f;
      sa[875] = -0.27484128f;
      sa[876] = -0.16266488f;
      sa[877] = -0.12706558f;
      sa[878] = 0.13723566f;
      sa[879] = 0.30897033f;
      sa[880] = -0.09517746f;
      sa[881] = -0.025791064f;
      sa[882] = 0.35161978f;
      sa[883] = 0.22231054f;
      sa[884] = -0.19803247f;
      sa[885] = -0.20493299f;
      sa[886] = 0.06098628f;
      sa[887] = -0.06710794f;
      sa[888] = -0.0529387f;
      sa[889] = 0.054789014f;
      sa[890] = -0.19315991f;
      sa[891] = 0.52419496f;
      sa[892] = 0.1534547f;
      sa[893] = 0.24180856f;
      sa[894] = 0.06704261f;
      sa[895] = 0.20568505f;
      sa[896] = -0.21644302f;
      sa[897] = 0.172324f;
      sa[898] = 0.16920182f;
      sa[899] = 0.41523027f;
      sa[900] = -0.048674587f;
      sa[901] = 0.13737994f;
      sa[902] = -0.13790536f;
      sa[903] = -0.17575677f;
      sa[904] = 0.15757239f;
      sa[905] = 0.18508333f;
      sa[906] = -0.30432734f;
      sa[907] = -0.26072845f;
      sa[908] = -0.1953476f;
      sa[909] = 0.074652344f;
      sa[910] = 0.0790376f;
      sa[911] = -0.23450252f;
      sa[912] = -0.036962844f;
      sa[913] = 0.036625877f;
      sa[914] = -0.28477973f;
      sa[915] = -0.04921015f;
      sa[916] = 0.25807914f;
      sa[917] = -0.04185039f;
      sa[918] = 0.14239743f;
      sa[919] = 0.028303638f;
      sa[920] = 0.14085656f;
      sa[921] = -0.07763229f;
      sa[922] = -0.15170115f;
      sa[923] = -0.19025952f;
      sa[924] = 1.2184813E-4f;
      sa[925] = -0.19990017f;
      sa[926] = 0.14349464f;
      sa[927] = -0.09398128f;
      sa[928] = 0.2564738f;
      sa[929] = 0.15381043f;
      sa[930] = 0.19789667f;
      sa[931] = -0.028387805f;
      sa[932] = 0.056292087f;
      sa[933] = -0.19479784f;
      sa[934] = 0.2634458f;
      sa[935] = -0.14059433f;
      sa[936] = -0.0018407954f;
      sa[937] = 0.088939264f;
      sa[938] = -0.18610883f;
      sa[939] = -0.039157156f;
      sa[940] = -0.13418388f;
      sa[941] = -0.32335487f;
      sa[942] = -0.25079253f;
      sa[943] = -0.28330183f;
      sa[944] = -0.20936464f;
      sa[945] = -0.02751179f;
      sa[946] = -0.023133649f;
      sa[947] = 0.31018418f;
      sa[948] = 0.13765933f;
      sa[949] = -0.13759114f;
      sa[950] = 0.15442295f;
      sa[951] = -0.046661977f;
      sa[952] = -0.2053228f;
      sa[953] = -0.21612468f;
      sa[954] = -0.19078043f;
      sa[955] = 0.12862757f;
      sa[956] = -0.022616241f;
      sa[957] = -0.042854294f;
      sa[958] = 0.06937146f;
      sa[959] = -0.17975189f;
      sa[960] = 0.27555326f;
      sa[961] = -0.07984048f;
      sa[962] = -0.030551828f;
      sa[963] = 0.09571135f;
      sa[964] = -0.1854147f;
      sa[965] = 0.13601923f;
      sa[966] = -0.1391016f;
      sa[967] = -0.3131506f;
      sa[968] = 0.119509496f;
      sa[969] = 0.06904727f;
      sa[970] = 0.39111942f;
      sa[971] = 0.06799839f;
      sa[972] = -0.15039344f;
      sa[973] = -0.16776244f;
      sa[974] = -0.18718854f;
      sa[975] = -0.2189998f;
      sa[976] = -0.12596084f;
      sa[977] = -0.014037753f;
      sa[978] = -0.14266078f;
      sa[979] = 0.15994821f;
      sa[980] = 0.1286643f;
      sa[981] = -0.23736763f;
      sa[982] = 0.19296874f;
      sa[983] = 0.032327756f;
      sa[984] = -0.39878854f;
      sa[985] = -0.047610834f;
      sa[986] = -0.36861908f;
      sa[987] = 0.005089115f;
      sa[988] = 0.18848684f;
      sa[989] = 0.020085048f;
      sa[990] = 0.08620908f;
      sa[991] = -0.31216726f;
      sa[992] = -0.2543913f;
      sa[993] = -0.081087284f;
      sa[994] = -0.20582666f;
      sa[995] = -0.3132522f;
      sa[996] = 0.16100185f;
      sa[997] = 0.18858366f;
      sa[998] = 0.0064070285f;
      sa[999] = 0.09138124f;
      sa[1000] = -0.078024104f;
      sa[1001] = 0.15434115f;
      sa[1002] = 0.16190471f;
      sa[1003] = -0.11720081f;
      sa[1004] = 0.24303785f;
      sa[1005] = -0.098980546f;
      sa[1006] = -0.30957362f;
      sa[1007] = -0.16886288f;
      sa[1008] = 0.11580249f;
      sa[1009] = 0.118188426f;
      sa[1010] = 0.14654936f;
      sa[1011] = 0.47764987f;
      sa[1012] = 0.008600673f;
      sa[1013] = 0.08622556f;
      sa[1014] = 0.28310305f;
      sa[1015] = -0.39863864f;
      sa[1016] = 0.18204626f;
      sa[1017] = 0.19667137f;
      sa[1018] = -0.13438934f;
      sa[1019] = 0.014344657f;
      sa[1020] = -0.25140795f;
      sa[1021] = 0.012517413f;
      sa[1022] = 0.19383755f;
      sa[1023] = 0.052785628f;
      sa[1024] = -0.019482637f;
      sa[1025] = 0.20541137f;
      sa[1026] = 0.16868961f;
      sa[1027] = 0.30609787f;
      sa[1028] = 0.29504126f;
      sa[1029] = 0.039953303f;
      sa[1030] = -0.16694574f;
      sa[1031] = 0.04868884f;
      sa[1032] = -0.22111f;
      sa[1033] = -0.02094287f;
      sa[1034] = -0.06680065f;
      sa[1035] = -0.26878148f;
      sa[1036] = 0.26788455f;
      sa[1037] = 0.05822487f;
      sa[1038] = -0.23288578f;
      sa[1039] = 0.26828212f;
      sa[1040] = 0.20179328f;
      sa[1041] = 0.13851543f;
      sa[1042] = -0.22736432f;
      sa[1043] = -0.030539691f;
      sa[1044] = 0.3241448f;
      sa[1045] = 0.23507167f;
      sa[1046] = -0.052730683f;
      sa[1047] = -0.07287204f;
      sa[1048] = 0.19116338f;
      sa[1049] = -0.021109983f;
      sa[1050] = 0.09452801f;
      sa[1051] = -0.1708646f;
      sa[1052] = 0.14812474f;
      sa[1053] = 0.24679077f;
      sa[1054] = 0.33234274f;
      sa[1055] = -0.004882659f;
      sa[1056] = 0.15390386f;
      sa[1057] = -0.20800531f;
      sa[1058] = 0.120721094f;
      sa[1059] = -0.32043728f;
      sa[1060] = -0.24383844f;
      sa[1061] = 0.015382781f;
      sa[1062] = -0.100058176f;
      sa[1063] = 0.068146065f;
      sa[1064] = -0.021076951f;
      sa[1065] = -0.032688897f;
      sa[1066] = 0.1603603f;
      sa[1067] = -0.36900163f;
      sa[1068] = -0.22186312f;
      sa[1069] = 0.30471292f;
      sa[1070] = -0.040830936f;
      sa[1071] = 0.05303186f;
      sa[1072] = -0.2864239f;
      sa[1073] = 0.13078582f;
      sa[1074] = 0.14870724f;
      sa[1075] = -0.19980088f;
      sa[1076] = -0.27306408f;
      sa[1077] = 0.08007334f;
      sa[1078] = -0.10147375f;
      sa[1079] = -0.024252247f;
      sa[1080] = 0.17623349f;
      sa[1081] = 0.13972245f;
      sa[1082] = -0.34557745f;
      sa[1083] = -0.18597187f;
      sa[1084] = 0.17034064f;
      sa[1085] = -0.22765784f;
      sa[1086] = -0.29206592f;
      sa[1087] = -0.2564231f;
      sa[1088] = -0.110199966f;
      sa[1089] = 0.117816776f;
      sa[1090] = -0.24977638f;
      sa[1091] = 0.09065941f;
      sa[1092] = -0.19056576f;
      sa[1093] = -0.21857142f;
      sa[1094] = 0.06768853f;
      sa[1095] = -0.19505093f;
      sa[1096] = 0.03814099f;
      sa[1097] = -0.017827492f;
      sa[1098] = 0.15582848f;
      sa[1099] = 0.123634964f;
      sa[1100] = -0.09242521f;
      sa[1101] = 0.10199161f;
      sa[1102] = -0.15976098f;
      sa[1103] = 0.21744622f;
      sa[1104] = -0.3897884f;
      sa[1105] = -0.14509359f;
      sa[1106] = 0.0023063493f;
      sa[1107] = 0.2800998f;
      sa[1108] = -0.17948513f;
      sa[1109] = 0.17705938f;
      sa[1110] = 0.12912728f;
      sa[1111] = -0.26083103f;
      sa[1112] = 0.12424019f;
      sa[1113] = 0.1252217f;
      sa[1114] = 0.19784816f;
      sa[1115] = 0.306405f;
      sa[1116] = -0.009222421f;
      sa[1117] = -0.14731888f;
      sa[1118] = -0.021021252f;
      sa[1119] = 0.09594692f;
      sa[1120] = 0.25381282f;
      sa[1121] = 0.14834844f;
      sa[1122] = 0.34830084f;
      sa[1123] = 0.22684671f;
      sa[1124] = 0.035124376f;
      sa[1125] = -0.16176729f;
      sa[1126] = 0.116874464f;
      sa[1127] = 0.10290733f;
      sa[1128] = 0.018494437f;
      sa[1129] = -0.068952225f;
      sa[1130] = 0.2341382f;
      sa[1131] = 0.26554656f;
      sa[1132] = -0.14800803f;
      sa[1133] = -0.11387523f;
      sa[1134] = -0.031799976f;
      sa[1135] = -0.16509001f;
      sa[1136] = 0.014706366f;
      sa[1137] = 0.27023828f;
      sa[1138] = -0.0062593766f;
      sa[1139] = 0.20718521f;
      sa[1140] = 0.22412847f;
      sa[1141] = -0.20285258f;
      sa[1142] = -0.014108564f;
      sa[1143] = -0.03606435f;
      sa[1144] = -0.23393135f;
      sa[1145] = 0.19789934f;
      sa[1146] = 0.2542085f;
      sa[1147] = -0.0149131175f;
      sa[1148] = -0.071971275f;
      sa[1149] = -0.049688205f;
      sa[1150] = -0.26867786f;
      sa[1151] = -0.21304028f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_11_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[192];
  static {
    h2o_nn_32x6_ReLU_11_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2252613f;
      sa[1] = -0.08741069f;
      sa[2] = -0.5872135f;
      sa[3] = -1.0048667f;
      sa[4] = 0.09443928f;
      sa[5] = 0.20691122f;
      sa[6] = 1.2886814f;
      sa[7] = -0.7682026f;
      sa[8] = -0.9323582f;
      sa[9] = 0.75523615f;
      sa[10] = -0.107886955f;
      sa[11] = 0.38853413f;
      sa[12] = 0.17830953f;
      sa[13] = 0.003721428f;
      sa[14] = -1.3317686f;
      sa[15] = 1.1409979f;
      sa[16] = 1.5752367f;
      sa[17] = -0.47609067f;
      sa[18] = 0.15553407f;
      sa[19] = -0.45346975f;
      sa[20] = 1.1442245f;
      sa[21] = 0.08843206f;
      sa[22] = -0.9261359f;
      sa[23] = 0.80154973f;
      sa[24] = -1.3377773f;
      sa[25] = 0.43931386f;
      sa[26] = -0.26693478f;
      sa[27] = 1.5251069f;
      sa[28] = -1.2979523f;
      sa[29] = -0.43610033f;
      sa[30] = 0.4386761f;
      sa[31] = -0.59392154f;
      sa[32] = -1.1233476f;
      sa[33] = -1.5017024f;
      sa[34] = 0.031115465f;
      sa[35] = 1.3468635f;
      sa[36] = -0.32532802f;
      sa[37] = -0.039421163f;
      sa[38] = 0.1917006f;
      sa[39] = 0.7351547f;
      sa[40] = -0.7274434f;
      sa[41] = -1.4969064f;
      sa[42] = -1.0312324f;
      sa[43] = -1.4194256f;
      sa[44] = 0.02747076f;
      sa[45] = -1.3169162f;
      sa[46] = 1.2061961f;
      sa[47] = 0.9809209f;
      sa[48] = -1.3294501f;
      sa[49] = -1.1172389f;
      sa[50] = 0.410919f;
      sa[51] = -0.3345973f;
      sa[52] = 0.80734694f;
      sa[53] = 0.6538941f;
      sa[54] = -0.27054325f;
      sa[55] = 1.1316596f;
      sa[56] = -1.1175507f;
      sa[57] = -1.0912201f;
      sa[58] = 0.09383304f;
      sa[59] = -0.324283f;
      sa[60] = 1.4122031f;
      sa[61] = -0.6531848f;
      sa[62] = -0.45230114f;
      sa[63] = 0.6237589f;
      sa[64] = 1.3075982f;
      sa[65] = -0.6770911f;
      sa[66] = 0.5693686f;
      sa[67] = 1.5602763f;
      sa[68] = 0.6747706f;
      sa[69] = -1.0423082f;
      sa[70] = -1.485046f;
      sa[71] = -0.4197182f;
      sa[72] = -1.3343405f;
      sa[73] = 1.2359314f;
      sa[74] = 1.3604512f;
      sa[75] = -0.16076131f;
      sa[76] = 0.8237835f;
      sa[77] = 0.41378808f;
      sa[78] = -1.4534963f;
      sa[79] = 0.9754053f;
      sa[80] = -0.79718435f;
      sa[81] = 0.20921417f;
      sa[82] = 0.8022584f;
      sa[83] = -0.6662118f;
      sa[84] = -1.6019845f;
      sa[85] = -1.2491349f;
      sa[86] = 0.27944574f;
      sa[87] = 1.1689119f;
      sa[88] = -1.6800985f;
      sa[89] = -0.61493474f;
      sa[90] = -1.0611802f;
      sa[91] = 1.508165f;
      sa[92] = -0.36239085f;
      sa[93] = 0.25448632f;
      sa[94] = -1.4940342f;
      sa[95] = -0.20667262f;
      sa[96] = -1.0492514f;
      sa[97] = 0.19588843f;
      sa[98] = -0.12835537f;
      sa[99] = 0.35950094f;
      sa[100] = -1.2639754f;
      sa[101] = -0.47420514f;
      sa[102] = 1.052456f;
      sa[103] = 0.09367594f;
      sa[104] = -0.20299004f;
      sa[105] = -0.6718169f;
      sa[106] = 1.273905f;
      sa[107] = 1.2202845f;
      sa[108] = 0.7791749f;
      sa[109] = 0.15520373f;
      sa[110] = 0.71460235f;
      sa[111] = -0.8120842f;
      sa[112] = -1.1267536f;
      sa[113] = 0.27500036f;
      sa[114] = 0.055889357f;
      sa[115] = -0.432382f;
      sa[116] = 1.1075085f;
      sa[117] = 0.08154565f;
      sa[118] = -1.4720196f;
      sa[119] = -0.76903915f;
      sa[120] = -0.309361f;
      sa[121] = 1.0085728f;
      sa[122] = -0.10732436f;
      sa[123] = 0.29100227f;
      sa[124] = -0.7323137f;
      sa[125] = 0.7707967f;
      sa[126] = -1.1849877f;
      sa[127] = 0.4273504f;
      sa[128] = -0.93777245f;
      sa[129] = 0.7883373f;
      sa[130] = -0.34470356f;
      sa[131] = 0.8535934f;
      sa[132] = 0.42463586f;
      sa[133] = 0.6471321f;
      sa[134] = 0.6336583f;
      sa[135] = -1.084856f;
      sa[136] = 0.56449604f;
      sa[137] = -0.63096845f;
      sa[138] = -0.14170429f;
      sa[139] = 1.1424683f;
      sa[140] = -0.45594293f;
      sa[141] = -0.075173624f;
      sa[142] = 0.2759652f;
      sa[143] = -0.7734663f;
      sa[144] = 0.99264824f;
      sa[145] = -0.78011584f;
      sa[146] = 0.05534836f;
      sa[147] = -0.2500213f;
      sa[148] = -0.8514901f;
      sa[149] = 1.1064273f;
      sa[150] = -1.0464045f;
      sa[151] = -1.6207261f;
      sa[152] = 1.6058135f;
      sa[153] = -0.56706446f;
      sa[154] = 1.3718312f;
      sa[155] = -1.4684932f;
      sa[156] = -1.4824278f;
      sa[157] = -1.0960566f;
      sa[158] = -0.14037606f;
      sa[159] = -0.6400396f;
      sa[160] = 1.3284098f;
      sa[161] = -1.1613075f;
      sa[162] = 1.5815222f;
      sa[163] = -0.7640624f;
      sa[164] = 0.76714766f;
      sa[165] = -0.49306265f;
      sa[166] = 1.2289038f;
      sa[167] = -1.434839f;
      sa[168] = 1.0164027f;
      sa[169] = -1.5890149f;
      sa[170] = 1.0724503f;
      sa[171] = 0.87216574f;
      sa[172] = 1.4535701f;
      sa[173] = 1.5070043f;
      sa[174] = -0.102818914f;
      sa[175] = -0.0012930087f;
      sa[176] = -0.84277487f;
      sa[177] = 0.05459728f;
      sa[178] = -1.2112684f;
      sa[179] = -0.16408834f;
      sa[180] = -1.3894128f;
      sa[181] = -0.9857245f;
      sa[182] = 0.235589f;
      sa[183] = -0.9948474f;
      sa[184] = 1.4497759f;
      sa[185] = 1.2714969f;
      sa[186] = -0.4882635f;
      sa[187] = -0.9639243f;
      sa[188] = -0.57552606f;
      sa[189] = -0.7439753f;
      sa[190] = -1.4412758f;
      sa[191] = -1.0325035f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_11 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_11_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_11_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_11_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_nn_32x6_ReLU_11_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_11_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}


