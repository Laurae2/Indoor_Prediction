/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:50:08.036+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_02

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_02 > h2o_rf_02.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_02.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_02", algorithm="drf")
public class h2o_rf_02 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_02.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_rf_02_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};

  public h2o_rf_02() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-8380136462355947760L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_02_Forest_0.score0(data,preds);
    h2o_rf_02_Forest_1.score0(data,preds);
    h2o_rf_02_Forest_2.score0(data,preds);
    h2o_rf_02_Forest_3.score0(data,preds);
    h2o_rf_02_Forest_4.score0(data,preds);
    h2o_rf_02_Forest_5.score0(data,preds);
    h2o_rf_02_Forest_6.score0(data,preds);
    h2o_rf_02_Forest_7.score0(data,preds);
    h2o_rf_02_Forest_8.score0(data,preds);
    h2o_rf_02_Forest_9.score0(data,preds);
    h2o_rf_02_Forest_10.score0(data,preds);
    h2o_rf_02_Forest_11.score0(data,preds);
    h2o_rf_02_Forest_12.score0(data,preds);
    h2o_rf_02_Forest_13.score0(data,preds);
    h2o_rf_02_Forest_14.score0(data,preds);
    h2o_rf_02_Forest_15.score0(data,preds);
    h2o_rf_02_Forest_16.score0(data,preds);
    h2o_rf_02_Forest_17.score0(data,preds);
    h2o_rf_02_Forest_18.score0(data,preds);
    h2o_rf_02_Forest_19.score0(data,preds);
    h2o_rf_02_Forest_20.score0(data,preds);
    h2o_rf_02_Forest_21.score0(data,preds);
    h2o_rf_02_Forest_22.score0(data,preds);
    h2o_rf_02_Forest_23.score0(data,preds);
    h2o_rf_02_Forest_24.score0(data,preds);
    h2o_rf_02_Forest_25.score0(data,preds);
    h2o_rf_02_Forest_26.score0(data,preds);
    h2o_rf_02_Forest_27.score0(data,preds);
    h2o_rf_02_Forest_28.score0(data,preds);
    h2o_rf_02_Forest_29.score0(data,preds);
    h2o_rf_02_Forest_30.score0(data,preds);
    h2o_rf_02_Forest_31.score0(data,preds);
    h2o_rf_02_Forest_32.score0(data,preds);
    h2o_rf_02_Forest_33.score0(data,preds);
    h2o_rf_02_Forest_34.score0(data,preds);
    h2o_rf_02_Forest_35.score0(data,preds);
    h2o_rf_02_Forest_36.score0(data,preds);
    h2o_rf_02_Forest_37.score0(data,preds);
    h2o_rf_02_Forest_38.score0(data,preds);
    h2o_rf_02_Forest_39.score0(data,preds);
    h2o_rf_02_Forest_40.score0(data,preds);
    h2o_rf_02_Forest_41.score0(data,preds);
    h2o_rf_02_Forest_42.score0(data,preds);
    h2o_rf_02_Forest_43.score0(data,preds);
    h2o_rf_02_Forest_44.score0(data,preds);
    h2o_rf_02_Forest_45.score0(data,preds);
    h2o_rf_02_Forest_46.score0(data,preds);
    h2o_rf_02_Forest_47.score0(data,preds);
    h2o_rf_02_Forest_48.score0(data,preds);
    h2o_rf_02_Forest_49.score0(data,preds);
    h2o_rf_02_Forest_50.score0(data,preds);
    h2o_rf_02_Forest_51.score0(data,preds);
    h2o_rf_02_Forest_52.score0(data,preds);
    h2o_rf_02_Forest_53.score0(data,preds);
    h2o_rf_02_Forest_54.score0(data,preds);
    h2o_rf_02_Forest_55.score0(data,preds);
    h2o_rf_02_Forest_56.score0(data,preds);
    h2o_rf_02_Forest_57.score0(data,preds);
    h2o_rf_02_Forest_58.score0(data,preds);
    h2o_rf_02_Forest_59.score0(data,preds);
    h2o_rf_02_Forest_60.score0(data,preds);
    h2o_rf_02_Forest_61.score0(data,preds);
    h2o_rf_02_Forest_62.score0(data,preds);
    h2o_rf_02_Forest_63.score0(data,preds);
    h2o_rf_02_Forest_64.score0(data,preds);
    h2o_rf_02_Forest_65.score0(data,preds);
    h2o_rf_02_Forest_66.score0(data,preds);
    h2o_rf_02_Forest_67.score0(data,preds);
    h2o_rf_02_Forest_68.score0(data,preds);
    h2o_rf_02_Forest_69.score0(data,preds);
    h2o_rf_02_Forest_70.score0(data,preds);
    h2o_rf_02_Forest_71.score0(data,preds);
    h2o_rf_02_Forest_72.score0(data,preds);
    h2o_rf_02_Forest_73.score0(data,preds);
    h2o_rf_02_Forest_74.score0(data,preds);
    h2o_rf_02_Forest_75.score0(data,preds);
    h2o_rf_02_Forest_76.score0(data,preds);
    h2o_rf_02_Forest_77.score0(data,preds);
    h2o_rf_02_Forest_78.score0(data,preds);
    h2o_rf_02_Forest_79.score0(data,preds);
    h2o_rf_02_Forest_80.score0(data,preds);
    h2o_rf_02_Forest_81.score0(data,preds);
    h2o_rf_02_Forest_82.score0(data,preds);
    h2o_rf_02_Forest_83.score0(data,preds);
    h2o_rf_02_Forest_84.score0(data,preds);
    h2o_rf_02_Forest_85.score0(data,preds);
    h2o_rf_02_Forest_86.score0(data,preds);
    h2o_rf_02_Forest_87.score0(data,preds);
    h2o_rf_02_Forest_88.score0(data,preds);
    h2o_rf_02_Forest_89.score0(data,preds);
    h2o_rf_02_Forest_90.score0(data,preds);
    h2o_rf_02_Forest_91.score0(data,preds);
    h2o_rf_02_Forest_92.score0(data,preds);
    h2o_rf_02_Forest_93.score0(data,preds);
    h2o_rf_02_Forest_94.score0(data,preds);
    h2o_rf_02_Forest_95.score0(data,preds);
    h2o_rf_02_Forest_96.score0(data,preds);
    h2o_rf_02_Forest_97.score0(data,preds);
    h2o_rf_02_Forest_98.score0(data,preds);
    h2o_rf_02_Forest_99.score0(data,preds);
    h2o_rf_02_Forest_100.score0(data,preds);
    h2o_rf_02_Forest_101.score0(data,preds);
    h2o_rf_02_Forest_102.score0(data,preds);
    h2o_rf_02_Forest_103.score0(data,preds);
    h2o_rf_02_Forest_104.score0(data,preds);
    h2o_rf_02_Forest_105.score0(data,preds);
    h2o_rf_02_Forest_106.score0(data,preds);
    h2o_rf_02_Forest_107.score0(data,preds);
    h2o_rf_02_Forest_108.score0(data,preds);
    h2o_rf_02_Forest_109.score0(data,preds);
    h2o_rf_02_Forest_110.score0(data,preds);
    h2o_rf_02_Forest_111.score0(data,preds);
    h2o_rf_02_Forest_112.score0(data,preds);
    h2o_rf_02_Forest_113.score0(data,preds);
    h2o_rf_02_Forest_114.score0(data,preds);
    h2o_rf_02_Forest_115.score0(data,preds);
    h2o_rf_02_Forest_116.score0(data,preds);
    h2o_rf_02_Forest_117.score0(data,preds);
    h2o_rf_02_Forest_118.score0(data,preds);
    h2o_rf_02_Forest_119.score0(data,preds);
    h2o_rf_02_Forest_120.score0(data,preds);
    h2o_rf_02_Forest_121.score0(data,preds);
    h2o_rf_02_Forest_122.score0(data,preds);
    h2o_rf_02_Forest_123.score0(data,preds);
    h2o_rf_02_Forest_124.score0(data,preds);
    h2o_rf_02_Forest_125.score0(data,preds);
    h2o_rf_02_Forest_126.score0(data,preds);
    h2o_rf_02_Forest_127.score0(data,preds);
    h2o_rf_02_Forest_128.score0(data,preds);
    h2o_rf_02_Forest_129.score0(data,preds);
    h2o_rf_02_Forest_130.score0(data,preds);
    h2o_rf_02_Forest_131.score0(data,preds);
    h2o_rf_02_Forest_132.score0(data,preds);
    h2o_rf_02_Forest_133.score0(data,preds);
    h2o_rf_02_Forest_134.score0(data,preds);
    h2o_rf_02_Forest_135.score0(data,preds);
    h2o_rf_02_Forest_136.score0(data,preds);
    h2o_rf_02_Forest_137.score0(data,preds);
    h2o_rf_02_Forest_138.score0(data,preds);
    h2o_rf_02_Forest_139.score0(data,preds);
    h2o_rf_02_Forest_140.score0(data,preds);
    h2o_rf_02_Forest_141.score0(data,preds);
    h2o_rf_02_Forest_142.score0(data,preds);
    h2o_rf_02_Forest_143.score0(data,preds);
    h2o_rf_02_Forest_144.score0(data,preds);
    h2o_rf_02_Forest_145.score0(data,preds);
    h2o_rf_02_Forest_146.score0(data,preds);
    h2o_rf_02_Forest_147.score0(data,preds);
    h2o_rf_02_Forest_148.score0(data,preds);
    h2o_rf_02_Forest_149.score0(data,preds);
    h2o_rf_02_Forest_150.score0(data,preds);
    h2o_rf_02_Forest_151.score0(data,preds);
    h2o_rf_02_Forest_152.score0(data,preds);
    h2o_rf_02_Forest_153.score0(data,preds);
    h2o_rf_02_Forest_154.score0(data,preds);
    h2o_rf_02_Forest_155.score0(data,preds);
    h2o_rf_02_Forest_156.score0(data,preds);
    h2o_rf_02_Forest_157.score0(data,preds);
    h2o_rf_02_Forest_158.score0(data,preds);
    h2o_rf_02_Forest_159.score0(data,preds);
    h2o_rf_02_Forest_160.score0(data,preds);
    h2o_rf_02_Forest_161.score0(data,preds);
    h2o_rf_02_Forest_162.score0(data,preds);
    h2o_rf_02_Forest_163.score0(data,preds);
    h2o_rf_02_Forest_164.score0(data,preds);
    h2o_rf_02_Forest_165.score0(data,preds);
    h2o_rf_02_Forest_166.score0(data,preds);
    h2o_rf_02_Forest_167.score0(data,preds);
    h2o_rf_02_Forest_168.score0(data,preds);
    h2o_rf_02_Forest_169.score0(data,preds);
    h2o_rf_02_Forest_170.score0(data,preds);
    h2o_rf_02_Forest_171.score0(data,preds);
    h2o_rf_02_Forest_172.score0(data,preds);
    h2o_rf_02_Forest_173.score0(data,preds);
    h2o_rf_02_Forest_174.score0(data,preds);
    h2o_rf_02_Forest_175.score0(data,preds);
    h2o_rf_02_Forest_176.score0(data,preds);
    h2o_rf_02_Forest_177.score0(data,preds);
    h2o_rf_02_Forest_178.score0(data,preds);
    h2o_rf_02_Forest_179.score0(data,preds);
    h2o_rf_02_Forest_180.score0(data,preds);
    h2o_rf_02_Forest_181.score0(data,preds);
    h2o_rf_02_Forest_182.score0(data,preds);
    h2o_rf_02_Forest_183.score0(data,preds);
    h2o_rf_02_Forest_184.score0(data,preds);
    h2o_rf_02_Forest_185.score0(data,preds);
    h2o_rf_02_Forest_186.score0(data,preds);
    h2o_rf_02_Forest_187.score0(data,preds);
    h2o_rf_02_Forest_188.score0(data,preds);
    h2o_rf_02_Forest_189.score0(data,preds);
    h2o_rf_02_Forest_190.score0(data,preds);
    h2o_rf_02_Forest_191.score0(data,preds);
    h2o_rf_02_Forest_192.score0(data,preds);
    h2o_rf_02_Forest_193.score0(data,preds);
    h2o_rf_02_Forest_194.score0(data,preds);
    h2o_rf_02_Forest_195.score0(data,preds);
    h2o_rf_02_Forest_196.score0(data,preds);
    h2o_rf_02_Forest_197.score0(data,preds);
    h2o_rf_02_Forest_198.score0(data,preds);
    h2o_rf_02_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_02 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_rf_02_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_02_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_rf_02_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_rf_02_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_rf_02_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}

class h2o_rf_02_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_0_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10886088f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.49390715f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.07181179f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3526154f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.49328452f ? 
                            1.0f : 
                             (data[14 /* X15 */] <0.2788532f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.39694652f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1652898f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.102603145f ? 
                        0.0f : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.79614156f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.52141166f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.5542052f ? 
         (data[5 /* X6 */] <0.09461213f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2427055f ? 
                 (data[3 /* X4 */] <0.32821327f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.38468644f ? 
             (data[8 /* X9 */] <-0.45724633f ? 
                 (data[0 /* X1 */] <-0.21726546f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X5 */] <0.088657655f ? 
                     (data[25 /* X26 */] <-0.26136988f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.13491644f ? 
         (data[19 /* X20 */] <-0.2718696f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.05708845f ? 
                 (data[15 /* X16 */] <0.06833985f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[25 /* X26 */] <-0.43912578f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.046170067f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09138835f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.123782225f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.054964457f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.22691126f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[9 /* X10 */] <-0.6474995f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
             (data[14 /* X15 */] <0.23789386f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16457991f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.18297186f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.10261638f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[9 /* X10 */] <-0.05748067f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.24518012f ? 
            0.0f : 
             (data[29 /* X30 */] <0.14978941f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_1_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
             (data[8 /* X9 */] <0.28232625f ? 
                 (data[12 /* X13 */] <0.3793547f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.4982325f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.18748727f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12646247f ? 
                     (data[23 /* X24 */] <0.15199056f ? 
                        1.0f : 
                        0.0f) : 
                     (data[29 /* X30 */] <0.23485605f ? 
                         (data[26 /* X27 */] <0.11537959f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.48532012f ? 
         (data[6 /* X7 */] <0.118102774f ? 
             (data[32 /* X33 */] <0.097293936f ? 
                0.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.32761008f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.21262811f ? 
                 (data[4 /* X5 */] <0.19161546f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[31 /* X32 */] <0.13579467f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2957067f ? 
         (data[13 /* X14 */] <0.10963311f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2919482f ? 
                 (data[15 /* X16 */] <0.054472975f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.077169046f ? 
                         (data[10 /* X11 */] <-0.50900507f ? 
                            1.0f : 
                             (data[4 /* X5 */] <0.10804453f ? 
                                 (data[27 /* X28 */] <0.25295836f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f)) : 
                1.0f)) : 
        0.022727273f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.37247822f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.27281737f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.58001417f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15425943f ? 
             (data[33 /* X34 */] <-0.371511f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.29489696f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3076531f ? 
        0.026666667f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.43276238f ? 
             (data[32 /* X33 */] <-0.49615696f ? 
                 (data[15 /* X16 */] <0.26247606f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_2_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31090114f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.18074763f ? 
                 (data[15 /* X16 */] <0.07947319f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.608282f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.096190356f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14982828f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[23 /* X24 */] <0.14613658f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35521752f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-0.79406106f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.30307898f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.32672718f ? 
             (data[3 /* X4 */] <-0.35192746f ? 
                 (data[10 /* X11 */] <-0.78862005f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3321155f ? 
                     (data[26 /* X27 */] <0.07069917f ? 
                        0.0f : 
                        1.0f) : 
                     (data[13 /* X14 */] <0.22020243f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.54375845f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.18657877f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3688377f ? 
             (data[33 /* X34 */] <-0.74303204f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2003529f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.21509758f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <0.09349958f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_3_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.29325238f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34557918f ? 
             (data[35 /* X36 */] <-0.92872494f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.15385222f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.89834434f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6859998f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.43768325f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25768805f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.7024541f ? 
                0.0f : 
                1.0f)) : 
         (data[28 /* X29 */] <0.3509419f ? 
            1.0f : 
             (data[31 /* X32 */] <0.29796278f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.24745634f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (data[15 /* X16 */] <0.14980772f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30746037f ? 
             (data[7 /* X8 */] <0.034017704f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.37084055f ? 
                     (data[24 /* X25 */] <0.22220176f ? 
                        0.0f : 
                        1.0f) : 
                     (data[29 /* X30 */] <0.12369604f ? 
                         (data[25 /* X26 */] <-0.34061456f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3940624f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X3 */] <-0.33163747f ? 
         (data[34 /* X35 */] <-0.1715986f ? 
            0.0f : 
            1.0f) : 
         (data[28 /* X29 */] <0.20638016f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3450887f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6894968f ? 
                     (data[15 /* X16 */] <0.08011777f ? 
                         (data[21 /* X22 */] <0.22647586f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[33 /* X34 */] <-0.6668226f ? 
                     (data[9 /* X10 */] <-0.05019323f ? 
                        1.0f : 
                        0.0f) : 
                     (data[28 /* X29 */] <0.23550776f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1851063f ? 
         (data[3 /* X4 */] <-0.24458925f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0784382f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.24319465f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3113901f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[4 /* X5 */] <0.116206914f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22348557f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_4_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[16 /* X17 */] <-0.38106808f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.32366586f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13691913f ? 
                    0.0f : 
                    1.0f)) : 
             (data[13 /* X14 */] <0.11287097f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.011109065f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.0927508f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20408474f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06293125f ? 
         (data[35 /* X36 */] <-0.55515814f ? 
             (data[1 /* X2 */] <-0.11651562f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12224659f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.55055964f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X2 */] <-0.15782626f ? 
            0.0f : 
             (data[12 /* X13 */] <0.31405345f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.05305506f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.03790069f ? 
            1.0f : 
            0.0f) : 
         (data[20 /* X21 */] <0.18663976f ? 
            1.0f : 
             (data[13 /* X14 */] <0.104195274f ? 
                 (data[4 /* X5 */] <0.19805032f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5036521f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29876038f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.15794359f ? 
         (data[28 /* X29 */] <0.20590149f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.24020539f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.16755058f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.21733418f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.08269774f ? 
             (data[15 /* X16 */] <0.08451787f ? 
                 (data[24 /* X25 */] <-0.296617f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.26542488f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.44485095f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[17 /* X18 */] <0.09624601f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.31419185f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.1296799f ? 
                    0.0f : 
                    1.0f))) : 
        0.011904762f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_5_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15649135f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.15223794f ? 
                 (data[16 /* X17 */] <-0.5623062f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.26557162f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.45903176f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.11772631f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.5542052f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15649135f ? 
             (data[3 /* X4 */] <0.19748357f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25768805f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
        0.85714287f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23766495f ? 
             (data[20 /* X21 */] <0.15979208f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.124671966f ? 
                     (data[32 /* X33 */] <-0.25818902f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.21911457f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0680485f ? 
             (data[3 /* X4 */] <-0.23942886f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2292556f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[13 /* X14 */] <0.2322865f ? 
                 (data[33 /* X34 */] <-1.1050268f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.26477927f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.28988725f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.1438435f ? 
                 (data[11 /* X12 */] <-0.30978015f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.32949927f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X1 */] <-0.045276243f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.20159335f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_02_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33919626f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.16668037f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X10 */] <-0.09148872f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_6_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[16 /* X17 */] <-0.35245153f ? 
             (data[4 /* X5 */] <0.1011252f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.13325009f ? 
                 (data[22 /* X23 */] <0.21489954f ? 
                    0.0f : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.14577103f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.18438478f ? 
            0.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17661658f ? 
                 (data[5 /* X6 */] <0.1487977f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22305913f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.25401756f ? 
                 (data[11 /* X12 */] <-0.17926842f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.29850504f ? 
                         (data[2 /* X3 */] <-0.18831426f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2680088f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
        0.6666667f : 
         (data[25 /* X26 */] <-0.43912578f ? 
            1.0f : 
             (data[23 /* X24 */] <0.112964f ? 
                 (data[11 /* X12 */] <-0.10899287f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[9 /* X10 */] <-0.74978733f ? 
            1.0f : 
            0.0f) : 
         (data[25 /* X26 */] <-0.21892424f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.6668226f ? 
                 (data[17 /* X18 */] <-0.025207711f ? 
                    1.0f : 
                     (data[2 /* X3 */] <0.0039224434f ? 
                         (data[30 /* X31 */] <0.21479316f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.5199984f ? 
                     (data[22 /* X23 */] <0.18310043f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.30932042f ? 
             (data[4 /* X5 */] <0.108364426f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.21705876f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[29 /* X30 */] <0.09938176f ? 
             (data[30 /* X31 */] <0.17919278f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_7_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[16 /* X17 */] <-0.30793688f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.17483412f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3557353f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[31 /* X32 */] <0.13339218f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.4935906f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14978886f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
         (data[27 /* X28 */] <-0.5959077f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.10299381f ? 
             (data[3 /* X4 */] <0.31445226f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.4935906f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14978886f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32821327f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (data[16 /* X17 */] <-0.30793688f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2453322f ? 
             (data[23 /* X24 */] <0.12564763f ? 
                 (data[15 /* X16 */] <0.054472975f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.48257285f ? 
                        0.0f : 
                         (data[24 /* X25 */] <0.26455432f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[9 /* X10 */] <-0.05019323f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09084766f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.27531236f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.31058f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.49393553f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24792051f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2520759f ? 
                 (data[24 /* X25 */] <-0.19073562f ? 
                     (data[33 /* X34 */] <-0.5044634f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.67960846f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.66211456f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.22443314f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22654231f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25403786f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[19 /* X20 */] <0.1693865f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.6660205f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_8_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.33341515f ? 
             (data[1 /* X2 */] <-0.33384553f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.92351305f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.28209752f ? 
                         (data[6 /* X7 */] <0.12770304f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[1 /* X2 */] <-0.09675836f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.13559987f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.16142955f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19107589f ? 
             (data[1 /* X2 */] <-0.16860294f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.107674904f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[7 /* X8 */] <0.08510128f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3834922f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <-1.2180985f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14122686f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.19087437f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.33478168f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.054573666f ? 
            0.0f : 
             (data[28 /* X29 */] <0.22265533f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5716682f ? 
                    1.0f : 
                    0.0f) : 
                 (data[33 /* X34 */] <-0.5334561f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.17994729f ? 
                        1.0f : 
                         (data[10 /* X11 */] <0.009278495f ? 
                            0.0f : 
                             (data[0 /* X1 */] <0.14202832f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.5310745f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.322221f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.011904762f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_9_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[32 /* X33 */] <0.49537608f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.13325176f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.37657592f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18532778f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.46892756f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.42454043f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[32 /* X33 */] <0.49537608f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1094798f ? 
                0.0f : 
                1.0f) : 
             (data[20 /* X21 */] <0.45287916f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.32821327f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.23129368f ? 
            0.0f : 
             (data[7 /* X8 */] <0.12476243f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15337887f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24559523f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16203552f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.18299662f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (data[23 /* X24 */] <0.0885724f ? 
            1.0f : 
            0.0f) : 
         (data[21 /* X22 */] <0.11849187f ? 
            1.0f : 
             (data[0 /* X1 */] <-0.32021168f ? 
                1.0f : 
                 (data[24 /* X25 */] <0.010439004f ? 
                     (data[17 /* X18 */] <0.005657226f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.16512589f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[3 /* X4 */] <-0.59377515f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
        0.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.39480025f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1913363f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.32377917f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X7 */] <0.12135705f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_10_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10230868f ? 
             (data[32 /* X33 */] <0.43514964f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.9506508f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.14746521f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.123020105f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12983906f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.20105071f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3456773f ? 
                    0.0f : 
                    1.0f)) : 
             (data[13 /* X14 */] <0.24316217f ? 
                 (data[7 /* X8 */] <0.15712593f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17069963f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.27581626f ? 
             (data[27 /* X28 */] <0.17506775f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19324611f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[22 /* X23 */] <0.2518833f ? 
             (data[27 /* X28 */] <-0.1315504f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17836733f ? 
                    1.0f : 
                     (data[4 /* X5 */] <0.20205939f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43037766f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20596829f ? 
                     (data[32 /* X33 */] <-0.47460487f ? 
                        1.0f : 
                         (data[0 /* X1 */] <-0.095935985f ? 
                            1.0f : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28420082f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.24974963f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.31174955f ? 
            0.0f : 
             (data[12 /* X13 */] <0.30154896f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_02_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3096056f ? 
             (data[34 /* X35 */] <-0.080358244f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[32 /* X33 */] <-0.2963814f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15692447f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_11_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11225436f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <1.1483276f ? 
             (data[14 /* X15 */] <0.18234484f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17100924f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.029356224f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.42118484f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05228429f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3582659f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.023494141f ? 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.31000283f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1251905f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.15737723f ? 
        0.0f : 
         (data[27 /* X28 */] <-0.29232246f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.318701f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32651272f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.39019376f ? 
                 (data[34 /* X35 */] <-0.7073432f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.437709f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (data[27 /* X28 */] <-0.29450652f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-0.7616683f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18711446f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.37570405f ? 
                 (data[2 /* X3 */] <0.15182763f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4304654f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.18806976f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.050199457f ? 
         (data[4 /* X5 */] <0.10595135f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2424153f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.11537959f ? 
                 (data[2 /* X3 */] <-0.021960964f ? 
                    1.0f : 
                     (data[2 /* X3 */] <0.18863061f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2497369f ? 
                             (data[31 /* X32 */] <0.14156066f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[8 /* X9 */] <0.1412236f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11968581f ? 
        0.014492754f : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.35911992f ? 
             (data[8 /* X9 */] <0.106883146f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.20359445f ? 
                     (data[34 /* X35 */] <-0.34799808f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_12_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[8 /* X9 */] <0.095000304f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.35229507f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2847491f ? 
                    0.0f : 
                    1.0f))) : 
         (data[24 /* X25 */] <-0.6116141f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.14817625f ? 
                 (data[15 /* X16 */] <0.10994047f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6156205f ? 
             (data[3 /* X4 */] <0.311012f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.2598673f ? 
                    0.0f : 
                    1.0f)) : 
             (data[19 /* X20 */] <-0.48977384f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29508862f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.44881192f ? 
            0.0f : 
             (data[31 /* X32 */] <0.25952294f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[25 /* X26 */] <-0.19458617f ? 
            1.0f : 
             (data[20 /* X21 */] <0.17268874f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X1 */] <-0.41212794f ? 
            1.0f : 
             (data[7 /* X8 */] <0.03592144f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17794138f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2820118f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
        0.022727273f : 
         (data[31 /* X32 */] <0.103361055f ? 
             (data[6 /* X7 */] <0.18318833f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.29184824f ? 
                 (data[32 /* X33 */] <-0.65186435f ? 
                    1.0f : 
                     (data[26 /* X27 */] <-0.30461636f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26604888f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.13701396f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.087682694f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.56807107f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.28848368f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22654231f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.19803494f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <0.21841496f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.41931957f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_13_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11271394f ? 
             (data[16 /* X17 */] <-0.3842477f ? 
                 (data[24 /* X25 */] <-0.16955934f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29433447f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <1.1488245f ? 
                        0.0f : 
                         (data[29 /* X30 */] <0.19456863f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.06640579f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17584172f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.22614102f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[33 /* X34 */] <0.23816453f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.7676018f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[7 /* X8 */] <0.054958794f ? 
             (data[24 /* X25 */] <-0.44485095f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_02_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2970695f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11016712f ? 
             (data[32 /* X33 */] <0.17661658f ? 
                0.0f : 
                1.0f) : 
             (data[26 /* X27 */] <-0.26216996f ? 
                 (data[24 /* X25 */] <-0.2119119f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13681488f ? 
        0.0f : 
         (data[25 /* X26 */] <-0.2409444f ? 
            1.0f : 
             (data[7 /* X8 */] <0.08288025f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.10954576f ? 
                     (data[35 /* X36 */] <-0.43229747f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14474718f ? 
         (data[32 /* X33 */] <3.440418E-4f ? 
             (data[27 /* X28 */] <-0.11759715f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4397494f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.08269774f ? 
             (data[9 /* X10 */] <-0.5846054f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.24386878f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.294313f ? 
                     (data[8 /* X9 */] <-0.33560613f ? 
                        0.0f : 
                         (data[27 /* X28 */] <0.030919371f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3414762f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (data[32 /* X33 */] <-0.41536537f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.67740303f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.8418665f ? 
             (data[9 /* X10 */] <0.34332848f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.23433277f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_14_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (data[34 /* X35 */] <-0.531881f ? 
             (data[0 /* X1 */] <0.036423437f ? 
                 (data[9 /* X10 */] <-0.15707567f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.40968463f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.054521993f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26157066f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14059965f ? 
                     (data[11 /* X12 */] <-0.15468849f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.021276595f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[25 /* X26 */] <-0.22703692f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2628484f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.14857827f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.61289114f ? 
            0.0f : 
             (data[21 /* X22 */] <0.29464075f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13681488f ? 
        0.0f : 
         (data[25 /* X26 */] <-0.2409444f ? 
             (data[7 /* X8 */] <0.05686253f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.40856543f ? 
                 (data[14 /* X15 */] <0.19397138f ? 
                     (data[27 /* X28 */] <-0.2835862f ? 
                        0.0f : 
                        1.0f) : 
                     (data[16 /* X17 */] <-0.5750247f ? 
                         (data[31 /* X32 */] <0.10696479f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14474718f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05228429f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17930916f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-1.0526931f ? 
            0.0f : 
             (data[35 /* X36 */] <0.047123045f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.013446839f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.10696479f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.14764772f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[16 /* X17 */] <-0.6131801f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24792051f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (data[33 /* X34 */] <-0.84782004f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X12 */] <-1.0526931f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33501622f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.812618f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.037256036f ? 
                    0.0f : 
                     (data[34 /* X35 */] <0.18821292f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_15_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30069122f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.8049846f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[3 /* X4 */] <0.2989711f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15099539f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26456854f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (data[9 /* X10 */] <-0.17650883f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.25663015f ? 
             (data[27 /* X28 */] <0.27990294f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.37490737f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.21353611f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.68494195f ? 
            1.0f : 
             (data[31 /* X32 */] <0.08774487f ? 
                 (data[30 /* X31 */] <0.13275048f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2743529f ? 
                     (data[17 /* X18 */] <-0.006625999f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23961073f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2651676f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[9 /* X10 */] <0.26316664f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.41837466f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.5557446f ? 
             (data[30 /* X31 */] <0.15655732f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_16_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[24 /* X25 */] <-0.7386718f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18123992f ? 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.36249822f ? 
                     (data[15 /* X16 */] <0.2647872f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.38015965f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06293125f ? 
         (data[19 /* X20 */] <-0.48705006f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.37065536f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.4462121f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[19 /* X20 */] <-0.11933663f ? 
             (data[5 /* X6 */] <0.11670722f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.13651864f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.04829572f ? 
             (data[11 /* X12 */] <0.14647715f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.18581314f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20800221f ? 
             (data[5 /* X6 */] <0.14669341f ? 
                0.0f : 
                 (data[10 /* X11 */] <0.11903829f ? 
                     (data[1 /* X2 */] <-0.39132118f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.59603757f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.28759244f ? 
             (data[6 /* X7 */] <0.16122629f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.89713216f ? 
                    1.0f : 
                    0.0f)) : 
             (data[31 /* X32 */] <0.073329926f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[10 /* X11 */] <0.17772065f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.17123011f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21297787f ? 
                1.0f : 
                0.0f)) : 
        0.011904762f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_17_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[2 /* X3 */] <-0.082971856f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.10535321f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <0.31445226f ? 
                 (data[21 /* X22 */] <0.22377627f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14570352f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.3151703f ? 
             (data[3 /* X4 */] <0.311012f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.096949965f ? 
                 (data[6 /* X7 */] <0.078970425f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.55515814f ? 
             (data[3 /* X4 */] <0.18372254f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6114222f ? 
                 (data[16 /* X17 */] <-0.48599544f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.2805856f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[2 /* X3 */] <-0.10330882f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24506915f ? 
             (data[15 /* X16 */] <0.06718428f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2967332f ? 
                     (data[32 /* X33 */] <-0.2773619f ? 
                         (data[35 /* X36 */] <-0.040550802f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.15493648f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
        0.017857144f : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.25830835f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.18821414f ? 
                 (data[7 /* X8 */] <0.084783986f ? 
                     (data[23 /* X24 */] <0.0954086f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.10954105f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[8 /* X9 */] <0.06580665f ? 
            1.0f : 
             (data[3 /* X4 */] <-0.32543525f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.60511416f ? 
             (data[33 /* X34 */] <-0.530007f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3451232f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_18_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[33 /* X34 */] <-0.10715951f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.68095106f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30028784f ? 
             (data[24 /* X25 */] <-0.6724959f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.4119361f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17391117f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12952177f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1393322f ? 
                 (data[3 /* X4 */] <0.19060305f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24842323f ? 
         (data[15 /* X16 */] <0.071806565f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.31511754f ? 
                 (data[6 /* X7 */] <0.111700855f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.35665384f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.10125603f ? 
                        1.0f : 
                        0.0f)))) : 
        0.75f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.61902416f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.054573666f ? 
             (data[3 /* X4 */] <-0.8139515f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X5 */] <0.09204595f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2252182f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.28858352f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.024913762f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[21 /* X22 */] <0.15628627f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.22734268f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.66695803f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42914987f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[5 /* X6 */] <0.18904233f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.33162546f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_19_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.03678669f ? 
             (data[29 /* X30 */] <0.16876641f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.19803494f ? 
                     (data[20 /* X21 */] <0.54862976f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.66486394f ? 
             (data[11 /* X12 */] <-0.033697635f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.5866946f ? 
                     (data[21 /* X22 */] <0.20487906f ? 
                        0.0f : 
                         (data[11 /* X12 */] <0.084892355f ? 
                             (data[32 /* X33 */] <-0.30049443f ? 
                                0.0f : 
                                1.0f) : 
                             (data[29 /* X30 */] <0.18347359f ? 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.053874712f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_02_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.344001f ? 
         (data[19 /* X20 */] <-1.5711237f ? 
            1.0f : 
             (data[6 /* X7 */] <0.14250986f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22780888f ? 
                     (data[18 /* X19 */] <-0.18343227f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[31 /* X32 */] <0.1736339f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13188753f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.58711284f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3909937f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22819346f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.071806565f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25696954f ? 
             (data[25 /* X26 */] <-0.46114594f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <-0.07227817f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.25951377f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3144446f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.038261764f ? 
                 (data[33 /* X34 */] <-0.74303204f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17566758f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20488611f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            0.0f) : 
         (data[31 /* X32 */] <0.14540464f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.06623113f ? 
                 (data[0 /* X1 */] <0.021716835f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.10012462f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.16196336f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.062465247f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3891034f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6664827f ? 
             (data[29 /* X30 */] <0.17825492f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1760182f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5579352f ? 
                        0.0f : 
                         (data[27 /* X28 */] <0.26774824f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[13 /* X14 */] <0.26491353f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3586008f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[4 /* X5 */] <0.13008209f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_02_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_20_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.16074428f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10886088f ? 
             (data[3 /* X4 */] <0.31445226f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.14488155f ? 
                     (data[5 /* X6 */] <0.09613258f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.21446249f ? 
         (data[23 /* X24 */] <0.17004034f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22156535f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32503563f ? 
                 (data[1 /* X2 */] <-0.14704958f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3543457f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24736726f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.10715951f ? 
         (data[27 /* X28 */] <0.10954576f ? 
             (data[3 /* X4 */] <-0.13278095f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32366145f ? 
                 (data[14 /* X15 */] <0.22755915f ? 
                     (data[34 /* X35 */] <0.15592709f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[7 /* X8 */] <0.03592144f ? 
            1.0f : 
             (data[23 /* X24 */] <0.099304706f ? 
                 (data[17 /* X18 */] <-0.17244953f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22594236f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2708664f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14212714f ? 
             (data[3 /* X4 */] <-0.5882159f ? 
                 (data[26 /* X27 */] <-0.36716893f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.07573241f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.38740596f ? 
                        1.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.58005595f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16780648f ? 
                                0.0f : 
                                 (data[27 /* X28 */] <0.34542495f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)))) : 
             (data[34 /* X35 */] <0.036616564f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[29 /* X30 */] <0.12517862f ? 
            1.0f : 
             (data[14 /* X15 */] <0.30506942f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.18686827f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17164376f ? 
            0.0f : 
             (data[21 /* X22 */] <0.23727426f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_21_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (data[16 /* X17 */] <-0.58456355f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3080968f ? 
                1.0f : 
                 (data[8 /* X9 */] <0.33584797f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.08423369f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.3014234f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18123992f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16661815f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2739888f ? 
                                0.0f : 
                                 (data[24 /* X25 */] <-0.1944279f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[18 /* X19 */] <-0.18806581f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[20 /* X21 */] <0.3611496f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46308193f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.40663886f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[25 /* X26 */] <-0.29193842f ? 
            1.0f : 
             (data[35 /* X36 */] <0.1462326f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.04391141f ? 
                     (data[22 /* X23 */] <0.2356381f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.10125603f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[33 /* X34 */] <-1.1931441f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23796716f ? 
             (data[33 /* X34 */] <-0.476299f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19393149f ? 
                     (data[2 /* X3 */] <-0.09961119f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.16836508f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.23358692f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.48250446f ? 
                        1.0f : 
                        0.0f))) : 
             (data[8 /* X9 */] <-0.2820844f ? 
                 (data[20 /* X21 */] <0.2115438f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.111988336f ? 
             (data[8 /* X9 */] <0.7396935f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14537823f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.8240046f ? 
                 (data[8 /* X9 */] <0.26772943f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.37389255f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.02444897f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23953696f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_22_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[1 /* X2 */] <-0.15782626f ? 
            1.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.27176106f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.9014766f ? 
                     (data[15 /* X16 */] <0.15385222f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.1463905f ? 
                             (data[22 /* X23 */] <0.21167429f ? 
                                0.0f : 
                                1.0f) : 
                             (data[34 /* X35 */] <-0.98059636f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[1 /* X2 */] <-0.15782626f ? 
            0.0f : 
             (data[8 /* X9 */] <0.34071356f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.04875668f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25618187f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.09509252f ? 
                         (data[32 /* X33 */] <0.21187109f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4875574f ? 
            0.0f : 
             (data[15 /* X16 */] <0.349144f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
        0.85714287f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44283935f ? 
             (data[33 /* X34 */] <-1.219341f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.07758443f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.18495841f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X4 */] <-0.2772717f ? 
                         (data[7 /* X8 */] <0.04163265f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
        0.017857144f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16342913f ? 
                 (data[10 /* X11 */] <-0.7551898f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.34410438f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X4 */] <-0.66258025f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16142955f ? 
                        0.0f : 
                        1.0f))) : 
             (data[15 /* X16 */] <0.083362296f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2013967f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5570933f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.15426157f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X10 */] <-0.23966664f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_23_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[4 /* X5 */] <0.11801672f ? 
             (data[23 /* X24 */] <0.118817985f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X9 */] <0.29205748f ? 
                 (data[28 /* X29 */] <0.27626762f ? 
                     (data[10 /* X11 */] <0.0989821f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X6 */] <0.070938826f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[4 /* X5 */] <0.11801672f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17505264f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <0.10995645f ? 
                 (data[28 /* X29 */] <0.33179465f ? 
                     (data[23 /* X24 */] <0.2105304f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[14 /* X15 */] <0.23337242f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19084276f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X11 */] <-0.59322613f ? 
                1.0f : 
                 (data[27 /* X28 */] <0.16196336f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.12680992f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3711351f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.5001369f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32314354f ? 
                 (data[23 /* X24 */] <0.08369408f ? 
                    1.0f : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21054828f ? 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4267454f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.05449087f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14917812f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[19 /* X20 */] <0.06479246f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[16 /* X17 */] <0.12069845f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f) : 
         (data[23 /* X24 */] <0.09491421f ? 
             (data[16 /* X17 */] <-0.4987139f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[31 /* X32 */] <0.14840776f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2279601f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4473732f ? 
            0.0f : 
             (data[16 /* X17 */] <0.55055964f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_24_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29261607f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.54993474f ? 
                 (data[24 /* X25 */] <-0.7858228f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.75439245f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X12 */] <-0.0085992245f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.40273622f ? 
                1.0f : 
                0.0f)) : 
         (data[14 /* X15 */] <0.18557443f ? 
             (data[10 /* X11 */] <-0.41830546f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[35 /* X36 */] <-0.7038225f ? 
             (data[31 /* X32 */] <0.23790053f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[35 /* X36 */] <0.047123045f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3279524f ? 
                1.0f : 
                0.0f) : 
             (data[23 /* X24 */] <0.13833126f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-1.1079097f ? 
             (data[21 /* X22 */] <0.22242646f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (data[18 /* X19 */] <-0.30216688f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.095756486f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.21316333f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.32024863f ? 
                         (data[7 /* X8 */] <0.097895026f ? 
                             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13335651f ? 
                                0.0f : 
                                1.0f) : 
                             (data[23 /* X24 */] <0.18106933f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f))) : 
         (data[28 /* X29 */] <0.18914764f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[17 /* X18 */] <-0.035798658f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3900526f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.73143345f ? 
             (data[7 /* X8 */] <0.1583951f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_25_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.10382134f ? 
             (data[13 /* X14 */] <0.18395019f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.1931417f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19201073f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[16 /* X17 */] <-1.1759723f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.30507112f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.24367632f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.16136345f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13316295f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.1256222f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.071806565f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.19067775f ? 
            1.0f : 
            0.0f) : 
         (data[25 /* X26 */] <-0.40088025f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.59525204f ? 
                 (data[1 /* X2 */] <-0.5096285f ? 
                     (data[15 /* X16 */] <0.21502315f ? 
                        1.0f : 
                        0.0f) : 
                     (data[15 /* X16 */] <0.16344438f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2976056f ? 
                             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.0338746f ? 
                                0.0f : 
                                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.110808775f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.28892145f ? 
            0.0f : 
            1.0f) : 
         (data[25 /* X26 */] <-0.11925407f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.13559987f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.042740047f ? 
                     (data[33 /* X34 */] <-0.74303204f ? 
                        0.0f : 
                        1.0f) : 
                     (data[15 /* X16 */] <0.11518315f ? 
                        1.0f : 
                         (data[12 /* X13 */] <0.31544283f ? 
                             (data[27 /* X28 */] <0.6238198f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0073728636f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.443341f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26877707f ? 
                0.0f : 
                 (data[24 /* X25 */] <0.13749667f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19241613f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.2104753f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_26_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.17669974f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.31237772f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.5342205f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16533914f ? 
                    1.0f : 
                    0.0f) : 
                 (data[24 /* X25 */] <-0.14838307f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[13 /* X14 */] <0.22322345f ? 
             (data[31 /* X32 */] <0.12137973f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.68095106f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2636514f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.52422446f ? 
                 (data[6 /* X7 */] <0.12623847f ? 
                     (data[2 /* X3 */] <-0.29188794f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.48532012f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.09876288f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.15796769f ? 
                 (data[16 /* X17 */] <-0.5495878f ? 
                    0.0f : 
                     (data[17 /* X18 */] <-0.36283952f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.43396455f ? 
                             (data[25 /* X26 */] <-0.42320263f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.20751414f ? 
             (data[31 /* X32 */] <0.1285872f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.1071949f ? 
         (data[10 /* X11 */] <-0.7487112f ? 
            1.0f : 
             (data[23 /* X24 */] <0.09735338f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.25424153f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.25751063f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.37364122f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.3264714f ? 
         (data[27 /* X28 */] <-0.13288562f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15310048f ? 
                 (data[1 /* X2 */] <-0.50627255f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.61053455f ? 
                         (data[8 /* X9 */] <-0.19936906f ? 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06641766f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26292047f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X10 */] <-0.29796615f ? 
             (data[31 /* X32 */] <0.12137973f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.43446156f ? 
                 (data[21 /* X22 */] <0.28991646f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.015637346f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.29082328f ? 
            0.0f : 
             (data[13 /* X14 */] <0.2020763f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32199377f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.1421587f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_27_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[17 /* X18 */] <-0.20162219f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4460453f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5736839f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.49277136f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.39385104f ? 
             (data[2 /* X3 */] <-0.36584052f ? 
                 (data[33 /* X34 */] <0.23816453f ? 
                    0.0f : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.13536307f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.070856355f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.51253176f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[34 /* X35 */] <-0.9506508f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.22461641f ? 
             (data[27 /* X28 */] <-0.3843577f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23789386f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[5 /* X6 */] <0.16615812f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35538176f ? 
             (data[12 /* X13 */] <0.19734484f ? 
                 (data[15 /* X16 */] <0.13305192f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.66449016f ? 
                     (data[33 /* X34 */] <-0.15240887f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[2 /* X3 */] <-0.16616853f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
        0.03508772f : 
         (data[23 /* X24 */] <0.09198722f ? 
            1.0f : 
             (data[28 /* X29 */] <0.20638016f ? 
                 (data[14 /* X15 */] <0.42908585f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17825492f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.45796457f ? 
                     (data[33 /* X34 */] <-0.952608f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X8 */] <0.061939158f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.21170971f ? 
                             (data[16 /* X17 */] <-0.3936859f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.051262826f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.08423614f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.2549231f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.41620818f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_28_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2598551f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.29910764f ? 
                1.0f : 
                 (data[8 /* X9 */] <-0.17990662f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.73187506f ? 
             (data[13 /* X14 */] <0.17669974f ? 
                 (data[21 /* X22 */] <0.26292047f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.16922906f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.45861053f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.20007513f ? 
                        1.0f : 
                        0.0f))) : 
             (data[2 /* X3 */] <0.015015333f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.303077f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23105606f ? 
                 (data[24 /* X25 */] <-0.8472002f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.42320263f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[19 /* X20 */] <-0.36727896f ? 
                     (data[21 /* X22 */] <0.21910366f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.037037037f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24842323f ? 
         (data[9 /* X10 */] <-0.5433099f ? 
             (data[25 /* X26 */] <-0.13200258f ? 
                1.0f : 
                 (data[14 /* X15 */] <0.26981628f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.20707056f ? 
                 (data[8 /* X9 */] <-0.2772188f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24980381f ? 
                     (data[10 /* X11 */] <-0.7681469f ? 
                        1.0f : 
                         (data[0 /* X1 */] <0.020622993f ? 
                             (data[6 /* X7 */] <0.14446242f ? 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.009952333f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f))) : 
         (data[30 /* X31 */] <0.15542555f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11118345f ? 
        0.0f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26825204f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2970695f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09260857f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8126777f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.39479035f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[21 /* X22 */] <0.16516957f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15310048f ? 
                 (data[16 /* X17 */] <-0.52415085f ? 
                     (data[35 /* X36 */] <-0.07456473f ? 
                        1.0f : 
                        0.0f) : 
                     (data[11 /* X12 */] <-0.5938102f ? 
                         (data[12 /* X13 */] <0.40436366f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.36126435f ? 
            0.0f : 
             (data[14 /* X15 */] <0.39621735f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.12190396f ? 
             (data[13 /* X14 */] <0.2902901f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_29_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[0 /* X1 */] <0.026312647f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20555396f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.59116346f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.06574663f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.04122716f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.028969683f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10012462f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.43901923f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.48532012f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24564715f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.58498734f ? 
                 (data[15 /* X16 */] <0.2457336f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.55515814f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (data[20 /* X21 */] <0.2129281f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23766495f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.46796247f ? 
                 (data[7 /* X8 */] <0.03655602f ? 
                    1.0f : 
                     (data[20 /* X21 */] <0.23586048f ? 
                         (data[25 /* X26 */] <-0.09955183f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[7 /* X8 */] <0.04797843f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.205853f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.31081024f ? 
             (data[1 /* X2 */] <-0.33025327f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18123992f ? 
                     (data[27 /* X28 */] <0.102716014f ? 
                         (data[0 /* X1 */] <-0.051816177f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.7049273f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17062119f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.24672286f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19780448f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24932602f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.18834876f ? 
                    0.0f : 
                     (data[10 /* X11 */] <-0.09309595f ? 
                        1.0f : 
                        0.0f))) : 
             (data[15 /* X16 */] <0.2012307f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.24718682f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_30_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.17669974f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.10392302f ? 
             (data[12 /* X13 */] <0.26264608f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.19043736f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.3015665f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[24 /* X25 */] <-0.77573025f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.08805763f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.23457466f ? 
                     (data[21 /* X22 */] <0.15578908f ? 
                        0.0f : 
                         (data[0 /* X1 */] <-0.051795747f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (data[15 /* X16 */] <0.16194125f ? 
            0.0f : 
             (data[6 /* X7 */] <0.10101781f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.10700645f ? 
                    1.0f : 
                     (data[12 /* X13 */] <0.24516784f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[24 /* X25 */] <-0.5639675f ? 
             (data[4 /* X5 */] <0.1505932f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X7 */] <0.12623847f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.34070495f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24546371f ? 
         (data[17 /* X18 */] <-0.58240217f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24349655f ? 
                 (data[7 /* X8 */] <0.034017704f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.36112395f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15083033f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.52986956f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29496607f ? 
                            0.0f : 
                             (data[10 /* X11 */] <-0.62302744f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)) : 
        0.5f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11118345f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.63824403f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2651676f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.1851806f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14576414f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2799224f ? 
                     (data[24 /* X25 */] <-0.4157291f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[19 /* X20 */] <-0.21194594f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1851063f ? 
         (data[33 /* X34 */] <-0.63824403f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2289908f ? 
                 (data[8 /* X9 */] <0.10229872f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.27339554f ? 
             (data[15 /* X16 */] <0.15847452f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.87198454f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.14893694f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_02_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_31_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[31 /* X32 */] <0.12798658f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.92257684f ? 
                1.0f : 
                 (data[3 /* X4 */] <0.26628867f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33445984f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.50545585f ? 
             (data[3 /* X4 */] <0.3557353f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.04855778f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.54441154f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29893675f ? 
             (data[8 /* X9 */] <-0.40859026f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (data[15 /* X16 */] <0.10820711f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6355276f ? 
             (data[7 /* X8 */] <0.034017704f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.24789813f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.060471926f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[21 /* X22 */] <0.21230297f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (data[31 /* X32 */] <0.08053739f ? 
             (data[7 /* X8 */] <0.044805538f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.51307726f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21297787f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.9145538f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.7870064f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[25 /* X26 */] <-0.1783608f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.34942558f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3681744f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[24 /* X25 */] <0.08985004f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.23327535f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21230297f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.9171617f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_32_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3110238f ? 
             (data[16 /* X17 */] <-0.37788847f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.13349248f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2425061f ? 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.46647793f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11179478f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.1048918f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3110238f ? 
             (data[31 /* X32 */] <0.13939841f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.3842477f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1815612f ? 
                        1.0f : 
                        0.0f))) : 
             (data[2 /* X3 */] <0.020561777f ? 
                 (data[8 /* X9 */] <0.28719187f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[6 /* X7 */] <0.12705204f ? 
             (data[17 /* X18 */] <-0.12945825f ? 
                0.0f : 
                 (data[19 /* X20 */] <-1.0399821f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.1071949f ? 
         (data[26 /* X27 */] <-0.17392613f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.7487112f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.15636791f ? 
                    1.0f : 
                    0.0f))) : 
        0.032258064f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
        0.017857144f : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.35626736f ? 
             (data[0 /* X1 */] <-0.053654503f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.23222895f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.22008319f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20140505f ? 
                             (data[27 /* X28 */] <0.3727268f ? 
                                 (data[9 /* X10 */] <0.4006563f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
        0.0f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3428558f ? 
             (data[13 /* X14 */] <0.241761f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17613617f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.66208047f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_33_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (data[32 /* X33 */] <-0.17739743f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.29910764f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3557353f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-1.0114777f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31083834f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <1.162996f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18348946f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3924389f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[5 /* X6 */] <0.060417354f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X11 */] <-0.044498693f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14157876f ? 
            1.0f : 
             (data[5 /* X6 */] <0.0814603f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
        0.8f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23454769f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28303963f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17383367f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1850527f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[2 /* X3 */] <-0.18373227f ? 
             (data[19 /* X20 */] <-0.26097438f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.13536437f ? 
                 (data[4 /* X5 */] <0.06854871f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.039215688f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[7 /* X8 */] <0.12793532f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.19662453f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.60511416f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7737468f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_34_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (data[3 /* X4 */] <-0.24286912f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16226834f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.37648234f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.11109604f ? 
             (data[20 /* X21 */] <0.3421325f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <-0.6858877f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.096190356f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[3 /* X4 */] <0.2989711f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14189605f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.2054669f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1362212f ? 
            1.0f : 
            0.0f) : 
         (data[15 /* X16 */] <0.055050764f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25435537f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4488241f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.13247728f ? 
                         (data[26 /* X27 */] <0.20474042f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[22 /* X23 */] <0.2518833f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.32195026f ? 
                 (data[27 /* X28 */] <0.0483919f ? 
                     (data[23 /* X24 */] <0.08120578f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X7 */] <0.14644803f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.06447747f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.22509176f ? 
                         (data[11 /* X12 */] <-0.2119096f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13745213f ? 
                            0.0f : 
                             (data[8 /* X9 */] <0.14316984f ? 
                                1.0f : 
                                0.0f)))))) : 
         (data[29 /* X30 */] <0.11035284f ? 
            1.0f : 
             (data[23 /* X24 */] <0.094426386f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_02_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
         (data[3 /* X4 */] <-0.2531899f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.16727053f ? 
                 (data[34 /* X35 */] <-0.108432196f ? 
                     (data[30 /* X31 */] <0.17391117f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X10 */] <0.29474553f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_35_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (data[24 /* X25 */] <-0.62749636f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.48567176f ? 
                 (data[33 /* X34 */] <-0.31435394f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29396585f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.35493147f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.31751743f ? 
                            0.0f : 
                             (data[23 /* X24 */] <0.32136583f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[20 /* X21 */] <0.5043372f ? 
                        1.0f : 
                        0.0f)))) : 
        0.021276595f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[24 /* X25 */] <-0.62749636f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24181755f ? 
                 (data[1 /* X2 */] <-0.16501072f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.107379325f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.44248256f ? 
                            1.0f : 
                             (data[20 /* X21 */] <0.49001846f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)) : 
         (data[27 /* X28 */] <-1.096059f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24842323f ? 
         (data[10 /* X11 */] <-0.7616683f ? 
             (data[30 /* X31 */] <0.15127571f ? 
                0.0f : 
                1.0f) : 
             (data[22 /* X23 */] <0.12987147f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.12618472f ? 
                     (data[32 /* X33 */] <-0.37570405f ? 
                         (data[20 /* X21 */] <0.28955582f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
        0.75f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14474718f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.034602623f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2297453f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <0.026551237f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.52869296f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.31644148f ? 
                     (data[25 /* X26 */] <-0.062465247f ? 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2647715f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.43686244f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.24058975f ? 
            0.0f : 
             (data[30 /* X31 */] <0.15278475f ? 
                1.0f : 
                0.0f)) : 
         (data[22 /* X23 */] <0.21559083f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30951875f ? 
                 (data[26 /* X27 */] <-0.36716893f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_36_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[0 /* X1 */] <0.110875614f ? 
             (data[17 /* X18 */] <-0.13252905f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32982734f ? 
                     (data[21 /* X22 */] <0.12929027f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3488985f ? 
                 (data[11 /* X12 */] <-0.09165921f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.26436153f ? 
             (data[35 /* X36 */] <-0.6542677f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
        0.01923077f : 
         (data[3 /* X4 */] <0.311012f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15099539f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.213942f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13681488f ? 
        0.0f : 
         (data[0 /* X1 */] <-0.41212794f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.43039724f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.7681469f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.32025468f ? 
                        1.0f : 
                        0.0f) : 
                     (data[16 /* X17 */] <-0.5750247f ? 
                         (data[34 /* X35 */] <-0.87578696f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.47282293f ? 
                            0.0f : 
                             (data[21 /* X22 */] <0.1271306f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.66363794f ? 
             (data[3 /* X4 */] <-0.37015858f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13134822f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21567747f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6027746f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1663943f ? 
                        1.0f : 
                         (data[33 /* X34 */] <-0.7165244f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.11890571f ? 
                    0.0f : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.0062436447f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
        0.033707865f : 
         (data[3 /* X4 */] <-0.58345443f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_02_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_37_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[33 /* X34 */] <-0.10715951f ? 
            0.0f : 
             (data[29 /* X30 */] <0.2120577f ? 
                 (data[3 /* X4 */] <0.32821327f ? 
                    1.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.29150626f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.19298542f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.07720473f ? 
                0.0f : 
                 (data[18 /* X19 */] <0.21336038f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (data[35 /* X36 */] <-0.55515814f ? 
             (data[32 /* X33 */] <0.15898933f ? 
                0.0f : 
                 (data[18 /* X19 */] <-0.18343227f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.29378897f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.7120222f ? 
                 (data[18 /* X19 */] <-0.40976363f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.061676327f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.43314105f ? 
            0.0f : 
             (data[20 /* X21 */] <0.2548776f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13335651f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.2669509f ? 
             (data[15 /* X16 */] <0.13305192f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.10695521f ? 
                     (data[20 /* X21 */] <0.3611496f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (data[30 /* X31 */] <0.13844895f ? 
             (data[29 /* X30 */] <0.16402216f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.5903349f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.30567503f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34101388f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.119032234f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.28346166f ? 
                         (data[25 /* X26 */] <-0.08100854f ? 
                             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11543544f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (data[33 /* X34 */] <-0.74303204f ? 
             (data[32 /* X33 */] <-0.53141147f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X11 */] <0.23278828f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.6794057f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_38_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[0 /* X1 */] <0.02355516f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30069122f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.27788416f ? 
                    0.0f : 
                    1.0f))) : 
         (data[35 /* X36 */] <-0.10344726f ? 
             (data[24 /* X25 */] <-0.1272068f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.143354f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.29433447f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[15 /* X16 */] <0.13767421f ? 
                     (data[27 /* X28 */] <-0.19622354f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[34 /* X35 */] <-1.0395516f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.15782626f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13772349f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.25672007f ? 
         (data[17 /* X18 */] <-0.16170171f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.43484458f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4259085f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24086057f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29861024f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[22 /* X23 */] <0.24980944f ? 
             (data[34 /* X35 */] <-0.4120998f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2834725f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32170868f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.28789866f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22569741f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.057147063f ? 
                            0.0f : 
                             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.31121677f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[22 /* X23 */] <0.2632679f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3810294f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X11 */] <-1.1827737f ? 
                    0.0f : 
                    1.0f))) : 
         (data[20 /* X21 */] <0.21852136f ? 
             (data[14 /* X15 */] <0.21464078f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_02_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (data[11 /* X12 */] <-0.9949668f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23717804f ? 
             (data[30 /* X31 */] <0.15646602f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.55310225f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.106318794f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <0.014869644f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_39_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[15 /* X16 */] <0.16540796f ? 
            1.0f : 
             (data[3 /* X4 */] <0.31445226f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2799224f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.6542677f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.13943781f ? 
                 (data[24 /* X25 */] <-0.15253876f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
        0.8965517f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_02_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[15 /* X16 */] <0.1890972f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.15003923f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.014492754f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[29 /* X30 */] <0.13733576f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2628484f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <0.0772028f ? 
             (data[27 /* X28 */] <-0.034602623f ? 
                 (data[32 /* X33 */] <-0.09954373f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[4 /* X5 */] <0.062516026f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.07173689f ? 
                     (data[0 /* X1 */] <-0.1621157f ? 
                        1.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.16865644f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.09350305f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.008728032f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21715383f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.059039943f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_40_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10012462f ? 
             (data[10 /* X11 */] <-0.2369062f ? 
                 (data[19 /* X20 */] <-0.31000283f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4495232f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.33273917f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.27484992f ? 
                     (data[0 /* X1 */] <-0.10697005f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[2 /* X3 */] <-0.07742541f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.6512f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0085992245f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.43768325f ? 
         (data[7 /* X8 */] <0.087956876f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.09028217f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.36243024f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.16485699f ? 
                        0.0f : 
                         (data[32 /* X33 */] <-0.07016497f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[22 /* X23 */] <0.1896927f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.17407185f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7372607f ? 
             (data[2 /* X3 */] <-0.13288985f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X1 */] <-0.41166836f ? 
        1.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3549782f ? 
             (data[25 /* X26 */] <-0.31511754f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.57379055f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[18]) || data[18 /* X19 */] <0.68101376f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.009078706f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.37247822f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.3145621f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.75431114f ? 
                 (data[18 /* X19 */] <-0.07890596f ? 
                    1.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.45266202f ? 
                         (data[0 /* X1 */] <0.02995088f ? 
                             (data[33 /* X34 */] <-0.49916184f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.046170074f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[2 /* X3 */] <0.029805852f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11813177f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.44302365f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_41_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[11 /* X12 */] <0.04724474f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.09209859f ? 
                1.0f : 
                0.0f) : 
             (data[16 /* X17 */] <-0.52415085f ? 
                 (data[25 /* X26 */] <-0.15981752f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.32024863f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13591368f ? 
             (data[30 /* X31 */] <0.1505212f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.6258986f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[15 /* X16 */] <0.1295852f ? 
            1.0f : 
             (data[7 /* X8 */] <0.115243755f ? 
                 (data[25 /* X26 */] <-0.21544738f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.015625f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.10420948f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2750374f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.05888399f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3038419f ? 
                        0.0f : 
                         (data[18 /* X19 */] <-0.29927093f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20077376f ? 
                 (data[2 /* X3 */] <-0.3843287f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2783802f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19742581f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[24 /* X25 */] <0.013086038f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.73152244f ? 
                1.0f : 
                 (data[17 /* X18 */] <0.06093174f ? 
                    0.0f : 
                    1.0f))) : 
        0.011904762f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_42_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (data[3 /* X4 */] <-0.22738796f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.37122375f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11112727f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31016347f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5742492f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41029835f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
        0.01923077f : 
         (data[11 /* X12 */] <-0.16169953f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.6542677f ? 
                 (data[31 /* X32 */] <0.2390736f ? 
                     (data[1 /* X2 */] <-0.15423404f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.13165832f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[23 /* X24 */] <0.09735338f ? 
            1.0f : 
            0.0f) : 
         (data[15 /* X16 */] <0.055050764f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.44723848f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.37570405f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30115905f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20126776f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.18581314f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.14614674f ? 
             (data[35 /* X36 */] <-0.5284748f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.18900147f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.05228429f ? 
                        0.0f : 
                         (data[21 /* X22 */] <0.08393226f ? 
                            0.0f : 
                             (data[11 /* X12 */] <-0.8840318f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[23 /* X24 */] <0.0974997f ? 
                 (data[11 /* X12 */] <-0.06883541f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.28075176f ? 
                1.0f : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.5942998f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (data[33 /* X34 */] <-0.69063807f ? 
             (data[0 /* X1 */] <0.14120798f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[35 /* X36 */] <0.1462326f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42914987f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_43_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[3 /* X4 */] <0.29725096f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1739381f ? 
                1.0f : 
                0.0f) : 
             (data[22 /* X23 */] <0.14507975f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[3 /* X4 */] <0.29725096f ? 
            0.0f : 
             (data[22 /* X23 */] <0.14507975f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.6941907f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[27 /* X28 */] <0.16633148f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.02312209f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X13 */] <0.21262811f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1800312f ? 
            0.0f : 
             (data[0 /* X1 */] <0.2981132f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14474718f ? 
         (data[3 /* X4 */] <-0.13966146f ? 
             (data[15 /* X16 */] <0.15154108f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.62061733f ? 
             (data[19 /* X20 */] <-0.28821242f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24219188f ? 
                     (data[13 /* X14 */] <0.278206f ? 
                         (data[24 /* X25 */] <-0.03191355f ? 
                            1.0f : 
                             (data[18 /* X19 */] <0.10848117f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17198259f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[32 /* X33 */] <-0.494688f ? 
            0.0f : 
            1.0f) : 
        0.011904762f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_02_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_44_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[1 /* X2 */] <-0.13986512f ? 
            1.0f : 
             (data[15 /* X16 */] <0.1550078f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.08142113f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.6511953f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.6722687f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34071356f ? 
                 (data[32 /* X33 */] <0.4527769f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[19 /* X20 */] <0.17483412f ? 
             (data[17 /* X18 */] <-0.19087437f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.018040184f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.059110787f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4721506f ? 
            0.0f : 
             (data[4 /* X5 */] <0.19040893f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.11116522f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.21705876f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.5903349f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.30446213f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.13201635f ? 
                 (data[17 /* X18 */] <-0.17244953f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2952184f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26221803f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[14 /* X15 */] <0.21484378f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
        0.0f : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.15200354f ? 
             (data[14 /* X15 */] <0.35545108f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.45796457f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_45_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[3 /* X4 */] <0.31273213f ? 
            1.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2847491f ? 
                 (data[17 /* X18 */] <-0.13559987f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.033697635f ? 
            0.0f : 
             (data[15 /* X16 */] <0.13536307f ? 
                 (data[21 /* X22 */] <0.21952407f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[3 /* X4 */] <0.31273213f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.078690626f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.23751698f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.23243117f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (data[21 /* X22 */] <0.11106798f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44283935f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36180702f ? 
                 (data[15 /* X16 */] <0.16309682f ? 
                     (data[8 /* X9 */] <0.18987969f ? 
                         (data[34 /* X35 */] <-0.014852351f ? 
                             (data[7 /* X8 */] <0.072092414f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[0 /* X1 */] <0.3676768f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[3 /* X4 */] <-0.5903349f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.5858627f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.22008319f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.05228429f ? 
                         (data[21 /* X22 */] <0.13912453f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19383276f ? 
                            1.0f : 
                             (data[16 /* X17 */] <0.56963736f ? 
                                1.0f : 
                                0.0f)))))) : 
         (data[31 /* X32 */] <0.06071685f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1978326f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18357189f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.64559233f ? 
             (data[11 /* X12 */] <-0.5858627f ? 
                 (data[21 /* X22 */] <0.20525143f ? 
                     (data[4 /* X5 */] <0.11761454f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22654231f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.51558715f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_46_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[23 /* X24 */] <0.17199168f ? 
             (data[20 /* X21 */] <0.27725065f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.828997f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3303822f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26587835f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21568407f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[0 /* X1 */] <0.110875614f ? 
             (data[20 /* X21 */] <0.2783693f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.85512584f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5640127f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.31154057f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2181251f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X1 */] <-0.41166836f ? 
        1.0f : 
         (data[23 /* X24 */] <0.05686332f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25676847f ? 
                 (data[29 /* X30 */] <0.12369604f ? 
                     (data[35 /* X36 */] <0.04272469f ? 
                         (data[35 /* X36 */] <-0.4968433f ? 
                            0.0f : 
                            1.0f) : 
                         (data[9 /* X10 */] <-0.67205465f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[0 /* X1 */] <-0.20753409f ? 
                         (data[14 /* X15 */] <0.20403345f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
        0.017857144f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2432279f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17362657f ? 
                 (data[23 /* X24 */] <0.124671966f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.030251194f ? 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.122858696f ? 
                             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15299748f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (data[34 /* X35 */] <-0.28623733f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.61053455f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
        0.0f : 
         (data[2 /* X3 */] <0.0039224434f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12807119f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15358667f ? 
                    0.0f : 
                     (data[0 /* X1 */] <0.051538434f ? 
                         (data[35 /* X36 */] <0.22921488f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4950709f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_47_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[16 /* X17 */] <-0.3842477f ? 
            1.0f : 
             (data[34 /* X35 */] <-1.010701f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.06804212f ? 
                    1.0f : 
                    0.0f))) : 
         (data[2 /* X3 */] <-0.24012113f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.25712037f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.41256785f ? 
                 (data[1 /* X2 */] <-0.04646714f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (data[16 /* X17 */] <-0.37788847f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.17483412f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.11620625f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.32729176f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28586707f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X7 */] <0.12583168f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12470899f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X1 */] <-0.41166836f ? 
        1.0f : 
         (data[25 /* X26 */] <-0.43912578f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35194153f ? 
                 (data[1 /* X2 */] <-0.50627255f ? 
                     (data[25 /* X26 */] <-0.022368396f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6068642f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <-0.034602623f ? 
            0.0f : 
             (data[19 /* X20 */] <0.06588199f ? 
                 (data[25 /* X26 */] <-0.22595674f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1472647f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.3704357f ? 
                         (data[1 /* X2 */] <-0.1254962f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1851063f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5498059f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.2909129f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.10733531f ? 
            0.0f : 
             (data[25 /* X26 */] <0.025615372f ? 
                 (data[6 /* X7 */] <0.21684621f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_48_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[16 /* X17 */] <-0.30793688f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.17483412f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.44131804f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.14704958f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[31 /* X32 */] <0.13699593f ? 
                1.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4058023f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18123992f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[25 /* X26 */] <-0.29193842f ? 
            1.0f : 
             (data[31 /* X32 */] <0.11657475f ? 
                 (data[33 /* X34 */] <-0.82876766f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.014492754f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
        0.017857144f : 
         (data[12 /* X13 */] <0.31544283f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54662675f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.067337774f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.18516314f ? 
                     (data[31 /* X32 */] <0.09735483f ? 
                        1.0f : 
                         (data[3 /* X4 */] <-0.35276967f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <1.078376f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.073524386f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <0.0767772f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.319117f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_49_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4125667f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.68837816f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.599982f ? 
             (data[14 /* X15 */] <0.18622035f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25645465f ? 
                     (data[23 /* X24 */] <0.12228379f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.75439245f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X10 */] <-0.23480834f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
         (data[35 /* X36 */] <-0.57993555f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X12 */] <-0.16169953f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.3367049f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13611478f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.08040815f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (data[18 /* X19 */] <0.226347f ? 
            0.0f : 
            1.0f) : 
         (data[20 /* X21 */] <0.25040296f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.12272064f ? 
                 (data[9 /* X10 */] <-0.5360225f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.103289284f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29344288f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20710984f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.09315047f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5231836f ? 
             (data[21 /* X22 */] <0.17653327f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25645724f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.3624868f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.69063807f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.07471282f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.34616283f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[9 /* X10 */] <-0.7789371f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.2772717f ? 
                     (data[11 /* X12 */] <-0.06307061f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11968581f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4473732f ? 
            0.0f : 
             (data[11 /* X12 */] <-0.2028936f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.27128196f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.7094146f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24805959f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X10 */] <0.34332848f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_50_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[8 /* X9 */] <0.095000304f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.10392302f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.30029148f ? 
                    1.0f : 
                     (data[24 /* X25 */] <0.32808316f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.30932042f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2639328f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14856128f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.16127847f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.344001f ? 
         (data[8 /* X9 */] <-0.44021672f ? 
             (data[20 /* X21 */] <0.2783693f ? 
                0.0f : 
                1.0f) : 
             (data[18 /* X19 */] <-0.40931764f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41620284f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[23 /* X24 */] <0.13198945f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1402224f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0483919f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14496271f ? 
                         (data[32 /* X33 */] <-0.07016497f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
        0.6666667f : 
         (data[7 /* X8 */] <0.033700414f ? 
            1.0f : 
             (data[20 /* X21 */] <0.17321591f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.7551898f ? 
                     (data[30 /* X31 */] <0.14976668f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2561167f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.37001634f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (data[7 /* X8 */] <0.037825175f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19036871f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.25767738f ? 
                 (data[30 /* X31 */] <0.18900147f ? 
                    1.0f : 
                     (data[2 /* X3 */] <-0.055239633f ? 
                        1.0f : 
                         (data[32 /* X33 */] <-0.5167221f ? 
                            1.0f : 
                             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.03731151f ? 
                                0.0f : 
                                 (data[13 /* X14 */] <0.57058877f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (data[9 /* X10 */] <0.5036521f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X1 */] <-0.2577086f ? 
                1.0f : 
                 (data[2 /* X3 */] <-0.1883543f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24557899f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13999231f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21073814f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1875857f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.75431114f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19509955f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_51_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[32 /* X33 */] <0.09876288f ? 
             (data[11 /* X12 */] <-0.1842881f ? 
                0.0f : 
                1.0f) : 
             (data[22 /* X23 */] <0.15752289f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13808858f ? 
                     (data[16 /* X17 */] <-0.98201567f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.61384135f ? 
                        1.0f : 
                         (data[16 /* X17 */] <0.3661419f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[5 /* X6 */] <0.105396636f ? 
             (data[30 /* X31 */] <0.16712053f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[35 /* X36 */] <-0.6542677f ? 
             (data[31 /* X32 */] <0.23790053f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.32619646f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15621585f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.30357233f ? 
                 (data[1 /* X2 */] <-0.22607863f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.06701579f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X1 */] <-0.41166836f ? 
        1.0f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.435299f ? 
             (data[25 /* X26 */] <-0.44723848f ? 
                 (data[31 /* X32 */] <0.10936728f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.5007399f ? 
                     (data[7 /* X8 */] <0.03655602f ? 
                         (data[21 /* X22 */] <0.1737095f ? 
                            0.0f : 
                            1.0f) : 
                         (data[0 /* X1 */] <-0.21358162f ? 
                             (data[13 /* X14 */] <0.20911662f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[16 /* X17 */] <-0.34609228f ? 
                        1.0f : 
                        0.0f))) : 
             (data[11 /* X12 */] <-0.67621696f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.63702345f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23796716f ? 
             (data[31 /* X32 */] <0.1055122f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.26073748f ? 
                     (data[35 /* X36 */] <0.066182576f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (data[32 /* X33 */] <-0.37570405f ? 
             (data[11 /* X12 */] <-0.79668933f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21162806f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_52_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.12633342f ? 
             (data[29 /* X30 */] <0.14978941f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.1062798f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.24564488f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.344001f ? 
         (data[5 /* X6 */] <0.11907455f ? 
             (data[22 /* X23 */] <0.26052436f ? 
                1.0f : 
                 (data[18 /* X19 */] <-0.61203533f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26632005f ? 
             (data[3 /* X4 */] <0.24564715f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[27 /* X28 */] <0.20127656f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.19084276f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <-0.4310131f ? 
             (data[14 /* X15 */] <0.20430608f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.47865298f ? 
             (data[11 /* X12 */] <0.016499186f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-3.0457118E-4f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.42342892f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15425943f ? 
             (data[10 /* X11 */] <-0.7487112f ? 
                 (data[20 /* X21 */] <0.21348742f ? 
                    1.0f : 
                    0.0f) : 
                 (data[21 /* X22 */] <0.08474688f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.15049997f ? 
                         (data[27 /* X28 */] <0.37391168f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[9 /* X10 */] <0.017822865f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32170868f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.1285872f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37818593f ? 
            0.0f : 
             (data[15 /* X16 */] <0.2566982f ? 
                 (data[34 /* X35 */] <0.27524516f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_53_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[1 /* X2 */] <-0.15782626f ? 
             (data[20 /* X21 */] <0.24145375f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.6460256f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.07082326f ? 
                    1.0f : 
                    0.0f) : 
                 (data[19 /* X20 */] <-1.192515f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[1 /* X2 */] <-0.15782626f ? 
            0.0f : 
             (data[3 /* X4 */] <0.311012f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.14577103f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[10 /* X11 */] <-0.22070985f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.06367797f ? 
                 (data[2 /* X3 */] <-0.16616853f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17794138f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.08257286f ? 
                        0.0f : 
                        1.0f)))) : 
        0.015625f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[21 /* X22 */] <0.15527391f ? 
             (data[11 /* X12 */] <-0.9773979f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12807119f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.5165893f ? 
                        0.0f : 
                        1.0f))) : 
             (data[7 /* X8 */] <0.055593375f ? 
                 (data[35 /* X36 */] <-0.4276059f ? 
                    0.0f : 
                     (data[26 /* X27 */] <0.079635255f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X13 */] <0.2987702f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.04389092f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.06552183f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21297787f ? 
             (data[3 /* X4 */] <-0.6866621f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4227002f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_54_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11271394f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.23687932f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.19545284f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17395985f ? 
                        0.0f : 
                        1.0f))) : 
             (data[33 /* X34 */] <-0.10954105f ? 
                0.0f : 
                1.0f)) : 
         (data[24 /* X25 */] <-0.6116141f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.033013545f ? 
                0.0f : 
                 (data[1 /* X2 */] <0.014600764f ? 
                     (data[3 /* X4 */] <0.20631696f ? 
                         (data[20 /* X21 */] <0.26632187f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.5542052f ? 
         (data[16 /* X17 */] <-0.47009733f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15014558f ? 
                 (data[15 /* X16 */] <0.13074078f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12964186f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3941499f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.9240495f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22500561f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25596792f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.35634527f ? 
            1.0f : 
            0.0f) : 
         (data[22 /* X23 */] <0.121576056f ? 
            1.0f : 
             (data[7 /* X8 */] <0.034017704f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.38055712f ? 
                     (data[34 /* X35 */] <-0.12714817f ? 
                        1.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.42804858f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[8 /* X9 */] <-0.39399344f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20259547f ? 
                             (data[1 /* X2 */] <0.104406506f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.34325117f ? 
             (data[6 /* X7 */] <0.1628491f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.45796457f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.22222759f ? 
                        0.0f : 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.213942f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.63448805f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.20271401f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.74303204f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[24 /* X25 */] <0.09514411f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.27581626f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <-0.56281286f ? 
                 (data[2 /* X3 */] <0.3626569f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_02_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_55_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (data[24 /* X25 */] <-0.74396586f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10183378f ? 
                1.0f : 
                0.0f) : 
             (data[33 /* X34 */] <-0.10954105f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.31183174f ? 
                     (data[23 /* X24 */] <0.08836058f ? 
                        0.0f : 
                        1.0f) : 
                     (data[27 /* X28 */] <-0.5980918f ? 
                         (data[34 /* X35 */] <-0.68862724f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14998995f ? 
            1.0f : 
             (data[22 /* X23 */] <0.21075183f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[25 /* X26 */] <-0.22703692f ? 
            1.0f : 
             (data[23 /* X24 */] <0.14320959f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38540694f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.014492754f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (data[25 /* X26 */] <-0.22703692f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.6668226f ? 
                 (data[17 /* X18 */] <-0.06190051f ? 
                    1.0f : 
                    0.0f) : 
                 (data[27 /* X28 */] <-0.13506968f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.28169203f ? 
                         (data[34 /* X35 */] <-0.06351642f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.52585787f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
         (data[32 /* X33 */] <-0.43446156f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1851063f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5498059f ? 
             (data[33 /* X34 */] <-0.6620595f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3069032f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.9171617f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_56_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13229407f ? 
             (data[15 /* X16 */] <0.16309682f ? 
                1.0f : 
                 (data[34 /* X35 */] <-1.0442307f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[25 /* X26 */] <-0.52141166f ? 
            1.0f : 
             (data[13 /* X14 */] <0.13198866f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18123992f ? 
             (data[15 /* X16 */] <0.14114092f ? 
                0.0f : 
                 (data[27 /* X28 */] <-1.166286f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.3080968f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34902716f ? 
                0.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.6511953f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12565812f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.013446839f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.03790069f ? 
            1.0f : 
            0.0f) : 
         (data[23 /* X24 */] <0.113939665f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.40871406f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.0633797f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.04987041f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17251197f ? 
            0.0f : 
             (data[30 /* X31 */] <0.15278475f ? 
                1.0f : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.21892424f ? 
            0.0f : 
             (data[24 /* X25 */] <0.07396784f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54662675f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6686668f ? 
                     (data[21 /* X22 */] <0.15358667f ? 
                        1.0f : 
                         (data[5 /* X6 */] <0.15931918f ? 
                            1.0f : 
                             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17231253f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
        0.033707865f : 
         (data[25 /* X26 */] <0.026774328f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_02_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_57_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.29910764f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16661815f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16234872f ? 
             (data[35 /* X36 */] <-0.7038225f ? 
                 (data[29 /* X30 */] <0.14623122f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.13189635f ? 
                1.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.37774804f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.7022305f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12643959f ? 
             (data[31 /* X32 */] <0.10756218f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15109676f ? 
                     (data[16 /* X17 */] <-0.968469f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.49393553f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (data[31 /* X32 */] <0.08774487f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X13 */] <0.20707056f ? 
             (data[2 /* X3 */] <0.2590589f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25664276f ? 
                 (data[25 /* X26 */] <-0.25028846f ? 
                     (data[29 /* X30 */] <0.14978941f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.09879922f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41134456f ? 
                 (data[5 /* X6 */] <0.11259753f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06623303f ? 
                         (data[17 /* X18 */] <-0.28914016f ? 
                            0.0f : 
                             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32833126f ? 
                                1.0f : 
                                 (data[33 /* X34 */] <-0.74303204f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.21290267f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            1.0f) : 
        0.039215688f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.44721442f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.21003614f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12234786f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.10454659f ? 
                1.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.14218783f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X10 */] <0.17814651f ? 
            0.0f : 
             (data[15 /* X16 */] <0.10647375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_02_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_58_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.16074428f ? 
        0.0f : 
         (data[3 /* X4 */] <-0.15170236f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.32162726f ? 
                 (data[21 /* X22 */] <0.16168547f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4803174f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.33203396f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.32625785f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.35057494f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.45517117f ? 
            0.0f : 
             (data[7 /* X8 */] <0.15966424f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.1362212f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X10 */] <-0.5530265f ? 
             (data[17 /* X18 */] <-0.19087437f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36446673f ? 
                 (data[20 /* X21 */] <0.23138587f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2108809f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11118345f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.03473367f ? 
             (data[24 /* X25 */] <0.08985004f ? 
                 (data[21 /* X22 */] <0.11174288f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X10 */] <-0.7967f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.49321908f ? 
                         (data[11 /* X12 */] <-1.018467f ? 
                            0.0f : 
                            1.0f) : 
                         (data[13 /* X14 */] <0.28303963f ? 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2558106f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22780888f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.17148076f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.6166099f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3891034f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.0014401396f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_59_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[25 /* X26 */] <-0.11925407f ? 
             (data[3 /* X4 */] <0.30069122f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <0.10995645f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.086445354f ? 
                    1.0f : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.16251902f ? 
             (data[6 /* X7 */] <0.13274702f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.09149788f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.49535134f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.344001f ? 
         (data[30 /* X31 */] <0.09845964f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                0.0f : 
                1.0f)) : 
         (data[23 /* X24 */] <0.17004034f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19705819f ? 
                0.0f : 
                1.0f) : 
             (data[17 /* X18 */] <-0.39047676f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.17937964f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.13491644f ? 
         (data[5 /* X6 */] <0.15248021f ? 
             (data[3 /* X4 */] <-0.24286912f ? 
                 (data[10 /* X11 */] <0.07406394f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.0768666f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.11174288f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3549782f ? 
             (data[17 /* X18 */] <-0.33827308f ? 
                 (data[33 /* X34 */] <-0.31435394f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.0872133f ? 
                     (data[15 /* X16 */] <0.22309259f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
        0.022727273f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3049885f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.18014847f ? 
                 (data[24 /* X25 */] <-0.021325411f ? 
                    1.0f : 
                     (data[5 /* X6 */] <0.1648637f ? 
                         (data[9 /* X10 */] <-0.048524536f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7607897f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3543357f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.10094448f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.53230226f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
                0.0f : 
                 (data[10 /* X11 */] <-0.1202924f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[0 /* X1 */] <0.042857576f ? 
             (data[13 /* X14 */] <0.25282943f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5590928f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_60_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[16 /* X17 */] <-0.30793688f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.13548578f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.24749717f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.27622908f ? 
                 (data[15 /* X16 */] <0.10737532f ? 
                     (data[18 /* X19 */] <0.02507733f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06293125f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2490874f ? 
            0.0f : 
            1.0f) : 
         (data[32 /* X33 */] <0.1384242f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13048427f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30970225f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.2952184f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[15 /* X16 */] <0.22665331f ? 
            1.0f : 
            0.0f) : 
         (data[17 /* X18 */] <-0.68220335f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17914791f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5043996f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.16369852f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.10444141f ? 
                     (data[10 /* X11 */] <-0.06846404f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2951237f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <0.033103436f ? 
             (data[2 /* X3 */] <-0.23087704f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X13 */] <0.2973808f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.14325961f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.25242424f ? 
                        1.0f : 
                         (data[10 /* X11 */] <-0.8718036f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[16 /* X17 */] <-0.18711145f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.39402238f ? 
                0.0f : 
                1.0f)) : 
        0.011904762f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_61_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.33697835f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13406764f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1755283f ? 
                     (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5761677f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[24 /* X25 */] <-0.7836714f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.18389712f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06293125f ? 
         (data[6 /* X7 */] <0.10305174f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <4.940167E-4f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.17245951f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1337017f ? 
                 (data[15 /* X16 */] <0.16193675f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
        0.85714287f : 
         (data[0 /* X1 */] <-0.20072053f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.39781842f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25676847f ? 
                 (data[15 /* X16 */] <0.16309682f ? 
                     (data[32 /* X33 */] <-0.31694654f ? 
                         (data[2 /* X3 */] <-0.15877327f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.08345016f ? 
        0.85714287f : 
         (data[34 /* X35 */] <-0.3517398f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.15707567f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18296535f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.08702103f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.33412158f ? 
                     (data[2 /* X3 */] <-0.018263334f ? 
                         (data[32 /* X33 */] <-0.28169203f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.12682115f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.20934212f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[25 /* X26 */] <-0.062465247f ? 
            0.0f : 
             (data[9 /* X10 */] <0.29474553f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22780888f ? 
                    0.0f : 
                    1.0f) : 
                 (data[32 /* X33 */] <-0.6342371f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09744347f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19277406f ? 
                0.0f : 
                 (data[2 /* X3 */] <-0.14768037f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_02_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_62_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[34 /* X35 */] <-0.92257684f ? 
            1.0f : 
             (data[19 /* X20 */] <-0.5265991f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33311006f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.1285872f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17124759f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[16 /* X17 */] <-1.0996615f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[23 /* X24 */] <0.19296844f ? 
             (data[8 /* X9 */] <-0.07286321f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.09028018f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <0.2628484f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.9487796f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.7419416f ? 
                        0.0f : 
                        1.0f)))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24842323f ? 
         (data[23 /* X24 */] <0.18418747f ? 
             (data[24 /* X25 */] <-0.1272068f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.24286912f ? 
                     (data[32 /* X33 */] <-0.37570405f ? 
                        1.0f : 
                         (data[5 /* X6 */] <0.2182394f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.57470065f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.63702345f ? 
            0.0f : 
            1.0f) : 
         (data[31 /* X32 */] <0.103361055f ? 
             (data[8 /* X9 */] <-0.0144759035f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3084005f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[3 /* X4 */] <-0.43552342f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.07406394f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X12 */] <-1.022575f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.21809916f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[19 /* X20 */] <-0.004936895f ? 
            0.0f : 
             (data[24 /* X25 */] <0.03161528f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.60511416f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_63_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1377713f ? 
             (data[13 /* X14 */] <0.18202269f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[24 /* X25 */] <-0.6380845f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.52001566f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.1073807f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09978547f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1335006f ? 
         (data[13 /* X14 */] <0.21778561f ? 
             (data[3 /* X4 */] <0.2628484f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.2966906f ? 
                 (data[23 /* X24 */] <0.16482042f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[24 /* X25 */] <-0.5401442f ? 
             (data[11 /* X12 */] <0.382936f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24842323f ? 
         (data[7 /* X8 */] <0.07780362f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21429203f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.38037f ? 
                     (data[35 /* X36 */] <-0.25167176f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.29602656f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
        0.022727273f : 
         (data[14 /* X15 */] <0.23143467f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23879948f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.100372456f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15973103f ? 
                 (data[27 /* X28 */] <0.046631478f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.40187958f ? 
                         (data[30 /* X31 */] <0.14944449f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2040441f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[34]) || data[34 /* X35 */] <0.0073728636f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.36126435f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.095555544f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4473732f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.26519558f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25676847f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_64_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.28821242f ? 
             (data[32 /* X33 */] <0.099302486f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.7203995f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6033748f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[31 /* X32 */] <0.14360277f ? 
            0.0f : 
             (data[26 /* X27 */] <-0.11919261f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.60682803f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[30 /* X31 */] <0.1629707f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.12564763f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.244017f ? 
                 (data[3 /* X4 */] <-0.24974963f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.59525204f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[32 /* X33 */] <-0.49493906f ? 
             (data[13 /* X14 */] <0.15736522f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.25396618f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4904788f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.51526934f ? 
                 (data[21 /* X22 */] <0.15088707f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.38937953f ? 
                        1.0f : 
                        0.0f) : 
                     (data[13 /* X14 */] <0.23470332f ? 
                         (data[29 /* X30 */] <0.19485979f ? 
                             (data[29 /* X30 */] <0.14155193f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.061567802f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42650217f ? 
             (data[23 /* X24 */] <0.094426386f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10674713f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_02_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[32 /* X33 */] <-0.4755918f ? 
             (data[27 /* X28 */] <0.45026013f ? 
                 (data[24 /* X25 */] <0.084555976f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[24 /* X25 */] <0.03690935f ? 
                 (data[3 /* X4 */] <-0.31167424f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.87488055f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17164762f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_02_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_65_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3687648f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.5284748f ? 
                1.0f : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.21833572f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28249255f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.5232671f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16234872f ? 
             (data[27 /* X28 */] <-0.14380595f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12144188f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.119185045f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
         (data[27 /* X28 */] <-0.5959077f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X11 */] <-0.13972804f ? 
             (data[28 /* X29 */] <0.30881795f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.27484992f ? 
                 (data[3 /* X4 */] <0.32821327f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.6511953f ? 
                         (data[23 /* X24 */] <0.24175166f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.13491644f ? 
         (data[15 /* X16 */] <0.071806565f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.12331664f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.22222759f ? 
                     (data[8 /* X9 */] <-0.3101579f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.7616683f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35510802f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2951237f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.35588065f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2318943f ? 
                 (data[27 /* X28 */] <-0.038970757f ? 
                    0.0f : 
                     (data[28 /* X29 */] <0.25879928f ? 
                        1.0f : 
                         (data[28 /* X29 */] <0.2835471f ? 
                             (data[5 /* X6 */] <0.13490936f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.26143494f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X3 */] <-0.2123889f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11968581f ? 
        0.014492754f : 
         (data[21 /* X22 */] <0.17484602f ? 
            1.0f : 
             (data[31 /* X32 */] <0.13339218f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_66_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29725096f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.060811423f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13305241f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[3 /* X4 */] <0.29725096f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2784772f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16700068f ? 
                    1.0f : 
                    0.0f) : 
                 (data[30 /* X31 */] <0.18746096f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[7 /* X8 */] <0.08510128f ? 
             (data[19 /* X20 */] <-0.19560312f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <0.07023257f ? 
                1.0f : 
                0.0f)) : 
         (data[29 /* X30 */] <0.11242845f ? 
             (data[25 /* X26 */] <-0.3498862f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[3 /* X4 */] <-0.4338033f ? 
             (data[7 /* X8 */] <0.07354313f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.18673792f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.20467642f ? 
                     (data[24 /* X25 */] <-0.7857912f ? 
                        0.0f : 
                         (data[25 /* X26 */] <-0.15318993f ? 
                             (data[23 /* X24 */] <0.13446003f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.2487522f ? 
                     (data[34 /* X35 */] <0.09697497f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[29 /* X30 */] <0.11213193f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[3 /* X4 */] <-0.4527247f ? 
             (data[31 /* X32 */] <0.16462456f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.011904762f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_67_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (data[0 /* X1 */] <0.10903729f ? 
             (data[17 /* X18 */] <-0.13252905f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.06765553f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[33 /* X34 */] <-0.19051358f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.53883094f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39547852f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.045789134f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.13252905f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.10523794f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (data[20 /* X21 */] <0.2129281f ? 
            0.0f : 
            1.0f) : 
         (data[15 /* X16 */] <0.055050764f ? 
            1.0f : 
             (data[23 /* X24 */] <0.061253805f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.034017704f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.3513466f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17934729f ? 
                            0.0f : 
                             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3159083f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.32672718f ? 
             (data[23 /* X24 */] <0.08369408f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.08605314f ? 
                     (data[4 /* X5 */] <0.101875074f ? 
                         (data[12 /* X13 */] <0.34878814f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.08222481f ? 
                            0.0f : 
                             (data[14 /* X15 */] <0.2360001f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[11 /* X12 */] <-1.0526931f ? 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.37632865f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3441328f ? 
                            1.0f : 
                             (data[18 /* X19 */] <0.14554954f ? 
                                1.0f : 
                                0.0f))))) : 
            0.0f) : 
        0.01923077f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23074159f ? 
             (data[33 /* X34 */] <-0.84782004f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.09028618f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.42591944f ? 
                0.0f : 
                1.0f)) : 
         (data[15 /* X16 */] <0.17580812f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_68_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[16 /* X17 */] <-0.27614072f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08985004f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <0.2490874f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05228429f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.62692887f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.93193483f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (data[16 /* X17 */] <-0.58138394f ? 
            0.0f : 
             (data[3 /* X4 */] <0.2490874f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.62692887f ? 
                    0.0f : 
                    1.0f))) : 
         (data[24 /* X25 */] <-0.54279125f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.6114222f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.071806565f ? 
        0.75f : 
         (data[25 /* X26 */] <-0.43912578f ? 
             (data[14 /* X15 */] <0.19267954f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X10 */] <-0.55059737f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.59525204f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.108432196f ? 
                        0.0f : 
                         (data[34 /* X35 */] <-0.045558237f ? 
                             (data[14 /* X15 */] <0.26991358f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
        0.017857144f : 
         (data[24 /* X25 */] <0.058085628f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0020512454f ? 
                 (data[1 /* X2 */] <-0.43835926f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.047844373f ? 
                        1.0f : 
                         (data[14 /* X15 */] <0.32975674f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[9 /* X10 */] <0.032397743f ? 
                 (data[27 /* X28 */] <0.37255087f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
        0.0f : 
         (data[10 /* X11 */] <0.12913157f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29508862f ? 
                0.0f : 
                 (data[26 /* X27 */] <0.22261259f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.11784232f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_69_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[35 /* X36 */] <-0.6542677f ? 
             (data[18 /* X19 */] <-0.1979121f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X6 */] <0.0972425f ? 
                 (data[1 /* X2 */] <0.021785224f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.13936965f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X13 */] <0.27653998f ? 
                     (data[9 /* X10 */] <0.16357164f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X3 */] <-0.36285844f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06293125f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.51552373f ? 
             (data[5 /* X6 */] <0.113024704f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.10524269f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.14413847f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[32 /* X33 */] <0.1384242f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.15962237f ? 
                0.0f : 
                 (data[29 /* X30 */] <0.17351066f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[25 /* X26 */] <-0.2096526f ? 
            1.0f : 
             (data[7 /* X8 */] <0.08288025f ? 
                 (data[5 /* X6 */] <0.117455095f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.55840236f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X11 */] <-0.8167359f ? 
             (data[20 /* X21 */] <0.27277604f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.18581314f ? 
         (data[31 /* X32 */] <0.09615358f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35521752f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43942055f ? 
                     (data[3 /* X4 */] <-0.40112087f ? 
                         (data[28 /* X29 */] <0.23222895f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.54674697f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.01875215f ? 
             (data[4 /* X5 */] <0.16547383f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.25058928f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27158493f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[31 /* X32 */] <0.1418009f ? 
            1.0f : 
             (data[5 /* X6 */] <0.2003529f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.26053727f ? 
                    1.0f : 
                    0.0f))) : 
        0.011904762f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_70_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3368139f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.123020105f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3368139f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.74664104f ? 
                1.0f : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.46798342f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5970516f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.08129381f ? 
         (data[3 /* X4 */] <-0.22738796f ? 
             (data[30 /* X31 */] <0.19654663f ? 
                 (data[14 /* X15 */] <0.24611081f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[15 /* X16 */] <0.14865215f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.21722445f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (data[7 /* X8 */] <0.039411623f ? 
            1.0f : 
            0.0f) : 
         (data[31 /* X32 */] <0.08774487f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.49321908f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.088643044f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.20243798f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20978932f ? 
                         (data[25 /* X26 */] <-0.22935484f ? 
                            0.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16696182f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14164816f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[2 /* X3 */] <0.0039224434f ? 
            0.0f : 
             (data[14 /* X15 */] <0.30506942f ? 
                0.0f : 
                1.0f)) : 
         (data[29 /* X30 */] <0.11954482f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23882467f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_71_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22623874f ? 
             (data[26 /* X27 */] <-0.21748953f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.093483806f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.07009876f ? 
                 (data[33 /* X34 */] <-0.15903577f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[25 /* X26 */] <-0.21081156f ? 
             (data[30 /* X31 */] <0.14222153f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.13333306f ? 
                     (data[28 /* X29 */] <0.31105098f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[4 /* X5 */] <0.077396646f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.043475673f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.344001f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.43609345f ? 
             (data[26 /* X27 */] <-0.22419159f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.069100566f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24255797f ? 
             (data[23 /* X24 */] <0.21931137f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2078694f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.68836004f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32888484f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05228429f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X13 */] <0.22513261f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-1.4913491E-4f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24980381f ? 
                 (data[16 /* X17 */] <-0.60046166f ? 
                     (data[22 /* X23 */] <0.25222895f ? 
                         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.040550802f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21494184f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (data[7 /* X8 */] <0.04512283f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30020168f ? 
             (data[27 /* X28 */] <-0.09138835f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18447438f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24116838f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.550631f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[7 /* X8 */] <0.05368964f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12949274f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1851063f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5765265f ? 
            0.0f : 
             (data[23 /* X24 */] <0.17443083f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.062465247f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_72_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[17 /* X18 */] <-0.10335639f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.42392504f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3158489f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.48420146f ? 
                    1.0f : 
                    0.0f))) : 
         (data[24 /* X25 */] <-0.7386718f ? 
            1.0f : 
             (data[23 /* X24 */] <0.13052595f ? 
                 (data[25 /* X26 */] <-0.16908915f ? 
                     (data[9 /* X10 */] <-0.3999903f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41508517f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30342442f ? 
                 (data[19 /* X20 */] <-0.4516406f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.18300481f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16462456f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.10712898f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[3 /* X4 */] <0.26628867f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <0.29509154f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.66409725f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24546371f ? 
         (data[17 /* X18 */] <-0.58240217f ? 
             (data[14 /* X15 */] <0.1603836f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.67219764f ? 
                 (data[9 /* X10 */] <-0.38055712f ? 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.49533427f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.49522147f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.43276238f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X6 */] <0.10697486f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.6668226f ? 
                 (data[2 /* X3 */] <0.13333948f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38729075f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.13936965f ? 
                     (data[25 /* X26 */] <-0.2664414f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09861322f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[17 /* X18 */] <-0.035798658f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.66695803f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_73_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.62749636f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.16714132f ? 
            1.0f : 
            0.0f) : 
         (data[34 /* X35 */] <-0.7120222f ? 
             (data[4 /* X5 */] <0.108364426f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.19845109f ? 
                 (data[3 /* X4 */] <0.3076598f ? 
                     (data[3 /* X4 */] <-0.1577804f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[3 /* X4 */] <0.32305288f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15501718f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (data[6 /* X7 */] <0.13803522f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23766495f ? 
             (data[23 /* X24 */] <0.09247506f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.058937263f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X4 */] <-0.2772717f ? 
                     (data[27 /* X28 */] <0.15322709f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[3 /* X4 */] <-0.5903349f ? 
            1.0f : 
             (data[9 /* X10 */] <-0.30282444f ? 
                 (data[18 /* X19 */] <-0.11392906f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.1910233f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2419868f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27356115f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.29488763f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[25 /* X26 */] <-0.02537867f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.8519058f ? 
                            0.0f : 
                             (data[24 /* X25 */] <-0.5623143f ? 
                                0.0f : 
                                1.0f)))))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.11172983f ? 
            0.0f : 
             (data[13 /* X14 */] <0.3398348f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_02_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.55599153f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.62996775f ? 
                 (data[33 /* X34 */] <-0.69540113f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.22705828f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <0.21219689f ? 
            0.0f : 
             (data[13 /* X14 */] <0.23712014f ? 
                 (data[3 /* X4 */] <-0.42613608f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_02_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_74_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11547142f ? 
             (data[0 /* X1 */] <-0.09562052f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.31266406f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.14788309f ? 
                     (data[4 /* X5 */] <0.077396646f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[16 /* X17 */] <-0.37788847f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.266422f ? 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05322443f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
        0.01923077f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1377713f ? 
             (data[1 /* X2 */] <-0.13447677f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.34364927f ? 
                     (data[34 /* X35 */] <-0.2955919f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.11319057f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[25 /* X26 */] <-0.118095115f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.06367797f ? 
                 (data[12 /* X13 */] <0.30432773f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.08859146f ? 
                     (data[34 /* X35 */] <-0.2955919f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3711351f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.09315047f ? 
         (data[21 /* X22 */] <0.15932332f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.14166123f ? 
                 (data[34 /* X35 */] <-0.4172457f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.09345072f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.6169401f ? 
                 (data[3 /* X4 */] <-0.40112087f ? 
                     (data[31 /* X32 */] <0.12438753f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.20525964f ? 
                 (data[21 /* X22 */] <0.16438507f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20454161f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.11697931f ? 
                0.0f : 
                1.0f)) : 
        0.011904762f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_75_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.27660945f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
                 (data[33 /* X34 */] <-0.19051358f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.07989558f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3282918f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06293125f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.28865033f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3075357f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <0.17808552f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.9787248f ? 
                0.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.23422736f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (data[3 /* X4 */] <-0.48024675f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.40856543f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36446673f ? 
                 (data[12 /* X13 */] <0.20707056f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17874573f ? 
                         (data[23 /* X24 */] <0.124671966f ? 
                             (data[11 /* X12 */] <-0.11300861f ? 
                                 (data[26 /* X27 */] <0.111805156f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (data[27 /* X28 */] <0.17069963f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.18581314f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.21186717f ? 
             (data[30 /* X31 */] <0.16183893f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.09975732f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.22189705f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3710999f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[20 /* X21 */] <0.18663976f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.494688f ? 
             (data[15 /* X16 */] <0.14807436f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[3 /* X4 */] <-0.63677835f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.29270995f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.011904762f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_76_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
             (data[13 /* X14 */] <0.17669974f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.116475634f ? 
                    1.0f : 
                     (data[18 /* X19 */] <0.106164396f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.040550802f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[14 /* X15 */] <0.13454685f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6401947f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.344001f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26098278f ? 
            0.0f : 
            1.0f) : 
         (data[15 /* X16 */] <0.16194125f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.11173459f ? 
                1.0f : 
                 (data[32 /* X33 */] <0.117859066f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.7266939f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2101279f ? 
                            1.0f : 
                             (data[31 /* X32 */] <0.24434422f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[3 /* X4 */] <-0.4957279f ? 
            0.0f : 
             (data[14 /* X15 */] <0.23401834f ? 
                1.0f : 
                 (data[10 /* X11 */] <-0.53491926f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.17464091f ? 
                        0.0f : 
                         (data[30 /* X31 */] <0.17295991f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[25 /* X26 */] <-0.4623049f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.25951377f ? 
         (data[20 /* X21 */] <0.2067755f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23559983f ? 
                 (data[0 /* X1 */] <-0.07755273f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.080614075f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[15 /* X16 */] <0.10705154f ? 
             (data[10 /* X11 */] <-0.040492572f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.3647039f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.27754706f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X11 */] <-0.12554066f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[3 /* X4 */] <-0.63677835f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
                 (data[14 /* X15 */] <0.24772613f ? 
                     (data[30 /* X31 */] <0.23954359f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22833844f ? 
            0.0f : 
             (data[6 /* X7 */] <0.13030632f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_77_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[10 /* X11 */] <-0.18507785f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.35917556f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.2904835f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X7 */] <0.13193345f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.24390675f ? 
                 (data[7 /* X8 */] <0.04417096f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.43386206f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.38769102f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
        0.01923077f : 
         (data[6 /* X7 */] <0.13274702f ? 
             (data[3 /* X4 */] <0.26628867f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.16084017f ? 
                 (data[14 /* X15 */] <0.20947343f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[10 /* X11 */] <-0.71955776f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25696954f ? 
             (data[10 /* X11 */] <-0.7907403f ? 
                 (data[9 /* X10 */] <-0.10663293f ? 
                    1.0f : 
                    0.0f) : 
                 (data[20 /* X21 */] <0.23362318f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2868441f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
        0.022727273f : 
         (data[6 /* X7 */] <0.14657772f ? 
             (data[34 /* X35 */] <-0.23301037f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.26073748f ? 
                 (data[20 /* X21 */] <0.22810192f ? 
                     (data[20 /* X21 */] <0.20641524f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[23 /* X24 */] <0.107110016f ? 
                     (data[12 /* X13 */] <0.29162514f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.37531626f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.87488055f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27923265f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[19 /* X20 */] <0.21841496f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.13333948f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_78_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[17 /* X18 */] <-0.13867067f ? 
            1.0f : 
             (data[3 /* X4 */] <0.28004968f ? 
                 (data[29 /* X30 */] <0.17113854f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[7 /* X8 */] <0.079707354f ? 
             (data[27 /* X28 */] <-0.13070154f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.116618656f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[24 /* X25 */] <-0.62749636f ? 
            0.0f : 
             (data[3 /* X4 */] <0.29725096f ? 
                0.0f : 
                1.0f)) : 
         (data[18 /* X19 */] <-0.5700438f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13681488f ? 
        0.0f : 
         (data[10 /* X11 */] <-0.71955776f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10688782f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.1295852f ? 
                 (data[32 /* X33 */] <-0.27581626f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.14013053f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
        0.022727273f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.53042346f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21001282f ? 
                 (data[15 /* X16 */] <0.10337811f ? 
                     (data[24 /* X25 */] <-0.5189679f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.6239679f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.26964906f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.6369886f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[17 /* X18 */] <-0.025050836f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X12 */] <-0.7289236f ? 
             (data[15 /* X16 */] <0.2012307f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_79_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[15 /* X16 */] <0.16251902f ? 
            1.0f : 
             (data[27 /* X28 */] <-0.6199324f ? 
                 (data[31 /* X32 */] <0.17183203f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.5194377f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[16 /* X17 */] <-1.4144435f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1609334f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.18577054f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33423212f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.18598342f ? 
                    1.0f : 
                    0.0f)) : 
             (data[15 /* X16 */] <0.13536307f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.30176553f ? 
             (data[27 /* X28 */] <-0.7203995f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.1045623f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X5 */] <0.11439711f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.036114827f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.49537608f ? 
             (data[6 /* X7 */] <0.1067128f ? 
                 (data[12 /* X13 */] <0.40436366f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.30105874f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.3718191f ? 
                     (data[33 /* X34 */] <-0.1221736f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24842323f ? 
         (data[15 /* X16 */] <0.071806565f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.5818336f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.050907f ? 
                    0.0f : 
                     (data[19 /* X20 */] <-0.1792603f ? 
                         (data[12 /* X13 */] <0.40436366f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.25117353f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[35 /* X36 */] <0.050934948f ? 
                             (data[25 /* X26 */] <-0.055047933f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
        0.75f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5219714f ? 
            0.0f : 
             (data[27 /* X28 */] <0.05712817f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.66444105f ? 
             (data[19 /* X20 */] <0.20926203f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.0718526f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.5664333f ? 
                     (data[35 /* X36 */] <0.050934948f ? 
                         (data[9 /* X10 */] <-0.05019323f ? 
                            0.0f : 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29713196f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[17 /* X18 */] <-0.0572943f ? 
            0.0f : 
            1.0f) : 
         (data[33 /* X34 */] <-0.26522875f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.34217846f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.12842216f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24602745f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_80_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4125667f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.4183806f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.10715951f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.6542677f ? 
                 (data[29 /* X30 */] <0.14706609f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.28137738f ? 
                     (data[15 /* X16 */] <0.16055402f ? 
                         (data[19 /* X20 */] <-0.3535837f ? 
                            1.0f : 
                             (data[24 /* X25 */] <-0.762822f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13470714f ? 
             (data[1 /* X2 */] <-0.17937964f ? 
                0.0f : 
                 (data[34 /* X35 */] <-1.0414244f ? 
                    0.0f : 
                     (data[23 /* X24 */] <0.124671966f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.052622378f ? 
            1.0f : 
            0.0f) : 
         (data[1 /* X2 */] <-0.44879687f ? 
             (data[1 /* X2 */] <-0.57836974f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X12 */] <-0.114012554f ? 
                 (data[23 /* X24 */] <0.18644151f ? 
                     (data[28 /* X29 */] <0.2820118f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[34 /* X35 */] <-0.05228429f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.1651918f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.25823355f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.16817647f ? 
                        1.0f : 
                        0.0f))) : 
             (data[11 /* X12 */] <-1.0526931f ? 
                 (data[9 /* X10 */] <0.43305826f ? 
                    1.0f : 
                    0.0f) : 
                 (data[18 /* X19 */] <-0.15057957f ? 
                     (data[24 /* X25 */] <0.17799403f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6520541f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17525604f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.9565656f ? 
            0.0f : 
            1.0f) : 
         (data[33 /* X34 */] <-0.69063807f ? 
             (data[24 /* X25 */] <0.09514411f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_81_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[31 /* X32 */] <0.20666814f ? 
             (data[11 /* X12 */] <-0.17243107f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.1971563f ? 
                 (data[27 /* X28 */] <-1.1383228f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.98808277f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3279953f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16931456f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[27 /* X28 */] <0.28208703f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.035192672f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.014492754f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (data[31 /* X32 */] <0.08053739f ? 
             (data[0 /* X1 */] <0.08054324f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X12 */] <-0.5858627f ? 
             (data[32 /* X33 */] <-0.4755918f ? 
                 (data[23 /* X24 */] <0.21152054f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.080358244f ? 
                 (data[30 /* X31 */] <0.18749245f ? 
                    1.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.34958753f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.5858627f ? 
             (data[23 /* X24 */] <0.25541094f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.44981954f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_82_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2639328f ? 
             (data[27 /* X28 */] <-0.32726753f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.33877656f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.18384448f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.17483412f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.30081302f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09937929f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23589788f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7123481f ? 
            0.0f : 
             (data[21 /* X22 */] <0.22242646f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (data[10 /* X11 */] <-0.7487112f ? 
            0.0f : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2520759f ? 
                 (data[3 /* X4 */] <-0.24476059f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.123957455f ? 
                        0.0f : 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.29609928f ? 
                            1.0f : 
                             (data[1 /* X2 */] <-0.13604243f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[31 /* X32 */] <0.089664586f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.3633559f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21162806f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3884335f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.011904762f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_83_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[8 /* X9 */] <0.095000304f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6489791f ? 
                0.0f : 
                1.0f) : 
             (data[21 /* X22 */] <0.24604796f ? 
                 (data[3 /* X4 */] <0.2869302f ? 
                    1.0f : 
                     (data[19 /* X20 */] <-1.0290868f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[2 /* X3 */] <-0.36584052f ? 
             (data[22 /* X23 */] <0.21420826f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28114277f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.124671966f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[16]) || data[16 /* X17 */] <0.43768325f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.09876288f ? 
            0.0f : 
             (data[3 /* X4 */] <0.311012f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13428111f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X12 */] <-0.12656176f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26359537f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.2955919f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[8 /* X9 */] <-0.32100928f ? 
            0.0f : 
             (data[28 /* X29 */] <0.21882588f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.2133228f ? 
            1.0f : 
             (data[20 /* X21 */] <0.23474182f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22332528f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2951237f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X3 */] <-0.17818582f ? 
            1.0f : 
             (data[28 /* X29 */] <0.20638016f ? 
                1.0f : 
                 (data[12 /* X13 */] <0.27669632f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2577592f ? 
                        1.0f : 
                        0.0f) : 
                     (data[21 /* X22 */] <0.11632945f ? 
                         (data[0 /* X1 */] <-0.01489438f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.32203707f ? 
                            0.0f : 
                             (data[4 /* X5 */] <0.12662335f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25343364f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3465296f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.24393353f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X12 */] <-0.9171617f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32759002f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_84_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (data[33 /* X34 */] <-0.10715951f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2008018f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2955919f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.52223563f ? 
                         (data[22 /* X23 */] <0.19429739f ? 
                             (data[26 /* X27 */] <-0.08836312f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14672296f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[31 /* X32 */] <0.13339218f ? 
                    1.0f : 
                    0.0f))) : 
         (data[14 /* X15 */] <0.18557443f ? 
             (data[29 /* X30 */] <0.19545282f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.5542052f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.03836388f ? 
             (data[4 /* X5 */] <0.12646247f ? 
                1.0f : 
                 (data[2 /* X3 */] <0.022790793f ? 
                     (data[15 /* X16 */] <0.12514165f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[29 /* X30 */] <0.1456382f ? 
                1.0f : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.7120222f ? 
             (data[4 /* X5 */] <0.08503804f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.5146509f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15831289f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.1360013f ? 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24198413f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[25 /* X26 */] <-0.15865855f ? 
            1.0f : 
             (data[15 /* X16 */] <0.14807436f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.13911097f ? 
             (data[7 /* X8 */] <0.10064845f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.046170067f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.6925976f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17069963f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.24449351f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.0060893837f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16828908f ? 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.46526423f ? 
                     (data[26 /* X27 */] <-0.06334209f ? 
                         (data[26 /* X27 */] <-0.2452374f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[20 /* X21 */] <0.25599623f ? 
                     (data[22 /* X23 */] <0.27158493f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (data[33 /* X34 */] <-0.76922905f ? 
             (data[16 /* X17 */] <-0.18711145f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.31824088f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_85_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.27826378f ? 
         (data[13 /* X14 */] <0.19482586f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.38325736f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22066477f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[16 /* X17 */] <-0.4605585f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.44048777f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.10039894f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.23078875f ? 
         (data[31 /* X32 */] <0.2078694f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.43609345f ? 
                0.0f : 
                 (data[12 /* X13 */] <0.30154896f ? 
                    0.0f : 
                    1.0f)) : 
             (data[16 /* X17 */] <-0.3842477f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.20222197f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3557353f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (data[22 /* X23 */] <0.24151403f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.27383143f ? 
             (data[25 /* X26 */] <-0.33597875f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19051358f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.35220104f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (data[7 /* X8 */] <0.039411623f ? 
             (data[25 /* X26 */] <-0.009153293f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.18634433f ? 
                0.0f : 
                 (data[17 /* X18 */] <0.19604722f ? 
                    1.0f : 
                    0.0f))) : 
         (data[7 /* X8 */] <0.118416645f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.49615696f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3076531f ? 
         (data[33 /* X34 */] <-0.66444105f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.010024797f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[7 /* X8 */] <0.118416645f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_86_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[25 /* X26 */] <-0.2328317f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.71695864f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18123992f ? 
                     (data[32 /* X33 */] <0.20599437f ? 
                         (data[21 /* X22 */] <0.22647586f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (data[31 /* X32 */] <0.149609f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.2353741f ? 
                0.0f : 
                1.0f) : 
             (data[29 /* X30 */] <0.18174297f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.42342892f ? 
                     (data[3 /* X4 */] <-0.15342247f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[22 /* X23 */] <0.18966764f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.19982992f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.40992123f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[14 /* X15 */] <0.2462908f ? 
            1.0f : 
             (data[7 /* X8 */] <0.07780362f ? 
                 (data[16 /* X17 */] <-0.84211254f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.8167359f ? 
             (data[9 /* X10 */] <-0.36598223f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
        0.022727273f : 
         (data[5 /* X6 */] <0.105922714f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.35911992f ? 
                 (data[30 /* X31 */] <0.18598342f ? 
                    1.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.20406544f ? 
                         (data[31 /* X32 */] <0.09192707f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[25 /* X26 */] <0.026774328f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.11091155f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[33 /* X34 */] <-0.74303204f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.04533494f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_87_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (data[20 /* X21 */] <0.24928431f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14488463f ? 
                 (data[1 /* X2 */] <-0.19374856f ? 
                    1.0f : 
                     (data[0 /* X1 */] <-0.0940764f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.17391117f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.66773045f ? 
                            0.0f : 
                             (data[13 /* X14 */] <0.16123213f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32162437f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.11522535f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.0875319f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
        0.021276595f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
        0.01923077f : 
         (data[32 /* X33 */] <0.09876288f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.33775884f ? 
                 (data[1 /* X2 */] <-0.17532495f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24467441f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1347133f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X8 */] <0.08129381f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15300629f ? 
             (data[11 /* X12 */] <-0.3800557f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.34826365f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.49535134f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.0010307396f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <-0.5343493f ? 
             (data[15 /* X16 */] <0.15847452f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (data[20 /* X21 */] <0.21180944f ? 
            1.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.09138835f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.12149619f ? 
                    1.0f : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.28703797f ? 
                         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2561894f ? 
                             (data[20 /* X21 */] <0.2371749f ? 
                                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17356913f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f)))) : 
         (data[18 /* X19 */] <-0.31375074f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.42390501f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.37093958f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.34225556f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.9472798f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.4550267f ? 
             (data[1 /* X2 */] <-0.23919596f ? 
                 (data[0 /* X1 */] <0.18348946f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[23 /* X24 */] <0.13930693f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_88_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.16031572f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16291748f ? 
             (data[15 /* X16 */] <0.1550078f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.16501072f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12565047f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.19706874f ? 
                            0.0f : 
                            1.0f) : 
                         (data[33 /* X34 */] <-0.057147063f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
         (data[19 /* X20 */] <-0.47343102f ? 
             (data[10 /* X11 */] <0.05462831f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.041671216f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12617654f ? 
                1.0f : 
                 (data[8 /* X9 */] <0.14469984f ? 
                     (data[11 /* X12 */] <-0.43455803f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.367322f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3557353f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.097222045f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (data[5 /* X6 */] <0.111446485f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X11 */] <-1.1892523f ? 
            1.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.910261f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24559523f ? 
                    0.0f : 
                     (data[2 /* X3 */] <0.12964186f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.15794359f ? 
         (data[20 /* X21 */] <0.2341825f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.1757874f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.9810602f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <1.5425191f ? 
                     (data[32 /* X33 */] <-0.6342371f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.038970757f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24664737f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.0364538f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.015637346f ? 
        0.0f : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16754256f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.21438095f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.1528707f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X11 */] <0.15180647f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_89_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[31 /* X32 */] <0.13579467f ? 
            1.0f : 
             (data[6 /* X7 */] <0.10101781f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.10995645f ? 
                     (data[27 /* X28 */] <-0.49325657f ? 
                         (data[30 /* X31 */] <0.1256222f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4495232f ? 
            0.0f : 
             (data[22 /* X23 */] <0.2771152f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[20 /* X21 */] <0.3376579f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.664076f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.22393262f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.309795f ? 
                    0.0f : 
                    1.0f))) : 
         (data[5 /* X6 */] <0.11986366f ? 
             (data[23 /* X24 */] <0.17443083f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.16343829f ? 
                    0.0f : 
                     (data[8 /* X9 */] <0.26772943f ? 
                        1.0f : 
                         (data[22 /* X23 */] <0.18863072f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
        0.6666667f : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.40856543f ? 
             (data[32 /* X33 */] <-0.25818902f ? 
                 (data[25 /* X26 */] <-0.25716978f ? 
                    1.0f : 
                     (data[27 /* X28 */] <0.15322709f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[21 /* X22 */] <0.13333967f ? 
                     (data[30 /* X31 */] <0.20930855f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[20 /* X21 */] <0.22635193f ? 
             (data[19 /* X20 */] <-0.24226686f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23796716f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.16237213f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.45768848f ? 
                     (data[5 /* X6 */] <0.10466032f ? 
                        0.0f : 
                         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18384448f ? 
                            1.0f : 
                             (data[1 /* X2 */] <-0.056525383f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.10300703f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (data[11 /* X12 */] <-0.8418665f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X13 */] <0.27931875f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.43446156f ? 
                 (data[22 /* X23 */] <0.2549941f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_90_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.2243003f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29835272f ? 
             (data[11 /* X12 */] <-0.04875668f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.12145279f ? 
                     (data[16 /* X17 */] <-0.19347069f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.22028662f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[25 /* X26 */] <-0.44260266f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.57912844f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[0 /* X1 */] <0.08238157f ? 
                 (data[26 /* X27 */] <0.09401462f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.12643616f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.1285257f ? 
         (data[9 /* X10 */] <-0.12549676f ? 
            0.0f : 
             (data[31 /* X32 */] <0.12618472f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.16462456f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1802884f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.101831384f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.41027036f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.21387738f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.56963736f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.295537f ? 
            1.0f : 
            0.0f) : 
         (data[17 /* X18 */] <-0.8203896f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.27581626f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.14151499f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31282043f ? 
                         (data[6 /* X7 */] <0.16981341f ? 
                             (data[7 /* X8 */] <0.0477246f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.304039f ? 
         (data[17 /* X18 */] <-0.3613041f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.7487112f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2908592f ? 
             (data[31 /* X32 */] <0.06902158f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.4755918f ? 
                     (data[13 /* X14 */] <0.15736522f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.50267774f ? 
                        0.0f : 
                         (data[5 /* X6 */] <0.16352776f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[18 /* X19 */] <-0.1522061f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.034017704f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5692391f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.25528014f ? 
                1.0f : 
                0.0f)) : 
         (data[17 /* X18 */] <-0.06804212f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_91_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12825261f ? 
             (data[17 /* X18 */] <-0.18225048f ? 
                 (data[22 /* X23 */] <0.19969128f ? 
                    0.0f : 
                    1.0f) : 
                 (data[30 /* X31 */] <0.13467638f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.3667032f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <1.0232944f ? 
                        0.0f : 
                         (data[23 /* X24 */] <0.16665618f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.4222495f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13364653f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[15 /* X16 */] <0.23416454f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09744347f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5461191f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (data[7 /* X8 */] <0.05368964f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.09744347f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10899287f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.37073398f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[24 /* X25 */] <0.09514411f ? 
                    1.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.33266905f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.4886908f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[14 /* X15 */] <0.34770006f ? 
            0.0f : 
             (data[23 /* X24 */] <0.13345294f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7478326f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_92_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[0 /* X1 */] <0.11271394f ? 
             (data[15 /* X16 */] <0.16194125f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.95540833f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.4125667f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4595911f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1377713f ? 
             (data[15 /* X16 */] <0.15269665f ? 
                0.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.050934948f ? 
                    1.0f : 
                     (data[25 /* X26 */] <-0.1693543f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
        0.8f : 
         (data[23 /* X24 */] <0.113939665f ? 
             (data[25 /* X26 */] <-0.16570508f ? 
                1.0f : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44189987f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[28 /* X29 */] <0.20638016f ? 
            1.0f : 
             (data[7 /* X8 */] <0.052084155f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.20469743f ? 
                    0.0f : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.41037035f ? 
                         (data[9 /* X10 */] <-0.05019323f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
        0.039215688f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[32 /* X33 */] <-0.4755918f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.4327876f ? 
            0.0f : 
             (data[7 /* X8 */] <0.10445592f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_93_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (data[4 /* X5 */] <0.11298948f ? 
            0.0f : 
             (data[33 /* X34 */] <0.15719199f ? 
                 (data[22 /* X23 */] <0.23425554f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.12851748f ? 
             (data[23 /* X24 */] <0.13345294f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15078016f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.42995778f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
         (data[35 /* X36 */] <-0.57993555f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <0.29725096f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26733032f ? 
                 (data[35 /* X36 */] <-0.8035185f ? 
                     (data[22 /* X23 */] <0.21043007f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.071806565f ? 
        0.75f : 
         (data[10 /* X11 */] <-0.7616683f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.10363445f ? 
                1.0f : 
                0.0f) : 
             (data[23 /* X24 */] <0.05735115f ? 
                1.0f : 
                 (data[33 /* X34 */] <-1.219341f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.03655602f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.18581314f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4987938f ? 
             (data[35 /* X36 */] <-0.5056034f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.10696479f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.20469743f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.28759244f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28061408f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.08474688f ? 
        1.0f : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5498059f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3450887f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29816067f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.5715608f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[35 /* X36 */] <-0.20446277f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_94_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13193345f ? 
         (data[15 /* X16 */] <0.18563049f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.21441828f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1413431f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.29055852f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[32 /* X33 */] <0.09876288f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.68095106f ? 
                 (data[0 /* X1 */] <0.062159993f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[27 /* X28 */] <-1.096059f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13681488f ? 
        0.0f : 
         (data[9 /* X10 */] <-0.52873504f ? 
            1.0f : 
             (data[14 /* X15 */] <0.21076527f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.058937263f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X1 */] <-0.18785225f ? 
                     (data[17 /* X18 */] <-0.05230954f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.48216942f ? 
                        0.0f : 
                         (data[9 /* X10 */] <0.050032284f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (data[32 /* X33 */] <-0.494688f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25153765f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.30785573f ? 
                 (data[3 /* X4 */] <-0.24286912f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13617194f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3730305f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.26670274f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.28988725f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12485376f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.15616338f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1851063f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.044543475f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.10535321f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.24057661f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.28988725f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.048794482f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_95_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[0 /* X1 */] <0.11271394f ? 
             (data[17 /* X18 */] <-0.1048918f ? 
                 (data[4 /* X5 */] <0.12492788f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.60779274f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.39385104f ? 
             (data[19 /* X20 */] <-0.3535837f ? 
                 (data[32 /* X33 */] <0.17661658f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.21446249f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13631585f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.5065745f ? 
                 (data[23 /* X24 */] <0.16760118f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.6070008f ? 
                         (data[4 /* X5 */] <0.10817263f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X7 */] <0.13111989f ? 
             (data[16 /* X17 */] <-0.3842477f ? 
                0.0f : 
                 (data[9 /* X10 */] <0.114988714f ? 
                     (data[9 /* X10 */] <-0.0638962f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (data[22 /* X23 */] <0.24635302f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X8 */] <0.033700414f ? 
            1.0f : 
             (data[20 /* X21 */] <0.16985996f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.4147877f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (data[0 /* X1 */] <-0.040786225f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21736471f ? 
             (data[11 /* X12 */] <-0.45033127f ? 
                 (data[25 /* X26 */] <-0.062465247f ? 
                     (data[31 /* X32 */] <0.17423452f ? 
                        0.0f : 
                        1.0f) : 
                     (data[27 /* X28 */] <0.62498546f ? 
                         (data[14 /* X15 */] <0.27353495f ? 
                             (data[16 /* X17 */] <0.0298862f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.16165003f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.22187115f ? 
                         (data[4 /* X5 */] <0.09830995f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24557899f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7276366f ? 
            0.0f : 
             (data[11 /* X12 */] <-1.1430475f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.118416645f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7667736f ? 
                0.0f : 
                1.0f) : 
             (data[19 /* X20 */] <0.08222481f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.21215457f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_96_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (data[14 /* X15 */] <0.17846933f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.50545585f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.10001387f ? 
                    1.0f : 
                    0.0f)) : 
             (data[16 /* X17 */] <-1.0646857f ? 
                1.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.6287379f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <1.3061382f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.53476745f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6580146f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.8189772f ? 
                                    0.0f : 
                                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.48671976f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[11 /* X12 */] <0.75015545f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2814802f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.13943781f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_02_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[35 /* X36 */] <-0.6790451f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.43609345f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1876023f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3404109f ? 
                1.0f : 
                 (data[27 /* X28 */] <0.0483919f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.45577103f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-1.1931441f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (data[35 /* X36 */] <0.047123045f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.24106303f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.50717837f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.11430414f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.22311722f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[0 /* X1 */] <-0.022402972f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22079128f ? 
                    0.0f : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.48750877f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1630015f ? 
                        1.0f : 
                         (data[11 /* X12 */] <0.47329026f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[33 /* X34 */] <-0.98118657f ? 
             (data[2 /* X3 */] <-0.21978416f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_02_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.36126435f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.085498184f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.26672304f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18655735f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_97_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11225436f ? 
         (data[24 /* X25 */] <-0.7386718f ? 
             (data[21 /* X22 */] <0.21432766f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3291538f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.34277853f ? 
                    0.0f : 
                    1.0f))) : 
         (data[33 /* X34 */] <-0.10715951f ? 
            0.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.26544255f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.56697345f ? 
                    1.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.195515f ? 
                         (data[0 /* X1 */] <0.14739078f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (data[31 /* X32 */] <0.14660588f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.10041384f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.6282822f ? 
                    0.0f : 
                    1.0f)) : 
             (data[12 /* X13 */] <0.31614408f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.10916512f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31901234f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13047364f ? 
                        1.0f : 
                         (data[25 /* X26 */] <0.23422736f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.41701576f ? 
            0.0f : 
             (data[23 /* X24 */] <0.17443083f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
        0.85714287f : 
         (data[12 /* X13 */] <0.2133228f ? 
             (data[21 /* X22 */] <0.25077227f ? 
                0.0f : 
                1.0f) : 
             (data[20 /* X21 */] <0.15979208f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.09540205f ? 
                     (data[3 /* X4 */] <-0.24974963f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (data[12 /* X13 */] <0.260562f ? 
             (data[21 /* X22 */] <0.28114277f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2360659f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2430915f ? 
                 (data[15 /* X16 */] <0.089140154f ? 
                    1.0f : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.4598605f ? 
                    0.0f : 
                     (data[4 /* X5 */] <0.12726684f ? 
                        1.0f : 
                         (data[24 /* X25 */] <0.014340468f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[33 /* X34 */] <-0.5310745f ? 
             (data[23 /* X24 */] <0.121744975f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (data[8 /* X9 */] <0.014717752f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54737675f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.37389255f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_98_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[32 /* X33 */] <0.09876288f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05228429f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <0.2490874f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3119619f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15103292f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[6 /* X7 */] <0.13234024f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12976228f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[1 /* X2 */] <0.07207644f ? 
             (data[19 /* X20 */] <-0.9479473f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.24564715f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2490874f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (data[30 /* X31 */] <0.15693457f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.2531899f ? 
             (data[19 /* X20 */] <-0.010384501f ? 
                 (data[6 /* X7 */] <0.12298419f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30670586f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.7631756f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.55883276f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.4770752f ? 
                0.0f : 
                1.0f)) : 
         (data[26 /* X27 */] <-0.11025652f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.25746334f ? 
                 (data[8 /* X9 */] <-0.22472735f ? 
                    0.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.13749667f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23086517f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4577284f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.028677953f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (data[30 /* X31 */] <0.12675397f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01632154f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.22022374f ? 
                0.0f : 
                 (data[30 /* X31 */] <0.19356859f ? 
                    1.0f : 
                    0.0f))) : 
         (data[26 /* X27 */] <-0.09238436f ? 
            1.0f : 
             (data[0 /* X1 */] <0.0014952566f ? 
                0.0f : 
                 (data[4 /* X5 */] <0.20770262f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_02_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_99_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15432148f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2612332f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.20932794f ? 
                 (data[16 /* X17 */] <-0.40968463f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.13579467f ? 
                        1.0f : 
                         (data[34 /* X35 */] <-0.9506508f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2104192f ? 
                 (data[8 /* X9 */] <0.28719187f ? 
                     (data[27 /* X28 */] <-0.31853127f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.10696479f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.16253181f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.114952154f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22844586f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_02_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
        0.01923077f : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13274702f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.34277853f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29396585f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X9 */] <0.248267f ? 
                     (data[31 /* X32 */] <0.1989539f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[7 /* X8 */] <0.11207086f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12996991f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.1071949f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.16846697f ? 
             (data[11 /* X12 */] <-0.24954396f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21235782f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.16462456f ? 
                        1.0f : 
                        0.0f))) : 
             (data[4 /* X5 */] <0.07458139f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5730157f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.518227f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.11202994f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11118345f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.16836508f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27105385f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X12 */] <-0.24954396f ? 
                 (data[5 /* X6 */] <0.13025464f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21206883f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23531018f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5036521f ? 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5610222f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11968581f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4227002f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24134956f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.37001634f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_100_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (data[1 /* X2 */] <-0.15782626f ? 
             (data[7 /* X8 */] <0.0784382f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10899287f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2517908f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1785975f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.0030146237f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.16127847f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[35 /* X36 */] <-0.5542052f ? 
         (data[1 /* X2 */] <-0.16321461f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13364653f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.42973423f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25768805f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.006518247f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X11 */] <-0.7487112f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25085595f ? 
                 (data[16 /* X17 */] <-0.60046166f ? 
                     (data[8 /* X9 */] <0.16083759f ? 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.01909958f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.3800557f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.046170067f ? 
         (data[23 /* X24 */] <0.083206244f ? 
             (data[22 /* X23 */] <0.1478449f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <-0.37015858f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X4 */] <-0.5903349f ? 
            1.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2998459f ? 
                 (data[8 /* X9 */] <0.053642627f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.22806953f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X10 */] <-0.6526215f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[8 /* X9 */] <0.10716433f ? 
            1.0f : 
             (data[6 /* X7 */] <0.15145913f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7478326f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_101_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (data[24 /* X25 */] <-0.7386718f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.32598984f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2925817f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22647586f ? 
                        0.0f : 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.37639213f ? 
                             (data[9 /* X10 */] <0.08972559f ? 
                                1.0f : 
                                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29282787f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                     (data[30 /* X31 */] <0.10751382f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.2236329f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[20 /* X21 */] <0.27780998f ? 
            0.0f : 
             (data[14 /* X15 */] <0.13583869f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37163374f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.073855095f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.18463206f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.572221f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (data[24 /* X25 */] <0.08985004f ? 
             (data[27 /* X28 */] <-0.09599361f ? 
                0.0f : 
                1.0f) : 
             (data[30 /* X31 */] <0.16485699f ? 
                 (data[12 /* X13 */] <0.39982158f ? 
                    0.0f : 
                    1.0f) : 
                 (data[26 /* X27 */] <-0.3001483f ? 
                     (data[20 /* X21 */] <0.26896405f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.015637346f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.39799118f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19803837f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.70358187f ? 
                    0.0f : 
                     (data[12 /* X13 */] <0.31544283f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_102_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[3 /* X4 */] <0.30929187f ? 
             (data[7 /* X8 */] <0.049882166f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.14094146f ? 
                     (data[26 /* X27 */] <-0.1836145f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15014558f ? 
                0.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22728048f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[3 /* X4 */] <0.30929187f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15014558f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1318977f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.20752323f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.59379494f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.22243235f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[31 /* X32 */] <0.12618472f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08541857f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.33366084f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X8 */] <0.04829572f ? 
             (data[21 /* X22 */] <0.15898587f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[3 /* X4 */] <-0.33403587f ? 
            1.0f : 
            0.0f) : 
         (data[22 /* X23 */] <0.24980944f ? 
             (data[11 /* X12 */] <-1.0526931f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22647586f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4058023f ? 
                    1.0f : 
                     (data[1 /* X2 */] <0.08252844f ? 
                        0.0f : 
                        1.0f))) : 
             (data[32 /* X33 */] <-0.5137842f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.103509836f ? 
                    1.0f : 
                     (data[28 /* X29 */] <0.20673746f ? 
                         (data[6 /* X7 */] <0.30847806f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[31 /* X32 */] <0.1418009f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5570933f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22833844f ? 
            0.0f : 
             (data[32 /* X33 */] <0.21774684f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_103_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[29 /* X30 */] <0.16031572f ? 
        0.0f : 
         (data[16 /* X17 */] <-0.47009733f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0062436447f ? 
                1.0f : 
                0.0f) : 
             (data[34 /* X35 */] <-0.92257684f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1577529f ? 
                     (data[17 /* X18 */] <-0.24846958f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.20565858f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[27 /* X28 */] <-0.47867084f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.04875668f ? 
                            0.0f : 
                             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.43180826f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[20]) || data[20 /* X21 */] <0.48532012f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.1384242f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.828997f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32170868f ? 
                     (data[17 /* X18 */] <-0.19982924f ? 
                         (data[32 /* X33 */] <0.1863942f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (data[2 /* X3 */] <-0.15507564f ? 
            0.0f : 
             (data[3 /* X4 */] <0.2490874f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24842323f ? 
         (data[25 /* X26 */] <-0.44839743f ? 
            1.0f : 
             (data[22 /* X23 */] <0.121576056f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17921664f ? 
                    0.0f : 
                     (data[34 /* X35 */] <0.0076049264f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.53476745f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.75f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.3264714f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <3.440418E-4f ? 
             (data[34 /* X35 */] <-0.3517398f ? 
                 (data[34 /* X35 */] <-0.6206659f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6686668f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24349093f ? 
                        1.0f : 
                         (data[9 /* X10 */] <0.26073748f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6599305f ? 
                 (data[9 /* X10 */] <-0.5165893f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.015637346f ? 
        0.0f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.35545108f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.618909f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3541612f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.22250004f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.3422106f ? 
                1.0f : 
                 (data[34 /* X35 */] <0.21699423f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_104_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (data[34 /* X35 */] <-0.4125667f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.26197997f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X8 */] <0.059083555f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.113229014f ? 
                1.0f : 
                0.0f) : 
             (data[27 /* X28 */] <-0.6286687f ? 
                 (data[29 /* X30 */] <0.20553435f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.23532638f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1377713f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.015832108f ? 
                1.0f : 
                 (data[27 /* X28 */] <-0.19622354f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.071806565f ? 
        0.75f : 
         (data[32 /* X33 */] <-0.4550267f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.26243877f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.003678542f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X4 */] <-0.25663015f ? 
                 (data[23 /* X24 */] <0.14028259f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.61366534f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.046170067f ? 
         (data[3 /* X4 */] <-0.36327806f ? 
             (data[33 /* X34 */] <-0.5048775f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.17069963f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.31204143f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3080136f ? 
             (data[26 /* X27 */] <-0.06334209f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.0873223f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.11984763f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.075899884f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.272891f ? 
             (data[33 /* X34 */] <-0.8240046f ? 
                1.0f : 
                0.0f) : 
             (data[24 /* X25 */] <0.34925944f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.4550267f ? 
            0.0f : 
             (data[24 /* X25 */] <0.03690935f ? 
                0.0f : 
                 (data[7 /* X8 */] <0.07665154f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_105_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17739743f ? 
         (data[19 /* X20 */] <-0.42712638f ? 
            1.0f : 
            0.0f) : 
         (data[35 /* X36 */] <-0.6542677f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.37981376f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17924403f ? 
                 (data[27 /* X28 */] <-0.14380595f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14059965f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[3 /* X4 */] <0.2989711f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.8029321f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
        0.8f : 
         (data[0 /* X1 */] <-0.4029363f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.7487112f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.55226076f ? 
                     (data[20 /* X21 */] <0.18663976f ? 
                         (data[31 /* X32 */] <0.13579467f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[4 /* X5 */] <0.12505485f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.24699074f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.41708228f ? 
                     (data[34 /* X35 */] <-0.11030625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[23 /* X24 */] <0.08271842f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4577284f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.13961518f ? 
                        0.0f : 
                         (data[35 /* X36 */] <-0.040550802f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (data[28 /* X29 */] <0.17622325f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1851063f ? 
        0.04761905f : 
         (data[35 /* X36 */] <0.19578739f ? 
            0.0f : 
             (data[10 /* X11 */] <-0.1202924f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_106_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
             (data[11 /* X12 */] <-0.04875668f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.31169003f ? 
            0.0f : 
             (data[2 /* X3 */] <-0.04599556f ? 
                 (data[11 /* X12 */] <0.07171569f ? 
                    1.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30753174f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[19 /* X20 */] <-1.3777337f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5508249f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[22 /* X23 */] <0.19554356f ? 
            1.0f : 
             (data[10 /* X11 */] <-0.7292756f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.28962052f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24027911f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.25265992f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10397319f ? 
                 (data[21 /* X22 */] <0.14143847f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.6355231f ? 
                        1.0f : 
                         (data[16 /* X17 */] <-0.14259681f ? 
                             (data[24 /* X25 */] <0.03627597f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.4233764f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3605155f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.38387153f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21362695f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.24210487f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.30729154f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.024082063f ? 
                    0.0f : 
                     (data[27 /* X28 */] <0.52015024f ? 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.15948147f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.39799118f ? 
            0.0f : 
             (data[25 /* X26 */] <0.18091542f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_02_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_107_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10012462f ? 
             (data[24 /* X25 */] <-0.14838307f ? 
                 (data[0 /* X1 */] <-0.044462875f ? 
                     (data[7 /* X8 */] <0.115243755f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17616329f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11812388f ? 
                        0.0f : 
                         (data[2 /* X3 */] <-0.011445267f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06293125f ? 
         (data[27 /* X28 */] <-0.31853127f ? 
             (data[11 /* X12 */] <-0.064575545f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.25785378f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.05305506f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0501545f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[6 /* X7 */] <0.1014246f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15331846f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <0.11179478f ? 
                 (data[24 /* X25 */] <-0.7339784f ? 
                    0.0f : 
                     (data[35 /* X36 */] <-0.95540833f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[27 /* X28 */] <0.11172983f ? 
             (data[27 /* X28 */] <-0.21064778f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.13651864f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5848455f ? 
            0.0f : 
             (data[7 /* X8 */] <0.050516747f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.6068642f ? 
            0.0f : 
            1.0f) : 
         (data[27 /* X28 */] <0.009078706f ? 
            0.0f : 
             (data[11 /* X12 */] <-1.0526931f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.12955211f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.26317328f ? 
                         (data[5 /* X6 */] <0.10460753f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.017150557f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.32050028f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.14143847f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X8 */] <0.122858696f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37818593f ? 
            0.0f : 
             (data[2 /* X3 */] <0.06308452f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_108_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.531881f ? 
             (data[13 /* X14 */] <0.17669974f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13289733f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14672296f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.13579467f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[2 /* X3 */] <-0.09221593f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.05005937f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[34 /* X35 */] <-1.0114777f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.35264137f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17616329f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.55515814f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.11761454f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.29287764f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.2607242f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.22222759f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* X3 */] <-0.08482067f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (data[9 /* X10 */] <-0.08905957f ? 
            1.0f : 
            0.0f) : 
         (data[25 /* X26 */] <-0.41710564f ? 
             (data[28 /* X29 */] <0.3298799f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.09735338f ? 
                 (data[1 /* X2 */] <-0.42005903f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.12551741f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X10 */] <0.017822865f ? 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.41057062f ? 
                1.0f : 
                 (data[35 /* X36 */] <0.19871962f ? 
                    0.0f : 
                    1.0f)) : 
             (data[15 /* X16 */] <0.16078566f ? 
                 (data[0 /* X1 */] <-0.08858268f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.140674f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[28 /* X29 */] <0.19393446f ? 
                     (data[3 /* X4 */] <-0.52497005f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.6350021f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.42914987f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[25 /* X26 */] <0.026774328f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.11195633f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_109_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29725096f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2955919f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.6051538f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.6647901f ? 
                 (data[13 /* X14 */] <0.17186612f ? 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.044487167f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.37101835f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[31 /* X32 */] <0.2054669f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25424778f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <0.29725096f ? 
            0.0f : 
             (data[34 /* X35 */] <-1.0114777f ? 
                0.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32366145f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[25 /* X26 */] <-0.19458617f ? 
            1.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.14788309f ? 
                0.0f : 
                1.0f)) : 
         (data[15 /* X16 */] <0.07758443f ? 
             (data[7 /* X8 */] <0.06320832f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25676847f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29370606f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.33945355f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.41547877f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[20 /* X21 */] <0.3264714f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.00138901f ? 
             (data[30 /* X31 */] <0.17240214f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18276753f ? 
                    1.0f : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.15867294f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2508464f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.2644017f ? 
                         (data[29 /* X30 */] <0.15690579f ? 
                            1.0f : 
                             (data[35 /* X36 */] <-0.26973432f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.27555156f ? 
             (data[11 /* X12 */] <-0.39351973f ? 
                0.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.19040227f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[13 /* X14 */] <0.2902901f ? 
             (data[30 /* X31 */] <0.15957539f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X8 */] <0.12793532f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.7289236f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.41389644f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_110_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11225436f ? 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.19812146f ? 
            0.0f : 
             (data[5 /* X6 */] <0.06462594f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.13954678f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.09952482f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16291748f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.43725014f ? 
                 (data[11 /* X12 */] <-0.08891414f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.28460315f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
        0.01923077f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.01855591f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12617654f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.1509144f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2925817f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[27 /* X28 */] <-0.41463017f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.19245662f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
        0.85714287f : 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.40691933f ? 
             (data[0 /* X1 */] <-0.4029363f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.39920706f ? 
                     (data[17 /* X18 */] <-0.09260857f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[26 /* X27 */] <0.5581518f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.18634433f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1558252f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.50267774f ? 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.4015492f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.26672304f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2896707f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.19934715f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.44721442f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54737675f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.16452806f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[35 /* X36 */] <-0.07866986f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_111_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26410154f ? 
         (data[34 /* X35 */] <-0.9506508f ? 
            1.0f : 
             (data[6 /* X7 */] <0.09650766f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2150029f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[34 /* X35 */] <-0.4125667f ? 
            1.0f : 
             (data[2 /* X3 */] <-0.09308965f ? 
                 (data[25 /* X26 */] <-0.2849847f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1335006f ? 
         (data[14 /* X15 */] <0.23078875f ? 
             (data[10 /* X11 */] <-0.50900507f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.13339218f ? 
                    0.0f : 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.468168f ? 
                        1.0f : 
                        0.0f))) : 
             (data[35 /* X36 */] <-0.58184147f ? 
                 (data[34 /* X35 */] <-1.0327682f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[26 /* X27 */] <-0.265521f ? 
             (data[14 /* X15 */] <0.27535716f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.28569812f ? 
            1.0f : 
            0.0f) : 
         (data[0 /* X1 */] <-0.3514632f ? 
            1.0f : 
             (data[20 /* X21 */] <0.15990134f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.37570405f ? 
                     (data[6 /* X7 */] <0.14226088f ? 
                        1.0f : 
                         (data[27 /* X28 */] <0.17069963f ? 
                             (data[34 /* X35 */] <-0.14212094f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.18581314f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.18869944f ? 
             (data[32 /* X33 */] <-0.21705876f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.10936728f ? 
                    1.0f : 
                     (data[17 /* X18 */] <-0.19087437f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.49050573f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.12551741f ? 
             (data[3 /* X4 */] <-0.28759244f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.123152554f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5681997f ? 
                 (data[12 /* X13 */] <0.37657592f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54662675f ? 
             (data[32 /* X33 */] <-0.09954373f ? 
                 (data[33 /* X34 */] <-0.69540113f ? 
                     (data[17 /* X18 */] <-0.018909223f ? 
                        0.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.13669428f ? 
                            1.0f : 
                             (data[34 /* X35 */] <0.2097393f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[2 /* X3 */] <0.067706555f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_02_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_112_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11225436f ? 
         (data[34 /* X35 */] <-0.98106426f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.6408129f ? 
                 (data[1 /* X2 */] <-0.3553989f ? 
                     (data[35 /* X36 */] <-0.2845128f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[16 /* X17 */] <-0.58456355f ? 
            1.0f : 
             (data[13 /* X14 */] <0.1996595f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.061676327f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3534783f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[35 /* X36 */] <-0.68095106f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13189189f ? 
             (data[16 /* X17 */] <-0.58138394f ? 
                 (data[17 /* X18 */] <-0.17859115f ? 
                     (data[30 /* X31 */] <0.15882087f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[3 /* X4 */] <0.19060305f ? 
                    0.0f : 
                     (data[22 /* X23 */] <0.1471536f ? 
                        0.0f : 
                        1.0f))) : 
             (data[18 /* X19 */] <-0.1979121f ? 
                 (data[30 /* X31 */] <0.22370918f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X1 */] <-0.41166836f ? 
        1.0f : 
         (data[9 /* X10 */] <-0.5384516f ? 
             (data[14 /* X15 */] <0.28310817f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.43771583f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.910261f ? 
                 (data[15 /* X16 */] <0.070650995f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30670586f ? 
                         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27337238f ? 
                            0.0f : 
                             (data[6 /* X7 */] <0.14446242f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[30 /* X31 */] <0.33464038f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[30 /* X31 */] <0.2297453f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4987938f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32870868f ? 
                 (data[15 /* X16 */] <0.070650995f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.21369608f ? 
                        0.0f : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.19759415f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.7262436f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2925817f ? 
                     (data[0 /* X1 */] <0.0070102327f ? 
                         (data[0 /* X1 */] <-0.0700611f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.19742581f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3398348f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11968581f ? 
         (data[33 /* X34 */] <-0.66444105f ? 
             (data[18 /* X19 */] <0.44788843f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3289684f ? 
             (data[21 /* X22 */] <0.17450857f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2840704f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.15021217f ? 
                 (data[11 /* X12 */] <-0.9522995f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_02_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_113_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.16074428f ? 
        0.0f : 
         (data[8 /* X9 */] <0.26772943f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23351789f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.06290821f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X12 */] <-0.053776365f ? 
                0.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.53984594f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.178751f ? 
                         (data[10 /* X11 */] <-0.2021027f ? 
                             (data[4 /* X5 */] <0.10670571f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3771651f ? 
                                1.0f : 
                                 (data[21 /* X22 */] <0.22933042f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5083655f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.344001f ? 
         (data[19 /* X20 */] <-0.46798342f ? 
             (data[33 /* X34 */] <0.29055852f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[22 /* X23 */] <0.2072954f ? 
             (data[34 /* X35 */] <-1.0395516f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.08985004f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4527769f ? 
                    0.0f : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.7266939f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24842323f ? 
         (data[10 /* X11 */] <-0.7487112f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29785377f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X1 */] <-0.19520555f ? 
                 (data[24 /* X25 */] <0.15867294f ? 
                    1.0f : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.122267336f ? 
                    1.0f : 
                    0.0f))) : 
         (data[30 /* X31 */] <0.15542555f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[28 /* X29 */] <0.25951377f ? 
         (data[10 /* X11 */] <-0.18183857f ? 
            1.0f : 
             (data[32 /* X33 */] <-0.4755918f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.10394281f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.24915408f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <1.6301f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.038970757f ? 
                0.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.060898665f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1667104f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[17 /* X18 */] <-0.06804212f ? 
            0.0f : 
             (data[13 /* X14 */] <0.23712014f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7478326f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_114_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[1 /* X2 */] <-0.11292339f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.29521933f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.62495685f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.03191355f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.35261074f ? 
                    1.0f : 
                    0.0f))) : 
         (data[19 /* X20 */] <-0.22011735f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0672579f ? 
                 (data[32 /* X33 */] <-0.27581626f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.066128254f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.74657047f ? 
             (data[35 /* X36 */] <-0.75337726f ? 
                 (data[8 /* X9 */] <0.13171993f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[23 /* X24 */] <0.13833126f ? 
             (data[8 /* X9 */] <-0.39885902f ? 
                0.0f : 
                1.0f) : 
             (data[14 /* X15 */] <0.2059493f ? 
                1.0f : 
                0.0f)) : 
        0.014492754f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.3392897f ? 
             (data[25 /* X26 */] <-0.1157772f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2403345f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.32965288f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14644735f ? 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.68089753f ? 
                                1.0f : 
                                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3253947f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
        0.01923077f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (data[3 /* X4 */] <-0.402841f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5110099f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <0.4145288f ? 
            0.0f : 
             (data[4 /* X5 */] <0.127669f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_115_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13193345f ? 
         (data[16 /* X17 */] <-0.3842477f ? 
             (data[20 /* X21 */] <0.23921645f ? 
                0.0f : 
                1.0f) : 
             (data[23 /* X24 */] <0.1295503f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.62692887f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.26451933f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17648058f ? 
            0.0f : 
             (data[9 /* X10 */] <0.23158774f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.33558896f ? 
             (data[11 /* X12 */] <-0.05719303f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3042508f ? 
                    0.0f : 
                     (data[25 /* X26 */] <0.042837955f ? 
                        0.0f : 
                        1.0f))) : 
             (data[20 /* X21 */] <0.23697914f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
        0.85714287f : 
         (data[7 /* X8 */] <0.033700414f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30746037f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.10820427f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[30 /* X31 */] <0.1807018f ? 
             (data[20 /* X21 */] <0.32870868f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.05070493f ? 
                     (data[23 /* X24 */] <0.21539752f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.293896f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.27865407f ? 
                     (data[2 /* X3 */] <-0.4250026f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[31 /* X32 */] <0.092549846f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (data[33 /* X34 */] <-0.63824403f ? 
             (data[23 /* X24 */] <0.13930693f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.8f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_116_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.16074428f ? 
        0.0f : 
         (data[8 /* X9 */] <0.29449028f ? 
             (data[9 /* X10 */] <-0.2639581f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28787327f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29386193f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[21 /* X22 */] <0.26157066f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14570352f ? 
                     (data[32 /* X33 */] <0.054463223f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[22 /* X23 */] <0.18653984f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[13 /* X14 */] <0.21446249f ? 
         (data[4 /* X5 */] <0.11721236f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.35264137f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15847452f ? 
                0.0f : 
                 (data[8 /* X9 */] <0.26106992f ? 
                    1.0f : 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.071046054f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.5144723f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.19964227f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.13491644f ? 
         (data[8 /* X9 */] <-0.16530979f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5755879f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.37493378f ? 
                 (data[22 /* X23 */] <0.23404737f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[9 /* X10 */] <-0.38298628f ? 
             (data[14 /* X15 */] <0.33994904f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36446673f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.18581314f ? 
         (data[8 /* X9 */] <-0.009610294f ? 
             (data[21 /* X22 */] <0.11674135f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X7 */] <0.14576414f ? 
                 (data[15 /* X16 */] <0.11598604f ? 
                    1.0f : 
                    0.0f) : 
                 (data[22 /* X23 */] <0.18122728f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.078625664f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[12 /* X13 */] <0.24041587f ? 
             (data[27 /* X28 */] <-0.025866358f ? 
                0.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3231154f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[8 /* X9 */] <0.11689555f ? 
            1.0f : 
             (data[21 /* X22 */] <0.09554528f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.28988725f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.26129103f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_117_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[0 /* X1 */] <0.10903729f ? 
             (data[35 /* X36 */] <-0.95540833f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.7396171f ? 
                    1.0f : 
                     (data[7 /* X8 */] <0.054324217f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3557353f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14570352f ? 
                    0.0f : 
                    1.0f))) : 
         (data[25 /* X26 */] <-0.52141166f ? 
             (data[24 /* X25 */] <-0.02661948f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.6886115f ? 
             (data[28 /* X29 */] <0.21978323f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.10729803f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[23 /* X24 */] <0.13833126f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.10535321f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33837333f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
        0.03508772f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6664827f ? 
             (data[16 /* X17 */] <-0.664054f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5036521f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.278206f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.2389452f ? 
                             (data[1 /* X2 */] <-0.27768657f ? 
                                0.0f : 
                                 (data[5 /* X6 */] <0.1079744f ? 
                                    0.0f : 
                                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.39775982f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.30446213f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.15109609f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18715037f ? 
             (data[3 /* X4 */] <-0.6866621f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_118_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[31 /* X32 */] <0.12798658f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.7038225f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17713702f ? 
                    1.0f : 
                     (data[27 /* X28 */] <-0.5131179f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12920448f ? 
                     (data[2 /* X3 */] <-0.17505132f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3279953f ? 
             (data[35 /* X36 */] <-0.7038225f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17713702f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.22578023f ? 
             (data[4 /* X5 */] <0.10273392f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.2755348f ? 
                    1.0f : 
                    0.0f)) : 
             (data[17 /* X18 */] <-0.2983526f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-1.1931441f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
        0.017857144f : 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.17711557f ? 
             (data[12 /* X13 */] <0.19595546f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.19088358f ? 
                     (data[16 /* X17 */] <-0.066286005f ? 
                         (data[16 /* X17 */] <-0.5262913f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.41701576f ? 
                 (data[0 /* X1 */] <-0.19520555f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[31 /* X32 */] <0.19165258f ? 
            1.0f : 
             (data[22 /* X23 */] <0.21144313f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4473732f ? 
            0.0f : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.025050836f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_119_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[34 /* X35 */] <-0.8313365f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14856128f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.3509768f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13209298f ? 
                        0.0f : 
                         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.26457372f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[21 /* X22 */] <0.29396585f ? 
                     (data[0 /* X1 */] <0.18699296f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[34 /* X35 */] <-0.92257684f ? 
            0.0f : 
             (data[13 /* X14 */] <0.11386254f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[35 /* X36 */] <0.1462326f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12158954f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[33 /* X34 */] <-1.1931441f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11150271f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3069427f ? 
                 (data[9 /* X10 */] <-0.12792592f ? 
                     (data[3 /* X4 */] <-0.40226996f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1186639f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <1.00195575E-5f ? 
                1.0f : 
                 (data[18 /* X19 */] <0.20462726f ? 
                    0.0f : 
                    1.0f))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[12 /* X13 */] <0.23207955f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.4225958f ? 
            0.0f : 
             (data[34 /* X35 */] <0.27524516f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_120_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2957067f ? 
         (data[13 /* X14 */] <0.10963311f ? 
            1.0f : 
             (data[34 /* X35 */] <-0.92257684f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.16540796f ? 
                     (data[27 /* X28 */] <-0.14380595f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[15 /* X16 */] <0.14576322f ? 
            1.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <0.633501f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4488241f ? 
                    0.0f : 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.20305893f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[4 /* X5 */] <0.09589688f ? 
            1.0f : 
             (data[3 /* X4 */] <0.26628867f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.92257684f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (data[13 /* X14 */] <0.22443186f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X4 */] <-0.25663015f ? 
             (data[25 /* X26 */] <-0.22703692f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1818131f ? 
                    1.0f : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.13369718f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[21 /* X22 */] <0.15156198f ? 
             (data[25 /* X26 */] <-0.2641235f ? 
                0.0f : 
                1.0f) : 
             (data[14 /* X15 */] <0.21593262f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13821971f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.6320313f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[20 /* X21 */] <0.21628405f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24557899f ? 
        0.015384615f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.17739743f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.074291505f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_121_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.110875614f ? 
             (data[1 /* X2 */] <-0.19195244f ? 
                1.0f : 
                0.0f) : 
             (data[25 /* X26 */] <-0.2826668f ? 
                0.0f : 
                1.0f)) : 
        0.050847456f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[34 /* X35 */] <-0.8313365f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30413148f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
        0.0f : 
         (data[17 /* X18 */] <-0.10335639f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.15438834f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.46008995f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25676847f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
        0.03508772f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23796716f ? 
             (data[33 /* X34 */] <-0.52869296f ? 
                 (data[9 /* X10 */] <-0.040476646f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2990599f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[27 /* X28 */] <-0.12633342f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2618566f ? 
                        1.0f : 
                         (data[6 /* X7 */] <0.29869857f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.16840996f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2833368f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X4 */] <-0.63677835f ? 
            0.0f : 
             (data[14 /* X15 */] <0.20301424f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_122_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3146236f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.13564587f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.2584087f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.06941074f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33311006f ? 
                 (data[35 /* X36 */] <-0.93253684f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15119648f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (data[10 /* X11 */] <-1.0590551f ? 
            0.0f : 
            1.0f) : 
         (data[15 /* X16 */] <0.055050764f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.44052145f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5133687f ? 
                     (data[16 /* X17 */] <-0.60046166f ? 
                         (data[3 /* X4 */] <-0.2910327f ? 
                             (data[27 /* X28 */] <0.28951284f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[17 /* X18 */] <0.3216222f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (data[34 /* X35 */] <-0.05228429f ? 
             (data[15 /* X16 */] <0.10762932f ? 
                 (data[0 /* X1 */] <-0.27669632f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.52385104f ? 
                    0.0f : 
                     (data[13 /* X14 */] <0.40871406f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41134456f ? 
                 (data[5 /* X6 */] <0.110920414f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.20159335f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20298328f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54662675f ? 
             (data[21 /* X22 */] <0.19947986f ? 
                 (data[13 /* X14 */] <0.25887147f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.20827468f ? 
                        0.0f : 
                         (data[17 /* X18 */] <-0.11717502f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[17 /* X18 */] <-0.043475673f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_123_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.17739743f ? 
        0.025641026f : 
         (data[11 /* X12 */] <-0.056286205f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.3842477f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.74956536f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.12149619f ? 
                         (data[22 /* X23 */] <0.19969128f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.33489427f ? 
             (data[11 /* X12 */] <-0.059000563f ? 
                1.0f : 
                 (data[6 /* X7 */] <0.101831384f ? 
                    1.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.052054342f ? 
                        0.0f : 
                         (data[24 /* X25 */] <-0.41308653f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[16 /* X17 */] <-0.7340056f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1595535f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X12 */] <-0.13911097f ? 
             (data[2 /* X3 */] <0.028434558f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.17291595f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.33784172f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.1550146f ? 
                 (data[4 /* X5 */] <0.12565812f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2528268f ? 
                         (data[14 /* X15 */] <0.3179878f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.16347171f ? 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.029756274f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[6 /* X7 */] <0.0961364f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.5896455f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14657466f ? 
            0.0f : 
             (data[27 /* X28 */] <0.039655637f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (data[33 /* X34 */] <-0.900214f ? 
             (data[28 /* X29 */] <0.23031422f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3169555f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_124_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.16074428f ? 
        0.0f : 
         (data[17 /* X18 */] <-0.3613041f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3904698f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.33098236f ? 
                 (data[16 /* X17 */] <-0.5495878f ? 
                     (data[34 /* X35 */] <-0.20201205f ? 
                        1.0f : 
                        0.0f) : 
                     (data[27 /* X28 */] <-0.58919287f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1785975f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27020237f ? 
                     (data[16 /* X17 */] <-0.5495878f ? 
                        1.0f : 
                         (data[4 /* X5 */] <0.08812836f ? 
                            1.0f : 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.29990497f ? 
                                0.0f : 
                                 (data[29 /* X30 */] <0.23660919f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_02_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (data[19 /* X20 */] <-0.5279071f ? 
             (data[14 /* X15 */] <0.13454685f ? 
                0.0f : 
                1.0f) : 
             (data[24 /* X25 */] <-0.03720762f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.31853127f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.49646097f ? 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.27762744f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[6 /* X7 */] <0.13274702f ? 
             (data[0 /* X1 */] <-0.04413777f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.1071949f ? 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2720006f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.18638714f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27158493f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2799224f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.41496158f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f) : 
         (data[15 /* X16 */] <0.13362971f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5085104f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11118345f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.1792603f ? 
             (data[16 /* X17 */] <-0.84211254f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.21125011f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4987938f ? 
                 (data[0 /* X1 */] <-0.07755273f ? 
                     (data[6 /* X7 */] <0.23362966f ? 
                        1.0f : 
                         (data[32 /* X33 */] <-0.39920706f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X10 */] <-0.6510261f ? 
                         (data[25 /* X26 */] <-0.35915786f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[19 /* X20 */] <0.46355724f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.6409366f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_125_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.16074428f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.14488463f ? 
             (data[17 /* X18 */] <-0.10182099f ? 
                 (data[26 /* X27 */] <0.039422877f ? 
                    0.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.3489347f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.5192869f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.054539435f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.5913061f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1875857f ? 
             (data[12 /* X13 */] <0.33489427f ? 
                 (data[16 /* X17 */] <-0.20618914f ? 
                    0.0f : 
                     (data[32 /* X33 */] <0.17890607f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.071806565f ? 
         (data[25 /* X26 */] <0.19482288f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X11 */] <-0.7908218f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.17291595f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5991576f ? 
                 (data[23 /* X24 */] <0.09540205f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.010544844f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.45679444f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23559983f ? 
                 (data[11 /* X12 */] <-1.0727719f ? 
                    0.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38540694f ? 
                         (data[2 /* X3 */] <-0.38063106f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.53792775f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.0033603844f ? 
                    0.0f : 
                     (data[3 /* X4 */] <-0.64881927f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[12 /* X13 */] <0.260562f ? 
             (data[26 /* X27 */] <-0.13259673f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33515128f ? 
             (data[16 /* X17 */] <-0.14259681f ? 
                 (data[26 /* X27 */] <-0.085682295f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.6350021f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_126_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13193345f ? 
         (data[1 /* X2 */] <-0.1569282f ? 
             (data[3 /* X4 */] <-0.28415218f ? 
                0.0f : 
                1.0f) : 
             (data[31 /* X32 */] <0.12738596f ? 
                 (data[28 /* X29 */] <0.33179465f ? 
                    0.0f : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.7038225f ? 
                    1.0f : 
                    0.0f))) : 
         (data[34 /* X35 */] <-1.130792f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.18473276f ? 
                 (data[35 /* X36 */] <-0.45380053f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[1 /* X2 */] <-0.13088454f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.33509377f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X4 */] <0.1871628f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5489682f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33445984f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.5105468f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.006518247f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X10 */] <-0.37812796f ? 
             (data[10 /* X11 */] <-0.7163185f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.50507396f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.101527385f ? 
                    0.0f : 
                     (data[24 /* X25 */] <0.09514411f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.14485215f ? 
             (data[3 /* X4 */] <-0.24286912f ? 
                 (data[24 /* X25 */] <-0.33896956f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.17124212f ? 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3253922f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.952608f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.28988725f ? 
             (data[4 /* X5 */] <0.11198404f ? 
                1.0f : 
                 (data[11 /* X12 */] <-0.27966207f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X4 */] <-0.68525594f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3076531f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5570933f ? 
            0.0f : 
             (data[3 /* X4 */] <0.03923182f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.006468598f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.0014952566f ? 
                 (data[4 /* X5 */] <0.1296799f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.1589712f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_127_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1377713f ? 
             (data[24 /* X25 */] <-0.7413188f ? 
                1.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.18748727f ? 
                     (data[32 /* X33 */] <0.24031974f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2440886f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.36416647f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14982828f ? 
            1.0f : 
             (data[31 /* X32 */] <0.2054669f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13650213f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X13 */] <0.22513261f ? 
             (data[4 /* X5 */] <0.2483227f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X12 */] <-0.10899287f ? 
                 (data[15 /* X16 */] <0.13074078f ? 
                    1.0f : 
                     (data[16 /* X17 */] <-0.4987139f ? 
                         (data[9 /* X10 */] <0.15215866f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.22193572f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16469187f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.1651062f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54251844f ? 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.32024863f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[27 /* X28 */] <-0.2180642f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5036521f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3509419f ? 
                         (data[25 /* X26 */] <-0.39624444f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.073329926f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (data[11 /* X12 */] <-1.0050062f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.2967332f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5608311f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15616338f ? 
                    0.0f : 
                    1.0f))) : 
         (data[23 /* X24 */] <0.11784232f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_128_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (data[11 /* X12 */] <-0.04875668f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38527182f ? 
                1.0f : 
                 (data[30 /* X31 */] <0.19352856f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16234872f ? 
            0.0f : 
             (data[15 /* X16 */] <0.10647375f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32888484f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.44023824f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[35 /* X36 */] <-0.8029321f ? 
             (data[25 /* X26 */] <-0.0045174714f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[11 /* X12 */] <-0.47793952f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2805245f ? 
                 (data[2 /* X3 */] <-0.24381875f ? 
                    0.0f : 
                    1.0f) : 
                 (data[25 /* X26 */] <-0.2664414f ? 
                    1.0f : 
                    0.0f))) : 
        0.014492754f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.22193572f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13699593f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.27571306f ? 
                    0.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1956036f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.54993474f ? 
                 (data[6 /* X7 */] <0.12623847f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3489919f ? 
                    0.0f : 
                    1.0f))) : 
         (data[21 /* X22 */] <0.12726557f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (data[11 /* X12 */] <-0.51307726f ? 
             (data[31 /* X32 */] <0.17783825f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X4 */] <-0.33162296f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.15690579f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[0 /* X1 */] <-0.034352086f ? 
            1.0f : 
             (data[18 /* X19 */] <-0.25583142f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_129_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[10 /* X11 */] <-0.23042765f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25954595f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.3469058f ? 
                     (data[6 /* X7 */] <0.08718713f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[16 /* X17 */] <-1.1759723f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29508862f ? 
                0.0f : 
                 (data[25 /* X26 */] <-0.1783608f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[14 /* X15 */] <0.13454685f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[10 /* X11 */] <-0.7649076f ? 
            1.0f : 
             (data[27 /* X28 */] <0.06586444f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2927423f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[33 /* X34 */] <-1.1931441f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (data[10 /* X11 */] <-0.7649076f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.45506918f ? 
                 (data[0 /* X1 */] <-0.41212794f ? 
                    0.0f : 
                     (data[20 /* X21 */] <0.29579225f ? 
                        1.0f : 
                         (data[1 /* X2 */] <-0.010544844f ? 
                             (data[14 /* X15 */] <0.2085152f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.39000228f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11968581f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13237084f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3215803f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.63824403f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33501622f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_130_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22305913f ? 
             (data[33 /* X34 */] <1.00195575E-5f ? 
                 (data[13 /* X14 */] <0.19360551f ? 
                    1.0f : 
                    0.0f) : 
                 (data[25 /* X26 */] <-0.2776857f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[27 /* X28 */] <-0.10012462f ? 
             (data[21 /* X22 */] <0.26629496f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.22305913f ? 
             (data[25 /* X26 */] <-0.1157772f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[27 /* X28 */] <-0.29887468f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.25077227f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[15 /* X16 */] <0.1850527f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.5967874f ? 
             (data[12 /* X13 */] <0.20845996f ? 
                 (data[26 /* X27 */] <0.061763085f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27639848f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.11836468f ? 
                        1.0f : 
                         (data[17 /* X18 */] <-0.052499596f ? 
                             (data[5 /* X6 */] <0.1416431f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.57161033f ? 
             (data[31 /* X32 */] <0.06612245f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.24518012f ? 
             (data[26 /* X27 */] <-0.101320446f ? 
                 (data[33 /* X34 */] <-0.6937444f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.7737528f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X1 */] <-0.078448f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <-0.17990662f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.26219395f ? 
                        1.0f : 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.3400024f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2750374f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.44302365f ? 
             (data[33 /* X34 */] <-0.900214f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1617472f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.69063807f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33607045f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.58345443f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_131_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30413148f ? 
             (data[33 /* X34 */] <-0.16193505f ? 
                0.0f : 
                1.0f) : 
             (data[27 /* X28 */] <-0.59404784f ? 
                 (data[31 /* X32 */] <0.18864946f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[3 /* X4 */] <0.26628867f ? 
            0.0f : 
             (data[19 /* X20 */] <-0.6858877f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.52820164f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.24013822f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X12 */] <-0.13911097f ? 
             (data[15 /* X16 */] <0.14345208f ? 
                 (data[31 /* X32 */] <0.06852494f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.16871925f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.37490737f ? 
            0.0f : 
             (data[15 /* X16 */] <0.17003025f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.12643959f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9489147f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.13056077f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6617563f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22963023f ? 
                         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.09266556f ? 
                            1.0f : 
                             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.19545284f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.6120772f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.2549231f ? 
            1.0f : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.4755918f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_132_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31090114f ? 
             (data[23 /* X24 */] <0.10028037f ? 
                0.0f : 
                 (data[33 /* X34 */] <-0.5334561f ? 
                    0.0f : 
                    1.0f)) : 
             (data[35 /* X36 */] <-0.85629874f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.7244675f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (data[3 /* X4 */] <-0.53529084f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X13 */] <0.2133228f ? 
             (data[21 /* X22 */] <0.24199857f ? 
                0.0f : 
                1.0f) : 
             (data[20 /* X21 */] <0.17657188f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.18946537f ? 
             (data[31 /* X32 */] <0.11537351f ? 
                 (data[20 /* X21 */] <0.20230089f ? 
                     (data[2 /* X3 */] <0.16661815f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[34 /* X35 */] <0.1910233f ? 
                     (data[29 /* X30 */] <0.11657967f ? 
                        1.0f : 
                        0.0f) : 
                     (data[23 /* X24 */] <0.1832118f ? 
                         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.057147063f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            1.0f) : 
        0.01923077f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.50604504f ? 
             (data[21 /* X22 */] <0.14008868f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4904788f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[33 /* X34 */] <-0.45248353f ? 
                1.0f : 
                0.0f)) : 
         (data[23 /* X24 */] <0.10271953f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_133_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[8 /* X9 */] <0.06094104f ? 
            0.0f : 
             (data[33 /* X34 */] <-0.16193505f ? 
                0.0f : 
                 (data[21 /* X22 */] <0.16168547f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.71447355f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (data[16 /* X17 */] <-0.56866544f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.108118124f ? 
                 (data[25 /* X26 */] <-0.4147877f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09051688f ? 
                     (data[31 /* X32 */] <0.13579467f ? 
                        0.0f : 
                         (data[3 /* X4 */] <0.011709776f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (data[35 /* X36 */] <-0.8029321f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.43514964f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
        0.8f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24428004f ? 
             (data[0 /* X1 */] <-0.4029363f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.03462614f ? 
                    1.0f : 
                     (data[1 /* X2 */] <-0.50627255f ? 
                        1.0f : 
                        0.0f))) : 
             (data[23 /* X24 */] <0.119793646f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (data[23 /* X24 */] <0.08223058f ? 
            1.0f : 
            0.0f) : 
         (data[5 /* X6 */] <0.11039434f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4987938f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17923287f ? 
                     (data[25 /* X26 */] <-0.18299662f ? 
                        0.0f : 
                        1.0f) : 
                     (data[27 /* X28 */] <0.030919371f ? 
                        0.0f : 
                         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3386572f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <1.078376f ? 
             (data[33 /* X34 */] <-0.795426f ? 
                 (data[25 /* X26 */] <0.14614674f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[32 /* X33 */] <0.21774684f ? 
                1.0f : 
                0.0f)) : 
         (data[33 /* X34 */] <-0.26672304f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_134_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31273213f ? 
            1.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.29541317f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.021321533f ? 
                    0.0f : 
                    1.0f))) : 
         (data[24 /* X25 */] <-0.6380845f ? 
             (data[35 /* X36 */] <-0.42936525f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.23360625f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.21416038f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.19757968f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.16142955f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.20646943f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.22156535f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.06592011f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.21776529f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X13 */] <0.2133228f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.0059235767f ? 
                1.0f : 
                0.0f) : 
             (data[22 /* X23 */] <0.12987147f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07566867f ? 
                    0.0f : 
                     (data[1 /* X2 */] <0.08173056f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
        0.022727273f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42585623f ? 
             (data[22 /* X23 */] <0.25222895f ? 
                 (data[1 /* X2 */] <-0.41287458f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4949686f ? 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25940818f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.6814615f ? 
                     (data[15 /* X16 */] <0.11480589f ? 
                         (data[30 /* X31 */] <0.20220868f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[19 /* X20 */] <0.81875455f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.32663536f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24437058f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5668099f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17984332f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.099990666f ? 
                        0.0f : 
                         (data[1 /* X2 */] <-0.05174708f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)) : 
         (data[15 /* X16 */] <0.21567537f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_135_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.17219882f ? 
             (data[16 /* X17 */] <-0.37788847f ? 
                1.0f : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46572897f ? 
                     (data[31 /* X32 */] <0.13579467f ? 
                        1.0f : 
                        0.0f) : 
                     (data[30 /* X31 */] <0.16710098f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[30 /* X31 */] <0.14448507f ? 
             (data[27 /* X28 */] <-0.113229014f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[6 /* X7 */] <0.10119499f ? 
             (data[7 /* X8 */] <0.06574663f ? 
                0.0f : 
                1.0f) : 
             (data[14 /* X15 */] <0.19913873f ? 
                 (data[26 /* X27 */] <-0.21525551f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.08891414f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.16462456f ? 
                     (data[34 /* X35 */] <-0.6511953f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[35 /* X36 */] <-0.7038225f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
        0.85714287f : 
         (data[22 /* X23 */] <0.12503248f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.2483227f ? 
                 (data[12 /* X13 */] <0.20707056f ? 
                     (data[35 /* X36 */] <0.12209053f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2561167f ? 
                        0.0f : 
                         (data[4 /* X5 */] <0.15853798f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3279524f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.2781381f ? 
             (data[27 /* X28 */] <-0.04770702f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5036521f ? 
                     (data[33 /* X34 */] <-0.3810372f ? 
                         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2799224f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.21830833f ? 
                                1.0f : 
                                 (data[8 /* X9 */] <-0.16822916f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (data[33 /* X34 */] <-0.900214f ? 
             (data[7 /* X8 */] <0.107628815f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X11 */] <0.12913157f ? 
             (data[19 /* X20 */] <0.5540173f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_136_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0916398f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.016396878f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.12618472f ? 
                    1.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.19059579f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.13432048f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.65045583f ? 
                    1.0f : 
                    0.0f))) : 
         (data[24 /* X25 */] <-0.7386718f ? 
            1.0f : 
             (data[15 /* X16 */] <0.09376245f ? 
                 (data[32 /* X33 */] <-0.058413472f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[19 /* X20 */] <-1.2660577f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15501718f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.004936895f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25696954f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5030102f ? 
                0.0f : 
                 (data[32 /* X33 */] <-0.39920706f ? 
                     (data[15 /* X16 */] <0.31101012f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20127656f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.26316664f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23928234f ? 
                 (data[6 /* X7 */] <0.13925558f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.010055551f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[25 /* X26 */] <0.03720493f ? 
                 (data[31 /* X32 */] <0.15020962f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.62061733f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X10 */] <0.31174955f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22665659f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_137_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.5755401f ? 
             (data[32 /* X33 */] <-0.27875414f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.16773053f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.21104826f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.66486394f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.7410439f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <0.74305207f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.94638604f ? 
                        0.0f : 
                         (data[6 /* X7 */] <0.10255728f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[31 /* X32 */] <0.17903951f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[20 /* X21 */] <0.27780998f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[18 /* X19 */] <0.07575674f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.314848f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.008769216f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.3869567f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.7332137f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.33784172f ? 
             (data[25 /* X26 */] <-0.062465247f ? 
                 (data[3 /* X4 */] <-0.5361576f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.248267f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21297787f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.14813733f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.010692414f ? 
                 (data[33 /* X34 */] <-0.3238801f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[20 /* X21 */] <0.2151654f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[18 /* X19 */] <0.08734061f ? 
             (data[32 /* X33 */] <-0.5549145f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.17696369f ? 
                 (data[19 /* X20 */] <-0.004936895f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.58345443f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_138_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.62749636f ? 
         (data[10 /* X11 */] <-0.24014547f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17464586f ? 
             (data[35 /* X36 */] <-0.6542677f ? 
                 (data[0 /* X1 */] <0.025393486f ? 
                    0.0f : 
                    1.0f) : 
                 (data[27 /* X28 */] <-0.62430054f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.49646097f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18348946f ? 
                        0.0f : 
                         (data[32 /* X33 */] <0.023847047f ? 
                             (Double.isNaN(data[8]) || data[8 /* X9 */] <1.1396466f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2940517f ? 
             (data[15 /* X16 */] <0.16078566f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.62430054f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.49646097f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13274702f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.0068353824f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[6 /* X7 */] <0.13803522f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.21890761f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24546371f ? 
         (data[10 /* X11 */] <-0.62885815f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.16193505f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.071806565f ? 
                1.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.59525204f ? 
                     (data[32 /* X33 */] <-0.37570405f ? 
                         (data[6 /* X7 */] <0.14576414f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (data[17 /* X18 */] <-0.06650672f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11118345f ? 
        0.0f : 
         (data[29 /* X30 */] <0.11806224f ? 
             (data[25 /* X26 */] <-0.21776529f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.40215647f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.24534217f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.40486205f ? 
                     (data[2 /* X3 */] <-0.21793534f ? 
                         (data[4 /* X5 */] <0.11117968f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[17 /* X18 */] <0.01794045f ? 
                    1.0f : 
                     (data[25 /* X26 */] <0.02097955f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X2 */] <0.18657877f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.37531626f ? 
             (data[11 /* X12 */] <-1.007516f ? 
                 (data[17 /* X18 */] <0.5276943f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[15 /* X16 */] <0.17580812f ? 
                0.0f : 
                1.0f)) : 
         (data[25 /* X26 */] <0.04415866f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_139_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[34 /* X35 */] <-0.8313365f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.15782626f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18686827f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.007344303f ? 
                    1.0f : 
                     (data[18 /* X19 */] <-0.21818386f ? 
                         (data[26 /* X27 */] <-0.1705751f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
        0.01923077f : 
         (data[28 /* X29 */] <0.34088957f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.38019028f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X12 */] <-0.15918969f ? 
                0.0f : 
                 (data[9 /* X10 */] <-0.14517124f ? 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.21367651f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
        0.8f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.24134956f ? 
            0.0f : 
             (data[15 /* X16 */] <0.205853f ? 
                 (data[25 /* X26 */] <-0.104726374f ? 
                    1.0f : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.34194094f ? 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.061106853f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.08345016f ? 
        0.85714287f : 
         (data[29 /* X30 */] <0.16165003f ? 
             (data[26 /* X27 */] <-0.21302149f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.11620625f ? 
                     (data[25 /* X26 */] <-0.2664414f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17615353f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X12 */] <-0.43527222f ? 
                 (data[23 /* X24 */] <0.18105277f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <1.0518079f ? 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <0.12580566f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.39694652f ? 
                             (data[27 /* X28 */] <0.009952333f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[32 /* X33 */] <-0.164177f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_02_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[33 /* X34 */] <-0.716835f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.100372456f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22833844f ? 
            0.0f : 
             (data[11 /* X12 */] <0.058720417f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_140_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.62749636f ? 
        0.75f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.04875668f ? 
            0.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.39582786f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15712593f ? 
                     (data[15 /* X16 */] <0.10523227f ? 
                        1.0f : 
                         (data[13 /* X14 */] <0.16703248f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[11 /* X12 */] <-0.011109065f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X2 */] <-0.15737723f ? 
        0.0f : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07966668f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.1803657f ? 
                 (data[23 /* X24 */] <0.124671966f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15078016f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (data[2 /* X3 */] <-0.0043972237f ? 
            1.0f : 
             (data[23 /* X24 */] <0.13345294f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <-0.25672007f ? 
             (data[25 /* X26 */] <-0.29193842f ? 
                1.0f : 
                 (data[7 /* X8 */] <0.040919647f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.13998535f ? 
                         (data[13 /* X14 */] <0.25403786f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.43116495f ? 
        0.0f : 
         (data[19 /* X20 */] <-0.16836508f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.6169401f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19250497f ? 
                 (data[2 /* X3 */] <-0.044146743f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10335027f ? 
                         (data[3 /* X4 */] <-0.62129724f ? 
                            1.0f : 
                             (data[17 /* X18 */] <-0.25780553f ? 
                                1.0f : 
                                 (data[2 /* X3 */] <-0.018078452f ? 
                                     (data[6 /* X7 */] <0.17120188f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.015637346f ? 
        0.0f : 
         (data[19 /* X20 */] <0.049539167f ? 
            0.0f : 
             (data[12 /* X13 */] <0.33767304f ? 
                 (data[20 /* X21 */] <0.22467396f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_141_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[10 /* X11 */] <-0.23042765f ? 
            0.0f : 
             (data[21 /* X22 */] <0.15763608f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.05411529f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.6511953f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[24 /* X25 */] <-0.6724959f ? 
            1.0f : 
             (data[13 /* X14 */] <0.16099045f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.0263535f ? 
             (data[35 /* X36 */] <-0.68095106f ? 
                0.0f : 
                1.0f) : 
             (data[13 /* X14 */] <0.14890637f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.098294646f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X7 */] <0.10630602f ? 
             (data[31 /* X32 */] <0.13819717f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20635533f ? 
            0.0f : 
             (data[21 /* X22 */] <0.10026958f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X11 */] <-0.7908218f ? 
             (data[22 /* X23 */] <0.29785377f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.071806565f ? 
                 (data[5 /* X6 */] <0.19404003f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X8 */] <0.034017704f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[29 /* X30 */] <0.15186502f ? 
             (data[30 /* X31 */] <0.16636603f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.76402897f ? 
             (data[32 /* X33 */] <-0.4550267f ? 
                1.0f : 
                 (data[33 /* X34 */] <-0.371511f ? 
                     (data[31 /* X32 */] <0.10000572f ? 
                         (data[9 /* X10 */] <-0.22662468f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.45511648f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[24 /* X25 */] <-0.06367797f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7478326f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_142_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[8 /* X9 */] <0.29205748f ? 
             (data[24 /* X25 */] <-0.7413188f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.5623062f ? 
                    1.0f : 
                    0.0f) : 
                 (data[17 /* X18 */] <-0.1048918f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.37504807f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2651676f ? 
                    1.0f : 
                     (data[6 /* X7 */] <0.100204244f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[9 /* X10 */] <-0.120638475f ? 
            0.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1160139f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.04089874f ? 
                    1.0f : 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.18725358f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[5 /* X6 */] <0.1122356f ? 
             (data[7 /* X8 */] <0.061939158f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.17903951f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.13884939f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[9 /* X10 */] <-0.09148872f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.011405924f ? 
                 (data[17 /* X18 */] <-0.19087437f ? 
                     (data[13 /* X14 */] <0.19441018f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.6430803f ? 
            0.0f : 
             (data[18 /* X19 */] <-0.1023452f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[9 /* X10 */] <-0.34411994f ? 
            1.0f : 
            0.0f) : 
         (data[22 /* X23 */] <0.2518833f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20409451f ? 
                 (data[20 /* X21 */] <0.19360739f ? 
                     (data[10 /* X11 */] <-8.2293805E-4f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[19 /* X20 */] <0.22747122f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.18145633f ? 
                 (data[6 /* X7 */] <0.13925558f ? 
                    0.0f : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.0916398f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21162806f ? 
             (data[25 /* X26 */] <-0.0740548f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.12426149f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.7858513f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_143_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10230868f ? 
             (data[16 /* X17 */] <-0.30793688f ? 
                1.0f : 
                 (data[11 /* X12 */] <0.04536236f ? 
                    1.0f : 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1785975f ? 
                         (data[34 /* X35 */] <-0.9506508f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[23 /* X24 */] <0.17491867f ? 
             (data[33 /* X34 */] <-0.26672304f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12485376f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.25715175f ? 
                    1.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21567747f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.100814275f ? 
                    0.0f : 
                    1.0f))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[27 /* X28 */] <0.16633148f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.10685346f ? 
                0.0f : 
                1.0f)) : 
         (data[8 /* X9 */] <-0.23342831f ? 
             (data[17 /* X18 */] <-0.049617287f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.1739381f ? 
                0.0f : 
                 (data[34 /* X35 */] <-0.0515532f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.24807265f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33715945f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14474718f ? 
         (data[23 /* X24 */] <0.114915326f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26467207f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X10 */] <-0.30582663f ? 
                 (data[34 /* X35 */] <0.1910233f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.30081302f ? 
             (data[25 /* X26 */] <-0.1157772f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.22574331f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2924726f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.24390675f ? 
                     (data[20 /* X21 */] <0.18663976f ? 
                         (data[13 /* X14 */] <0.23828675f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[23 /* X24 */] <0.25541094f ? 
            1.0f : 
             (data[11 /* X12 */] <-1.4141691f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <1.078376f ? 
            0.0f : 
             (data[26 /* X27 */] <0.28069714f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_144_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[1 /* X2 */] <0.011008535f ? 
             (data[4 /* X5 */] <0.10233174f ? 
                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9294523f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14189605f ? 
                 (data[32 /* X33 */] <0.059101555f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[5 /* X6 */] <0.105396636f ? 
             (data[12 /* X13 */] <0.3543457f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[1 /* X2 */] <0.0011299027f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15099539f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.11986366f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.24564715f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.071806565f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.26436153f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.40856543f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25676847f ? 
                 (data[3 /* X4 */] <-0.24974963f ? 
                     (data[1 /* X2 */] <-0.50627255f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.34061456f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[29 /* X30 */] <0.13733576f ? 
             (data[29 /* X30 */] <0.12728544f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2361259f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2519281f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.55223507f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29710624f ? 
                     (data[23 /* X24 */] <0.104284f ? 
                        1.0f : 
                        0.0f) : 
                     (data[33 /* X34 */] <-0.5334561f ? 
                        0.0f : 
                        1.0f))) : 
             (data[12 /* X13 */] <0.18206158f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (data[33 /* X34 */] <-0.900214f ? 
             (data[0 /* X1 */] <0.09524985f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.4043117f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.25102046f ? 
            1.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.38301823f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_145_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (data[0 /* X1 */] <0.11455226f ? 
             (data[4 /* X5 */] <0.11801672f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25740054f ? 
                    1.0f : 
                     (data[24 /* X25 */] <-0.64648235f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.46910992f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.12150133f ? 
                    0.0f : 
                    1.0f))) : 
         (data[14 /* X15 */] <0.23143467f ? 
             (data[15 /* X16 */] <0.13998535f ? 
                 (data[23 /* X24 */] <0.08837048f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.40601435f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <0.11094088f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.56922054f ? 
             (data[14 /* X15 */] <0.13454685f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[22 /* X23 */] <0.19554356f ? 
             (data[7 /* X8 */] <0.05686253f ? 
                0.0f : 
                1.0f) : 
             (data[16 /* X17 */] <-0.25706303f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2185643f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.014492754f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.15200354f ? 
             (data[35 /* X36 */] <0.096677825f ? 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.21890761f ? 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.25234348f ? 
                         (data[1 /* X2 */] <-0.28062433f ? 
                             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.096572846f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33931807f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.37418273f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11968581f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.2184598f ? 
            0.0f : 
             (data[7 /* X8 */] <0.08006183f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X12 */] <-0.5858627f ? 
             (data[32 /* X33 */] <-0.43446156f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_146_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.35401517f ? 
             (data[3 /* X4 */] <-0.33486718f ? 
                0.0f : 
                1.0f) : 
             (data[14 /* X15 */] <0.14100604f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.14577103f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14157876f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[7 /* X8 */] <0.115243755f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.28310817f ? 
                 (data[13 /* X14 */] <0.21429688f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17321055f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.4510316f ? 
            0.0f : 
             (data[22 /* X23 */] <0.29508862f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
        0.017857144f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.038173925f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.09997812f ? 
                 (data[25 /* X26 */] <-0.38697278f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.49393553f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <-0.051494893f ? 
                     (data[16 /* X17 */] <-0.32065535f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14751326f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[23 /* X24 */] <0.25541094f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.46396545f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X4 */] <-0.32543525f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.39781842f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_147_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18123992f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26628867f ? 
                 (data[27 /* X28 */] <-0.07391582f ? 
                    1.0f : 
                    0.0f) : 
                 (data[13 /* X14 */] <0.11386254f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14982828f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12964186f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[7 /* X8 */] <0.07907278f ? 
             (data[24 /* X25 */] <-0.30971786f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.42695618f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <0.47329026f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.7631756f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4987938f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1910949f ? 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.16193505f ? 
                     (data[2 /* X3 */] <-0.13658749f ? 
                        1.0f : 
                         (data[29 /* X30 */] <0.10906092f ? 
                             (data[7 /* X8 */] <0.096080236f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.33430195f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[2 /* X3 */] <-0.3492012f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[9 /* X10 */] <0.29474553f ? 
             (data[30 /* X31 */] <0.15353926f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1857505f ? 
                1.0f : 
                0.0f)) : 
        0.011904762f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_148_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13193345f ? 
         (data[1 /* X2 */] <-0.13447677f ? 
             (data[20 /* X21 */] <0.23921645f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <0.099072926f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18240021f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.4935906f ? 
                    0.0f : 
                    1.0f))) : 
         (data[34 /* X35 */] <-0.80092305f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[1 /* X2 */] <-0.11292339f ? 
            0.0f : 
             (data[34 /* X35 */] <-1.0395516f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.2448097f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.25672007f ? 
         (data[14 /* X15 */] <0.27858675f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.28347185f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[21 /* X22 */] <0.12760302f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.22851221f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[32 /* X33 */] <-0.45502383f ? 
            1.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.07361714f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5755879f ? 
                     (data[23 /* X24 */] <0.08564541f ? 
                        1.0f : 
                         (data[21 /* X22 */] <0.14548787f ? 
                             (data[3 /* X4 */] <-0.08186517f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[27 /* X28 */] <-0.18748727f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1851806f ? 
             (data[20 /* X21 */] <0.21684338f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.015637346f ? 
        0.0f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32638475f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.40008956f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_149_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[11 /* X12 */] <-0.06381573f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13808858f ? 
                 (data[3 /* X4 */] <0.2731692f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[27 /* X28 */] <-0.7203483f ? 
            0.0f : 
             (data[3 /* X4 */] <0.28004968f ? 
                0.0f : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.7120222f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5353379f ? 
                1.0f : 
                0.0f) : 
             (data[14 /* X15 */] <0.15779991f ? 
                1.0f : 
                 (data[24 /* X25 */] <-0.50837976f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25940818f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24842323f ? 
         (data[9 /* X10 */] <-0.37812796f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.083514825f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X9 */] <-0.25289077f ? 
                 (data[17 /* X18 */] <-0.049617287f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.49050573f ? 
                    0.0f : 
                     (data[24 /* X25 */] <-0.043894026f ? 
                        1.0f : 
                        0.0f)))) : 
        0.75f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3141787f ? 
            0.0f : 
             (data[7 /* X8 */] <0.060035422f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.35588065f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.087701894f ? 
                 (data[15 /* X16 */] <0.12611848f ? 
                     (data[3 /* X4 */] <-0.24974963f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.22061254f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.20159335f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.47661185f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.28541064f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
        0.0f : 
         (data[9 /* X10 */] <0.032397743f ? 
            0.0f : 
             (data[10 /* X11 */] <0.119413756f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.18148302f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_150_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (data[34 /* X35 */] <-0.4710541f ? 
            1.0f : 
             (data[35 /* X36 */] <-0.10535321f ? 
                 (data[26 /* X27 */] <-0.1080225f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.24941866f ? 
             (data[24 /* X25 */] <-0.8630824f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24167575f ? 
                 (data[31 /* X32 */] <0.14780712f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.13108413f ? 
            0.0f : 
             (data[22 /* X23 */] <0.26951107f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12486136f ? 
             (data[32 /* X33 */] <0.17661658f ? 
                0.0f : 
                 (data[26 /* X27 */] <-0.13518813f ? 
                    0.0f : 
                     (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.5279071f ? 
                        1.0f : 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.3084005f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.25528014f ? 
                0.0f : 
                 (data[31 /* X32 */] <0.36344472f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
        0.8f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.15432148f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.45577103f ? 
                 (data[23 /* X24 */] <0.12272064f ? 
                     (data[15 /* X16 */] <0.13074078f ? 
                         (data[31 /* X32 */] <0.06852494f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (data[31 /* X32 */] <0.08354051f ? 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29301476f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.4755918f ? 
                 (data[16 /* X17 */] <-0.04084907f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.2565482f ? 
                    0.0f : 
                     (data[29 /* X30 */] <0.16402216f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15561137f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.15552527f ? 
                1.0f : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43959212f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.17663701f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1851063f ? 
         (data[33 /* X34 */] <-0.63824403f ? 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.27581626f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2185643f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[27 /* X28 */] <0.33668867f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.49615696f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14780712f ? 
                    1.0f : 
                     (data[31 /* X32 */] <0.17640437f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_02_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_151_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[11 /* X12 */] <-0.06381573f ? 
            0.0f : 
             (data[0 /* X1 */] <0.1136331f ? 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.23789386f ? 
                     (data[32 /* X33 */] <0.39989513f ? 
                         (data[11 /* X12 */] <0.25140625f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[19 /* X20 */] <-0.5061167f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2844075f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6581993f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2422056f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17661658f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.07612237f ? 
                    0.0f : 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.14273673f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.13203655f ? 
                    1.0f : 
                    0.0f))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13681488f ? 
        0.0f : 
         (data[21 /* X22 */] <0.17653327f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.07387255f ? 
                0.0f : 
                 (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.19051358f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.13326077f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.25843212f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.22191694f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* X2 */] <-0.19734079f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (data[23 /* X24 */] <0.08369408f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.07396784f ? 
             (data[24 /* X25 */] <-0.65019035f ? 
                0.0f : 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.57068557f ? 
                     (data[19 /* X20 */] <-0.1792603f ? 
                         (data[0 /* X1 */] <0.070043616f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (data[10 /* X11 */] <-0.1202924f ? 
                 (data[23 /* X24 */] <0.14028259f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
        0.0f : 
         (data[24 /* X25 */] <0.09514411f ? 
            0.0f : 
             (data[0 /* X1 */] <-0.026079623f ? 
                1.0f : 
                 (data[29 /* X30 */] <0.15571973f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_152_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[16 /* X17 */] <-0.31429613f ? 
            1.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29237008f ? 
                 (data[24 /* X25 */] <-0.64379746f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.23073818f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2627275f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[16 /* X17 */] <-0.31429613f ? 
            0.0f : 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29237008f ? 
                 (data[24 /* X25 */] <-0.64342576f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.17808552f ? 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.40359682f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.49580255f ? 
                    0.0f : 
                    1.0f)) : 
             (data[21 /* X22 */] <0.17720817f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (data[16 /* X17 */] <-0.0026936699f ? 
            1.0f : 
            0.0f) : 
         (data[25 /* X26 */] <-0.43912578f ? 
            1.0f : 
             (data[1 /* X2 */] <-0.44879687f ? 
                1.0f : 
                 (data[23 /* X24 */] <0.1344286f ? 
                     (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.046043605f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.16278863f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
        0.03508772f : 
         (data[25 /* X26 */] <-0.21892424f ? 
            0.0f : 
             (data[4 /* X5 */] <0.1240494f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.6139495f ? 
                    1.0f : 
                    0.0f) : 
                 (data[29 /* X30 */] <0.18581332f ? 
                    0.0f : 
                     (Double.isNaN(data[26]) || data[26 /* X27 */] <0.06346293f ? 
                         (data[20 /* X21 */] <0.20926335f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.44302365f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.35286742f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.13199848f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[25 /* X26 */] <0.026774328f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.109022275f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_153_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (data[13 /* X14 */] <0.17669974f ? 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.13085024f ? 
                 (data[0 /* X1 */] <-0.114319235f ? 
                    0.0f : 
                    1.0f) : 
                 (data[24 /* X25 */] <-0.24367632f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6389398f ? 
                 (data[3 /* X4 */] <-0.19070087f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.057484727f ? 
                         (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.13837285f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
        0.8965517f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_02_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[7 /* X8 */] <0.103504054f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23589788f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.014492754f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.16193505f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.21942587f ? 
                 (data[27 /* X28 */] <0.45960987f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.49321908f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.065836646f ? 
                            0.0f : 
                             (data[30 /* X31 */] <0.16137774f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[32 /* X33 */] <-0.45796457f ? 
                    0.0f : 
                    1.0f)) : 
             (data[16 /* X17 */] <-0.56866544f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.33047265f ? 
                    1.0f : 
                    0.0f))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1851063f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5498059f ? 
            0.0f : 
             (data[28 /* X29 */] <0.29637223f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X10 */] <0.28988725f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.4001955f ? 
                1.0f : 
                 (data[24 /* X25 */] <0.31749502f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_154_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12643959f ? 
             (data[3 /* X4 */] <0.31445226f ? 
                 (data[32 /* X33 */] <-0.274578f ? 
                    0.0f : 
                    1.0f) : 
                 (data[14 /* X15 */] <0.14746521f ? 
                     (data[25 /* X26 */] <-0.14764932f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1775392f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X6 */] <0.07172794f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[35 /* X36 */] <-0.6790451f ? 
             (data[18 /* X19 */] <-0.1979121f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.18532778f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.016107026f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X6 */] <0.10408145f ? 
             (data[22 /* X23 */] <0.24808124f ? 
                0.0f : 
                 (data[8 /* X9 */] <-0.11949829f ? 
                    0.0f : 
                    1.0f)) : 
             (data[34 /* X35 */] <-0.7120222f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.24842323f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23796716f ? 
             (data[25 /* X26 */] <-0.43796682f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5405237f ? 
                    0.0f : 
                     (data[31 /* X32 */] <0.1040635f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.20564468f ? 
                1.0f : 
                0.0f)) : 
         (data[31 /* X32 */] <0.0913486f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[32 /* X33 */] <-0.01875215f ? 
             (data[1 /* X2 */] <-0.13986512f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23796716f ? 
             (data[27 /* X28 */] <-0.104492754f ? 
                0.0f : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2508464f ? 
                    1.0f : 
                     (data[10 /* X11 */] <0.21659192f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (data[33 /* X34 */] <-0.900214f ? 
             (data[3 /* X4 */] <-0.4080014f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[25 /* X26 */] <0.026774328f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_155_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.16193505f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29370606f ? 
                 (data[0 /* X1 */] <0.10995645f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23943296f ? 
                        0.0f : 
                         (data[20 /* X21 */] <0.29026487f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.337889f ? 
                         (data[22 /* X23 */] <0.20006774f ? 
                            0.0f : 
                            1.0f) : 
                         (data[21 /* X22 */] <0.19408067f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[6 /* X7 */] <0.093695685f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[19 /* X20 */] <-1.3777337f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09107317f ? 
             (data[24 /* X25 */] <0.09514411f ? 
                1.0f : 
                 (data[26 /* X27 */] <-0.17504314f ? 
                    1.0f : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.4328822f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.014492754f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2361259f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.330946f ? 
                 (data[26 /* X27 */] <-0.17951117f ? 
                    0.0f : 
                     (data[0 /* X1 */] <-0.3975262f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.23470332f ? 
                     (data[1 /* X2 */] <0.025377452f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[29 /* X30 */] <0.11628315f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (data[33 /* X34 */] <-0.76922905f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.19979809f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X6 */] <0.18904233f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.45847243f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_156_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[33 /* X34 */] <-0.1595535f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                1.0f : 
                 (data[35 /* X36 */] <-0.68095106f ? 
                    1.0f : 
                    0.0f))) : 
         (data[27 /* X28 */] <-0.113229014f ? 
             (data[32 /* X33 */] <0.27650437f ? 
                 (data[29 /* X30 */] <0.14267305f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[17 /* X18 */] <-0.6284643f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12617654f ? 
                1.0f : 
                 (data[4 /* X5 */] <0.11198404f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.058829706f ? 
             (data[3 /* X4 */] <-0.36357373f ? 
                 (data[10 /* X11 */] <-0.78951806f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.014492754f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10648303f ? 
             (data[3 /* X4 */] <-0.66605747f ? 
                1.0f : 
                 (data[9 /* X10 */] <-0.30282444f ? 
                     (data[10 /* X11 */] <-0.53491926f ? 
                        0.0f : 
                         (data[14 /* X15 */] <0.24564488f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19393149f ? 
                        0.0f : 
                         (data[9 /* X10 */] <0.38803357f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[5 /* X6 */] <0.10408145f ? 
                0.0f : 
                 (data[26 /* X27 */] <-0.1392988f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X10 */] <-0.43885663f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.21362695f ? 
         (data[33 /* X34 */] <-0.66444105f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21027827f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.26006225f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_157_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13189189f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11179478f ? 
                0.0f : 
                 (data[13 /* X14 */] <0.14769796f ? 
                    0.0f : 
                     (data[25 /* X26 */] <0.04596666f ? 
                        0.0f : 
                        1.0f))) : 
             (data[26 /* X27 */] <-0.22865963f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.44784522f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.5623062f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13189189f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6564389f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.19603427f ? 
                    0.0f : 
                    1.0f)) : 
             (data[23 /* X24 */] <0.18126048f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.15898933f ? 
            0.0f : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.13623758f ? 
                 (data[0 /* X1 */] <0.102603145f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14174527f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[17 /* X18 */] <-0.1071949f ? 
         (data[25 /* X26 */] <-0.2432623f ? 
            1.0f : 
             (data[28 /* X29 */] <0.1765774f ? 
                1.0f : 
                 (data[16 /* X17 */] <-0.5495878f ? 
                     (data[7 /* X8 */] <0.04163265f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[23 /* X24 */] <0.08662107f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.08347884f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[4 /* X5 */] <0.07297268f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.36290893f ? 
             (data[29 /* X30 */] <0.097383566f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.17505264f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <0.41620284f ? 
                         (data[8 /* X9 */] <-0.28954682f ? 
                            0.0f : 
                             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.12296764f ? 
                                1.0f : 
                                 (data[32 /* X33 */] <-0.36680037f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1554184f ? 
            0.0f : 
             (data[29 /* X30 */] <0.14860335f ? 
                1.0f : 
                0.0f)) : 
         (data[32 /* X33 */] <-0.4755918f ? 
             (data[23 /* X24 */] <0.21152958f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_158_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05228429f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
                 (data[31 /* X32 */] <0.06371996f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.05644329f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1396417f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[34 /* X35 */] <-1.0114777f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[19 /* X20 */] <0.01685353f ? 
             (data[4 /* X5 */] <0.10233174f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.29324302f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.32672718f ? 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2434014f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.079707354f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.22720656f ? 
                        0.0f : 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22823627f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[13 /* X14 */] <0.22998896f ? 
                         (data[0 /* X1 */] <-0.21922258f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.20298328f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[10 /* X11 */] <0.17772065f ? 
            0.0f : 
            1.0f) : 
        0.011904762f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_02_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_159_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[31 /* X32 */] <0.12618472f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.11922325f ? 
                 (data[34 /* X35 */] <-0.9506508f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13673657f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[31 /* X32 */] <0.12618472f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.828997f ? 
                0.0f : 
                 (data[32 /* X33 */] <0.08260456f ? 
                    0.0f : 
                     (data[16 /* X17 */] <-0.82939404f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.25596792f ? 
            0.0f : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.32537755f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[27 /* X28 */] <0.18380402f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.0078263795f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X2 */] <-0.2584087f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.29973283f ? 
            0.0f : 
             (data[11 /* X12 */] <0.24589474f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.3141787f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.2909129f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X3 */] <-0.09961119f ? 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.14660588f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X12 */] <-0.51558715f ? 
                 (data[0 /* X1 */] <-0.32021168f ? 
                    1.0f : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.18574597f ? 
                     (data[9 /* X10 */] <-0.46930772f ? 
                        0.0f : 
                         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.21543531f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[31 /* X32 */] <0.16462456f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48579982f ? 
                0.0f : 
                1.0f)) : 
        0.011904762f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_160_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[3 /* X4 */] <0.30929187f ? 
            1.0f : 
             (data[12 /* X13 */] <0.2876551f ? 
                 (data[7 /* X8 */] <0.13174279f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[28]) || data[28 /* X29 */] <0.344001f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.30069122f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.16664462f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X2 */] <-0.17758352f ? 
            0.0f : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.44910753f ? 
                 (data[25 /* X26 */] <-0.2432623f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.018102122f ? 
                         (data[30 /* X31 */] <0.17391117f ? 
                            1.0f : 
                             (data[11 /* X12 */] <0.01549525f ? 
                                0.0f : 
                                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.15972503f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.071806565f ? 
         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.13484962f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X10 */] <-0.38298628f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22695123f ? 
                 (data[12 /* X13 */] <0.3032029f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.25085595f ? 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.27337238f ? 
                    0.0f : 
                     (data[5 /* X6 */] <0.13403477f ? 
                         (data[26 /* X27 */] <0.1007115f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[19 /* X20 */] <0.34370992f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (data[2 /* X3 */] <-0.3233178f ? 
             (data[7 /* X8 */] <0.05876627f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.4987938f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2361259f ? 
                 (data[25 /* X26 */] <-0.30352798f ? 
                    0.0f : 
                     (data[7 /* X8 */] <0.03655602f ? 
                        0.0f : 
                         (data[11 /* X12 */] <-0.57080364f ? 
                             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.18216687f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (data[13 /* X14 */] <0.23953696f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.51307726f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.24760564f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.18868147f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.023255814f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_161_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.014600764f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.16006f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.23158774f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X13 */] <0.290149f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.5760104f ? 
                    0.0f : 
                     (data[11 /* X12 */] <-0.0022627122f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[35 /* X36 */] <-0.8029321f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[35 /* X36 */] <0.096677825f ? 
             (data[3 /* X4 */] <-0.36357373f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.16573487f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X10 */] <-0.511731f ? 
                1.0f : 
                0.0f)) : 
        0.014492754f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.16193505f ? 
             (data[3 /* X4 */] <-0.63797104f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.22648478f ? 
                     (data[2 /* X3 */] <0.10006082f ? 
                        1.0f : 
                         (data[25 /* X26 */] <-0.0068353824f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[2 /* X3 */] <-0.13658749f ? 
                         (data[16 /* X17 */] <0.315268f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[27 /* X28 */] <-0.04770702f ? 
                0.0f : 
                1.0f)) : 
         (data[28 /* X29 */] <0.19154105f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[33 /* X34 */] <-0.63824403f ? 
            1.0f : 
             (data[30 /* X31 */] <0.15655732f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.12551741f ? 
            0.0f : 
             (data[34 /* X35 */] <0.18795271f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_162_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (data[34 /* X35 */] <-1.0114777f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26126614f ? 
                 (data[17 /* X18 */] <-0.19087437f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.37139115f ? 
                     (Double.isNaN(data[6]) || data[6 /* X7 */] <0.17505264f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[34 /* X35 */] <-1.0114777f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
             (data[23 /* X24 */] <0.112964f ? 
                1.0f : 
                 (data[27 /* X28 */] <0.19690841f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.014492754f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (data[34 /* X35 */] <-0.3517398f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24296486f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.17328823f ? 
                     (data[25 /* X26 */] <-0.22935484f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <0.18926886f ? 
                         (data[12 /* X13 */] <0.36699137f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.27918956f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.3288173f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[33 /* X34 */] <-0.98118657f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11968581f ? 
        0.014492754f : 
         (data[33 /* X34 */] <-0.63824403f ? 
             (data[12 /* X13 */] <0.24736282f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_163_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[16 /* X17 */] <-0.38106808f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.29910764f ? 
                1.0f : 
                 (data[3 /* X4 */] <0.3419743f ? 
                    1.0f : 
                    0.0f)) : 
             (data[35 /* X36 */] <-0.6542677f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.26467207f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X12 */] <-0.007344303f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.33148062f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[1 /* X2 */] <-0.14615151f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.20649832f ? 
                 (data[34 /* X35 */] <-1.0442307f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14978886f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[10 /* X11 */] <-0.59322613f ? 
            1.0f : 
             (data[23 /* X24 */] <0.12564763f ? 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.050415307f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.4056839f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.39781842f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5231836f ? 
             (data[34 /* X35 */] <-0.3517398f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.35911992f ? 
                     (data[3 /* X4 */] <-0.3735988f ? 
                        1.0f : 
                         (data[23 /* X24 */] <0.087329894f ? 
                            1.0f : 
                             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.44990876f ? 
                                 (data[24 /* X25 */] <-0.39614552f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.4343309f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42650217f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1851806f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[10 /* X11 */] <0.33320573f ? 
             (data[23 /* X24 */] <0.1832118f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4281478f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_164_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2957067f ? 
         (data[19 /* X20 */] <-0.6722687f ? 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.3335049f ? 
                 (data[30 /* X31 */] <0.16485699f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X3 */] <-0.36584052f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2612332f ? 
             (data[22 /* X23 */] <0.16512702f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.6941563f ? 
                     (data[24 /* X25 */] <-0.83661205f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.25343364f ? 
             (data[34 /* X35 */] <-0.828997f ? 
                 (data[24 /* X25 */] <-0.4342628f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X2 */] <-0.19295724f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
        0.8f : 
         (data[23 /* X24 */] <0.12564763f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.18014748f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.20827468f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[19 /* X20 */] <-0.16564128f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.45514083f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X3 */] <0.016864147f ? 
                1.0f : 
                 (data[3 /* X4 */] <-0.59377515f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23507376f ? 
                         (data[11 /* X12 */] <-0.73143345f ? 
                            0.0f : 
                             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5525517f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
        0.039215688f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.7094146f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21264042f ? 
             (data[24 /* X25 */] <0.010439004f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_165_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10012462f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3419743f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[35 /* X36 */] <-0.8029321f ? 
            1.0f : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.6408129f ? 
                0.0f : 
                 (data[16 /* X17 */] <1.3053336f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
         (data[27 /* X28 */] <-0.5019928f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1280178f ? 
             (data[3 /* X4 */] <0.2628484f ? 
                0.0f : 
                 (data[17 /* X18 */] <-0.6245306f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.12818705f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.6791193f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.071806565f ? 
        0.75f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24559523f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.36446673f ? 
                 (data[25 /* X26 */] <-0.4286952f ? 
                    1.0f : 
                     (data[3 /* X4 */] <-0.27401444f ? 
                         (data[16 /* X17 */] <-0.5499156f ? 
                             (data[24 /* X25 */] <0.28149533f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[26 /* X27 */] <-0.043235898f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[23 /* X24 */] <0.08345016f ? 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <3.440418E-4f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
             (data[9 /* X10 */] <-0.7789371f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.11391871f ? 
                 (data[25 /* X26 */] <0.0024362619f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.5012787f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.31167424f ? 
                     (data[24 /* X25 */] <0.13749667f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[15]) || data[15 /* X16 */] <0.24167575f ? 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
            0.0f : 
             (data[24 /* X25 */] <-0.296617f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.31694654f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.0024317387f ? 
            0.0f : 
             (data[21 /* X22 */] <0.15088707f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.44928443f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_166_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16019367f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31445226f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[15 /* X16 */] <0.16136345f ? 
            0.0f : 
             (data[3 /* X4 */] <0.29725096f ? 
                0.0f : 
                1.0f)) : 
        0.01923077f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[30 /* X31 */] <0.18749245f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.41212794f ? 
            1.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35538176f ? 
                0.0f : 
                 (data[28 /* X29 */] <0.33179465f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14474718f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.034898728f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.30823398f ? 
                0.0f : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.1792603f ? 
            0.0f : 
             (data[28 /* X29 */] <0.20638016f ? 
                 (data[29 /* X30 */] <0.078625664f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[19]) || data[19 /* X20 */] <0.38663295f ? 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3072078f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.23987694f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.36346048f ? 
                                1.0f : 
                                 (data[19 /* X20 */] <0.21573159f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.26964906f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[12 /* X13 */] <0.24319465f ? 
            0.0f : 
             (data[3 /* X4 */] <-0.6660205f ? 
                0.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.22228433f ? 
                    1.0f : 
                     (data[29 /* X30 */] <0.20223232f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22744037f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_167_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.20958598f ? 
             (data[5 /* X6 */] <0.099872865f ? 
                 (data[20 /* X21 */] <0.48196414f ? 
                    1.0f : 
                     (data[23 /* X24 */] <0.18314037f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[10 /* X11 */] <-0.06846404f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27733985f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.021276595f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.2320806f ? 
             (data[35 /* X36 */] <-0.6542677f ? 
                 (data[24 /* X25 */] <-0.47661537f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X6 */] <0.07304312f ? 
                     (data[25 /* X26 */] <-0.04392196f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[5 /* X6 */] <0.11618114f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.30980054f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[32 /* X33 */] <-0.25672007f ? 
         (data[33 /* X34 */] <-0.74303204f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.098776154f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.42140234f ? 
             (data[25 /* X26 */] <-0.24789813f ? 
                 (data[20 /* X21 */] <0.23173088f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[23 /* X24 */] <0.08271842f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.017822865f ? 
                 (data[27 /* X28 */] <-0.038970757f ? 
                    0.0f : 
                     (data[35 /* X36 */] <0.050934948f ? 
                         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1401795f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (data[20 /* X21 */] <0.21628405f ? 
             (data[10 /* X11 */] <0.33968428f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (data[33 /* X34 */] <-0.821623f ? 
            1.0f : 
            0.0f) : 
         (data[27 /* X28 */] <0.25806227f ? 
            0.0f : 
             (data[9 /* X10 */] <0.017822865f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_168_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[15 /* X16 */] <0.17003025f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.009468888f ? 
                1.0f : 
                 (data[22 /* X23 */] <0.24393353f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.33910614f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13531041f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.19012402f ? 
                     (data[1 /* X2 */] <-0.13986512f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3279953f ? 
             (data[34 /* X35 */] <-0.92257684f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23069781f ? 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.1910949f ? 
                1.0f : 
                 (data[34 /* X35 */] <-0.080358244f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6490102f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (data[15 /* X16 */] <0.10300703f ? 
             (data[2 /* X3 */] <-0.2974344f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[34 /* X35 */] <-0.08269774f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.52607954f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.08605314f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.26073748f ? 
                 (data[10 /* X11 */] <-1.1827737f ? 
                    0.0f : 
                     (data[6 /* X7 */] <0.14250986f ? 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.097854555f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.32718813f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (data[11 /* X12 */] <-1.0727719f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5608311f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.2291081f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.21413748f ? 
             (data[4 /* X5 */] <0.123293184f ? 
                 (data[7 /* X8 */] <0.10255218f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_169_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[3 /* X4 */] <0.30069122f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.059412956f ? 
                1.0f : 
                 (data[0 /* X1 */] <-0.09961264f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X13 */] <0.26264608f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.34782168f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3082149f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.25956148f ? 
         (data[3 /* X4 */] <0.30069122f ? 
            0.0f : 
             (data[12 /* X13 */] <0.26264608f ? 
                 (data[12 /* X13 */] <0.22657688f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[19 /* X20 */] <-0.42712638f ? 
             (data[27 /* X28 */] <-0.2072676f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X6 */] <0.10185952f ? 
                 (data[34 /* X35 */] <-0.23570405f ? 
                     (data[24 /* X25 */] <-0.751907f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.17547491f ? 
        0.0f : 
         (data[7 /* X8 */] <0.07812091f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2361259f ? 
                 (data[9 /* X10 */] <-0.36112395f ? 
                    1.0f : 
                     (data[11 /* X12 */] <-0.10899287f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[15 /* X16 */] <0.14807436f ? 
                 (data[0 /* X1 */] <-0.01072875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (data[7 /* X8 */] <0.039411623f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2361259f ? 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2520759f ? 
                 (data[23 /* X24 */] <0.08083092f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.044800494f ? 
                        0.0f : 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.05279156f ? 
                             (data[18 /* X19 */] <-0.002723949f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.69470334f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X1 */] <-0.33124164f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
        0.0f : 
         (data[33 /* X34 */] <-0.66444105f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26126492f ? 
                1.0f : 
                 (data[0 /* X1 */] <0.036423437f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.12992136f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_170_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[3 /* X4 */] <0.31273213f ? 
             (data[0 /* X1 */] <-0.026352316f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15331846f ? 
                0.0f : 
                1.0f)) : 
         (data[34 /* X35 */] <-0.7120222f ? 
            1.0f : 
             (data[6 /* X7 */] <0.1335606f ? 
                 (data[15 /* X16 */] <0.11573389f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12643959f ? 
            1.0f : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.92257684f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33946002f ? 
             (data[34 /* X35 */] <-0.3517398f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.07892732f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.12842964f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.35538176f ? 
            0.0f : 
             (data[31 /* X32 */] <0.25712043f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[3 /* X4 */] <-0.37015858f ? 
            1.0f : 
            0.0f) : 
         (data[24 /* X25 */] <-0.029266516f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.36180702f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.030251194f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.33919626f ? 
                    1.0f : 
                    0.0f) : 
                 (data[15 /* X16 */] <0.06464734f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.356097f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.095555544f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21162806f ? 
             (data[32 /* X33 */] <-0.4755918f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.4905675f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_171_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[25 /* X26 */] <-0.24558021f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11112727f ? 
                 (data[7 /* X8 */] <0.05305506f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15113117f ? 
                     (data[15 /* X16 */] <0.15385222f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.019252522f ? 
            0.0f : 
             (data[31 /* X32 */] <0.123782225f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.0911693f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[23 /* X24 */] <0.13247728f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.15782626f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13174279f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.87488055f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[5 /* X6 */] <0.07698867f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.071806565f ? 
         (data[23 /* X24 */] <0.08271842f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.25835028f ? 
             (data[11 /* X12 */] <-0.73143345f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.12158954f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.11177254f ? 
                         (data[4 /* X5 */] <0.088373214f ? 
                            0.0f : 
                            1.0f) : 
                         (data[7 /* X8 */] <0.049330916f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[4 /* X5 */] <0.07598902f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.66218996f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23796716f ? 
             (data[6 /* X7 */] <0.1978326f ? 
                 (data[12 /* X13 */] <0.30432773f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X5 */] <0.08308026f ? 
                    0.0f : 
                     (data[34 /* X35 */] <-0.07989112f ? 
                         (Double.isNaN(data[9]) || data[9 /* X10 */] <0.18300481f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <0.4145288f ? 
         (data[4 /* X5 */] <0.08001081f ? 
             (data[8 /* X9 */] <0.18501407f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5608311f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1120545f ? 
                    0.0f : 
                    1.0f))) : 
         (data[34 /* X35 */] <0.12551741f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_172_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (data[16 /* X17 */] <-0.39378655f ? 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.2955919f ? 
                1.0f : 
                 (data[5 /* X6 */] <0.079356f ? 
                    1.0f : 
                    0.0f)) : 
             (data[18 /* X19 */] <-0.18343227f ? 
                 (data[28 /* X29 */] <0.31073266f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.44048777f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.5980918f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.110996604f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[35 /* X36 */] <-0.7038225f ? 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.16476357f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.29647118f ? 
            1.0f : 
            0.0f) : 
         (data[32 /* X33 */] <-0.37570405f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1775392f ? 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.33945355f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31540412f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.244017f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.10648303f ? 
             (data[3 /* X4 */] <-0.5898327f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.20733753f ? 
                     (data[22 /* X23 */] <0.27208126f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19345444f ? 
                        0.0f : 
                         (data[31 /* X32 */] <0.25220248f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[24 /* X25 */] <-0.6354374f ? 
                 (data[33 /* X34 */] <-0.13335651f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.57119495f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.50812644f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.64559233f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5666231f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.20498894f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.5525084f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[28 /* X29 */] <0.20350808f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.28759244f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_173_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (data[8 /* X9 */] <0.095000304f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15776052f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X11 */] <-0.23042765f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13314435f ? 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <0.3557353f ? 
                        1.0f : 
                         (data[25 /* X26 */] <0.030251194f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <0.74305207f ? 
             (data[24 /* X25 */] <-0.6354374f ? 
                 (data[4 /* X5 */] <0.099114306f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X11 */] <-0.2628204f ? 
                     (data[5 /* X6 */] <0.12565047f ? 
                         (data[28 /* X29 */] <0.42135143f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[22 /* X23 */] <0.19554356f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_02_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[34 /* X35 */] <-1.0114777f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.2624967f ? 
                 (data[1 /* X2 */] <-0.15782626f ? 
                    0.0f : 
                     (data[15 /* X16 */] <0.12499857f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.1763859f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28303963f ? 
             (data[7 /* X8 */] <0.04797843f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.13925558f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6308486f ? 
                    0.0f : 
                    1.0f)) : 
             (data[10 /* X11 */] <-0.01015714f ? 
                 (data[32 /* X33 */] <-0.19943151f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2520759f ? 
             (data[7 /* X8 */] <0.055593375f ? 
                 (data[4 /* X5 */] <0.10635353f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.06937501f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[23]) || data[23 /* X24 */] <0.23199502f ? 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.68885976f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <0.21793999f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X11 */] <0.34616283f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.41164604f ? 
             (data[23 /* X24 */] <0.094426386f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X8 */] <0.11968581f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.12551741f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.16906664f ? 
                0.0f : 
                1.0f)) : 
         (data[33 /* X34 */] <-0.5310745f ? 
             (data[15 /* X16 */] <0.23358674f ? 
                 (data[23 /* X24 */] <0.23199502f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_174_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.531881f ? 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.2989711f ? 
             (data[0 /* X1 */] <0.005171907f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.11336778f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.113229014f ? 
             (data[3 /* X4 */] <0.30069122f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.18384448f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (data[3 /* X4 */] <0.25596792f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33041045f ? 
                1.0f : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.2377208f ? 
             (data[23 /* X24 */] <0.18045914f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[33 /* X34 */] <-0.13335651f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.25334582f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X1 */] <-0.41212794f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.41710564f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.2340216f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.29800236f ? 
                        0.0f : 
                        1.0f) : 
                     (data[19 /* X20 */] <0.36550033f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[34 /* X35 */] <-0.3517398f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.68680567f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X10 */] <-0.24209578f ? 
             (Double.isNaN(data[5]) || data[5 /* X6 */] <0.1745753f ? 
                1.0f : 
                 (Double.isNaN(data[35]) || data[35 /* X36 */] <0.11954926f ? 
                    0.0f : 
                    1.0f)) : 
             (data[34 /* X35 */] <0.067968145f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3652982f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X2 */] <-0.1865641f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <0.061106853f ? 
                        1.0f : 
                         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18693247f ? 
                            0.0f : 
                             (data[35 /* X36 */] <0.28269884f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (data[33 /* X34 */] <-0.74303204f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.2449528f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.15726504f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[27 /* X28 */] <0.17725183f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.3810807f ? 
                1.0f : 
                 (data[24 /* X25 */] <0.2010255f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_175_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[23 /* X24 */] <0.17199168f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.4605585f ? 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.36268204f ? 
                    1.0f : 
                     (data[14 /* X15 */] <0.20245057f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[20 /* X21 */] <0.2783693f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15078016f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.067585394f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.15014558f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X11 */] <-0.24014547f ? 
             (data[5 /* X6 */] <0.10408145f ? 
                1.0f : 
                0.0f) : 
             (data[14 /* X15 */] <0.22497548f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.15454186f ? 
                    0.0f : 
                     (data[3 /* X4 */] <0.25940818f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[23 /* X24 */] <0.09735338f ? 
            1.0f : 
             (data[14 /* X15 */] <0.2826956f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X11 */] <-0.7908218f ? 
            1.0f : 
             (data[23 /* X24 */] <0.106134355f ? 
                 (data[23 /* X24 */] <0.083524324f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.23598862f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.35130695f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (data[23 /* X24 */] <0.08369408f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.33320573f ? 
             (data[14 /* X15 */] <0.18234484f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17696369f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.09636583f ? 
                         (Double.isNaN(data[24]) || data[24 /* X25 */] <0.079857945f ? 
                             (data[17 /* X18 */] <-0.14665477f ? 
                                1.0f : 
                                 (data[32 /* X33 */] <-0.40143672f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.4101738f ? 
                0.0f : 
                 (data[5 /* X6 */] <0.27596202f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3105308f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.14091599f ? 
                0.0f : 
                 (data[11 /* X12 */] <-0.88332784f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.011904762f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_176_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X9 */] <0.2957067f ? 
         (data[16 /* X17 */] <-0.9947341f ? 
            1.0f : 
             (data[17 /* X18 */] <-0.19087437f ? 
                 (data[1 /* X2 */] <-0.25481647f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.115413085f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.17443083f ? 
                1.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.31332126f ? 
                     (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14062689f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[16 /* X17 */] <-0.30793688f ? 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.29725096f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <0.1394427f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (data[23 /* X24 */] <0.120769314f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X4 */] <-0.25835028f ? 
             (data[27 /* X28 */] <0.2990434f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.33659425f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.42973176f ? 
             (data[27 /* X28 */] <-0.09138835f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.08395799f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.3893819f ? 
                         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.41484496f ? 
                             (data[2 /* X3 */] <-0.16173138f ? 
                                1.0f : 
                                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.5433586f ? 
                                    0.0f : 
                                     (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.9073794f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f) : 
                        1.0f))) : 
            1.0f) : 
        0.039215688f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X10 */] <0.29474553f ? 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.96390986f ? 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.17455156f ? 
                0.0f : 
                 (Double.isNaN(data[18]) || data[18 /* X19 */] <0.50580776f ? 
                    0.0f : 
                    1.0f)) : 
             (data[22 /* X23 */] <0.27020237f ? 
                1.0f : 
                0.0f)) : 
         (data[27 /* X28 */] <0.29300734f ? 
            0.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4484634f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_177_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.16074428f ? 
        0.0f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.10886088f ? 
             (data[28 /* X29 */] <0.35189924f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.14189605f ? 
                     (data[3 /* X4 */] <0.22631213f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
        0.01923077f : 
         (data[33 /* X34 */] <-0.45248353f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.09430266f ? 
                1.0f : 
                 (data[25 /* X26 */] <-0.118095115f ? 
                     (data[21 /* X22 */] <0.36955464f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (data[33 /* X34 */] <-0.40008956f ? 
            0.0f : 
            1.0f) : 
         (data[19 /* X20 */] <-0.30727905f ? 
            0.0f : 
             (data[7 /* X8 */] <0.07780362f ? 
                 (data[9 /* X10 */] <-0.36112395f ? 
                    1.0f : 
                     (data[22 /* X23 */] <0.20245641f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.026347976f ? 
                             (data[16 /* X17 */] <-0.24028008f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14474718f ? 
         (data[3 /* X4 */] <-0.160303f ? 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.06320832f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.17706884f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.38540694f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[28 /* X29 */] <0.20590149f ? 
             (data[4 /* X5 */] <0.17110434f ? 
                1.0f : 
                 (Double.isNaN(data[16]) || data[16 /* X17 */] <0.0055281394f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X7 */] <0.16165496f ? 
                1.0f : 
                 (data[32 /* X33 */] <-0.65186435f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.76922053f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[9 /* X10 */] <-0.05748067f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.39291438f ? 
            0.0f : 
             (data[2 /* X3 */] <0.28285646f ? 
                 (data[25 /* X26 */] <0.09051688f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_178_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[10 /* X11 */] <-0.22394912f ? 
             (data[25 /* X26 */] <-0.46809968f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.13506968f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20608145f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X1 */] <0.10995645f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[24 /* X25 */] <-0.62749636f ? 
            0.0f : 
             (data[31 /* X32 */] <0.1526121f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2672096f ? 
                    1.0f : 
                     (data[0 /* X1 */] <0.10995645f ? 
                        1.0f : 
                        0.0f)))) : 
        0.01923077f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (data[10 /* X11 */] <-0.6094225f ? 
            1.0f : 
             (data[27 /* X28 */] <0.18380402f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.08260456f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.015625f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.12486136f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.0483919f ? 
                0.0f : 
                1.0f) : 
             (data[32 /* X33 */] <-0.4755918f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.024210336f ? 
                    0.0f : 
                     (data[32 /* X33 */] <-0.2165538f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1554184f ? 
             (data[21 /* X22 */] <0.08407198f ? 
                0.0f : 
                 (data[27 /* X28 */] <0.0746007f ? 
                    0.0f : 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.17713189f ? 
                        1.0f : 
                         (data[11 /* X12 */] <-0.691276f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[10 /* X11 */] <0.09349958f ? 
             (data[31 /* X32 */] <0.14540464f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.011904762f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_179_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.30864096f ? 
         (data[16 /* X17 */] <-0.37788847f ? 
            1.0f : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.46043488f ? 
                 (data[32 /* X33 */] <-0.040786218f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27769417f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.30476424f ? 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2814591f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.119762905f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[34 /* X35 */] <-1.0395516f ? 
            0.0f : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.32619646f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15089121f ? 
                    1.0f : 
                     (data[30 /* X31 */] <0.21314597f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[27 /* X28 */] <-0.23990487f ? 
             (data[31 /* X32 */] <0.1418009f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.36285725f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.071806565f ? 
        0.75f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22175157f ? 
             (data[17 /* X18 */] <-0.16016631f ? 
                 (data[1 /* X2 */] <-0.15782626f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X11 */] <-0.32760584f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16953248f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29765168f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.28545645f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X1 */] <-0.051816177f ? 
             (data[22 /* X23 */] <0.19569787f ? 
                1.0f : 
                0.0f) : 
             (data[31 /* X32 */] <0.08774487f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <-0.01132689f ? 
                     (data[10 /* X11 */] <-0.8458894f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.12179795f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.35811347f ? 
             (data[17 /* X18 */] <-0.2952818f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[22]) || data[22 /* X23 */] <0.3891034f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_180_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (data[34 /* X35 */] <-1.0114777f ? 
            1.0f : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.27131394f ? 
                 (Double.isNaN(data[22]) || data[22 /* X23 */] <0.2549941f ? 
                     (data[24 /* X25 */] <-0.77445513f ? 
                         (data[6 /* X7 */] <0.10690612f ? 
                            0.0f : 
                            1.0f) : 
                         (data[3 /* X4 */] <0.21877015f ? 
                             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22215651f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[15 /* X16 */] <0.13074078f ? 
                        1.0f : 
                         (data[9 /* X10 */] <-0.28339127f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[34 /* X35 */] <-1.0114777f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_02_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[34 /* X35 */] <0.036616564f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.10954105f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2569727f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[35 /* X36 */] <-0.029115083f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X13 */] <0.22860608f ? 
             (data[15 /* X16 */] <0.14922994f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (data[34 /* X35 */] <-0.05228429f ? 
             (data[33 /* X34 */] <-0.16193505f ? 
                0.0f : 
                 (data[6 /* X7 */] <0.1265651f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.22876087f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[22]) || data[22 /* X23 */] <0.27918905f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.20641243f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.5642441f ? 
                    1.0f : 
                    0.0f))) : 
         (data[31 /* X32 */] <0.07513179f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3076531f ? 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.54662675f ? 
            0.0f : 
             (data[22 /* X23 */] <0.24600738f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.15425943f ? 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.32982734f ? 
                0.0f : 
                 (data[15 /* X16 */] <0.23936461f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_181_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.35085988f ? 
             (data[11 /* X12 */] <-0.1842881f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.2373652f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.04122716f ? 
            0.0f : 
             (data[23 /* X24 */] <0.1646742f ? 
                 (data[3 /* X4 */] <-0.160303f ? 
                    0.0f : 
                    1.0f) : 
                 (data[35 /* X36 */] <-0.80215013f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[15 /* X16 */] <0.16136345f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.11116522f ? 
             (data[34 /* X35 */] <-0.828997f ? 
                0.0f : 
                 (data[35 /* X36 */] <-0.8076236f ? 
                    0.0f : 
                     (data[1 /* X2 */] <-0.16860294f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
        0.85714287f : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.45095205f ? 
             (data[11 /* X12 */] <-1.1241777f ? 
                1.0f : 
                 (data[20 /* X21 */] <0.24928431f ? 
                     (Double.isNaN(data[4]) || data[4 /* X5 */] <0.16909344f ? 
                        0.0f : 
                         (data[34 /* X35 */] <0.022579588f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.20791416f ? 
        0.045454547f : 
         (Double.isNaN(data[34]) || data[34 /* X35 */] <0.008542611f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.63590646f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.20770262f ? 
                     (Double.isNaN(data[35]) || data[35 /* X36 */] <0.050934948f ? 
                        0.0f : 
                        1.0f) : 
                     (data[20 /* X21 */] <0.2806066f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.7327538f ? 
                 (data[3 /* X4 */] <-0.5593726f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.46628106f ? 
             (data[11 /* X12 */] <-0.5858627f ? 
                 (data[4 /* X5 */] <0.11761454f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[34]) || data[34 /* X35 */] <0.48579982f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.51558715f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_182_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[23]) || data[23 /* X24 */] <0.27833906f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.31687596f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.11759715f ? 
                     (data[4 /* X5 */] <0.11922325f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21567747f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.13286936f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.34071356f ? 
                0.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.16378602f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.03349136f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.19883533f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[32]) || data[32 /* X33 */] <0.49537608f ? 
             (data[27 /* X28 */] <-0.31416312f ? 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <0.26628867f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <0.29449305f ? 
                    0.0f : 
                     (data[27 /* X28 */] <-0.019007014f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (data[14 /* X15 */] <0.19267954f ? 
            0.0f : 
            1.0f) : 
         (data[23 /* X24 */] <0.12564763f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <-0.05339082f ? 
                 (data[30 /* X31 */] <0.13316734f ? 
                     (data[4 /* X5 */] <0.20287648f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.2291081f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.33478168f ? 
            0.0f : 
             (data[18 /* X19 */] <0.572415f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.11150271f ? 
             (data[10 /* X11 */] <0.028714128f ? 
                 (data[4 /* X5 */] <0.12807119f ? 
                    1.0f : 
                     (Double.isNaN(data[34]) || data[34 /* X35 */] <0.18540801f ? 
                        0.0f : 
                         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.13554128f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[21 /* X22 */] <0.13333967f ? 
                     (data[9 /* X10 */] <0.53280187f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X4 */] <0.10803693f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.093629815f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.63824403f ? 
            1.0f : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.100372456f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.2963814f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.20678505f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_183_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[24 /* X25 */] <-0.7386718f ? 
             (data[22 /* X23 */] <0.18379171f ? 
                0.0f : 
                1.0f) : 
             (data[34 /* X35 */] <-0.5903684f ? 
                 (data[8 /* X9 */] <0.10229872f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.47643945f ? 
                         (data[21 /* X22 */] <0.16372792f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[1 /* X2 */] <-0.11112727f ? 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.11390405f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[31 /* X32 */] <0.149609f ? 
            0.0f : 
             (data[34 /* X35 */] <-0.828997f ? 
                0.0f : 
                 (data[16 /* X17 */] <-0.9947341f ? 
                    0.0f : 
                     (data[33 /* X34 */] <-0.5525084f ? 
                        0.0f : 
                         (data[12 /* X13 */] <0.25096613f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[18 /* X19 */] <-0.61637926f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (data[24 /* X25 */] <0.2089666f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X13 */] <0.2133228f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14474718f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.25016633f ? 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.12744056f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.1862935f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X9 */] <-0.024207123f ? 
                1.0f : 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.42333856f ? 
                    0.0f : 
                    1.0f))) : 
         (data[18 /* X19 */] <-0.109585114f ? 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.100814275f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X13 */] <0.21280843f ? 
                0.0f : 
                 (data[1 /* X2 */] <-0.247632f ? 
                     (Double.isNaN(data[20]) || data[20 /* X21 */] <0.25823355f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.03485826f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_02_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[21 /* X22 */] <0.21129061f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <1.078376f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X7 */] <0.109967075f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_184_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <-0.07866986f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.1875857f ? 
             (data[24 /* X25 */] <-0.56661457f ? 
                 (data[0 /* X1 */] <0.073189944f ? 
                    0.0f : 
                    1.0f) : 
                 (data[31 /* X32 */] <0.11897724f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.32413575f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
        0.021276595f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (data[32 /* X33 */] <0.09876288f ? 
            0.0f : 
             (data[30 /* X31 */] <0.1558028f ? 
                 (data[0 /* X1 */] <0.16142955f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.037037037f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24546371f ? 
         (data[7 /* X8 */] <0.07780362f ? 
             (data[29 /* X30 */] <0.13377757f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[35 /* X36 */] <0.06999448f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.11118345f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.494688f ? 
            1.0f : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.43037766f ? 
                 (data[24 /* X25 */] <-0.03191355f ? 
                     (Double.isNaN(data[14]) || data[14 /* X15 */] <0.22913723f ? 
                        0.0f : 
                        1.0f) : 
                     (data[25 /* X26 */] <-0.18299662f ? 
                         (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.22447175f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.39397183f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[35]) || data[35 /* X36 */] <0.19674036f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.53230226f ? 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5014876f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.67740303f ? 
                    0.0f : 
                    1.0f) : 
                 (data[28 /* X29 */] <0.27626762f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[10 /* X11 */] <0.04491049f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33239383f ? 
                 (data[12 /* X13 */] <0.3098853f ? 
                     (data[1 /* X2 */] <-0.1254962f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_02_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_185_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.16074428f ? 
        0.0f : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4472859f ? 
             (data[19 /* X20 */] <-0.77304935f ? 
                1.0f : 
                 (data[19 /* X20 */] <-0.36370933f ? 
                     (data[17 /* X18 */] <-0.29376858f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[32]) || data[32 /* X33 */] <0.355827f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.31556267f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1335006f ? 
         (Double.isNaN(data[31]) || data[31 /* X32 */] <0.15381335f ? 
            0.0f : 
             (data[32 /* X33 */] <-0.09660585f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.1927214f ? 
                    1.0f : 
                    0.0f))) : 
         (data[35 /* X36 */] <-0.7781547f ? 
             (data[19 /* X20 */] <-0.853176f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (data[23 /* X24 */] <0.120769314f ? 
            0.0f : 
            1.0f) : 
         (data[20 /* X21 */] <0.15979208f ? 
            1.0f : 
             (data[23 /* X24 */] <0.11989203f ? 
                 (data[25 /* X26 */] <-0.11259459f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[21 /* X22 */] <0.18581314f ? 
         (data[31 /* X32 */] <0.103361055f ? 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.2532574f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[18]) || data[18 /* X19 */] <0.2770264f ? 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.35454968f ? 
                     (Double.isNaN(data[23]) || data[23 /* X24 */] <0.1691033f ? 
                        0.0f : 
                         (data[9 /* X10 */] <-0.5165893f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[35]) || data[35 /* X36 */] <0.1462326f ? 
            0.0f : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21243808f ? 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.19585694f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[17 /* X18 */] <-0.035798658f ? 
            0.0f : 
             (Double.isNaN(data[23]) || data[23 /* X24 */] <0.26086608f ? 
                1.0f : 
                 (data[21 /* X22 */] <0.18868147f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[20]) || data[20 /* X21 */] <0.5753717f ? 
            0.0f : 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.10788948f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_186_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.37449184f ? 
             (Double.isNaN(data[2]) || data[2 /* X3 */] <0.17031579f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11547142f ? 
                0.0f : 
                1.0f)) : 
         (data[27 /* X28 */] <-0.12851748f ? 
             (data[34 /* X35 */] <-0.92257684f ? 
                1.0f : 
                 (data[31 /* X32 */] <0.14059965f ? 
                    1.0f : 
                     (data[26 /* X27 */] <-0.14376684f ? 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.14117846f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (data[12 /* X13 */] <0.26264608f ? 
            0.0f : 
             (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26733032f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_02_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.23416454f ? 
             (data[2 /* X3 */] <-0.1254946f ? 
                 (Double.isNaN(data[6]) || data[6 /* X7 */] <0.2271211f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
        0.014492754f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.22408643f ? 
             (data[19 /* X20 */] <-0.16836508f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.39799118f ? 
                     (data[8 /* X9 */] <-0.2188315f ? 
                        0.0f : 
                         (Double.isNaN(data[16]) || data[16 /* X17 */] <0.3396361f ? 
                             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.08972559f ? 
                                1.0f : 
                                 (data[9 /* X10 */] <0.23716694f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[5 /* X6 */] <0.12744485f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[13]) || data[13 /* X14 */] <0.3428558f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* X26 */] <0.1600542f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.5762141f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <0.44721442f ? 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.26525676f ? 
                    0.0f : 
                     (Double.isNaN(data[18]) || data[18 /* X19 */] <0.5579352f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[16 /* X17 */] <0.07361714f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.48546904f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_187_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (Double.isNaN(data[7]) || data[7 /* X8 */] <0.17648058f ? 
             (data[15 /* X16 */] <0.17003025f ? 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.39528218f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.24319465f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X6 */] <0.12630805f ? 
         (data[7 /* X8 */] <0.059400845f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.20666814f ? 
                 (data[9 /* X10 */] <-0.08905957f ? 
                     (data[21 /* X22 */] <0.19947986f ? 
                         (data[34 /* X35 */] <-0.20201205f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[33]) || data[33 /* X34 */] <0.4953714f ? 
                         (data[16 /* X17 */] <-0.70220935f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12224659f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.22850056f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.2487522f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24546371f ? 
         (data[11 /* X12 */] <-0.13911097f ? 
             (data[17 /* X18 */] <-0.2983526f ? 
                1.0f : 
                 (data[27 /* X28 */] <0.1794359f ? 
                     (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2267806f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.32413575f ? 
                        0.0f : 
                         (data[16 /* X17 */] <-0.04084907f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[15 /* X16 */] <0.20874193f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
        0.017857144f : 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11271394f ? 
             (data[20 /* X21 */] <0.2067755f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.11819366f ? 
                    1.0f : 
                     (data[21 /* X22 */] <0.11632945f ? 
                         (data[33 /* X34 */] <-0.6668226f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.676038f ? 
                 (data[9 /* X10 */] <-0.5554556f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <0.27116668f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.45033127f ? 
             (data[25 /* X26 */] <-0.06710107f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X1 */] <0.33530733f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_188_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[3 /* X4 */] <0.26456854f ? 
             (data[28 /* X29 */] <0.30594584f ? 
                 (Double.isNaN(data[25]) || data[25 /* X26 */] <-0.020742849f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[20 /* X21 */] <0.2783693f ? 
                1.0f : 
                 (Double.isNaN(data[13]) || data[13 /* X14 */] <0.26612192f ? 
                     (Double.isNaN(data[21]) || data[21 /* X22 */] <0.33445984f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[3 /* X4 */] <0.26456854f ? 
            0.0f : 
             (data[28 /* X29 */] <0.21978323f ? 
                0.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.32888484f ? 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3113788f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[10 /* X11 */] <-0.5867476f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.09815485f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X1 */] <-0.41212794f ? 
            1.0f : 
             (data[25 /* X26 */] <-0.44723848f ? 
                 (data[4 /* X5 */] <0.112788394f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X13 */] <0.226522f ? 
                     (data[2 /* X3 */] <-0.055239633f ? 
                        1.0f : 
                         (data[31 /* X32 */] <0.1216531f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[3 /* X4 */] <-0.5903349f ? 
            1.0f : 
             (data[23 /* X24 */] <0.08271842f ? 
                1.0f : 
                 (data[18 /* X19 */] <0.04824506f ? 
                    0.0f : 
                     (data[9 /* X10 */] <-0.29224905f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.15628627f ? 
                             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.20849815f ? 
                                1.0f : 
                                 (data[1 /* X2 */] <-0.30941835f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[2 /* X3 */] <-0.24355605f ? 
                            1.0f : 
                             (data[22 /* X23 */] <0.25278196f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X9 */] <0.08089004f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))))) : 
        0.039215688f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[9 /* X10 */] <0.29474553f ? 
             (data[23 /* X24 */] <0.23199502f ? 
                1.0f : 
                0.0f) : 
             (data[32 /* X33 */] <-0.6342371f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.22833844f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_189_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.16074428f ? 
        0.0f : 
         (data[34 /* X35 */] <-0.531881f ? 
             (data[10 /* X11 */] <-0.23136769f ? 
                0.0f : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.17001474f ? 
                     (Double.isNaN(data[12]) || data[12 /* X13 */] <0.49328452f ? 
                         (data[4 /* X5 */] <0.11761454f ? 
                             (data[9 /* X10 */] <-0.18682037f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[24 /* X25 */] <-0.6445612f ? 
                1.0f : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.26427025f ? 
                    0.0f : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.28128895f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.023288228f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[24 /* X25 */] <-0.7174955f ? 
            0.0f : 
             (data[3 /* X4 */] <0.29725096f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.586453f ? 
                     (data[35 /* X36 */] <-0.7419416f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[30 /* X31 */] <0.09845964f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.13681488f ? 
        0.0f : 
         (data[10 /* X11 */] <-0.7487112f ? 
             (data[21 /* X22 */] <0.11106798f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X8 */] <0.08605314f ? 
                 (data[28 /* X29 */] <0.2283995f ? 
                    1.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.2493627f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[27]) || data[27 /* X28 */] <0.7472932f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14474718f ? 
         (Double.isNaN(data[14]) || data[14 /* X15 */] <0.32961434f ? 
             (data[7 /* X8 */] <0.042267226f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[35 /* X36 */] <-0.10344726f ? 
            0.0f : 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <0.66429865f ? 
                 (data[27 /* X28 */] <0.027709316f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.28970143f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20316477f ? 
                             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.4403421f ? 
                                0.0f : 
                                 (data[10 /* X11 */] <0.45500237f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (data[10 /* X11 */] <-0.18183857f ? 
            0.0f : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.18596432f ? 
                1.0f : 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <-0.27581626f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7705075f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_190_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X1 */] <0.11225436f ? 
         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.42829454f ? 
             (Double.isNaN(data[11]) || data[11 /* X12 */] <0.75439245f ? 
                 (data[26 /* X27 */] <-0.09461838f ? 
                     (Double.isNaN(data[29]) || data[29 /* X30 */] <0.21416341f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14657466f ? 
             (data[11 /* X12 */] <-0.08891414f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (data[3 /* X4 */] <0.29725096f ? 
            0.0f : 
             (data[19 /* X20 */] <-1.1271437f ? 
                 (Double.isNaN(data[11]) || data[11 /* X12 */] <0.5536052f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.16457991f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
        0.8f : 
         (data[15 /* X16 */] <0.055050764f ? 
            1.0f : 
             (data[23 /* X24 */] <0.12564763f ? 
                 (data[11 /* X12 */] <-0.3251473f ? 
                    1.0f : 
                     (data[26 /* X27 */] <0.079635255f ? 
                         (data[29 /* X30 */] <0.19006239f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (data[3 /* X4 */] <-0.56281286f ? 
            1.0f : 
             (data[11 /* X12 */] <-0.28970143f ? 
                 (data[22 /* X23 */] <0.24808124f ? 
                     (data[29 /* X30 */] <0.20278287f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[19 /* X20 */] <-0.16836508f ? 
                    0.0f : 
                     (data[25 /* X26 */] <-0.22935484f ? 
                         (data[13 /* X14 */] <0.19603427f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
        0.039215688f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X3 */] <0.1851063f ? 
         (Double.isNaN(data[1]) || data[1 /* X2 */] <0.19780448f ? 
             (data[11 /* X12 */] <-0.5507249f ? 
                 (Double.isNaN(data[24]) || data[24 /* X25 */] <0.03161528f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[19 /* X20 */] <0.049539167f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.3450887f ? 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.7086452f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_191_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[27 /* X28 */] <-0.113229014f ? 
         (data[0 /* X1 */] <0.11547142f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.22272241f ? 
                 (Double.isNaN(data[7]) || data[7 /* X8 */] <0.20281559f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[29]) || data[29 /* X30 */] <0.30457056f ? 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.14751326f ? 
                     (Double.isNaN(data[8]) || data[8 /* X9 */] <1.058868f ? 
                        1.0f : 
                         (data[27 /* X28 */] <-0.5892873f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[23 /* X24 */] <0.17199168f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5570933f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X8 */] <0.13808858f ? 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.3350022f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[27 /* X28 */] <-1.096059f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X10 */] <-0.38298628f ? 
         (data[28 /* X29 */] <0.22696346f ? 
            0.0f : 
             (data[9 /* X10 */] <-0.77774626f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.2133228f ? 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.319117f ? 
                1.0f : 
                0.0f) : 
             (data[21 /* X22 */] <0.18530697f ? 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.29916072f ? 
                     (data[16 /* X17 */] <-0.48029897f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.009485859f ? 
         (data[2 /* X3 */] <-0.3233178f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.6215888f ? 
             (Double.isNaN(data[9]) || data[9 /* X10 */] <0.5085104f ? 
                 (data[7 /* X8 */] <0.0784382f ? 
                     (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.09260857f ? 
                         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.3227395f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[22]) || data[22 /* X23 */] <0.36283457f ? 
                         (data[11 /* X12 */] <-0.4904887f ? 
                             (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.29906487f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (Double.isNaN(data[0]) || data[0 /* X1 */] <0.05021088f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7478326f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_02_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_192_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[24 /* X25 */] <-0.62749636f ? 
         (data[21 /* X22 */] <0.21466511f ? 
             (data[27 /* X28 */] <-0.13506968f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.04875668f ? 
            0.0f : 
             (data[35 /* X36 */] <-0.6542677f ? 
                 (data[7 /* X8 */] <0.15712593f ? 
                    0.0f : 
                    1.0f) : 
                 (data[16 /* X17 */] <-0.3123904f ? 
                     (data[5 /* X6 */] <0.085668884f ? 
                        0.0f : 
                        1.0f) : 
                     (data[23 /* X24 */] <0.120769314f ? 
                         (data[14 /* X15 */] <0.17330198f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[14 /* X15 */] <0.23078875f ? 
         (data[32 /* X33 */] <0.07966668f ? 
            0.0f : 
             (data[27 /* X28 */] <-0.6679819f ? 
                0.0f : 
                 (data[24 /* X25 */] <-0.631353f ? 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <-0.6767724f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[24]) || data[24 /* X25 */] <0.45736355f ? 
                         (data[23 /* X24 */] <0.124671966f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.29828694f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X9 */] <0.9489147f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X13 */] <0.2133228f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.018996311f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.0014445211f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[11 /* X12 */] <-0.13911097f ? 
             (data[35 /* X36 */] <0.1462326f ? 
                 (data[10 /* X11 */] <-0.54787636f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24980381f ? 
                         (data[2 /* X3 */] <0.009165983f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <0.5821985f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.14053874f ? 
             (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.11759715f ? 
                0.0f : 
                 (data[27 /* X28 */] <-0.0831338f ? 
                    1.0f : 
                    0.0f)) : 
             (data[19 /* X20 */] <-0.1901555f ? 
                0.0f : 
                 (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17696369f ? 
                     (data[23 /* X24 */] <0.08564541f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.08891414f ? 
                            0.0f : 
                             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.30908996f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.27464238f ? 
             (data[32 /* X33 */] <-0.49615696f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.3076531f ? 
         (Double.isNaN(data[10]) || data[10 /* X11 */] <0.23278828f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3215803f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X12 */] <-0.9171617f ? 
            1.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.3711351f ? 
                0.0f : 
                 (data[20 /* X21 */] <0.2806066f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_193_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[16 /* X17 */] <-0.43830118f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.3563075f ? 
            1.0f : 
             (data[24 /* X25 */] <-0.43955687f ? 
                1.0f : 
                0.0f)) : 
         (data[35 /* X36 */] <-0.35312712f ? 
             (data[15 /* X16 */] <0.15616338f ? 
                1.0f : 
                 (data[28 /* X29 */] <0.2207406f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.28114277f ? 
                0.0f : 
                 (data[3 /* X4 */] <-0.13278095f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X7 */] <0.14332344f ? 
         (data[19 /* X20 */] <-0.5306309f ? 
             (data[20 /* X21 */] <0.30074236f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.17003025f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X13 */] <0.49798265f ? 
                     (data[3 /* X4 */] <0.30069122f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[13 /* X14 */] <0.13017604f ? 
             (data[8 /* X9 */] <-0.03880395f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
         (data[29 /* X30 */] <0.07951521f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X13 */] <0.2133228f ? 
             (Double.isNaN(data[24]) || data[24 /* X25 */] <-0.053089827f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.4504403f ? 
                 (data[21 /* X22 */] <0.18328227f ? 
                     (Double.isNaN(data[28]) || data[28 /* X29 */] <0.2973296f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X4 */] <-0.23598862f ? 
                             (data[9 /* X10 */] <-0.5101149f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X7 */] <0.14474718f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.5130353f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.19250497f ? 
             (data[17 /* X18 */] <-0.33827308f ? 
                 (data[8 /* X9 */] <-0.024207123f ? 
                     (data[12 /* X13 */] <0.28209752f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[18 /* X19 */] <-0.3108548f ? 
                    0.0f : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23125434f ? 
                         (Double.isNaN(data[6]) || data[6 /* X7 */] <0.35284302f ? 
                             (data[13 /* X14 */] <0.2231026f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1851806f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X11 */] <0.3769359f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.44721442f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X13 */] <0.48457852f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X13 */] <0.3328102f ? 
             (data[8 /* X9 */] <0.15095481f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_194_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1981458f ? 
        0.0f : 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2639328f ? 
             (data[1 /* X2 */] <-0.1673796f ? 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.17583057f ? 
                    1.0f : 
                    0.0f) : 
                 (data[34 /* X35 */] <-1.0161567f ? 
                    1.0f : 
                     (data[15 /* X16 */] <0.15519367f ? 
                         (data[13 /* X14 */] <0.24437058f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[17]) || data[17 /* X18 */] <0.36187074f ? 
                 (Double.isNaN(data[32]) || data[32 /* X33 */] <0.4574143f ? 
                    1.0f : 
                     (data[34 /* X35 */] <-0.48275158f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X4 */] <0.311012f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.15119648f ? 
             (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4058023f ? 
                1.0f : 
                 (data[17 /* X18 */] <-0.055758897f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_02_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.25835028f ? 
         (data[15 /* X16 */] <0.23416454f ? 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.11954926f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X2 */] <0.081977926f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[29]) || data[29 /* X30 */] <0.3549782f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X4 */] <-0.1078391f ? 
         (data[5 /* X6 */] <0.10934219f ? 
            0.0f : 
             (data[17 /* X18 */] <-0.34441468f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24483489f ? 
                     (data[33 /* X34 */] <-0.89545095f ? 
                        0.0f : 
                         (data[10 /* X11 */] <-0.7473114f ? 
                            0.0f : 
                             (data[0 /* X1 */] <-0.078404546f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[32 /* X33 */] <-0.48022944f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[29 /* X30 */] <0.10798071f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[17]) || data[17 /* X18 */] <0.015637346f ? 
        0.0f : 
         (data[32 /* X33 */] <-0.27581626f ? 
             (data[24 /* X25 */] <0.11632039f ? 
                0.0f : 
                 (data[0 /* X1 */] <0.0033335818f ? 
                     (data[33 /* X34 */] <-0.26672304f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[14]) || data[14 /* X15 */] <0.35157558f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_195_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[17 /* X18 */] <-0.48413637f ? 
            1.0f : 
             (data[16 /* X17 */] <-0.3842477f ? 
                 (Double.isNaN(data[20]) || data[20 /* X21 */] <0.48196414f ? 
                     (Double.isNaN(data[25]) || data[25 /* X26 */] <0.22008146f ? 
                        1.0f : 
                         (data[12 /* X13 */] <0.39324856f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[2 /* X3 */] <-0.12919223f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[31 /* X32 */] <0.11417226f ? 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.150902f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[30]) || data[30 /* X31 */] <0.31143817f ? 
                         (data[28 /* X29 */] <0.24390282f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X12 */] <0.06293125f ? 
         (data[4 /* X5 */] <0.10796224f ? 
             (data[35 /* X36 */] <-0.47892f ? 
                1.0f : 
                 (Double.isNaN(data[31]) || data[31 /* X32 */] <0.21507686f ? 
                    0.0f : 
                    1.0f)) : 
             (data[19 /* X20 */] <-0.48977384f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <-0.24109589f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13189189f ? 
             (data[15 /* X16 */] <0.16194125f ? 
                0.0f : 
                 (Double.isNaN(data[28]) || data[28 /* X29 */] <0.50986403f ? 
                    1.0f : 
                     (data[26 /* X27 */] <0.097507425f ? 
                        1.0f : 
                        0.0f))) : 
             (data[26 /* X27 */] <-0.22865963f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[25 /* X26 */] <-0.43912578f ? 
         (data[4 /* X5 */] <0.11298948f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25696954f ? 
             (data[20 /* X21 */] <0.15979208f ? 
                1.0f : 
                 (Double.isNaN(data[30]) || data[30 /* X31 */] <0.3082149f ? 
                     (data[21 /* X22 */] <0.12659067f ? 
                         (Double.isNaN(data[5]) || data[5 /* X6 */] <0.23507376f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[12 /* X13 */] <0.32655793f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_02_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[13]) || data[13 /* X14 */] <0.22594236f ? 
         (Double.isNaN(data[26]) || data[26 /* X27 */] <0.24271879f ? 
            0.0f : 
             (Double.isNaN(data[35]) || data[35 /* X36 */] <0.06999448f ? 
                0.0f : 
                1.0f)) : 
         (data[32 /* X33 */] <-0.494688f ? 
             (Double.isNaN(data[30]) || data[30 /* X31 */] <0.239554f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[15]) || data[15 /* X16 */] <0.29252094f ? 
                 (data[27 /* X28 */] <0.013446839f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X6 */] <0.24138664f ? 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18669477f ? 
                             (data[0 /* X1 */] <-0.062175065f ? 
                                0.0f : 
                                1.0f) : 
                             (data[20 /* X21 */] <0.31819335f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_02_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[25 /* X26 */] <-0.06710107f ? 
            0.0f : 
             (data[13 /* X14 */] <0.24074537f ? 
                 (data[0 /* X1 */] <-0.026079623f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X4 */] <-0.6694608f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[16]) || data[16 /* X17 */] <1.078376f ? 
            0.0f : 
             (data[28 /* X29 */] <0.45433703f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_02_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_196_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.16074428f ? 
        0.0f : 
         (data[11 /* X12 */] <-0.04875668f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13211785f ? 
                 (data[15 /* X16 */] <0.16234308f ? 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <-0.038970757f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[7 /* X8 */] <0.05686253f ? 
                    0.0f : 
                     (data[18 /* X19 */] <-0.2066f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.07893222f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13189189f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.23373635f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <-0.05228429f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.30254954f ? 
                 (data[18 /* X19 */] <-0.20080806f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X1 */] <-0.41166836f ? 
        1.0f : 
         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.30746037f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.19244413f ? 
                 (data[9 /* X10 */] <-0.38055712f ? 
                     (data[10 /* X11 */] <-0.7163185f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[13]) || data[13 /* X14 */] <0.278206f ? 
                        0.0f : 
                         (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3422282f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[35 /* X36 */] <-0.010055551f ? 
                    1.0f : 
                     (data[32 /* X33 */] <-0.6107341f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[32]) || data[32 /* X33 */] <0.019440234f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.2520759f ? 
             (data[35 /* X36 */] <0.1462326f ? 
                 (Double.isNaN(data[17]) || data[17 /* X18 */] <0.024082063f ? 
                    0.0f : 
                     (Double.isNaN(data[27]) || data[27 /* X28 */] <0.03514394f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.7867039f ? 
                     (data[34 /* X35 */] <0.1910233f ? 
                         (data[8 /* X9 */] <0.2553842f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.32344645f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[21]) || data[21 /* X22 */] <0.18665677f ? 
                 (Double.isNaN(data[10]) || data[10 /* X11 */] <0.514605f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X7 */] <0.1652898f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.1851806f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_02_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[33 /* X34 */] <-0.66325027f ? 
         (Double.isNaN(data[15]) || data[15 /* X16 */] <0.22780888f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.101291426f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.832903f ? 
                1.0f : 
                 (Double.isNaN(data[34]) || data[34 /* X35 */] <0.6027746f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_02_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_197_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.16019367f ? 
             (Double.isNaN(data[0]) || data[0 /* X1 */] <0.108118124f ? 
                 (data[1 /* X2 */] <-0.19015633f ? 
                    1.0f : 
                     (data[9 /* X10 */] <-0.12792592f ? 
                         (data[1 /* X2 */] <0.09805862f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[25 /* X26 */] <-0.2826668f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_02_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[31 /* X32 */] <0.15081024f ? 
        0.01923077f : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.1597793f ? 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13048427f ? 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.26246536f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.17768787f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_02_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X11 */] <-0.7487112f ? 
        0.85714287f : 
         (data[0 /* X1 */] <-0.41212794f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25676847f ? 
                 (data[1 /* X2 */] <-0.18297186f ? 
                     (data[4 /* X5 */] <0.11050729f ? 
                         (data[1 /* X2 */] <-0.20811747f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[14]) || data[14 /* X15 */] <0.31669596f ? 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.12478423f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.25435537f ? 
                 (Double.isNaN(data[9]) || data[9 /* X10 */] <0.54251844f ? 
                     (data[27 /* X28 */] <-0.10886088f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X9 */] <0.6335405f ? 
                            1.0f : 
                             (Double.isNaN(data[16]) || data[16 /* X17 */] <0.56963736f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[25]) || data[25 /* X26 */] <0.03836388f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <-0.024913762f ? 
                0.0f : 
                 (data[1 /* X2 */] <0.11930223f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.63824403f ? 
             (data[13 /* X14 */] <0.23712014f ? 
                 (data[34 /* X35 */] <0.1910233f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[27]) || data[27 /* X28 */] <0.37818593f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X2 */] <0.17984332f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_02_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_198_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X4 */] <0.31273213f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.15954849f ? 
                1.0f : 
                 (Double.isNaN(data[29]) || data[29 /* X30 */] <0.2351859f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5502243f ? 
                 (Double.isNaN(data[2]) || data[2 /* X3 */] <0.12224659f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (data[3 /* X4 */] <0.31273213f ? 
            0.0f : 
             (Double.isNaN(data[31]) || data[31 /* X32 */] <0.5502243f ? 
                 (data[13 /* X14 */] <0.12756145f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[19 /* X20 */] <-0.2311828f ? 
             (data[1 /* X2 */] <-0.11112727f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.15199056f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[28]) || data[28 /* X29 */] <0.3815775f ? 
                0.0f : 
                 (data[3 /* X4 */] <0.07363437f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2700069f ? 
             (data[25 /* X26 */] <-0.25253394f ? 
                1.0f : 
                 (data[15 /* X16 */] <0.12149619f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X3 */] <0.2720006f ? 
            0.0f : 
             (data[1 /* X2 */] <-0.041078795f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (data[20 /* X21 */] <0.23697914f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.31535426f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[19 /* X20 */] <0.05403451f ? 
             (data[27 /* X28 */] <0.10954576f ? 
                0.0f : 
                1.0f) : 
             (data[15 /* X16 */] <0.117799714f ? 
                1.0f : 
                 (data[1 /* X2 */] <-0.1254962f ? 
                    0.0f : 
                     (Double.isNaN(data[16]) || data[16 /* X17 */] <0.16264641f ? 
                         (data[7 /* X8 */] <0.1583951f ? 
                             (Double.isNaN(data[11]) || data[11 /* X12 */] <-0.21834202f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (data[13 /* X14 */] <0.24316217f ? 
            0.0f : 
             (Double.isNaN(data[33]) || data[33 /* X34 */] <-0.1857505f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[19]) || data[19 /* X20 */] <0.36822414f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_02_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_02_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_02_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_02_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_02_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_02_Tree_199_class_4.score0(fdata);
  }
}
class h2o_rf_02_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.04875668f ? 
        0.0f : 
         (data[8 /* X9 */] <0.31638554f ? 
             (data[20 /* X21 */] <0.28172526f ? 
                 (Double.isNaN(data[4]) || data[4 /* X5 */] <0.12947038f ? 
                     (data[0 /* X1 */] <0.008338901f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X10 */] <-0.2736747f ? 
                0.0f : 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.4460147f ? 
                     (data[25 /* X26 */] <-0.20615953f ? 
                         (data[23 /* X24 */] <0.29638883f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[19 /* X20 */] <-0.49522147f ? 
         (Double.isNaN(data[4]) || data[4 /* X5 */] <0.13189189f ? 
             (Double.isNaN(data[25]) || data[25 /* X26 */] <0.17627959f ? 
                1.0f : 
                0.0f) : 
             (data[15 /* X16 */] <0.1885194f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X7 */] <0.118102774f ? 
             (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.29719245f ? 
                 (data[25 /* X26 */] <-0.29889217f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[20]) || data[20 /* X21 */] <0.4684364f ? 
                0.0f : 
                 (data[23 /* X24 */] <0.3295614f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_02_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.13911097f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.2700069f ? 
             (data[7 /* X8 */] <0.075899884f ? 
                 (data[4 /* X5 */] <0.09481748f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[21]) || data[21 /* X22 */] <0.21296336f ? 
                    0.0f : 
                     (data[30 /* X31 */] <0.1962855f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
        0.015625f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_02_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[19]) || data[19 /* X20 */] <-0.14521275f ? 
         (Double.isNaN(data[18]) || data[18 /* X19 */] <0.68680567f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X12 */] <-1.055203f ? 
            0.0f : 
             (data[16 /* X17 */] <-0.47327697f ? 
                0.0f : 
                 (data[22 /* X23 */] <0.18310043f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X2 */] <0.1403288f ? 
                         (Double.isNaN(data[30]) || data[30 /* X31 */] <0.23166914f ? 
                             (data[34 /* X35 */] <-0.14212094f ? 
                                 (data[33 /* X34 */] <-0.51241565f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[23 /* X24 */] <0.08408435f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_02_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X12 */] <-0.51307726f ? 
         (Double.isNaN(data[21]) || data[21 /* X22 */] <0.20454161f ? 
             (data[25 /* X26 */] <0.025615372f ? 
                 (Double.isNaN(data[26]) || data[26 /* X27 */] <0.14218783f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X13 */] <0.51273596f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X5 */] <0.09750559f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}



