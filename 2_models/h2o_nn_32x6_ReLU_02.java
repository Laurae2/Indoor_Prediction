/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T13:50:12.366+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DeepLearningModel named h2o_nn_32x6_ReLU_02

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_nn_32x6_ReLU_02 > h2o_nn_32x6_ReLU_02.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_nn_32x6_ReLU_02.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_nn_32x6_ReLU_02", algorithm="deeplearning")
public class h2o_nn_32x6_ReLU_02 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }
  public boolean isSupervised() { return true; }
  public int nfeatures() { return 36; }
  public int nclasses() { return 5; }
  // Thread-local storage for input neuron activation values.
  final double[] NUMS = new double[36];
  static class NORMMUL implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  static class NORMSUB implements java.io.Serializable {
    public static final double[] VALUES = null;
}
  // Workspace for categorical offsets.
  public static final int[] CATOFFSETS = {0};
  // Number of neurons for each layer.
  public static final int[] NEURONS = {36,32,5};
    // Thread-local storage for neuron activation values.
    final double[][] ACTIVATION = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_02_Activation_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_02_Activation_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_02_Activation_2.VALUES
    };
    // Neuron bias values.
    public static final double[][] BIAS = new double[][] {
      /* Input */ h2o_nn_32x6_ReLU_02_Bias_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_02_Bias_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_02_Bias_2.VALUES
    };
    // Connecting weights between neurons.
    public static final float[][] WEIGHT = new float[][] {
      /* Input */ h2o_nn_32x6_ReLU_02_Weight_0.VALUES,
      /* Rectifier */ h2o_nn_32x6_ReLU_02_Weight_1.VALUES,
      /* Softmax */ h2o_nn_32x6_ReLU_02_Weight_2.VALUES
    };

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_nn_32x6_ReLU_02.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X1 */ null,
    /* X2 */ null,
    /* X3 */ null,
    /* X4 */ null,
    /* X5 */ null,
    /* X6 */ null,
    /* X7 */ null,
    /* X8 */ null,
    /* X9 */ null,
    /* X10 */ null,
    /* X11 */ null,
    /* X12 */ null,
    /* X13 */ null,
    /* X14 */ null,
    /* X15 */ null,
    /* X16 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X22 */ null,
    /* X23 */ null,
    /* X24 */ null,
    /* X25 */ null,
    /* X26 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X29 */ null,
    /* X30 */ null,
    /* X31 */ null,
    /* X32 */ null,
    /* X33 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* X36 */ null,
    /* Label */ h2o_nn_32x6_ReLU_02_ColInfo_36.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25,0.25,0.125,0.25,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = null;

  public h2o_nn_32x6_ReLU_02() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-9105113917348656848L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    java.util.Arrays.fill(NUMS,0);
    int i = 0, ncats = 0;
    final int n = data.length;
    for(; i<n; ++i) {
      NUMS[i] = Double.isNaN(data[i]) ? 0 : data[i];
    }
    java.util.Arrays.fill(ACTIVATION[0],0);
    for (i=0; i<NUMS.length; ++i) {
      ACTIVATION[0][CATOFFSETS[CATOFFSETS.length-1] + i] = Double.isNaN(NUMS[i]) ? 0 : NUMS[i];
    }
    for (i=1; i<ACTIVATION.length; ++i) {
      java.util.Arrays.fill(ACTIVATION[i],0);
      int cols = ACTIVATION[i-1].length;
      int rows = ACTIVATION[i].length;
      int extra=cols-cols%8;
      int multiple = (cols/8)*8-1;
      int idx = 0;
      float[] a = WEIGHT[i];
      double[] x = ACTIVATION[i-1];
      double[] y = BIAS[i];
      double[] res = ACTIVATION[i];
      for (int row=0; row<rows; ++row) {
        double psum0 = 0, psum1 = 0, psum2 = 0, psum3 = 0, psum4 = 0, psum5 = 0, psum6 = 0, psum7 = 0;
        for (int col = 0; col < multiple; col += 8) {
          int off = idx + col;
          psum0 += a[off    ] * x[col    ];
          psum1 += a[off + 1] * x[col + 1];
          psum2 += a[off + 2] * x[col + 2];
          psum3 += a[off + 3] * x[col + 3];
          psum4 += a[off + 4] * x[col + 4];
          psum5 += a[off + 5] * x[col + 5];
          psum6 += a[off + 6] * x[col + 6];
          psum7 += a[off + 7] * x[col + 7];
        }
        res[row] += psum0 + psum1 + psum2 + psum3;
        res[row] += psum4 + psum5 + psum6 + psum7;
        for (int col = extra; col < cols; col++)
          res[row] += a[idx + col] * x[col];
        res[row] += y[row];
        idx += cols;
      }
      if (i<ACTIVATION.length-1) {
        for (int r=0; r<ACTIVATION[i].length; ++r) {
          ACTIVATION[i][r] = Math.max(0, ACTIVATION[i][r]);
        }
      }
      if (i == ACTIVATION.length-1) {
        double max = ACTIVATION[i][0];
        for (int r=1; r<ACTIVATION[i].length; r++) {
          if (ACTIVATION[i][r]>max) max = ACTIVATION[i][r];
        }
        double scale = 0;
        for (int r=0; r<ACTIVATION[i].length; r++) {
          ACTIVATION[i][r] = Math.exp(ACTIVATION[i][r] - max);
          scale += ACTIVATION[i][r];
        }
        for (int r=0; r<ACTIVATION[i].length; r++) {
          if (Double.isNaN(ACTIVATION[i][r]))
            throw new RuntimeException("Numerical instability, predicted NaN.");
          ACTIVATION[i][r] /= scale;
          preds[r+1] = ACTIVATION[i][r];
        }
      }
    }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// Neuron activation values for Input layer
class h2o_nn_32x6_ReLU_02_Activation_0 implements java.io.Serializable {
  public static final double[] VALUES = new double[36];
  static {
    h2o_nn_32x6_ReLU_02_Activation_0_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_02_Activation_0_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
      sa[32] = 0.0;
      sa[33] = 0.0;
      sa[34] = 0.0;
      sa[35] = 0.0;
    }
  }
}
// Neuron activation values for Rectifier layer
class h2o_nn_32x6_ReLU_02_Activation_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_02_Activation_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_02_Activation_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
      sa[5] = 0.0;
      sa[6] = 0.0;
      sa[7] = 0.0;
      sa[8] = 0.0;
      sa[9] = 0.0;
      sa[10] = 0.0;
      sa[11] = 0.0;
      sa[12] = 0.0;
      sa[13] = 0.0;
      sa[14] = 0.0;
      sa[15] = 0.0;
      sa[16] = 0.0;
      sa[17] = 0.0;
      sa[18] = 0.0;
      sa[19] = 0.0;
      sa[20] = 0.0;
      sa[21] = 0.0;
      sa[22] = 0.0;
      sa[23] = 0.0;
      sa[24] = 0.0;
      sa[25] = 0.0;
      sa[26] = 0.0;
      sa[27] = 0.0;
      sa[28] = 0.0;
      sa[29] = 0.0;
      sa[30] = 0.0;
      sa[31] = 0.0;
    }
  }
}
// Neuron activation values for Softmax layer
class h2o_nn_32x6_ReLU_02_Activation_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_02_Activation_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_02_Activation_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.0;
      sa[1] = 0.0;
      sa[2] = 0.0;
      sa[3] = 0.0;
      sa[4] = 0.0;
    }
  }
}
// Neuron bias values for Input layer
class h2o_nn_32x6_ReLU_02_Bias_0 implements java.io.Serializable {
  public static final double[] VALUES = null;
}
// Neuron bias values for Rectifier layer
class h2o_nn_32x6_ReLU_02_Bias_1 implements java.io.Serializable {
  public static final double[] VALUES = new double[32];
  static {
    h2o_nn_32x6_ReLU_02_Bias_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_02_Bias_1_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = 0.3249829871520868;
      sa[1] = 0.40728938208923793;
      sa[2] = 0.5756965017773193;
      sa[3] = 0.5386356114227228;
      sa[4] = 0.5040731015099595;
      sa[5] = 0.539763273272757;
      sa[6] = 0.5112045302545847;
      sa[7] = 0.6775310533584235;
      sa[8] = 0.4915627316637621;
      sa[9] = 0.48725877115972377;
      sa[10] = 0.4367311145623538;
      sa[11] = 0.5897221816931952;
      sa[12] = 0.47913247457930835;
      sa[13] = 0.5132573902399775;
      sa[14] = 0.6528241104684712;
      sa[15] = 0.4204242493109032;
      sa[16] = 0.47128025620751185;
      sa[17] = 0.5544290589298718;
      sa[18] = 0.5102536068043965;
      sa[19] = 0.5372296694660604;
      sa[20] = 0.524579075423164;
      sa[21] = 0.4284500429369702;
      sa[22] = 0.4877223431094183;
      sa[23] = 0.5108704995170592;
      sa[24] = 0.5100971037912584;
      sa[25] = 0.46165564983644986;
      sa[26] = 0.4672281336677431;
      sa[27] = 0.4813992737174226;
      sa[28] = 0.5653414313449304;
      sa[29] = 0.507862102825257;
      sa[30] = 0.41312466235189477;
      sa[31] = 0.5445735711359174;
    }
  }
}
// Neuron bias values for Softmax layer
class h2o_nn_32x6_ReLU_02_Bias_2 implements java.io.Serializable {
  public static final double[] VALUES = new double[5];
  static {
    h2o_nn_32x6_ReLU_02_Bias_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_02_Bias_2_0 implements java.io.Serializable {
    static final void fill(double[] sa) {
      sa[0] = -0.012040821088442547;
      sa[1] = 0.007941070967355517;
      sa[2] = -0.015552835853851971;
      sa[3] = -0.007286579451004866;
      sa[4] = -0.024155090708963097;
    }
  }
}
class h2o_nn_32x6_ReLU_02_Weight_0 implements java.io.Serializable {
  public static final float[] VALUES = null;
}
// Neuron weights connecting Input and Rectifier layer
class h2o_nn_32x6_ReLU_02_Weight_1 implements java.io.Serializable {
  public static final float[] VALUES = new float[1152];
  static {
    h2o_nn_32x6_ReLU_02_Weight_1_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_02_Weight_1_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 0.04360707f;
      sa[1] = 0.254069f;
      sa[2] = 0.14290984f;
      sa[3] = 0.14572537f;
      sa[4] = -0.19449833f;
      sa[5] = -0.21073356f;
      sa[6] = -0.085620075f;
      sa[7] = 0.19778045f;
      sa[8] = 0.08854168f;
      sa[9] = -0.15452091f;
      sa[10] = -0.195005f;
      sa[11] = -0.1714973f;
      sa[12] = 0.024829851f;
      sa[13] = -0.29296342f;
      sa[14] = -0.21349502f;
      sa[15] = -0.0713604f;
      sa[16] = 0.113992475f;
      sa[17] = 0.14624994f;
      sa[18] = -0.20983355f;
      sa[19] = 0.15937205f;
      sa[20] = 0.16829833f;
      sa[21] = -0.3308929f;
      sa[22] = 0.17617749f;
      sa[23] = -0.2443738f;
      sa[24] = 0.22195148f;
      sa[25] = 0.11698808f;
      sa[26] = -0.26713035f;
      sa[27] = 0.24826096f;
      sa[28] = 0.15019014f;
      sa[29] = -0.31319514f;
      sa[30] = -0.21527155f;
      sa[31] = 0.085446134f;
      sa[32] = 0.12939858f;
      sa[33] = -0.25959104f;
      sa[34] = 0.11442001f;
      sa[35] = -0.07148459f;
      sa[36] = 0.0054807873f;
      sa[37] = 0.25136027f;
      sa[38] = -0.016749363f;
      sa[39] = -0.038895473f;
      sa[40] = -0.0112093985f;
      sa[41] = -0.06409066f;
      sa[42] = -0.087695286f;
      sa[43] = 0.052131336f;
      sa[44] = 0.18473606f;
      sa[45] = -0.19153321f;
      sa[46] = 0.13098934f;
      sa[47] = -0.048353836f;
      sa[48] = 0.22863257f;
      sa[49] = 0.2717756f;
      sa[50] = 0.25311953f;
      sa[51] = -0.285846f;
      sa[52] = -0.04024835f;
      sa[53] = 0.23928452f;
      sa[54] = 0.23311912f;
      sa[55] = 0.13248612f;
      sa[56] = -0.22022045f;
      sa[57] = -0.37706405f;
      sa[58] = 0.26270983f;
      sa[59] = -0.26984522f;
      sa[60] = -0.19553839f;
      sa[61] = 0.24037285f;
      sa[62] = 0.11231198f;
      sa[63] = 0.111857496f;
      sa[64] = 0.048910674f;
      sa[65] = -0.0106433565f;
      sa[66] = -0.022889225f;
      sa[67] = 0.0031821844f;
      sa[68] = -0.21444131f;
      sa[69] = -0.034310546f;
      sa[70] = -0.05878641f;
      sa[71] = 0.35661697f;
      sa[72] = -0.17123419f;
      sa[73] = 0.16545881f;
      sa[74] = -0.20032488f;
      sa[75] = 0.051395852f;
      sa[76] = -0.13232544f;
      sa[77] = -0.0030672397f;
      sa[78] = -0.019597165f;
      sa[79] = 0.1280623f;
      sa[80] = -0.25974092f;
      sa[81] = -0.12484691f;
      sa[82] = -0.069682024f;
      sa[83] = 0.06304043f;
      sa[84] = -0.015196434f;
      sa[85] = -0.1412449f;
      sa[86] = 0.14676897f;
      sa[87] = 0.22382228f;
      sa[88] = 0.17644098f;
      sa[89] = 0.06713604f;
      sa[90] = -0.12877098f;
      sa[91] = 0.16799735f;
      sa[92] = 0.1058034f;
      sa[93] = -0.1651636f;
      sa[94] = -0.15201512f;
      sa[95] = -0.20120005f;
      sa[96] = 0.0911279f;
      sa[97] = 0.025738662f;
      sa[98] = 0.2093898f;
      sa[99] = -0.05427303f;
      sa[100] = -0.02378494f;
      sa[101] = -0.13929024f;
      sa[102] = -0.2010629f;
      sa[103] = -0.03496802f;
      sa[104] = -0.07370128f;
      sa[105] = -0.1771314f;
      sa[106] = -0.16629213f;
      sa[107] = 0.15986392f;
      sa[108] = 0.08903814f;
      sa[109] = -0.20590098f;
      sa[110] = -0.14124428f;
      sa[111] = 0.16993314f;
      sa[112] = 0.14773609f;
      sa[113] = 0.07635889f;
      sa[114] = -0.12174643f;
      sa[115] = -0.079062104f;
      sa[116] = -0.29915315f;
      sa[117] = 0.040149763f;
      sa[118] = -0.2697746f;
      sa[119] = -0.25883147f;
      sa[120] = 0.20952742f;
      sa[121] = 0.24017051f;
      sa[122] = 0.28523412f;
      sa[123] = 0.23844352f;
      sa[124] = 0.27153167f;
      sa[125] = 0.31185177f;
      sa[126] = -0.2676051f;
      sa[127] = -0.119178064f;
      sa[128] = 0.052374862f;
      sa[129] = 0.1412225f;
      sa[130] = -0.12241862f;
      sa[131] = 0.31650817f;
      sa[132] = 0.18008383f;
      sa[133] = -0.29446235f;
      sa[134] = 0.09248483f;
      sa[135] = -0.14913017f;
      sa[136] = -0.25027192f;
      sa[137] = -0.014714969f;
      sa[138] = 0.14012554f;
      sa[139] = -0.044406354f;
      sa[140] = -0.089231305f;
      sa[141] = -0.3071487f;
      sa[142] = 0.26191097f;
      sa[143] = -0.16915205f;
      sa[144] = 0.19505925f;
      sa[145] = -0.12993853f;
      sa[146] = -0.24858211f;
      sa[147] = 0.21431881f;
      sa[148] = 0.19578427f;
      sa[149] = 0.1847656f;
      sa[150] = 0.28611907f;
      sa[151] = -0.23125453f;
      sa[152] = -0.0016640401f;
      sa[153] = 0.29988542f;
      sa[154] = 0.25031585f;
      sa[155] = -0.19153826f;
      sa[156] = 0.12445546f;
      sa[157] = -0.19133869f;
      sa[158] = 0.0602849f;
      sa[159] = 0.06202755f;
      sa[160] = 0.072161146f;
      sa[161] = 0.18235034f;
      sa[162] = -0.13587582f;
      sa[163] = -0.114503324f;
      sa[164] = 0.27716237f;
      sa[165] = 0.034741916f;
      sa[166] = -0.034716662f;
      sa[167] = -0.07598307f;
      sa[168] = 0.14249691f;
      sa[169] = 0.26464447f;
      sa[170] = 0.035167612f;
      sa[171] = -0.106143385f;
      sa[172] = -0.017441437f;
      sa[173] = -0.10057954f;
      sa[174] = -0.0035418111f;
      sa[175] = -0.21505888f;
      sa[176] = -0.005479375f;
      sa[177] = -0.0633554f;
      sa[178] = -0.13547827f;
      sa[179] = 0.05291585f;
      sa[180] = -0.0043803966f;
      sa[181] = -0.21743631f;
      sa[182] = -0.08327349f;
      sa[183] = 0.121153906f;
      sa[184] = 0.240026f;
      sa[185] = 0.13205637f;
      sa[186] = -0.30993646f;
      sa[187] = 0.09866679f;
      sa[188] = 0.03891482f;
      sa[189] = 0.25933644f;
      sa[190] = 0.11078782f;
      sa[191] = -0.037658114f;
      sa[192] = -0.0754665f;
      sa[193] = 0.21344587f;
      sa[194] = 0.100232154f;
      sa[195] = 0.30507854f;
      sa[196] = 0.28036618f;
      sa[197] = -0.025336426f;
      sa[198] = 0.11446137f;
      sa[199] = -0.10853406f;
      sa[200] = 0.093954675f;
      sa[201] = -0.2443853f;
      sa[202] = 0.1623057f;
      sa[203] = 0.0061471025f;
      sa[204] = -0.12521261f;
      sa[205] = 0.24537073f;
      sa[206] = 0.20809723f;
      sa[207] = 0.11292256f;
      sa[208] = -0.2152689f;
      sa[209] = -0.07825473f;
      sa[210] = -0.28542584f;
      sa[211] = -0.23593052f;
      sa[212] = 0.35289326f;
      sa[213] = -0.25595745f;
      sa[214] = -0.17528585f;
      sa[215] = -0.003282355f;
      sa[216] = 0.20741455f;
      sa[217] = 0.15039854f;
      sa[218] = -0.21985509f;
      sa[219] = 0.22488952f;
      sa[220] = -0.22511873f;
      sa[221] = 0.010368837f;
      sa[222] = 0.21228354f;
      sa[223] = 0.1339582f;
      sa[224] = 0.21951301f;
      sa[225] = 0.27668718f;
      sa[226] = -0.14274552f;
      sa[227] = 0.4139844f;
      sa[228] = 0.11614876f;
      sa[229] = 0.06467893f;
      sa[230] = 0.2774216f;
      sa[231] = -0.2060481f;
      sa[232] = -0.2528199f;
      sa[233] = 0.05974529f;
      sa[234] = 0.15561017f;
      sa[235] = -0.3289989f;
      sa[236] = -0.013906201f;
      sa[237] = -0.20102678f;
      sa[238] = -0.18191405f;
      sa[239] = 0.14529987f;
      sa[240] = -0.027623612f;
      sa[241] = -0.092687756f;
      sa[242] = -0.07770215f;
      sa[243] = -0.24129239f;
      sa[244] = -0.20258518f;
      sa[245] = -0.12424884f;
      sa[246] = -0.2873442f;
      sa[247] = -0.071467645f;
      sa[248] = 0.29934883f;
      sa[249] = 0.32449207f;
      sa[250] = -0.26249245f;
      sa[251] = -0.19495058f;
      sa[252] = -0.21722892f;
      sa[253] = -0.3207723f;
      sa[254] = -0.27416387f;
      sa[255] = 0.2551494f;
      sa[256] = -0.1509291f;
      sa[257] = 0.28504094f;
      sa[258] = -0.23015004f;
      sa[259] = -0.091831766f;
      sa[260] = -0.17859815f;
      sa[261] = -0.14800854f;
      sa[262] = -0.20517884f;
      sa[263] = 0.30524632f;
      sa[264] = -0.11422785f;
      sa[265] = 0.09056595f;
      sa[266] = -0.23314181f;
      sa[267] = -0.14856403f;
      sa[268] = 0.07941433f;
      sa[269] = -0.08554875f;
      sa[270] = -0.08127917f;
      sa[271] = 0.13499111f;
      sa[272] = -0.046574317f;
      sa[273] = -0.086611174f;
      sa[274] = 0.12903059f;
      sa[275] = 0.08059564f;
      sa[276] = 0.044752624f;
      sa[277] = -0.23103017f;
      sa[278] = -0.14159557f;
      sa[279] = 0.21428815f;
      sa[280] = -0.09933508f;
      sa[281] = 0.3413376f;
      sa[282] = -0.041593403f;
      sa[283] = 0.056125086f;
      sa[284] = 0.10753179f;
      sa[285] = -0.051412124f;
      sa[286] = 0.24030545f;
      sa[287] = 0.12372704f;
      sa[288] = -0.20509726f;
      sa[289] = -0.12301517f;
      sa[290] = -0.019663412f;
      sa[291] = -0.039239086f;
      sa[292] = 0.08607527f;
      sa[293] = -0.0824455f;
      sa[294] = 0.10158881f;
      sa[295] = 0.12346726f;
      sa[296] = 0.19096005f;
      sa[297] = 0.24231014f;
      sa[298] = 0.03444699f;
      sa[299] = -0.085215285f;
      sa[300] = 0.020364994f;
      sa[301] = -0.03250162f;
      sa[302] = 0.20460603f;
      sa[303] = 0.055554032f;
      sa[304] = -0.15664883f;
      sa[305] = 0.04637226f;
      sa[306] = 0.20878287f;
      sa[307] = -0.060976192f;
      sa[308] = 0.053021602f;
      sa[309] = 0.079793595f;
      sa[310] = 0.27865136f;
      sa[311] = 0.2765175f;
      sa[312] = -0.091587976f;
      sa[313] = -0.06607902f;
      sa[314] = -0.15863064f;
      sa[315] = 0.070362955f;
      sa[316] = -0.05912953f;
      sa[317] = -0.15452395f;
      sa[318] = 0.06580536f;
      sa[319] = 0.2228837f;
      sa[320] = -0.076465815f;
      sa[321] = 0.023423323f;
      sa[322] = 0.29067558f;
      sa[323] = -0.059354294f;
      sa[324] = -0.028478216f;
      sa[325] = 0.2514744f;
      sa[326] = -0.26438123f;
      sa[327] = -0.048809864f;
      sa[328] = -0.013446075f;
      sa[329] = 0.25525263f;
      sa[330] = -0.14727467f;
      sa[331] = 0.010941946f;
      sa[332] = -0.2542216f;
      sa[333] = 0.077924356f;
      sa[334] = -0.11065745f;
      sa[335] = 0.24054842f;
      sa[336] = -0.17520572f;
      sa[337] = -0.1538427f;
      sa[338] = 0.23996809f;
      sa[339] = -0.2442109f;
      sa[340] = -0.3229429f;
      sa[341] = -0.43298423f;
      sa[342] = 0.17644837f;
      sa[343] = -0.15266776f;
      sa[344] = -0.16841479f;
      sa[345] = 0.23164645f;
      sa[346] = 0.21534242f;
      sa[347] = -0.22426222f;
      sa[348] = 0.24445747f;
      sa[349] = -0.3025668f;
      sa[350] = -0.22160392f;
      sa[351] = 0.032999136f;
      sa[352] = 0.17545453f;
      sa[353] = -0.01559343f;
      sa[354] = 0.09521358f;
      sa[355] = 0.07144529f;
      sa[356] = -0.23077351f;
      sa[357] = 0.2595953f;
      sa[358] = -0.35147196f;
      sa[359] = -0.03202527f;
      sa[360] = 0.035186633f;
      sa[361] = -0.072074085f;
      sa[362] = -0.1317259f;
      sa[363] = 0.075725056f;
      sa[364] = -0.10320281f;
      sa[365] = -0.16359292f;
      sa[366] = 0.049023684f;
      sa[367] = -0.29375276f;
      sa[368] = -0.2108674f;
      sa[369] = 0.23739341f;
      sa[370] = -0.20826976f;
      sa[371] = 0.084496185f;
      sa[372] = -0.025094077f;
      sa[373] = 0.3019888f;
      sa[374] = -0.09675057f;
      sa[375] = -0.28794372f;
      sa[376] = -0.27048814f;
      sa[377] = -0.2087717f;
      sa[378] = 0.2972103f;
      sa[379] = 0.14476083f;
      sa[380] = -0.17596632f;
      sa[381] = -0.14948106f;
      sa[382] = -0.04755621f;
      sa[383] = -0.17988306f;
      sa[384] = -0.08267336f;
      sa[385] = 0.124481015f;
      sa[386] = -0.22959048f;
      sa[387] = -0.109111235f;
      sa[388] = 0.026688442f;
      sa[389] = -0.05119117f;
      sa[390] = -0.0058334f;
      sa[391] = -0.16665451f;
      sa[392] = 0.12746139f;
      sa[393] = 0.13952175f;
      sa[394] = 0.018782726f;
      sa[395] = 0.30843154f;
      sa[396] = 0.22740537f;
      sa[397] = -0.2865717f;
      sa[398] = 0.15830608f;
      sa[399] = -0.096241824f;
      sa[400] = 0.22130784f;
      sa[401] = 0.30252293f;
      sa[402] = -0.037034348f;
      sa[403] = 0.14437309f;
      sa[404] = 0.16763368f;
      sa[405] = -0.22327147f;
      sa[406] = -0.012717812f;
      sa[407] = 0.11427485f;
      sa[408] = -0.15810259f;
      sa[409] = -0.17542413f;
      sa[410] = -0.023278447f;
      sa[411] = 0.1982002f;
      sa[412] = -0.107905395f;
      sa[413] = 0.07149414f;
      sa[414] = 0.16154788f;
      sa[415] = 0.30149138f;
      sa[416] = -0.17794667f;
      sa[417] = 0.011405526f;
      sa[418] = 0.0541983f;
      sa[419] = 0.23620878f;
      sa[420] = 0.23224135f;
      sa[421] = 0.28721365f;
      sa[422] = 0.23348336f;
      sa[423] = 0.06446745f;
      sa[424] = 0.08318554f;
      sa[425] = -0.083829656f;
      sa[426] = -0.25326818f;
      sa[427] = 0.14313649f;
      sa[428] = -0.1358736f;
      sa[429] = -0.22065036f;
      sa[430] = 0.12787415f;
      sa[431] = -0.026964927f;
      sa[432] = -0.062873535f;
      sa[433] = 0.055423122f;
      sa[434] = 0.20445825f;
      sa[435] = -0.072986275f;
      sa[436] = -0.21296364f;
      sa[437] = -0.19395919f;
      sa[438] = 0.030627748f;
      sa[439] = -0.017523523f;
      sa[440] = 0.26234096f;
      sa[441] = -0.39299342f;
      sa[442] = -0.0032423039f;
      sa[443] = 0.057948902f;
      sa[444] = -0.24762791f;
      sa[445] = 0.06865817f;
      sa[446] = 0.21177007f;
      sa[447] = 0.03469729f;
      sa[448] = 0.15313578f;
      sa[449] = 0.17422837f;
      sa[450] = -0.11132981f;
      sa[451] = 0.15121569f;
      sa[452] = 0.07848502f;
      sa[453] = -0.07934786f;
      sa[454] = -0.18496941f;
      sa[455] = -0.0899628f;
      sa[456] = -0.075633004f;
      sa[457] = 0.06707505f;
      sa[458] = -0.20545222f;
      sa[459] = 0.328777f;
      sa[460] = 0.17053814f;
      sa[461] = 0.27148497f;
      sa[462] = 0.071651906f;
      sa[463] = 0.19125323f;
      sa[464] = -0.46240363f;
      sa[465] = 0.24562962f;
      sa[466] = 0.07939889f;
      sa[467] = 0.16088082f;
      sa[468] = 0.07537008f;
      sa[469] = 0.25343797f;
      sa[470] = 0.15480283f;
      sa[471] = -0.037029024f;
      sa[472] = 0.043166522f;
      sa[473] = -0.06514782f;
      sa[474] = 0.035447575f;
      sa[475] = 0.11750901f;
      sa[476] = 0.23680393f;
      sa[477] = -0.18693379f;
      sa[478] = 0.055490546f;
      sa[479] = -0.1732257f;
      sa[480] = -0.28050894f;
      sa[481] = -0.17631605f;
      sa[482] = -0.21682763f;
      sa[483] = 0.17322892f;
      sa[484] = 0.20010644f;
      sa[485] = 0.062273048f;
      sa[486] = -0.020455752f;
      sa[487] = -0.14762439f;
      sa[488] = -0.19267587f;
      sa[489] = 0.08567698f;
      sa[490] = 0.014917237f;
      sa[491] = -0.26519564f;
      sa[492] = 0.17573883f;
      sa[493] = 0.21423672f;
      sa[494] = -0.22489184f;
      sa[495] = 0.19963145f;
      sa[496] = -0.01146659f;
      sa[497] = 0.0646831f;
      sa[498] = 0.17568302f;
      sa[499] = 0.13917628f;
      sa[500] = -0.14101504f;
      sa[501] = 0.042891394f;
      sa[502] = 0.21189438f;
      sa[503] = 0.036117926f;
      sa[504] = -0.15392148f;
      sa[505] = -0.21487586f;
      sa[506] = 0.19341204f;
      sa[507] = -0.024502447f;
      sa[508] = 0.06891463f;
      sa[509] = 0.2195014f;
      sa[510] = 0.17268005f;
      sa[511] = 0.014485013f;
      sa[512] = 0.066521615f;
      sa[513] = -0.05446897f;
      sa[514] = 0.28419814f;
      sa[515] = -0.22898409f;
      sa[516] = 0.058894932f;
      sa[517] = 0.113476105f;
      sa[518] = 0.18231319f;
      sa[519] = -0.023896001f;
      sa[520] = 0.2084485f;
      sa[521] = 0.28310543f;
      sa[522] = 0.07454104f;
      sa[523] = 0.21006276f;
      sa[524] = 0.19564076f;
      sa[525] = 0.12558083f;
      sa[526] = 0.0017586685f;
      sa[527] = -0.0201083f;
      sa[528] = 0.030598719f;
      sa[529] = 0.15763775f;
      sa[530] = -0.17226398f;
      sa[531] = 0.11631233f;
      sa[532] = 0.16482785f;
      sa[533] = 0.1151465f;
      sa[534] = 0.13660464f;
      sa[535] = -0.027499083f;
      sa[536] = 0.18337235f;
      sa[537] = -0.19690481f;
      sa[538] = 0.2210095f;
      sa[539] = 0.29728025f;
      sa[540] = -0.20723131f;
      sa[541] = -0.13617623f;
      sa[542] = -0.11092508f;
      sa[543] = -0.186031f;
      sa[544] = 0.12754472f;
      sa[545] = 0.05610078f;
      sa[546] = 0.012666288f;
      sa[547] = 0.13769151f;
      sa[548] = 0.10595313f;
      sa[549] = 0.12933077f;
      sa[550] = -0.04056246f;
      sa[551] = -0.07490513f;
      sa[552] = 0.0033580181f;
      sa[553] = -0.111575134f;
      sa[554] = -0.21758938f;
      sa[555] = -0.18896964f;
      sa[556] = -0.19819976f;
      sa[557] = -0.3025684f;
      sa[558] = -0.21496291f;
      sa[559] = 0.05419288f;
      sa[560] = -0.27545065f;
      sa[561] = -0.049594298f;
      sa[562] = 0.15620674f;
      sa[563] = -0.0836616f;
      sa[564] = 0.20597762f;
      sa[565] = -0.052640885f;
      sa[566] = 0.2513207f;
      sa[567] = -0.08796959f;
      sa[568] = -0.057877857f;
      sa[569] = 0.052697223f;
      sa[570] = -0.04096978f;
      sa[571] = -0.045344703f;
      sa[572] = -0.09830873f;
      sa[573] = 0.18914525f;
      sa[574] = 0.18369122f;
      sa[575] = -0.296354f;
      sa[576] = -0.04682131f;
      sa[577] = 0.06731951f;
      sa[578] = 0.122782886f;
      sa[579] = -0.060237594f;
      sa[580] = 0.09439447f;
      sa[581] = -0.14634973f;
      sa[582] = 0.08906863f;
      sa[583] = 0.05025677f;
      sa[584] = 0.17769912f;
      sa[585] = 0.22756341f;
      sa[586] = -0.12302445f;
      sa[587] = -0.09030227f;
      sa[588] = 0.089605086f;
      sa[589] = 0.115840636f;
      sa[590] = -0.017420556f;
      sa[591] = 0.04047313f;
      sa[592] = -0.29316095f;
      sa[593] = -0.20907505f;
      sa[594] = -0.055998933f;
      sa[595] = -0.07899939f;
      sa[596] = 0.31561843f;
      sa[597] = 0.025804915f;
      sa[598] = 0.25499198f;
      sa[599] = 0.03038754f;
      sa[600] = -0.2893661f;
      sa[601] = 0.24643323f;
      sa[602] = -0.07530783f;
      sa[603] = 0.20128654f;
      sa[604] = 0.24563207f;
      sa[605] = 0.18229118f;
      sa[606] = 0.19276074f;
      sa[607] = 0.050059408f;
      sa[608] = -0.015310026f;
      sa[609] = 0.099309f;
      sa[610] = 0.031482976f;
      sa[611] = -0.12683678f;
      sa[612] = -0.121668376f;
      sa[613] = 0.027879477f;
      sa[614] = 0.060139272f;
      sa[615] = -0.112302996f;
      sa[616] = 0.10763505f;
      sa[617] = -0.22166264f;
      sa[618] = -0.090388305f;
      sa[619] = -0.15203454f;
      sa[620] = -0.08189082f;
      sa[621] = -0.30204093f;
      sa[622] = -0.3916404f;
      sa[623] = -0.31332144f;
      sa[624] = -0.058619693f;
      sa[625] = 0.25902614f;
      sa[626] = 0.0142039955f;
      sa[627] = 0.23117271f;
      sa[628] = -0.26492718f;
      sa[629] = -0.10275665f;
      sa[630] = -0.11939732f;
      sa[631] = 0.2630989f;
      sa[632] = 0.06104685f;
      sa[633] = -0.15396856f;
      sa[634] = -0.20111282f;
      sa[635] = 0.13894221f;
      sa[636] = -0.15437146f;
      sa[637] = -0.054527793f;
      sa[638] = -0.07418051f;
      sa[639] = 0.03898664f;
      sa[640] = -0.1545634f;
      sa[641] = -0.2633966f;
      sa[642] = 0.20097718f;
      sa[643] = -0.31264144f;
      sa[644] = -0.24666294f;
      sa[645] = -0.20032786f;
      sa[646] = 0.36449957f;
      sa[647] = -0.18647458f;
      sa[648] = -0.11095695f;
      sa[649] = -0.067834385f;
      sa[650] = 0.01325204f;
      sa[651] = -0.11670453f;
      sa[652] = 0.12902872f;
      sa[653] = -0.12319699f;
      sa[654] = -0.13181794f;
      sa[655] = -0.18165612f;
      sa[656] = 0.006554724f;
      sa[657] = 0.123446904f;
      sa[658] = -0.27116832f;
      sa[659] = -0.2806172f;
      sa[660] = -0.26538843f;
      sa[661] = -0.10730231f;
      sa[662] = -0.31543854f;
      sa[663] = 0.092677854f;
      sa[664] = -0.17736968f;
      sa[665] = 0.27685332f;
      sa[666] = -0.018253881f;
      sa[667] = -0.20224997f;
      sa[668] = 0.23271166f;
      sa[669] = -0.10791477f;
      sa[670] = 0.11055695f;
      sa[671] = 0.053677898f;
      sa[672] = -0.3101811f;
      sa[673] = 0.13836156f;
      sa[674] = 0.2559282f;
      sa[675] = -0.2283764f;
      sa[676] = -0.08709675f;
      sa[677] = -0.17101769f;
      sa[678] = 0.21429113f;
      sa[679] = -0.035862003f;
      sa[680] = -0.002864427f;
      sa[681] = 0.036129907f;
      sa[682] = 0.11733438f;
      sa[683] = -0.052692734f;
      sa[684] = -0.0080643585f;
      sa[685] = 0.05443677f;
      sa[686] = -0.14545566f;
      sa[687] = -0.17456853f;
      sa[688] = -0.33177805f;
      sa[689] = -0.24584094f;
      sa[690] = -0.038711693f;
      sa[691] = 0.081956476f;
      sa[692] = -0.12959974f;
      sa[693] = -0.16600896f;
      sa[694] = 0.30578613f;
      sa[695] = -0.022986503f;
      sa[696] = -0.06192207f;
      sa[697] = -0.1251457f;
      sa[698] = -0.1372993f;
      sa[699] = 0.323162f;
      sa[700] = 0.19098042f;
      sa[701] = 0.18571773f;
      sa[702] = 0.17172995f;
      sa[703] = 0.0053600776f;
      sa[704] = -0.263144f;
      sa[705] = -0.102820806f;
      sa[706] = -0.1444672f;
      sa[707] = 0.021591727f;
      sa[708] = 0.034364555f;
      sa[709] = -0.24123596f;
      sa[710] = 0.24248143f;
      sa[711] = -0.039335825f;
      sa[712] = 0.031233454f;
      sa[713] = 0.08642162f;
      sa[714] = 0.16178857f;
      sa[715] = 0.06759682f;
      sa[716] = 0.10257241f;
      sa[717] = 0.14149141f;
      sa[718] = -0.008235616f;
      sa[719] = 0.13036028f;
      sa[720] = -0.15389709f;
      sa[721] = 0.2438366f;
      sa[722] = -0.18340394f;
      sa[723] = 0.030059397f;
      sa[724] = 0.015680866f;
      sa[725] = -0.31247264f;
      sa[726] = -0.25639486f;
      sa[727] = -0.24479063f;
      sa[728] = -0.04021128f;
      sa[729] = -0.04782131f;
      sa[730] = 0.11450861f;
      sa[731] = -0.18906623f;
      sa[732] = 0.17379586f;
      sa[733] = 0.19660178f;
      sa[734] = -0.13037686f;
      sa[735] = 0.3344362f;
      sa[736] = -0.018201854f;
      sa[737] = 0.17540088f;
      sa[738] = -0.23974639f;
      sa[739] = -0.32755786f;
      sa[740] = -0.23819633f;
      sa[741] = -0.27442896f;
      sa[742] = 0.07928749f;
      sa[743] = 0.09062442f;
      sa[744] = 0.010381498f;
      sa[745] = -0.20552841f;
      sa[746] = 0.073163316f;
      sa[747] = -0.124188386f;
      sa[748] = -0.13481332f;
      sa[749] = -0.1683013f;
      sa[750] = 0.16955425f;
      sa[751] = 0.27593786f;
      sa[752] = 0.015514102f;
      sa[753] = 0.344454f;
      sa[754] = -0.027284533f;
      sa[755] = 0.10967575f;
      sa[756] = -0.028303556f;
      sa[757] = 0.3015245f;
      sa[758] = -0.21681647f;
      sa[759] = 0.048780054f;
      sa[760] = -0.18794459f;
      sa[761] = -0.043654818f;
      sa[762] = -0.19711815f;
      sa[763] = 0.124691926f;
      sa[764] = 0.13667105f;
      sa[765] = 0.0021571056f;
      sa[766] = -0.16395906f;
      sa[767] = 0.14540464f;
      sa[768] = -0.16932535f;
      sa[769] = -0.30246568f;
      sa[770] = -0.039619427f;
      sa[771] = 0.03354198f;
      sa[772] = 0.07674078f;
      sa[773] = -0.09973955f;
      sa[774] = -0.031994123f;
      sa[775] = 0.2797658f;
      sa[776] = -0.055157185f;
      sa[777] = 0.017132703f;
      sa[778] = 0.11911324f;
      sa[779] = -0.13020651f;
      sa[780] = -0.036148213f;
      sa[781] = 0.004708629f;
      sa[782] = 0.12518358f;
      sa[783] = -0.15367219f;
      sa[784] = -0.11484468f;
      sa[785] = -0.12902512f;
      sa[786] = -0.121216394f;
      sa[787] = -0.18455094f;
      sa[788] = -0.123819016f;
      sa[789] = 0.19456041f;
      sa[790] = -0.09428796f;
      sa[791] = -0.060865536f;
      sa[792] = 0.074995436f;
      sa[793] = -0.14425938f;
      sa[794] = -0.23559932f;
      sa[795] = 0.04013724f;
      sa[796] = 0.24967493f;
      sa[797] = -0.19511601f;
      sa[798] = -0.28038138f;
      sa[799] = -0.24434471f;
      sa[800] = 0.12622888f;
      sa[801] = 0.028147947f;
      sa[802] = 0.19627896f;
      sa[803] = 0.05079074f;
      sa[804] = 0.2004385f;
      sa[805] = 0.27002212f;
      sa[806] = 0.22938545f;
      sa[807] = 0.15934582f;
      sa[808] = -0.04314719f;
      sa[809] = -0.25643227f;
      sa[810] = 0.0910114f;
      sa[811] = 0.17895372f;
      sa[812] = 0.15653788f;
      sa[813] = -0.2604795f;
      sa[814] = 0.061582502f;
      sa[815] = -0.17015159f;
      sa[816] = -0.151347f;
      sa[817] = -0.2069039f;
      sa[818] = 0.017398145f;
      sa[819] = -0.116348095f;
      sa[820] = -0.26208898f;
      sa[821] = -0.17408356f;
      sa[822] = -0.2502702f;
      sa[823] = 0.093919754f;
      sa[824] = 0.1502119f;
      sa[825] = 0.30415812f;
      sa[826] = -0.24941093f;
      sa[827] = -0.26252636f;
      sa[828] = 0.14333595f;
      sa[829] = -0.08522003f;
      sa[830] = 0.10650594f;
      sa[831] = 0.22118285f;
      sa[832] = 0.15546148f;
      sa[833] = 0.04384642f;
      sa[834] = 0.13389976f;
      sa[835] = -0.10769022f;
      sa[836] = 0.22544482f;
      sa[837] = -0.18685888f;
      sa[838] = 0.09874705f;
      sa[839] = -0.22751679f;
      sa[840] = 0.16154861f;
      sa[841] = 0.06657168f;
      sa[842] = 0.09585284f;
      sa[843] = 0.0027413315f;
      sa[844] = 0.016309083f;
      sa[845] = 0.086098894f;
      sa[846] = -0.27110475f;
      sa[847] = -0.12621455f;
      sa[848] = 0.24474823f;
      sa[849] = 0.31743315f;
      sa[850] = -0.02272385f;
      sa[851] = 0.13856517f;
      sa[852] = 0.1729496f;
      sa[853] = 0.06707735f;
      sa[854] = 0.23281063f;
      sa[855] = 0.090446346f;
      sa[856] = 0.14326271f;
      sa[857] = -0.07073412f;
      sa[858] = 0.15245944f;
      sa[859] = 0.14372867f;
      sa[860] = 0.30337402f;
      sa[861] = -0.14310563f;
      sa[862] = -0.14115418f;
      sa[863] = -0.021814784f;
      sa[864] = -0.221709f;
      sa[865] = 0.25071496f;
      sa[866] = -0.09462397f;
      sa[867] = -0.008675724f;
      sa[868] = -0.20672886f;
      sa[869] = 0.22328848f;
      sa[870] = 0.0058674295f;
      sa[871] = 0.15331024f;
      sa[872] = 0.21787448f;
      sa[873] = -0.013874189f;
      sa[874] = 0.026526945f;
      sa[875] = -0.2474162f;
      sa[876] = -0.19694054f;
      sa[877] = -0.1700454f;
      sa[878] = 0.08644343f;
      sa[879] = 0.20995604f;
      sa[880] = -0.08997237f;
      sa[881] = -0.05275683f;
      sa[882] = 0.19817002f;
      sa[883] = 0.27013177f;
      sa[884] = -0.15049912f;
      sa[885] = -0.19037777f;
      sa[886] = 0.10686312f;
      sa[887] = -0.07458617f;
      sa[888] = 0.013737037f;
      sa[889] = 0.15944181f;
      sa[890] = -0.2910576f;
      sa[891] = 0.38961682f;
      sa[892] = 0.13522957f;
      sa[893] = 0.18772663f;
      sa[894] = 0.021374365f;
      sa[895] = 0.16178915f;
      sa[896] = -0.15622525f;
      sa[897] = 0.13804294f;
      sa[898] = -0.018089628f;
      sa[899] = 0.2481268f;
      sa[900] = -0.07868218f;
      sa[901] = 0.10265868f;
      sa[902] = -0.24228676f;
      sa[903] = -0.24501948f;
      sa[904] = 0.15732606f;
      sa[905] = 0.18018734f;
      sa[906] = -0.22987239f;
      sa[907] = -0.21671946f;
      sa[908] = -0.19796494f;
      sa[909] = -0.010284661f;
      sa[910] = -4.6004268E-4f;
      sa[911] = -0.10058232f;
      sa[912] = -0.028180422f;
      sa[913] = 0.050426852f;
      sa[914] = -0.16138056f;
      sa[915] = 0.059922025f;
      sa[916] = 0.17676479f;
      sa[917] = -0.06286588f;
      sa[918] = 0.1711485f;
      sa[919] = -0.021287568f;
      sa[920] = 0.09902237f;
      sa[921] = -0.1164138f;
      sa[922] = -0.14050367f;
      sa[923] = -0.16207689f;
      sa[924] = -0.08912913f;
      sa[925] = -0.16209075f;
      sa[926] = 0.08310592f;
      sa[927] = -0.031707857f;
      sa[928] = 0.18884596f;
      sa[929] = 0.09122097f;
      sa[930] = 0.11805705f;
      sa[931] = -0.061869442f;
      sa[932] = 0.12219509f;
      sa[933] = 0.07394554f;
      sa[934] = 0.19876419f;
      sa[935] = -0.22981808f;
      sa[936] = 0.06912948f;
      sa[937] = 0.20559758f;
      sa[938] = -0.08954294f;
      sa[939] = 0.0123203145f;
      sa[940] = -0.09872852f;
      sa[941] = -0.30213234f;
      sa[942] = -0.23730808f;
      sa[943] = -0.155477f;
      sa[944] = -0.24460861f;
      sa[945] = 0.10662757f;
      sa[946] = 0.1369479f;
      sa[947] = 0.23861845f;
      sa[948] = 0.10701986f;
      sa[949] = -0.1667336f;
      sa[950] = 0.10429535f;
      sa[951] = -0.06798607f;
      sa[952] = -0.19798453f;
      sa[953] = -0.08510449f;
      sa[954] = -0.2562812f;
      sa[955] = 0.10473408f;
      sa[956] = -0.022497363f;
      sa[957] = -0.008357177f;
      sa[958] = 0.08631192f;
      sa[959] = -0.1474427f;
      sa[960] = 0.350007f;
      sa[961] = 0.03399579f;
      sa[962] = -0.04863402f;
      sa[963] = -0.022840938f;
      sa[964] = -0.1766705f;
      sa[965] = 0.20105685f;
      sa[966] = -0.10329446f;
      sa[967] = -0.26470193f;
      sa[968] = 0.17472667f;
      sa[969] = 0.003022515f;
      sa[970] = 0.31025591f;
      sa[971] = 0.033915143f;
      sa[972] = -0.1438117f;
      sa[973] = -0.2498255f;
      sa[974] = -0.3615812f;
      sa[975] = -0.29933065f;
      sa[976] = -0.041432045f;
      sa[977] = 0.031516008f;
      sa[978] = -0.107127056f;
      sa[979] = 0.15671833f;
      sa[980] = 0.11424743f;
      sa[981] = -0.28017297f;
      sa[982] = 0.08309732f;
      sa[983] = -0.07507564f;
      sa[984] = -0.30817342f;
      sa[985] = 0.018066453f;
      sa[986] = -0.30520296f;
      sa[987] = 0.04894695f;
      sa[988] = 0.1087786f;
      sa[989] = 0.08642979f;
      sa[990] = 0.26556304f;
      sa[991] = -0.32713953f;
      sa[992] = -0.19184403f;
      sa[993] = 0.03032462f;
      sa[994] = -0.15975572f;
      sa[995] = -0.2640519f;
      sa[996] = 0.09563922f;
      sa[997] = 0.095484145f;
      sa[998] = 0.116400786f;
      sa[999] = 0.17681745f;
      sa[1000] = 0.028113512f;
      sa[1001] = 0.2909317f;
      sa[1002] = 0.26658687f;
      sa[1003] = -0.04827564f;
      sa[1004] = 0.09331637f;
      sa[1005] = -0.14752468f;
      sa[1006] = -0.1418255f;
      sa[1007] = -0.043634336f;
      sa[1008] = 0.17839101f;
      sa[1009] = 0.0467808f;
      sa[1010] = -0.058406398f;
      sa[1011] = 0.38465846f;
      sa[1012] = -0.0823274f;
      sa[1013] = 0.1379134f;
      sa[1014] = 0.2113505f;
      sa[1015] = -0.34855053f;
      sa[1016] = 0.23124224f;
      sa[1017] = 0.046308205f;
      sa[1018] = -0.11597024f;
      sa[1019] = 0.06712082f;
      sa[1020] = -0.23320614f;
      sa[1021] = 0.07115316f;
      sa[1022] = 0.19498353f;
      sa[1023] = 0.09199699f;
      sa[1024] = -0.061591756f;
      sa[1025] = 0.13613209f;
      sa[1026] = 0.13154927f;
      sa[1027] = 0.28131327f;
      sa[1028] = 0.30319676f;
      sa[1029] = -0.026458006f;
      sa[1030] = -0.19213788f;
      sa[1031] = 0.06705345f;
      sa[1032] = -0.2576672f;
      sa[1033] = 0.0016788101f;
      sa[1034] = -0.030327093f;
      sa[1035] = -0.23758247f;
      sa[1036] = 0.28402725f;
      sa[1037] = 0.049163498f;
      sa[1038] = -0.19663332f;
      sa[1039] = 0.3127996f;
      sa[1040] = 0.08759545f;
      sa[1041] = 0.073754005f;
      sa[1042] = -0.17063354f;
      sa[1043] = -0.01430302f;
      sa[1044] = 0.18687996f;
      sa[1045] = 0.1445162f;
      sa[1046] = -0.2160494f;
      sa[1047] = -0.27898714f;
      sa[1048] = 0.19494522f;
      sa[1049] = -0.056854576f;
      sa[1050] = 0.082414195f;
      sa[1051] = -0.15944959f;
      sa[1052] = 0.12223161f;
      sa[1053] = 0.16177319f;
      sa[1054] = 0.14483798f;
      sa[1055] = -0.040532704f;
      sa[1056] = 0.24803038f;
      sa[1057] = -0.17176065f;
      sa[1058] = 0.24223934f;
      sa[1059] = -0.15089838f;
      sa[1060] = -0.2939277f;
      sa[1061] = -0.014147034f;
      sa[1062] = 0.23121366f;
      sa[1063] = 0.017000517f;
      sa[1064] = 0.03391972f;
      sa[1065] = -0.06310403f;
      sa[1066] = 0.1680545f;
      sa[1067] = -0.2939136f;
      sa[1068] = -0.26723605f;
      sa[1069] = 0.21323016f;
      sa[1070] = 0.1427542f;
      sa[1071] = 0.2951218f;
      sa[1072] = -0.28419453f;
      sa[1073] = 0.111964285f;
      sa[1074] = 0.12952925f;
      sa[1075] = -0.1688695f;
      sa[1076] = -0.22383165f;
      sa[1077] = 0.1510068f;
      sa[1078] = 0.051590912f;
      sa[1079] = 0.09179008f;
      sa[1080] = 0.2583205f;
      sa[1081] = 0.2589903f;
      sa[1082] = -0.32667324f;
      sa[1083] = -0.17334963f;
      sa[1084] = 0.18782765f;
      sa[1085] = -0.2591562f;
      sa[1086] = -0.3115992f;
      sa[1087] = -0.24392503f;
      sa[1088] = -0.16274972f;
      sa[1089] = 0.086650476f;
      sa[1090] = -0.22879164f;
      sa[1091] = 0.15789972f;
      sa[1092] = -0.25486985f;
      sa[1093] = -0.2881801f;
      sa[1094] = -0.029806124f;
      sa[1095] = -0.23299351f;
      sa[1096] = 0.09484104f;
      sa[1097] = -0.115764f;
      sa[1098] = -0.0100072455f;
      sa[1099] = -0.066235535f;
      sa[1100] = -0.117639914f;
      sa[1101] = 0.13657336f;
      sa[1102] = -0.15562749f;
      sa[1103] = 0.20791623f;
      sa[1104] = -0.31568757f;
      sa[1105] = -0.11946128f;
      sa[1106] = -0.10774273f;
      sa[1107] = 0.18142585f;
      sa[1108] = -0.1959342f;
      sa[1109] = 0.21940291f;
      sa[1110] = 0.1317851f;
      sa[1111] = -0.2659777f;
      sa[1112] = 0.15453093f;
      sa[1113] = 0.21803832f;
      sa[1114] = 0.08923513f;
      sa[1115] = 0.23727493f;
      sa[1116] = -0.07464364f;
      sa[1117] = -0.20583922f;
      sa[1118] = -0.21059838f;
      sa[1119] = -0.07385845f;
      sa[1120] = 0.16964246f;
      sa[1121] = 0.08058165f;
      sa[1122] = 0.2326354f;
      sa[1123] = 0.24033034f;
      sa[1124] = -0.002559525f;
      sa[1125] = -0.119762056f;
      sa[1126] = 0.15494525f;
      sa[1127] = 0.13091266f;
      sa[1128] = 0.011541831f;
      sa[1129] = -0.09377505f;
      sa[1130] = 0.21367596f;
      sa[1131] = 0.29890013f;
      sa[1132] = -0.17910369f;
      sa[1133] = -0.08217641f;
      sa[1134] = 0.22622016f;
      sa[1135] = -0.23072334f;
      sa[1136] = -0.06456538f;
      sa[1137] = 0.13965854f;
      sa[1138] = -0.1138685f;
      sa[1139] = 0.17501915f;
      sa[1140] = 0.24194309f;
      sa[1141] = -0.29172498f;
      sa[1142] = 0.10260056f;
      sa[1143] = 0.091237284f;
      sa[1144] = -0.26717502f;
      sa[1145] = 0.16167602f;
      sa[1146] = 0.23180455f;
      sa[1147] = -0.012872105f;
      sa[1148] = 0.03354673f;
      sa[1149] = 0.002409785f;
      sa[1150] = -0.17315118f;
      sa[1151] = -0.16022503f;
    }
  }
}
// Neuron weights connecting Rectifier and Softmax layer
class h2o_nn_32x6_ReLU_02_Weight_2 implements java.io.Serializable {
  public static final float[] VALUES = new float[160];
  static {
    h2o_nn_32x6_ReLU_02_Weight_2_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_02_Weight_2_0 implements java.io.Serializable {
    static final void fill(float[] sa) {
      sa[0] = 1.2511663f;
      sa[1] = -0.14038506f;
      sa[2] = -0.6165339f;
      sa[3] = -0.9615324f;
      sa[4] = 0.0917909f;
      sa[5] = 0.17718035f;
      sa[6] = 1.2596233f;
      sa[7] = -0.7740727f;
      sa[8] = -0.92867154f;
      sa[9] = 0.74784386f;
      sa[10] = -0.16176501f;
      sa[11] = 0.3618588f;
      sa[12] = 0.18551803f;
      sa[13] = 0.040364612f;
      sa[14] = -1.306099f;
      sa[15] = 1.1290779f;
      sa[16] = 1.5897361f;
      sa[17] = -0.48935553f;
      sa[18] = 0.058041316f;
      sa[19] = -0.4818156f;
      sa[20] = 1.1540011f;
      sa[21] = 0.06542991f;
      sa[22] = -0.97867936f;
      sa[23] = 0.76881427f;
      sa[24] = -1.3955345f;
      sa[25] = 0.41735184f;
      sa[26] = -0.23191062f;
      sa[27] = 1.4795963f;
      sa[28] = -1.3802155f;
      sa[29] = -0.46163508f;
      sa[30] = 0.4181191f;
      sa[31] = -0.6308004f;
      sa[32] = -1.1355102f;
      sa[33] = -1.4834918f;
      sa[34] = 0.039654847f;
      sa[35] = 1.3922583f;
      sa[36] = -0.30249998f;
      sa[37] = -0.044258337f;
      sa[38] = 0.1966507f;
      sa[39] = 0.8745485f;
      sa[40] = -0.75595f;
      sa[41] = -1.3753834f;
      sa[42] = -1.0086896f;
      sa[43] = -1.4029624f;
      sa[44] = 0.0041215224f;
      sa[45] = -1.3116121f;
      sa[46] = 1.1929207f;
      sa[47] = 1.2383972f;
      sa[48] = -1.3452135f;
      sa[49] = -1.0736071f;
      sa[50] = 0.41229364f;
      sa[51] = -0.31169912f;
      sa[52] = 0.8632587f;
      sa[53] = 0.8478938f;
      sa[54] = -0.23622926f;
      sa[55] = 1.1475502f;
      sa[56] = -1.0438654f;
      sa[57] = -1.0999701f;
      sa[58] = 0.1916993f;
      sa[59] = -0.23605375f;
      sa[60] = 1.3888584f;
      sa[61] = -0.634217f;
      sa[62] = -0.3408255f;
      sa[63] = 0.6707757f;
      sa[64] = 1.4191725f;
      sa[65] = -0.6429315f;
      sa[66] = 0.6160343f;
      sa[67] = 1.6104863f;
      sa[68] = 0.69024724f;
      sa[69] = -1.0438409f;
      sa[70] = -1.6167743f;
      sa[71] = -0.3306413f;
      sa[72] = -1.2882643f;
      sa[73] = 1.1946332f;
      sa[74] = 1.3277696f;
      sa[75] = -0.101494774f;
      sa[76] = 0.89115065f;
      sa[77] = 0.47267503f;
      sa[78] = -1.2796541f;
      sa[79] = 0.9970517f;
      sa[80] = -0.7952083f;
      sa[81] = 0.3079381f;
      sa[82] = 0.82564634f;
      sa[83] = -0.62755734f;
      sa[84] = -1.6185099f;
      sa[85] = -1.2678723f;
      sa[86] = 0.2068813f;
      sa[87] = 1.2197244f;
      sa[88] = -1.542408f;
      sa[89] = -0.49859586f;
      sa[90] = -1.0771012f;
      sa[91] = 1.5437107f;
      sa[92] = -0.352035f;
      sa[93] = 0.2555339f;
      sa[94] = -1.5452001f;
      sa[95] = -0.22968602f;
      sa[96] = -1.1065282f;
      sa[97] = 0.19436885f;
      sa[98] = -0.06434033f;
      sa[99] = 0.3085916f;
      sa[100] = -1.2912081f;
      sa[101] = -0.4115997f;
      sa[102] = 1.2787997f;
      sa[103] = 0.048869506f;
      sa[104] = -0.17236066f;
      sa[105] = -0.6062972f;
      sa[106] = 1.4160751f;
      sa[107] = 1.2315181f;
      sa[108] = 0.7966756f;
      sa[109] = 0.13941853f;
      sa[110] = 0.69523925f;
      sa[111] = -0.7538747f;
      sa[112] = -1.1229858f;
      sa[113] = 0.1865007f;
      sa[114] = 0.1393542f;
      sa[115] = -0.3161243f;
      sa[116] = 1.1571717f;
      sa[117] = 0.05889666f;
      sa[118] = -1.325533f;
      sa[119] = -0.801473f;
      sa[120] = -0.2656842f;
      sa[121] = 1.0488989f;
      sa[122] = -0.069097325f;
      sa[123] = 0.3746511f;
      sa[124] = -0.7899981f;
      sa[125] = 0.81605935f;
      sa[126] = -0.9601002f;
      sa[127] = 0.44127792f;
      sa[128] = -0.8726801f;
      sa[129] = 0.75996494f;
      sa[130] = -0.32765108f;
      sa[131] = 0.8919864f;
      sa[132] = 0.4833708f;
      sa[133] = 0.6994721f;
      sa[134] = 0.5934766f;
      sa[135] = -1.1755339f;
      sa[136] = 0.52246845f;
      sa[137] = -0.6876191f;
      sa[138] = -0.14484584f;
      sa[139] = 1.1563251f;
      sa[140] = -0.50608444f;
      sa[141] = -0.020799467f;
      sa[142] = 0.35378712f;
      sa[143] = -0.8206998f;
      sa[144] = 0.949057f;
      sa[145] = -0.8134046f;
      sa[146] = 0.016373323f;
      sa[147] = -0.2660305f;
      sa[148] = -0.83982706f;
      sa[149] = 1.0427452f;
      sa[150] = -1.1387217f;
      sa[151] = -1.5399362f;
      sa[152] = 1.5708888f;
      sa[153] = -0.5701082f;
      sa[154] = 1.3145107f;
      sa[155] = -1.515905f;
      sa[156] = -1.4668701f;
      sa[157] = -1.1052432f;
      sa[158] = -0.2840249f;
      sa[159] = -0.65129703f;
    }
  }
}
// The class representing training column names
class NamesHolder_h2o_nn_32x6_ReLU_02 implements java.io.Serializable {
  public static final String[] VALUES = new String[36];
  static {
    NamesHolder_h2o_nn_32x6_ReLU_02_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_nn_32x6_ReLU_02_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X1";
      sa[1] = "X2";
      sa[2] = "X3";
      sa[3] = "X4";
      sa[4] = "X5";
      sa[5] = "X6";
      sa[6] = "X7";
      sa[7] = "X8";
      sa[8] = "X9";
      sa[9] = "X10";
      sa[10] = "X11";
      sa[11] = "X12";
      sa[12] = "X13";
      sa[13] = "X14";
      sa[14] = "X15";
      sa[15] = "X16";
      sa[16] = "X17";
      sa[17] = "X18";
      sa[18] = "X19";
      sa[19] = "X20";
      sa[20] = "X21";
      sa[21] = "X22";
      sa[22] = "X23";
      sa[23] = "X24";
      sa[24] = "X25";
      sa[25] = "X26";
      sa[26] = "X27";
      sa[27] = "X28";
      sa[28] = "X29";
      sa[29] = "X30";
      sa[30] = "X31";
      sa[31] = "X32";
      sa[32] = "X33";
      sa[33] = "X34";
      sa[34] = "X35";
      sa[35] = "X36";
    }
  }
}
// The class representing column Label
class h2o_nn_32x6_ReLU_02_ColInfo_36 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_nn_32x6_ReLU_02_ColInfo_36_0.fill(VALUES);
  }
  static final class h2o_nn_32x6_ReLU_02_ColInfo_36_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}


