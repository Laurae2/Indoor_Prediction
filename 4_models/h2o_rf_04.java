/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:41:37.376+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_04

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_04 > h2o_rf_04.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_04.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_04", algorithm="drf")
public class h2o_rf_04 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 13; }
  public int nclasses() { return 6; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_04.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X5 */ null,
    /* X12 */ null,
    /* X15 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X23 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* Label */ h2o_rf_04_ColInfo_13.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24528301886792453,0.12264150943396226,0.12264150943396226,0.1320754716981132,0.24528301886792453,0.1320754716981132};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.24528301886792453,0.12264150943396226,0.12264150943396226,0.1320754716981132,0.24528301886792453,0.1320754716981132};

  public h2o_rf_04() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-5143859293497505592L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_04_Forest_0.score0(data,preds);
    h2o_rf_04_Forest_1.score0(data,preds);
    h2o_rf_04_Forest_2.score0(data,preds);
    h2o_rf_04_Forest_3.score0(data,preds);
    h2o_rf_04_Forest_4.score0(data,preds);
    h2o_rf_04_Forest_5.score0(data,preds);
    h2o_rf_04_Forest_6.score0(data,preds);
    h2o_rf_04_Forest_7.score0(data,preds);
    h2o_rf_04_Forest_8.score0(data,preds);
    h2o_rf_04_Forest_9.score0(data,preds);
    h2o_rf_04_Forest_10.score0(data,preds);
    h2o_rf_04_Forest_11.score0(data,preds);
    h2o_rf_04_Forest_12.score0(data,preds);
    h2o_rf_04_Forest_13.score0(data,preds);
    h2o_rf_04_Forest_14.score0(data,preds);
    h2o_rf_04_Forest_15.score0(data,preds);
    h2o_rf_04_Forest_16.score0(data,preds);
    h2o_rf_04_Forest_17.score0(data,preds);
    h2o_rf_04_Forest_18.score0(data,preds);
    h2o_rf_04_Forest_19.score0(data,preds);
    h2o_rf_04_Forest_20.score0(data,preds);
    h2o_rf_04_Forest_21.score0(data,preds);
    h2o_rf_04_Forest_22.score0(data,preds);
    h2o_rf_04_Forest_23.score0(data,preds);
    h2o_rf_04_Forest_24.score0(data,preds);
    h2o_rf_04_Forest_25.score0(data,preds);
    h2o_rf_04_Forest_26.score0(data,preds);
    h2o_rf_04_Forest_27.score0(data,preds);
    h2o_rf_04_Forest_28.score0(data,preds);
    h2o_rf_04_Forest_29.score0(data,preds);
    h2o_rf_04_Forest_30.score0(data,preds);
    h2o_rf_04_Forest_31.score0(data,preds);
    h2o_rf_04_Forest_32.score0(data,preds);
    h2o_rf_04_Forest_33.score0(data,preds);
    h2o_rf_04_Forest_34.score0(data,preds);
    h2o_rf_04_Forest_35.score0(data,preds);
    h2o_rf_04_Forest_36.score0(data,preds);
    h2o_rf_04_Forest_37.score0(data,preds);
    h2o_rf_04_Forest_38.score0(data,preds);
    h2o_rf_04_Forest_39.score0(data,preds);
    h2o_rf_04_Forest_40.score0(data,preds);
    h2o_rf_04_Forest_41.score0(data,preds);
    h2o_rf_04_Forest_42.score0(data,preds);
    h2o_rf_04_Forest_43.score0(data,preds);
    h2o_rf_04_Forest_44.score0(data,preds);
    h2o_rf_04_Forest_45.score0(data,preds);
    h2o_rf_04_Forest_46.score0(data,preds);
    h2o_rf_04_Forest_47.score0(data,preds);
    h2o_rf_04_Forest_48.score0(data,preds);
    h2o_rf_04_Forest_49.score0(data,preds);
    h2o_rf_04_Forest_50.score0(data,preds);
    h2o_rf_04_Forest_51.score0(data,preds);
    h2o_rf_04_Forest_52.score0(data,preds);
    h2o_rf_04_Forest_53.score0(data,preds);
    h2o_rf_04_Forest_54.score0(data,preds);
    h2o_rf_04_Forest_55.score0(data,preds);
    h2o_rf_04_Forest_56.score0(data,preds);
    h2o_rf_04_Forest_57.score0(data,preds);
    h2o_rf_04_Forest_58.score0(data,preds);
    h2o_rf_04_Forest_59.score0(data,preds);
    h2o_rf_04_Forest_60.score0(data,preds);
    h2o_rf_04_Forest_61.score0(data,preds);
    h2o_rf_04_Forest_62.score0(data,preds);
    h2o_rf_04_Forest_63.score0(data,preds);
    h2o_rf_04_Forest_64.score0(data,preds);
    h2o_rf_04_Forest_65.score0(data,preds);
    h2o_rf_04_Forest_66.score0(data,preds);
    h2o_rf_04_Forest_67.score0(data,preds);
    h2o_rf_04_Forest_68.score0(data,preds);
    h2o_rf_04_Forest_69.score0(data,preds);
    h2o_rf_04_Forest_70.score0(data,preds);
    h2o_rf_04_Forest_71.score0(data,preds);
    h2o_rf_04_Forest_72.score0(data,preds);
    h2o_rf_04_Forest_73.score0(data,preds);
    h2o_rf_04_Forest_74.score0(data,preds);
    h2o_rf_04_Forest_75.score0(data,preds);
    h2o_rf_04_Forest_76.score0(data,preds);
    h2o_rf_04_Forest_77.score0(data,preds);
    h2o_rf_04_Forest_78.score0(data,preds);
    h2o_rf_04_Forest_79.score0(data,preds);
    h2o_rf_04_Forest_80.score0(data,preds);
    h2o_rf_04_Forest_81.score0(data,preds);
    h2o_rf_04_Forest_82.score0(data,preds);
    h2o_rf_04_Forest_83.score0(data,preds);
    h2o_rf_04_Forest_84.score0(data,preds);
    h2o_rf_04_Forest_85.score0(data,preds);
    h2o_rf_04_Forest_86.score0(data,preds);
    h2o_rf_04_Forest_87.score0(data,preds);
    h2o_rf_04_Forest_88.score0(data,preds);
    h2o_rf_04_Forest_89.score0(data,preds);
    h2o_rf_04_Forest_90.score0(data,preds);
    h2o_rf_04_Forest_91.score0(data,preds);
    h2o_rf_04_Forest_92.score0(data,preds);
    h2o_rf_04_Forest_93.score0(data,preds);
    h2o_rf_04_Forest_94.score0(data,preds);
    h2o_rf_04_Forest_95.score0(data,preds);
    h2o_rf_04_Forest_96.score0(data,preds);
    h2o_rf_04_Forest_97.score0(data,preds);
    h2o_rf_04_Forest_98.score0(data,preds);
    h2o_rf_04_Forest_99.score0(data,preds);
    h2o_rf_04_Forest_100.score0(data,preds);
    h2o_rf_04_Forest_101.score0(data,preds);
    h2o_rf_04_Forest_102.score0(data,preds);
    h2o_rf_04_Forest_103.score0(data,preds);
    h2o_rf_04_Forest_104.score0(data,preds);
    h2o_rf_04_Forest_105.score0(data,preds);
    h2o_rf_04_Forest_106.score0(data,preds);
    h2o_rf_04_Forest_107.score0(data,preds);
    h2o_rf_04_Forest_108.score0(data,preds);
    h2o_rf_04_Forest_109.score0(data,preds);
    h2o_rf_04_Forest_110.score0(data,preds);
    h2o_rf_04_Forest_111.score0(data,preds);
    h2o_rf_04_Forest_112.score0(data,preds);
    h2o_rf_04_Forest_113.score0(data,preds);
    h2o_rf_04_Forest_114.score0(data,preds);
    h2o_rf_04_Forest_115.score0(data,preds);
    h2o_rf_04_Forest_116.score0(data,preds);
    h2o_rf_04_Forest_117.score0(data,preds);
    h2o_rf_04_Forest_118.score0(data,preds);
    h2o_rf_04_Forest_119.score0(data,preds);
    h2o_rf_04_Forest_120.score0(data,preds);
    h2o_rf_04_Forest_121.score0(data,preds);
    h2o_rf_04_Forest_122.score0(data,preds);
    h2o_rf_04_Forest_123.score0(data,preds);
    h2o_rf_04_Forest_124.score0(data,preds);
    h2o_rf_04_Forest_125.score0(data,preds);
    h2o_rf_04_Forest_126.score0(data,preds);
    h2o_rf_04_Forest_127.score0(data,preds);
    h2o_rf_04_Forest_128.score0(data,preds);
    h2o_rf_04_Forest_129.score0(data,preds);
    h2o_rf_04_Forest_130.score0(data,preds);
    h2o_rf_04_Forest_131.score0(data,preds);
    h2o_rf_04_Forest_132.score0(data,preds);
    h2o_rf_04_Forest_133.score0(data,preds);
    h2o_rf_04_Forest_134.score0(data,preds);
    h2o_rf_04_Forest_135.score0(data,preds);
    h2o_rf_04_Forest_136.score0(data,preds);
    h2o_rf_04_Forest_137.score0(data,preds);
    h2o_rf_04_Forest_138.score0(data,preds);
    h2o_rf_04_Forest_139.score0(data,preds);
    h2o_rf_04_Forest_140.score0(data,preds);
    h2o_rf_04_Forest_141.score0(data,preds);
    h2o_rf_04_Forest_142.score0(data,preds);
    h2o_rf_04_Forest_143.score0(data,preds);
    h2o_rf_04_Forest_144.score0(data,preds);
    h2o_rf_04_Forest_145.score0(data,preds);
    h2o_rf_04_Forest_146.score0(data,preds);
    h2o_rf_04_Forest_147.score0(data,preds);
    h2o_rf_04_Forest_148.score0(data,preds);
    h2o_rf_04_Forest_149.score0(data,preds);
    h2o_rf_04_Forest_150.score0(data,preds);
    h2o_rf_04_Forest_151.score0(data,preds);
    h2o_rf_04_Forest_152.score0(data,preds);
    h2o_rf_04_Forest_153.score0(data,preds);
    h2o_rf_04_Forest_154.score0(data,preds);
    h2o_rf_04_Forest_155.score0(data,preds);
    h2o_rf_04_Forest_156.score0(data,preds);
    h2o_rf_04_Forest_157.score0(data,preds);
    h2o_rf_04_Forest_158.score0(data,preds);
    h2o_rf_04_Forest_159.score0(data,preds);
    h2o_rf_04_Forest_160.score0(data,preds);
    h2o_rf_04_Forest_161.score0(data,preds);
    h2o_rf_04_Forest_162.score0(data,preds);
    h2o_rf_04_Forest_163.score0(data,preds);
    h2o_rf_04_Forest_164.score0(data,preds);
    h2o_rf_04_Forest_165.score0(data,preds);
    h2o_rf_04_Forest_166.score0(data,preds);
    h2o_rf_04_Forest_167.score0(data,preds);
    h2o_rf_04_Forest_168.score0(data,preds);
    h2o_rf_04_Forest_169.score0(data,preds);
    h2o_rf_04_Forest_170.score0(data,preds);
    h2o_rf_04_Forest_171.score0(data,preds);
    h2o_rf_04_Forest_172.score0(data,preds);
    h2o_rf_04_Forest_173.score0(data,preds);
    h2o_rf_04_Forest_174.score0(data,preds);
    h2o_rf_04_Forest_175.score0(data,preds);
    h2o_rf_04_Forest_176.score0(data,preds);
    h2o_rf_04_Forest_177.score0(data,preds);
    h2o_rf_04_Forest_178.score0(data,preds);
    h2o_rf_04_Forest_179.score0(data,preds);
    h2o_rf_04_Forest_180.score0(data,preds);
    h2o_rf_04_Forest_181.score0(data,preds);
    h2o_rf_04_Forest_182.score0(data,preds);
    h2o_rf_04_Forest_183.score0(data,preds);
    h2o_rf_04_Forest_184.score0(data,preds);
    h2o_rf_04_Forest_185.score0(data,preds);
    h2o_rf_04_Forest_186.score0(data,preds);
    h2o_rf_04_Forest_187.score0(data,preds);
    h2o_rf_04_Forest_188.score0(data,preds);
    h2o_rf_04_Forest_189.score0(data,preds);
    h2o_rf_04_Forest_190.score0(data,preds);
    h2o_rf_04_Forest_191.score0(data,preds);
    h2o_rf_04_Forest_192.score0(data,preds);
    h2o_rf_04_Forest_193.score0(data,preds);
    h2o_rf_04_Forest_194.score0(data,preds);
    h2o_rf_04_Forest_195.score0(data,preds);
    h2o_rf_04_Forest_196.score0(data,preds);
    h2o_rf_04_Forest_197.score0(data,preds);
    h2o_rf_04_Forest_198.score0(data,preds);
    h2o_rf_04_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_04 implements java.io.Serializable {
  public static final String[] VALUES = new String[13];
  static {
    NamesHolder_h2o_rf_04_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_04_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X5";
      sa[1] = "X12";
      sa[2] = "X15";
      sa[3] = "X17";
      sa[4] = "X18";
      sa[5] = "X19";
      sa[6] = "X20";
      sa[7] = "X21";
      sa[8] = "X23";
      sa[9] = "X27";
      sa[10] = "X28";
      sa[11] = "X34";
      sa[12] = "X35";
    }
  }
}
// The class representing column Label
class h2o_rf_04_ColInfo_13 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_rf_04_ColInfo_13_0.fill(VALUES);
  }
  static final class h2o_rf_04_ColInfo_13_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}

class h2o_rf_04_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_0_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_0_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20287998f ? 
                 (data[6 /* X20 */] <-0.3958701f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42061037f ? 
                        0.0f : 
                        1.0f) : 
                     (data[10 /* X28 */] <-0.24675037f ? 
                         (data[12 /* X35 */] <-0.5874437f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.13117878f ? 
             (data[0 /* X5 */] <0.07798918f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23976848f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5144199f ? 
                 (data[6 /* X20 */] <-0.41500932f ? 
                     (data[5 /* X19 */] <-0.08437834f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33458066f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.104673214f ? 
                        1.0f : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.1682282f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.508313f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15812142f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.36025682f ? 
                 (data[6 /* X20 */] <-0.37194607f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[9 /* X27 */] <-0.42757142f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.00366112f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1148067f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.021176025f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04814682f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15110399f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.10483685f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16389672f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022655308f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04279026f ? 
                        1.0f : 
                         (data[12 /* X35 */] <0.71307164f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.046579335f ? 
                     (data[0 /* X5 */] <0.16868027f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_0_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[4 /* X18 */] <-0.28919217f ? 
            0.0f : 
             (data[0 /* X5 */] <0.09387125f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.21803728f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.069573075f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23775207f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <0.1950407f ? 
                 (data[10 /* X28 */] <0.3338049f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_1_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_1_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[1 /* X12 */] <-0.23721585f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.12074075f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <0.35736328f ? 
                 (data[4 /* X18 */] <-0.23026998f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0016270273f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5377759f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.025734752f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11769435f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.35937217f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.36418408f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073759586f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[9 /* X27 */] <0.12880555f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14079553f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20288774f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08568888f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15877947f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.080410704f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.23804016f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24994692f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_1_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[9 /* X27 */] <0.08447273f ? 
             (data[3 /* X17 */] <-0.43336114f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.08975844f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.040844377f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11855182f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44346535f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_2_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_2_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13328345f ? 
             (data[6 /* X20 */] <-0.47087473f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22199765f ? 
                     (data[6 /* X20 */] <-0.3953813f ? 
                         (data[3 /* X17 */] <-0.2691783f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[2 /* X15 */] <0.15326506f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.46101835f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.412108f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
        0.029411765f : 
         (data[6 /* X20 */] <-0.3982625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
        0.02631579f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.055551436f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18598157f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.008445925f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17971377f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.21851583f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.18875661f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.06093375f ? 
                 (data[7 /* X21 */] <0.1534906f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14867216f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_2_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[1 /* X12 */] <-0.5812174f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28835702f ? 
                 (data[6 /* X20 */] <0.003698382f ? 
                     (data[0 /* X5 */] <0.112865105f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4273388f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_3_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_3_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.04694696f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20080888f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06887466f ? 
                 (data[6 /* X20 */] <-0.3958701f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[2 /* X15 */] <0.114944115f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.01910422f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.43654096f ? 
                 (data[0 /* X5 */] <0.11412731f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.16127972f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11841626f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5724422f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <0.22855441f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.052156515f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09214734f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13117355f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21165511f ? 
                 (data[4 /* X18 */] <-0.36231837f ? 
                     (data[0 /* X5 */] <0.11413983f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18283883f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15963252f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0886f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.105854385f ? 
            0.0f : 
             (data[5 /* X19 */] <0.39284375f ? 
                 (data[3 /* X17 */] <-0.25785533f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
             (data[4 /* X18 */] <-0.12849528f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.24087091f ? 
                     (data[5 /* X19 */] <0.2537676f ? 
                         (data[4 /* X18 */] <-0.002977781f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_3_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15826343f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4418527f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_4_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_4_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19037308f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23886837f ? 
                 (data[9 /* X27 */] <-0.052106716f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08868157f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.20348717f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5203731f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[3 /* X17 */] <-0.3286238f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10236963f ? 
                 (data[6 /* X20 */] <-0.43893334f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29026517f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11773808f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[1 /* X12 */] <-0.04398944f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14923696f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[3 /* X17 */] <-0.049796034f ? 
            0.0f : 
             (data[6 /* X20 */] <0.01323073f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19374013f ? 
                    1.0f : 
                    0.0f))) : 
         (data[7 /* X21 */] <0.12787727f ? 
             (data[0 /* X5 */] <0.12346964f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12412473f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.13125138f ? 
                     (data[1 /* X12 */] <0.116470985f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[1 /* X12 */] <-0.34114823f ? 
             (data[4 /* X18 */] <-0.6079077f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.348807f ? 
                     (data[1 /* X12 */] <-0.46643567f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17889765f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12996686f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06613317f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.2065999f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[1 /* X12 */] <-0.3484674f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.30800244f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_4_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[9 /* X27 */] <-0.03855087f ? 
             (data[6 /* X20 */] <-0.08964258f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.061379556f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_5_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_5_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.45410028f ? 
             (data[11 /* X34 */] <-0.6165357f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18326522f ? 
             (data[11 /* X34 */] <-0.15510912f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.3958701f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09635589f ? 
                         (data[11 /* X34 */] <-0.1081751f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[3 /* X17 */] <-0.56357515f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.43534476f ? 
             (data[0 /* X5 */] <0.11336288f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24008806f ? 
             (data[11 /* X34 */] <0.282299f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.062879115f ? 
                     (data[6 /* X20 */] <-0.5250598f ? 
                         (data[5 /* X19 */] <0.0063256854f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (data[6 /* X20 */] <-0.54778767f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.1239133f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.05701527f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <0.020407937f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.6749029f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23947822f ? 
             (data[11 /* X34 */] <-0.5136729f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07304079f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.06801644f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.017870503f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20824727f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_5_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[6 /* X20 */] <-0.05495274f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.92067325f ? 
                 (data[5 /* X19 */] <0.095602565f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (data[11 /* X34 */] <-0.9711539f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17395777f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_6_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_6_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.40929988f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.099034175f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.03385135f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.004465856f ? 
                     (data[11 /* X34 */] <-0.6121819f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.12893918f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22388647f ? 
             (data[5 /* X19 */] <0.0901486f ? 
                 (data[1 /* X12 */] <-0.3030885f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5883387f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12130391f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.014528256f ? 
                 (data[9 /* X27 */] <0.06257979f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03422697f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9968706f ? 
             (data[10 /* X28 */] <-0.26932752f ? 
                 (data[1 /* X12 */] <-0.033742584f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.10161509f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.0068902806f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X21 */] <0.132756f ? 
                         (data[12 /* X35 */] <-0.59659374f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6860828f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[11 /* X34 */] <-0.5114193f ? 
             (data[9 /* X27 */] <-0.42757142f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.027948955f ? 
                     (data[12 /* X35 */] <0.52521694f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13519098f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14409278f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.13141067f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6141835f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.46093863f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12215563f ? 
                 (data[2 /* X15 */] <0.09495058f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.18832f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14729275f ? 
                        1.0f : 
                         (data[12 /* X35 */] <0.2159125f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09380212f ? 
             (data[1 /* X12 */] <-0.3440759f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_6_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0059195803f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.033009265f ? 
                 (data[4 /* X18 */] <-0.19813061f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_7_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_7_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19037308f ? 
             (data[12 /* X35 */] <-0.47700518f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.13020602f ? 
                     (data[7 /* X21 */] <0.11439322f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.11658041f ? 
                 (data[12 /* X35 */] <-0.52219385f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.07835014f ? 
             (data[4 /* X18 */] <-0.13117878f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34381977f ? 
             (data[12 /* X35 */] <-0.22505146f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.25219387f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4551143f ? 
                         (data[4 /* X18 */] <-0.35537478f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5327155f ? 
                                 (data[7 /* X21 */] <0.09783563f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f) : 
             (data[5 /* X19 */] <0.24558665f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20658115f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.17441958f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16028716f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0152777f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117032565f ? 
            0.0f : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.016949153f : 
         (data[0 /* X5 */] <0.1025342f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23498423f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.07689958f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.014411797f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.19234744f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[9 /* X27 */] <-0.27351484f ? 
             (data[2 /* X15 */] <0.13160539f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45446005f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.6541588f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15162422f ? 
             (data[8 /* X23 */] <0.14355999f ? 
                 (data[7 /* X21 */] <0.11459038f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.24185427f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6398415f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.16977938f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23428859f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5412593f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <-0.13461974f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.178707f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_04_Tree_7_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[1 /* X12 */] <-0.61195797f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.33993563f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18013975f ? 
             (data[5 /* X19 */] <0.15260738f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.026720569f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.28267345f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_8_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_8_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07446844f ? 
         (data[12 /* X35 */] <-0.49991006f ? 
             (data[10 /* X28 */] <-0.127414f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.20348717f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17055956f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.045989648f ? 
                     (data[1 /* X12 */] <-0.43776143f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.002445118f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17325859f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.55717224f ? 
                         (data[10 /* X28 */] <-0.15249957f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.053444173f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[12 /* X35 */] <-0.22696021f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0338801f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0668639f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.13221914f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.091873385f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.19461589f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12548059f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0152777f ? 
         (data[12 /* X35 */] <-0.8644794f ? 
             (data[3 /* X17 */] <-0.42769969f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.59247386f ? 
                    0.0f : 
                    1.0f)) : 
             (data[10 /* X28 */] <-0.4338182f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.13031663f ? 
                     (data[12 /* X35 */] <-0.6104382f ? 
                         (data[2 /* X15 */] <0.15326506f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.056457248f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.015827166f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.17834282f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.38341475f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15860532f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.029832516f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19239743f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.5097911f ? 
             (data[4 /* X18 */] <-0.4965205f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.30769375f ? 
                 (data[8 /* X23 */] <0.19239743f ? 
                     (data[0 /* X5 */] <0.084253035f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.16051406f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_8_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <1.7988282E-4f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23059508f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.21687858f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_9_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_9_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[6 /* X20 */] <-0.22242092f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.011274201f ? 
                 (data[1 /* X12 */] <-0.28552243f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22905122f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X35 */] <-0.36629823f ? 
                    1.0f : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.42176715f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.04237691f ? 
                 (data[5 /* X19 */] <0.2374057f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.06872267f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.026444336f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.11473841f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[6 /* X20 */] <-0.3994587f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1682282f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22159755f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11644301f ? 
             (data[4 /* X18 */] <-0.5161913f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (data[6 /* X20 */] <-0.24156015f ? 
             (data[10 /* X28 */] <-0.16289239f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11065692f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.20047124f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23520944f ? 
             (data[1 /* X12 */] <-0.03081491f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0814142f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48216903f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13519098f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060091637f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.1978266f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16028716f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[6 /* X20 */] <-0.25112975f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02939885f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0016270273f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.25177383f ? 
                        0.0f : 
                        1.0f) : 
                     (data[0 /* X5 */] <0.084057175f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_9_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[2 /* X15 */] <0.09661671f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48216903f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3817174f ? 
             (data[1 /* X12 */] <-0.40262935f ? 
                 (data[0 /* X5 */] <0.16317481f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.17682709f ? 
                         (data[4 /* X18 */] <-0.1792738f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_10_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_10_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.3795771f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.15259981f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <0.14875533f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.19769226f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.28919217f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.09372616f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27689162f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.122747734f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14777313f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[3 /* X17 */] <-0.41779208f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06153823f ? 
            0.0f : 
             (data[0 /* X5 */] <0.13141067f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.01310018f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[3 /* X17 */] <-0.03422697f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02856549f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14223936f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15014224f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.107476294f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.45425782f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.2146586f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07473f ? 
                     (data[5 /* X19 */] <0.111964464f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1534906f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.19277404f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.6488998f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_10_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[8 /* X23 */] <0.120133914f ? 
            0.0f : 
             (data[0 /* X5 */] <0.13935171f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.42846283f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18151021f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.3762803f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_11_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_11_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[1 /* X12 */] <-0.23282433f ? 
             (data[5 /* X19 */] <0.065605745f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.55791366f ? 
                     (data[3 /* X17 */] <-0.7798692f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4392025f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.17134778f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X17 */] <-0.22388647f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33293408f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0415529f ? 
                     (data[0 /* X5 */] <0.11297807f ? 
                        1.0f : 
                         (data[10 /* X28 */] <0.06096409f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5710255f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.30314717f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.21578707f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.048284274f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023214294f ? 
                             (data[4 /* X18 */] <-0.2706879f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.13327152f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22525692f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.21965607f ? 
                                0.0f : 
                                1.0f)))))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[1 /* X12 */] <0.027738543f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X17 */] <-0.7588961f ? 
             (data[5 /* X19 */] <0.39829773f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12727942f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.114445746f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.10198058f ? 
                1.0f : 
                 (data[3 /* X17 */] <0.06484889f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.022387808f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15763867f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09471505f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.6141835f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.1483785f ? 
        0.045454547f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08698191f ? 
             (data[5 /* X19 */] <0.1392343f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.28605917f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.48712823f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.5804806f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_11_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (data[0 /* X5 */] <0.10072941f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_12_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_12_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.13534068f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21955685f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18172747f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.37880307f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22649777f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.26428798f ? 
                 (data[5 /* X19 */] <0.3221853f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.08480854f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05630617f ? 
                 (data[11 /* X34 */] <-0.105771095f ? 
                     (data[11 /* X34 */] <-0.4607112f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9082436f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.1362664f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (data[10 /* X28 */] <-0.2451377f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38538563f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1491273f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.52558434f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.342209f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12435175f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.48431444f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010406692f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.0241427f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <-0.057108507f ? 
             (data[6 /* X20 */] <0.15809023f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
            0.0f : 
             (data[5 /* X19 */] <0.19104698f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13998653f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_12_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48055637f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15826343f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26180404f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <0.0039975517f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_13_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_13_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[9 /* X27 */] <0.08003945f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18683869f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
                     (data[6 /* X20 */] <-0.3910853f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42287773f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.055604745f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31196374f ? 
            0.0f : 
             (data[0 /* X5 */] <0.06427285f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5377759f ? 
             (data[0 /* X5 */] <0.11841626f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.25177383f ? 
                     (data[7 /* X21 */] <0.14739218f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.021488504f ? 
                            0.0f : 
                             (data[10 /* X28 */] <0.04739764f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[5 /* X19 */] <0.27558348f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3090935f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.077392995f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14223936f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10439074f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117032565f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.90838045f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.08563754f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13832995f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.61447453f ? 
                     (data[0 /* X5 */] <0.15156256f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[9 /* X27 */] <-0.42757142f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06698579f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0027405317f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.020568056f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.019267285f ? 
                 (data[4 /* X18 */] <-0.610586f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.094851926f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23195173f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[5 /* X19 */] <0.19377397f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16202839f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.34362543f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.21432479f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_13_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.025381427f ? 
         (data[9 /* X27 */] <-0.031900942f ? 
             (data[0 /* X5 */] <0.10614376f ? 
                 (data[0 /* X5 */] <0.08028629f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4837817f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_14_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_14_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (data[4 /* X18 */] <-0.5784466f ? 
             (data[9 /* X27 */] <0.018121772f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.41045797f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06249604f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19012348f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4423036f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19183691f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.24657935f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.07750898f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5710255f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.082230955f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.10336309f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.28035527f ? 
                     (data[6 /* X20 */] <-0.23797153f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3429712f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.36999664f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[12 /* X35 */] <-0.3395759f ? 
                 (data[6 /* X20 */] <-0.71645206f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (data[10 /* X28 */] <-0.39188918f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12727942f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.03593244f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4837817f ? 
             (data[9 /* X27 */] <-0.2175057f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21657792f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
             (data[11 /* X34 */] <-0.50961643f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29403624f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.30307314f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.11835141f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27558348f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3857454f ? 
                 (data[2 /* X15 */] <0.10328122f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.113289066f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.2572131f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20492955f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.00590849f ? 
                 (data[9 /* X27 */] <0.09998922f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.071097516f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_14_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[5 /* X19 */] <0.026064487f ? 
             (data[12 /* X35 */] <-0.36248076f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4837817f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_15_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_15_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19037308f ? 
             (data[6 /* X20 */] <-0.40783212f ? 
                 (data[7 /* X21 */] <0.15227091f ? 
                     (data[5 /* X19 */] <0.087744825f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <0.19752143f ? 
                 (data[10 /* X28 */] <-0.11128747f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.21499524f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[5 /* X19 */] <-0.08165136f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.484389f ? 
                 (data[9 /* X27 */] <0.21525458f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.03707666f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.81266075f ? 
                     (data[8 /* X23 */] <0.10985443f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19954762f ? 
                             (data[2 /* X15 */] <0.12730746f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[1 /* X12 */] <0.040087394f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.016949153f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05687288f ? 
            0.0f : 
             (data[7 /* X21 */] <0.08213918f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.20707606f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26929876f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[2 /* X15 */] <0.09578364f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27423915f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26284817f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046643913f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1935746f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.64855385f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.13428682f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20192668f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.20668674f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_15_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[1 /* X12 */] <-0.43463f ? 
             (data[3 /* X17 */] <-0.34277752f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <-0.10615843f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1783065f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_16_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_16_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[3 /* X17 */] <-0.3979769f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.021488504f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18741748f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03959793f ? 
                     (data[0 /* X5 */] <0.09531508f ? 
                         (data[3 /* X17 */] <0.10488268f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
        0.029411765f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16109401f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4311954f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
        0.02631579f : 
         (data[3 /* X17 */] <-0.3979769f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.021488504f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.22091916f ? 
                 (data[1 /* X12 */] <-0.09229604f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2210438f ? 
             (data[2 /* X15 */] <0.12160862f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15958902f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16161022f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0670193f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[5 /* X19 */] <0.19241047f ? 
             (data[3 /* X17 */] <-0.4871452f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1218215f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_16_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[9 /* X27 */] <-0.1637911f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.12313871f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49829558f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_17_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_17_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3061323f ? 
            0.0f : 
             (data[7 /* X21 */] <0.11750997f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.3946739f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10706902f ? 
                 (data[7 /* X21 */] <0.1160552f ? 
                     (data[3 /* X17 */] <-0.23520944f ? 
                        1.0f : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.94886374f ? 
                         (data[10 /* X28 */] <-0.2364746f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08578889f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.43654096f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.3946739f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13790789f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21886235f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1283851f ? 
            0.0f : 
             (data[7 /* X21 */] <0.1534906f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.9770951f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.099034175f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.342209f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18658762f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11371164f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18194452f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06586359f ? 
            0.0f : 
             (data[7 /* X21 */] <0.19739917f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18450496f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.039402127f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.026720569f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.12299854f ? 
                 (data[10 /* X28 */] <0.030626044f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_17_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18941954f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053756543f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.04352727f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19358858f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.06421652f ? 
                 (data[1 /* X12 */] <-0.3206545f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.04562988f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_18_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_18_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.04694696f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.31811702f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18325536f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14992154f ? 
                     (data[2 /* X15 */] <0.09932417f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.012164049f ? 
                     (data[5 /* X19 */] <0.49374214f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[5 /* X19 */] <-0.10892119f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17159246f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.36476886f ? 
             (data[9 /* X27 */] <0.013540205f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.257514f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.054967027f ? 
            0.0f : 
             (data[7 /* X21 */] <0.132756f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.22361712f ? 
             (data[4 /* X18 */] <-0.109747306f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13790789f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[0 /* X5 */] <0.09820272f ? 
             (data[2 /* X15 */] <0.16076262f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07304079f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.11502499f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.029977547f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18865487f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08898166f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_18_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[4 /* X18 */] <-0.33740127f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13988876f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.264433f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.42590904f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24639653f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.22190577f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_19_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_19_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08141827f ? 
         (data[11 /* X34 */] <-0.59074605f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.12839913f ? 
             (data[10 /* X28 */] <-0.030654792f ? 
                 (data[6 /* X20 */] <-0.28103477f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04119531f ? 
                         (data[12 /* X35 */] <-0.83520544f ? 
                             (data[1 /* X12 */] <-0.05130862f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.17098619f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.09086681f ? 
                        1.0f : 
                        0.0f))) : 
             (data[12 /* X35 */] <-0.11052705f ? 
                 (data[2 /* X15 */] <0.17544983f ? 
                     (data[11 /* X34 */] <0.24038203f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.01672633f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.43501288f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.45328775f ? 
                    1.0f : 
                    0.0f))) : 
        0.6666667f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19366865f ? 
         (data[10 /* X28 */] <-0.43543082f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3088915f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.7355913f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.044708773f ? 
                         (data[6 /* X20 */] <-0.25966585f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15270709f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1184964f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[11 /* X34 */] <-0.8972358f ? 
            1.0f : 
            0.0f) : 
         (data[5 /* X19 */] <-0.0911958f ? 
             (data[10 /* X28 */] <0.53054863f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24073677f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.082610406f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.11773808f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.10181228f ? 
         (data[11 /* X34 */] <-0.59074605f ? 
             (data[3 /* X17 */] <-0.33711603f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <0.14468826f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3857454f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.39186043f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.11052705f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01224521f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_19_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[10 /* X28 */] <0.04191462f ? 
            0.0f : 
             (data[10 /* X28 */] <0.4296318f ? 
                 (data[10 /* X28 */] <0.11301345f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18808077f ? 
             (data[1 /* X12 */] <-0.64855385f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19730069f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_20_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_20_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[9 /* X27 */] <0.08114777f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.007393529f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <6.224999E-5f ? 
                     (data[11 /* X34 */] <0.24038203f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.38073513f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.56818f ? 
                                 (data[10 /* X28 */] <-0.11773808f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34070173f ? 
             (data[9 /* X27 */] <0.061265573f ? 
                 (data[8 /* X23 */] <0.12807496f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22019108f ? 
                     (data[4 /* X18 */] <-0.365068f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.18286951f ? 
                             (data[10 /* X28 */] <-0.124875344f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5584497f ? 
                                    0.0f : 
                                     (data[9 /* X27 */] <0.31010675f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)) : 
                     (data[12 /* X35 */] <-0.6600493f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
         (data[9 /* X27 */] <-0.0241427f ? 
             (data[8 /* X23 */] <0.088369735f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.94230783f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16051406f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.06449741f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.109871805f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2022779f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.115037166f ? 
                         (data[12 /* X35 */] <-0.29758358f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[10 /* X28 */] <0.3209037f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X27 */] <0.13323884f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[5 /* X19 */] <-0.2548148f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.22223514f ? 
                 (data[11 /* X34 */] <-0.50961643f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.34261206f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_20_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5670757f ? 
             (data[9 /* X27 */] <-0.03700506f ? 
                 (data[11 /* X34 */] <-0.3870205f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.07956999f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23726434f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_21_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_21_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[8 /* X23 */] <0.1330381f ? 
             (data[5 /* X19 */] <0.057424795f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.2174629f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17905515f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
                         (data[4 /* X18 */] <-0.41440862f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15894888f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4423047f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16698608f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.04033071f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.03652156f ? 
                     (data[2 /* X15 */] <0.14690877f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (data[6 /* X20 */] <-0.69927067f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1501804f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.19916523f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.1619738f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (data[6 /* X20 */] <-0.73798364f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9955071f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20360188f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19916523f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.089219674f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[6 /* X20 */] <-0.51184654f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[8 /* X23 */] <0.13939095f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.082610406f ? 
            0.0f : 
             (data[5 /* X19 */] <0.05197083f ? 
                0.0f : 
                1.0f)) : 
         (data[8 /* X23 */] <0.12728085f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046579335f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.13327152f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[6 /* X20 */] <-0.25232595f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3127868f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0027195225f ? 
                     (data[10 /* X28 */] <-0.04033071f ? 
                         (data[1 /* X12 */] <-0.28552243f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47708f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09904256f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.0026699244f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.14373314f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06711915f ? 
                         (data[7 /* X21 */] <0.08531993f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_21_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.17950271f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.016203756f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24639653f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28277695f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_22_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_22_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.02485953f ? 
                 (data[9 /* X27 */] <0.09112265f ? 
                     (data[3 /* X17 */] <-0.35976195f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26388294f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.17666458f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35560292f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4814707f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.46393925f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.15948382f ? 
                 (data[4 /* X18 */] <-0.580583f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19131969f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3876953f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28572223f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.049610462f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15306804f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.9770951f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.3982625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.105854385f ? 
             (data[0 /* X5 */] <0.08376448f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.07971215f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X19 */] <-0.1552799f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.38341475f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
             (data[4 /* X18 */] <-0.6069081f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.3762803f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_22_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0166743f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08351302f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.114944115f ? 
                    1.0f : 
                    0.0f))) : 
         (data[8 /* X23 */] <0.0965093f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_23_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_23_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[3 /* X17 */] <-0.40222302f ? 
             (data[2 /* X15 */] <0.10744654f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0425256f ? 
                 (data[9 /* X27 */] <0.105651915f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16104607f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48862252f ? 
                             (data[8 /* X23 */] <0.12953372f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1169782f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (data[8 /* X23 */] <0.22788505f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[12 /* X35 */] <-0.77285993f ? 
            1.0f : 
             (data[7 /* X21 */] <0.110191874f ? 
                 (data[9 /* X27 */] <-0.001976285f ? 
                     (data[3 /* X17 */] <-0.17859465f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.30456254f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1184964f ? 
                 (data[11 /* X34 */] <0.35937217f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0890737f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18598157f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.39497665f ? 
                 (data[8 /* X23 */] <0.10834293f ? 
                     (data[1 /* X12 */] <-0.7009855f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X19 */] <-0.19482116f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7503148f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19377397f ? 
                 (data[2 /* X15 */] <0.09495058f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2719455f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_23_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (data[5 /* X19 */] <-0.06528946f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18642204f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.20464736f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24607259f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.37008318f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_24_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_24_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[12 /* X35 */] <-0.38729438f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23892416f ? 
                 (data[6 /* X20 */] <-0.4676422f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.11612543f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15255187f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.20596406f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
         (data[12 /* X35 */] <-0.22696021f ? 
             (data[8 /* X23 */] <0.08794166f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.060089674f ? 
                     (data[6 /* X20 */] <-0.7643001f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2933933f ? 
                         (data[5 /* X19 */] <0.23195173f ? 
                             (data[6 /* X20 */] <-0.44084728f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2420032f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f))) : 
            0.0f) : 
         (data[10 /* X28 */] <0.22575712f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15179883f ? 
         (data[12 /* X35 */] <-0.61252576f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18012622f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.120888844f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.008022806f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X35 */] <0.024535043f ? 
                     (data[6 /* X20 */] <0.039547157f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11012303f ? 
            0.0f : 
             (data[10 /* X28 */] <0.57247764f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.41055903f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.077680565f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.15009645f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08534063f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.3518711f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_24_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5670757f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2854253f ? 
                 (data[9 /* X27 */] <-0.037562683f ? 
                     (data[6 /* X20 */] <0.039547157f ? 
                         (data[0 /* X5 */] <0.1270792f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.35246864f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_25_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_25_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[5 /* X19 */] <0.24695015f ? 
             (data[4 /* X18 */] <-0.32936642f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3201316f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16841553f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2503609f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19041216f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.32936642f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.8857216f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.16401026f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.014528256f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[2 /* X15 */] <0.21657792f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11255009f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[7 /* X21 */] <0.17635965f ? 
             (data[7 /* X21 */] <0.12274108f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3440367f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4258355f ? 
                 (data[2 /* X15 */] <0.10182601f ? 
                     (data[12 /* X35 */] <-0.40270078f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21370865f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.22388647f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[11 /* X34 */] <-0.048078906f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.08564277f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15179883f ? 
         (data[5 /* X19 */] <-0.014840265f ? 
             (data[2 /* X15 */] <0.124107815f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.5189975f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03705771f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12326321f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.42526042f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[5 /* X19 */] <-0.2548148f ? 
            1.0f : 
             (data[7 /* X21 */] <0.1422901f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24185427f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.17788632f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.29461423f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.062879115f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_25_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16599235f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.56072366f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (data[9 /* X27 */] <0.09555593f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04930339f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.0053797723f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_26_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_26_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43689606f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.26907277f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23964398f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.011274201f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.030666217f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19923823f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13892885f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.08304257f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.12740566f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
             (data[6 /* X20 */] <-0.61357874f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06610442f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1386298f ? 
                    0.0f : 
                     (data[1 /* X12 */] <0.09650366f ? 
                         (data[2 /* X15 */] <0.15674607f ? 
                             (data[0 /* X5 */] <0.15191297f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (data[12 /* X35 */] <-0.9770951f ? 
                    0.0f : 
                    1.0f))) : 
         (data[6 /* X20 */] <-0.53223705f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117032565f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X18 */] <-0.14858238f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.051159926f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.12360838f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[11 /* X34 */] <-0.9477165f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.057992507f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.070648395f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[11 /* X34 */] <-0.33293408f ? 
             (data[6 /* X20 */] <-0.06332615f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45827755f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11448403f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18367189f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.008048894f ? 
                 (data[11 /* X34 */] <-0.379809f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.056040138f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.24165063f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41696894f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.43878794f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_26_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[11 /* X34 */] <-0.71694773f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.057992507f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.033009265f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4272482f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44346535f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_27_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_27_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08141827f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14834975f ? 
             (data[11 /* X34 */] <-0.20312665f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17869912f ? 
             (data[4 /* X18 */] <-0.22491342f ? 
                 (data[3 /* X17 */] <-0.28616273f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23195173f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16268432f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[10 /* X28 */] <-0.2838414f ? 
            0.0f : 
             (data[11 /* X34 */] <0.10336309f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5122845f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27447584f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.4311954f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (data[10 /* X28 */] <-0.20804667f ? 
             (data[2 /* X15 */] <0.16409488f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.10244816f ? 
                 (data[12 /* X35 */] <-0.34339336f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42805213f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.064341016f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
        0.022222223f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1518981f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40865508f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[6 /* X20 */] <-0.27903488f ? 
             (data[1 /* X12 */] <-0.44361678f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17788632f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06407438f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20195472f ? 
                         (data[5 /* X19 */] <0.10105653f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_27_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4418527f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X12 */] <-0.6749029f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40865508f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.34339336f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_28_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_28_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12996686f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.054087598f ? 
                     (data[6 /* X20 */] <-0.38309672f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2973851f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.10109037f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[4 /* X18 */] <-0.32936642f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.46042597f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.35280687f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10093036f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[4 /* X18 */] <-0.59451634f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21262579f ? 
             (data[12 /* X35 */] <-0.52059305f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6300913f ? 
                     (data[3 /* X17 */] <-0.6201899f ? 
                         (data[10 /* X28 */] <-0.32415774f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.1392084f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[1 /* X12 */] <0.17704986f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (data[5 /* X19 */] <-0.03665613f ? 
             (data[12 /* X35 */] <0.20250635f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (data[1 /* X12 */] <-0.6749029f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <-0.13511433f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[4 /* X18 */] <-0.6065686f ? 
             (data[12 /* X35 */] <-0.65874183f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08485778f ? 
                 (data[6 /* X20 */] <-0.25344738f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049977887f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.095815144f ? 
                             (data[7 /* X21 */] <0.14251345f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16670689f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17436445f ? 
             (data[5 /* X19 */] <0.17238186f ? 
                 (data[4 /* X18 */] <-0.28919217f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_28_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.025381427f ? 
        0.05f : 
         (data[0 /* X5 */] <0.12527442f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10160459f ? 
                 (data[1 /* X12 */] <-0.49631488f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_29_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_29_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.114762805f ? 
             (data[11 /* X34 */] <-0.28245342f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7667951f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03959793f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.27886686f ? 
                             (data[1 /* X12 */] <-0.32192737f ? 
                                1.0f : 
                                 (data[7 /* X21 */] <0.087871686f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.008048894f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.4084847f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.28847727f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47098312f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.15877947f ? 
                 (data[3 /* X17 */] <-0.22145759f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23709019f ? 
            0.0f : 
             (data[10 /* X28 */] <0.26607347f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18485343f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10093036f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6406216f ? 
                 (data[10 /* X28 */] <-0.18224423f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.105854385f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11348766f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.6851498f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[6 /* X20 */] <-0.27903488f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (data[3 /* X17 */] <-0.39373082f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38540983f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_29_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24520537f ? 
             (data[3 /* X17 */] <-0.60037476f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11552861f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <0.22736977f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.6749029f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18122262f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.066303216f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48317358f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_30_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_30_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[0 /* X5 */] <0.0909836f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22240935f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20349759f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1350428f ? 
                             (data[5 /* X19 */] <-0.060130626f ? 
                                0.0f : 
                                1.0f) : 
                             (data[1 /* X12 */] <-0.20853657f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.076454155f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4814707f ? 
            0.0f : 
             (data[0 /* X5 */] <0.08376448f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08303729f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14512701f ? 
             (data[5 /* X19 */] <-0.09255929f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.124050036f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.1648682f ? 
                 (data[2 /* X15 */] <0.11827637f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.15126067f ? 
             (data[4 /* X18 */] <-0.35340083f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[0 /* X5 */] <0.10506089f ? 
            1.0f : 
             (data[2 /* X15 */] <0.10328122f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20349759f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1982551f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19158599f ? 
                    0.0f : 
                     (data[11 /* X34 */] <8.242375E-4f ? 
                        1.0f : 
                        0.0f))) : 
             (data[1 /* X12 */] <-0.080585346f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.016949153f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3205787f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.12494088f ? 
                 (data[11 /* X34 */] <-0.92067325f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.022031892f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21967176f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.10975332f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14523454f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1800888f ? 
             (data[2 /* X15 */] <0.12993926f ? 
                 (data[0 /* X5 */] <0.1326214f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.15644176f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.3581744f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.102165334f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61918336f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.089368366f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.0077814963f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.09975732f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_30_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[9 /* X27 */] <-0.03855087f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.09255929f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_31_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_31_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08141827f ? 
         (data[12 /* X35 */] <-0.38729438f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.011302949f ? 
                 (data[5 /* X19 */] <0.2210438f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13691244f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.16988179f ? 
                             (data[11 /* X34 */] <-0.266668f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12430013f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18207407f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[8 /* X23 */] <0.14157474f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.25554627f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06610442f ? 
                 (data[5 /* X19 */] <-0.06801644f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14151745f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.35280687f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19742785f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[8 /* X23 */] <0.11758694f ? 
                     (data[0 /* X5 */] <0.12996686f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.4083757f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.36061776f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
             (data[4 /* X18 */] <-0.5516638f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29405287f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14777313f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.18115044f ? 
            0.0f : 
             (data[2 /* X15 */] <0.15659732f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16250938f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15860532f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17159246f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12419156f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.14009762f ? 
                        0.0f : 
                        1.0f))) : 
             (data[5 /* X19 */] <0.011939087f ? 
                 (data[6 /* X20 */] <-0.08007297f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.2044779f ? 
                     (data[8 /* X23 */] <0.13980667f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18875661f ? 
             (data[10 /* X28 */] <-0.04033071f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.027887238f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_31_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (data[5 /* X19 */] <-0.023021216f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48216903f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.061195247f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.07528816f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.7393117f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16504163f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5015209f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[4 /* X18 */] <-0.22357428f ? 
            0.0f : 
             (data[10 /* X28 */] <0.40153635f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_04_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_32_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_32_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08141827f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08497686f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16599122f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.087622166f ? 
                 (data[5 /* X19 */] <0.18286604f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.28299633f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.38426486f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12682259f ? 
                        1.0f : 
                         (data[11 /* X34 */] <0.3846125f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18842366f ? 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16461864f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20361167f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.6666667f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19366865f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1023942f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.038473077f ? 
             (data[12 /* X35 */] <-0.8625707f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.058370855f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.19250154f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[7 /* X21 */] <0.1772744f ? 
             (data[12 /* X35 */] <-0.25177383f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15826328f ? 
             (data[5 /* X19 */] <-0.12528309f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.14837316f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.11609435f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.10181228f ? 
        0.071428575f : 
         (data[3 /* X17 */] <-0.48997593f ? 
             (data[12 /* X35 */] <-0.11434453f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.56464374f ? 
                 (data[5 /* X19 */] <0.1390819f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11434453f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23655243f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[6 /* X20 */] <-0.17098427f ? 
                     (data[11 /* X34 */] <-0.14904024f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_32_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[1 /* X12 */] <-0.6749029f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.048971735f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.11264096f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11790665f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48216903f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2329877f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_33_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_33_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20105822f ? 
             (data[2 /* X15 */] <0.13577071f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10678571f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.19183691f ? 
                     (data[5 /* X19 */] <0.0137930615f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17039393f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.5014216f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40699404f ? 
            0.0f : 
             (data[0 /* X5 */] <0.12563539f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
             (data[12 /* X35 */] <-0.24795635f ? 
                 (data[5 /* X19 */] <-0.06801644f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.29192373f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.101566f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19683307f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4999975f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f))) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[11 /* X34 */] <0.07812276f ? 
            0.0f : 
             (data[2 /* X15 */] <0.13577071f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.071653634f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.049610462f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.71634257f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.1709566f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.05701527f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[11 /* X34 */] <-0.76923126f ? 
             (data[7 /* X21 */] <0.14158534f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.20214802f ? 
             (data[5 /* X19 */] <-0.09255929f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17719854f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21700618f ? 
                     (data[5 /* X19 */] <-0.14447275f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7503148f ? 
             (data[3 /* X17 */] <-0.5207367f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.018737895f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.6017111f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.379809f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1044225f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.12807496f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_33_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[7 /* X21 */] <0.09128679f ? 
             (data[2 /* X15 */] <0.15409812f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.36883044f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_34_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_34_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12924494f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18341894f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21109338f ? 
                     (data[6 /* X20 */] <-0.2761922f ? 
                         (data[11 /* X34 */] <0.12499765f ? 
                             (data[11 /* X34 */] <7.207643E-4f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0025726364f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39559007f ? 
                     (data[6 /* X20 */] <-0.34646013f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3709807f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[3 /* X17 */] <-0.18433763f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[7 /* X21 */] <0.06872267f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41253564f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.065379985f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_04_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[6 /* X20 */] <-0.71676046f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14316295f ? 
                 (data[9 /* X27 */] <0.39701915f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53812224f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.24665801f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29013383f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25489885f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19131969f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.36248076f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.071653634f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.71645206f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010406692f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1518981f ? 
                 (data[1 /* X12 */] <-0.5021702f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <0.15391113f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.6222048f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.14493442f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17756337f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.25595427f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.19183691f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07396829f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2549829f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[12 /* X35 */] <-0.18305919f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_34_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (data[9 /* X27 */] <-0.36883044f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_35_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_35_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12996686f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.017032623f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18341894f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11270244f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.36095616f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17102331f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.16222145f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.45410028f ? 
             (data[8 /* X23 */] <0.12886906f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1270792f ? 
                     (data[6 /* X20 */] <-0.53462946f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10385804f ? 
             (data[0 /* X5 */] <0.05922256f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2906204f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.84825f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.2567199f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09361118f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[0 /* X5 */] <0.08990073f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.08741987f ? 
                 (data[7 /* X21 */] <0.16812679f ? 
                     (data[8 /* X23 */] <0.15749282f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
             (data[0 /* X5 */] <0.11264096f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.09099933f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.020568056f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.087622166f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.39446938f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_35_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48055637f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.09001433f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15826343f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_36_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_36_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (data[10 /* X28 */] <-0.19837075f ? 
             (data[9 /* X27 */] <0.017994747f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0048523345f ? 
             (data[3 /* X17 */] <-0.33145455f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.11629095f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19398524f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.1330632f ? 
                         (data[6 /* X20 */] <-0.21877581f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18742068f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.64115685f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14338161f ? 
             (data[11 /* X34 */] <-0.6899045f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.011494253f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14191778f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[9 /* X27 */] <-0.0241427f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.003983535f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4837817f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3138951f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.027500425f ? 
                 (data[11 /* X34 */] <-0.30769375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03705771f ? 
                     (data[1 /* X12 */] <-0.69853383f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.16650413f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1382751f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_36_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4418527f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4837817f ? 
             (data[6 /* X20 */] <-0.0025628645f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_37_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_37_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08141827f ? 
         (data[11 /* X34 */] <-0.23016988f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X28 */] <-0.07580909f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16655137f ? 
                 (data[1 /* X12 */] <-0.27381176f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10776767f ? 
                         (data[1 /* X12 */] <-0.15121546f ? 
                             (data[12 /* X35 */] <-0.9022725f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12094213f ? 
                                     (data[7 /* X21 */] <0.1815433f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.36418408f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (data[4 /* X18 */] <-0.20080888f ? 
                 (data[6 /* X20 */] <-0.2044779f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.27117014f ? 
                         (data[0 /* X5 */] <0.09150812f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_04_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[7 /* X21 */] <0.09311632f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.153118f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.108855784f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25870514f ? 
            0.0f : 
             (data[2 /* X15 */] <0.26239643f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66766477f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14191778f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.25320098f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18991986f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09648039f ? 
             (data[0 /* X5 */] <0.08232065f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18658762f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.22157629f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20156732f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.36772212f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14351179f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.22954795f ? 
                     (data[2 /* X15 */] <0.17325859f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_37_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4273388f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4837817f ? 
             (data[2 /* X15 */] <0.13410458f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.14432204f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_38_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_38_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03448276f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1830539f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3395759f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06932973f ? 
                     (data[9 /* X27 */] <0.12383813f ? 
                         (data[11 /* X34 */] <0.096149534f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.2144973f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.084578544f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5755516f ? 
             (data[12 /* X35 */] <-0.90838045f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47238496f ? 
                     (data[4 /* X18 */] <-0.46003324f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X27 */] <0.5381915f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9082436f ? 
            0.0f : 
             (data[11 /* X34 */] <0.3088915f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <1.014596f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09507502f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[5 /* X19 */] <-0.0012053472f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20250635f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.1552799f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.38341475f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0087503195f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.022031892f ? 
                 (data[12 /* X35 */] <-0.11434453f ? 
                     (data[11 /* X34 */] <-0.5384625f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5015209f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_38_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16425768f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.007972595f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.011210181f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5460796f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.6778306f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17576486f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.34186035f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_39_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_39_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06932973f ? 
             (data[12 /* X35 */] <-0.95381373f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.18598157f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.2137251f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.24038203f ? 
                             (data[12 /* X35 */] <-0.40203246f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06932973f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.31726003f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <0.21525458f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
        0.75f : 
         (data[10 /* X28 */] <-0.43543082f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1507008f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.016949153f : 
         (data[8 /* X23 */] <0.12708233f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.01323073f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <-0.21477385f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.8197119f ? 
                     (data[12 /* X35 */] <-0.041904923f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[3 /* X17 */] <-0.24511701f ? 
             (data[1 /* X12 */] <-0.45532745f ? 
                 (data[2 /* X15 */] <0.11595324f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.23557852f ? 
                     (data[12 /* X35 */] <0.0725256f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3418682f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_39_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14118563f ? 
             (data[6 /* X20 */] <-0.077680565f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4418527f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_40_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_40_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.048029833f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.31811702f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25922158f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.099646546f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.099034175f ? 
                 (data[5 /* X19 */] <-0.0025688391f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13574216f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.14943095f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.61357874f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.3946739f ? 
             (data[12 /* X35 */] <-0.9318184f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.273247f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[6 /* X20 */] <-0.2918006f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.9770951f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.9770951f ? 
             (data[10 /* X28 */] <-0.085429765f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.28603783f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05898445f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05868638f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.14982595f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09816102f ? 
            0.0f : 
             (data[10 /* X28 */] <0.12288739f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022655308f ? 
             (data[12 /* X35 */] <-0.45410028f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.19377397f ? 
                     (data[10 /* X28 */] <0.3510933f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_40_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.02504771f ? 
            0.0f : 
             (data[2 /* X15 */] <0.10661347f ? 
                1.0f : 
                0.0f)) : 
        0.9285714f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_41_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_41_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.31811702f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2815569f ? 
                 (data[10 /* X28 */] <-0.14339335f ? 
                     (data[11 /* X34 */] <0.2247586f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21074647f ? 
                 (data[10 /* X28 */] <-0.24675037f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.099333964f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2815569f ? 
                 (data[9 /* X27 */] <0.12658891f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.39091867f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.064341016f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[6 /* X20 */] <-0.2798386f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X28 */] <-0.16289239f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20081747f ? 
                 (data[10 /* X28 */] <-0.41998464f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.11702622f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.016949153f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055097774f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14548813f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.68368596f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[9 /* X27 */] <0.1310222f ? 
                 (data[2 /* X15 */] <0.096328236f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.080286205f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3368497f ? 
                         (data[3 /* X17 */] <-0.24653238f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3418682f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_41_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.025381427f ? 
         (data[7 /* X21 */] <0.0736014f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23740451f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.25632417f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5499005f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_42_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_42_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.008077642f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.016735625f ? 
                     (data[5 /* X19 */] <0.062103033f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14395705f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22649278f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.14117768f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.31376123f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44578528f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06613317f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7170378f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X21 */] <0.18282968f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.76231605f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.31931323f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.46405357f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19366865f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.20339891f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X17 */] <-0.27059367f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6658619f ? 
                 (data[6 /* X20 */] <-0.74952585f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.016949153f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010838328f ? 
            0.0f : 
             (data[2 /* X15 */] <0.15826343f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14523454f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.008077642f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.46524978f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.057678428f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.27884766f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.45742244f ? 
            1.0f : 
             (data[10 /* X28 */] <0.09513219f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.32084826f ? 
                     (data[11 /* X34 */] <-0.4519242f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.70027107f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_42_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25478488f ? 
             (data[2 /* X15 */] <0.08174074f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28835702f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27299905f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6047307f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_43_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_43_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[0 /* X5 */] <0.08737404f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33293408f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.48266223f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.044460487f ? 
                        0.0f : 
                        1.0f)))) : 
        0.06521739f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20408195f ? 
                 (data[1 /* X12 */] <-0.3440759f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.9318184f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39726502f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.24648479f ? 
                 (data[11 /* X34 */] <0.13220918f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12861978f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12559938f ? 
             (data[3 /* X17 */] <0.13165875f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.082610406f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.08890601f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13826884f ? 
             (data[6 /* X20 */] <-0.06093375f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.12167492f ? 
                     (data[6 /* X20 */] <0.1439531f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[6 /* X20 */] <-0.25232595f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5291929f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-5.299925E-4f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06421652f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.28552243f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_43_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2728064f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49829558f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.11244492f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_44_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_44_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06126646f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.004465856f ? 
                     (data[5 /* X19 */] <0.058993306f ? 
                         (data[7 /* X21 */] <0.18642204f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.106388964f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.22478454f ? 
                            1.0f : 
                             (data[12 /* X35 */] <-0.7453121f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[12 /* X35 */] <-0.77285993f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.24991356f ? 
                 (data[9 /* X27 */] <-0.001976285f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.014528256f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11769435f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.041427415f ? 
                     (data[4 /* X18 */] <-0.5237051f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.126607f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (data[12 /* X35 */] <-0.90838045f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34512153f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.06887466f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[3 /* X17 */] <-0.020073274f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18039621f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.18989024f ? 
                    0.0f : 
                    1.0f))) : 
         (data[5 /* X19 */] <-0.19482116f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.43619886f ? 
                 (data[9 /* X27 */] <-0.046309114f ? 
                     (data[4 /* X18 */] <-0.12849528f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10719352f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7503148f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27831045f ? 
                 (data[2 /* X15 */] <0.09828284f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.37646133f ? 
                     (data[2 /* X15 */] <0.19991663f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_44_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (data[1 /* X12 */] <-0.6778306f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24639653f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.198109f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.0995085f ? 
                         (data[4 /* X18 */] <-0.10706902f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20636575f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[2 /* X15 */] <0.19437046f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X28 */] <0.34670615f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_45_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_45_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.37194607f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20616545f ? 
             (data[9 /* X27 */] <0.08355108f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1884269f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5373739f ? 
                     (data[1 /* X12 */] <-0.44947213f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.43534476f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X15 */] <0.15493119f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22353733f ? 
                 (data[4 /* X18 */] <-0.37833333f ? 
                     (data[4 /* X18 */] <-0.46631715f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.21803728f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
             (data[9 /* X27 */] <0.09371505f ? 
                 (data[8 /* X23 */] <0.1884269f ? 
                     (data[4 /* X18 */] <-0.46161327f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1830539f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.032201633f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11988125f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[9 /* X27 */] <-0.18817416f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10361895f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10678571f ? 
                     (data[5 /* X19 */] <0.051653545f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.039402127f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2363409f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.028790725f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23766138f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_45_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05495274f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26180404f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02939885f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.272602f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19200037f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2991796f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_46_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_46_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.040301964f ? 
             (data[3 /* X17 */] <-0.3795771f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.07750898f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.13251854f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.054087598f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7461291f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.062879115f ? 
             (data[9 /* X27 */] <0.108855784f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.014411797f ? 
                     (data[11 /* X34 */] <0.31009632f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8155262f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.20047124f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4676422f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[11 /* X34 */] <0.35937217f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.04530458f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.27739078f ? 
             (data[3 /* X17 */] <-0.4220382f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15179883f ? 
         (data[11 /* X34 */] <-0.8215148f ? 
             (data[1 /* X12 */] <-0.25331804f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025218546f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025218546f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07304079f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.3145284f ? 
                    0.0f : 
                    1.0f))) : 
        0.018867925f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1534906f ? 
                 (data[3 /* X17 */] <-0.24087091f ? 
                     (data[5 /* X19 */] <0.18832f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17113459f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.065718554f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3418682f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_46_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[8 /* X23 */] <0.11755307f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08351302f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0653651f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_47_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_47_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20214802f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12996686f ? 
                 (data[5 /* X19 */] <-0.06801644f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7668234f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X34 */] <0.36358008f ? 
                     (data[11 /* X34 */] <-0.45865834f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.32936642f ? 
             (data[11 /* X34 */] <5.551115E-17f ? 
                 (data[9 /* X27 */] <-0.001976285f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22490855f ? 
                 (data[10 /* X28 */] <0.03707666f ? 
                     (data[9 /* X27 */] <0.39701915f ? 
                         (data[1 /* X12 */] <0.13606244f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.7355913f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[11 /* X34 */] <0.35937217f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18158923f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43913534f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.5123018f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
                 (data[11 /* X34 */] <0.5126225f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.04237691f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[4 /* X18 */] <-0.14724325f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14157474f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.8205112f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16534054f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2595874f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.4391007f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[4 /* X18 */] <-0.6065686f ? 
             (data[2 /* X15 */] <0.11244492f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.2572131f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18832f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0012687175f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20492955f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_47_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07103672f ? 
             (data[5 /* X19 */] <0.024700996f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04352727f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.09555593f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <0.17908408f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_48_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_48_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.24366139f ? 
             (data[3 /* X17 */] <-0.3286238f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18341894f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.093811095f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.23070115f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.25711074f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.23752953f ? 
                                0.0f : 
                                 (data[2 /* X15 */] <0.17592439f ? 
                                    0.0f : 
                                    1.0f)))))) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40699404f ? 
            0.0f : 
             (data[10 /* X28 */] <0.04992434f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08303729f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19423768f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06484889f ? 
                 (data[12 /* X35 */] <-0.25177383f ? 
                     (data[6 /* X20 */] <-0.3910853f ? 
                         (data[6 /* X20 */] <-0.5480867f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.12307875f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.12459168f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.18305919f ? 
             (data[8 /* X23 */] <0.11814865f ? 
                 (data[12 /* X35 */] <-0.9074559f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16465208f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13357641f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.50372756f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.049610462f ? 
            0.0f : 
             (data[8 /* X23 */] <0.1626185f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[11 /* X34 */] <-0.8215148f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.32560593f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.01672633f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.12298468f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[4 /* X18 */] <-0.5811249f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16100907f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.14311256f ? 
                     (data[12 /* X35 */] <-0.29758358f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_48_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[5 /* X19 */] <-0.06392597f ? 
             (data[8 /* X23 */] <0.11973686f ? 
                 (data[8 /* X23 */] <0.10838503f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_49_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_49_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[1 /* X12 */] <-0.19915609f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11769435f ? 
                 (data[5 /* X19 */] <-1.3087335E-5f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.44087857f ? 
                     (data[0 /* X5 */] <0.121250205f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.19813061f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.50260913f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[7 /* X21 */] <0.12086409f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <0.108855784f ? 
                 (data[11 /* X34 */] <0.4423047f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.50592065f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44802162f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13574216f ? 
                        0.0f : 
                         (data[1 /* X12 */] <0.006940906f ? 
                             (data[4 /* X18 */] <-0.50004274f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1608087f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15272431f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.102468975f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.12419156f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1830245f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.039547157f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[5 /* X19 */] <-0.2548148f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.28050125f ? 
                 (data[5 /* X19 */] <0.14344728f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.29235497f ? 
                         (data[0 /* X5 */] <0.103978015f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.3538475f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0021072528f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.19274667f ? 
                         (data[1 /* X12 */] <-0.15176629f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15812142f ? 
             (data[2 /* X15 */] <0.12510477f ? 
                 (data[10 /* X28 */] <0.30800244f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_49_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[1 /* X12 */] <-0.40454274f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14873657f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_50_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_50_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[1 /* X12 */] <-0.42436174f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.40865508f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34339336f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5912677f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20645016f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.14378366f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[4 /* X18 */] <-0.22429231f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (data[7 /* X21 */] <0.071771875f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.14999115f ? 
                 (data[7 /* X21 */] <0.13251778f ? 
                     (data[5 /* X19 */] <0.07392972f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[6 /* X20 */] <-0.3994587f ? 
             (data[4 /* X18 */] <-0.117782146f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44135198f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16440584f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <0.22756523f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4772118f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.025316456f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15130252f ? 
             (data[4 /* X18 */] <-0.09099933f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18341894f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16457658f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08007297f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[6 /* X20 */] <-0.25232595f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14534177f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                     (data[9 /* X27 */] <-0.019709416f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.18832f ? 
                             (data[12 /* X35 */] <0.4545475f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06553558f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_50_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[1 /* X12 */] <-0.40454274f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24322012f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.11697244f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2596482f ? 
                     (data[9 /* X27 */] <-0.035354797f ? 
                         (data[7 /* X21 */] <0.098604895f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_51_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_51_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18802986f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.069358476f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.41045797f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19158599f ? 
                 (data[0 /* X5 */] <0.08866501f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.176599f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12157277f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04739764f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.16923f ? 
                                 (data[7 /* X21 */] <0.10560906f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[1 /* X12 */] <-0.26210105f ? 
                             (data[8 /* X23 */] <0.1482226f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38189164f ? 
                     (data[11 /* X34 */] <-0.057036977f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_04_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[7 /* X21 */] <0.09311632f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10385804f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4813361f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.4755857f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18703187f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23490532f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19158599f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.10786307f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5814369f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3144701f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41297898f ? 
                                 (data[11 /* X34 */] <0.5115408f ? 
                                     (data[7 /* X21 */] <0.14327684f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09214734f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23551425f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.06801644f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19739917f ? 
             (data[5 /* X19 */] <-0.1552799f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[2 /* X15 */] <0.096200176f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.010321202f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28265253f ? 
                         (data[5 /* X19 */] <0.14589566f ? 
                             (data[3 /* X17 */] <-0.5681043f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_51_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[2 /* X15 */] <0.12327475f ? 
             (data[1 /* X12 */] <-0.63977087f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.114445746f ? 
             (data[2 /* X15 */] <0.11244492f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.095602565f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.025734752f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.24137355f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_52_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_52_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.3839081f ? 
             (data[7 /* X21 */] <0.071771875f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18048586f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27655852f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06594698f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13612363f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.43534476f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.04827132f ? 
                 (data[7 /* X21 */] <0.09263823f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19769226f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.17508627f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15776047f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39701915f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.20339891f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <0.4482963f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1386298f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.020407937f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.4728935f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <-0.21809882f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.10854392f ? 
                 (data[0 /* X5 */] <0.12419156f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34185928f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.5838032f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.14432204f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16750628f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12098045f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0012768909f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_52_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[0 /* X5 */] <0.12852304f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14075275f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X27 */] <-0.15818456f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.30136895f ? 
             (data[1 /* X12 */] <-0.64855385f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_53_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_53_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[12 /* X35 */] <-0.41019925f ? 
             (data[6 /* X20 */] <-0.46524978f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.28616273f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15523377f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.16200794f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[12 /* X35 */] <-0.70414525f ? 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10608594f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13832995f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.30456254f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15179883f ? 
         (data[11 /* X34 */] <-0.69351023f ? 
             (data[6 /* X20 */] <0.056293976f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14074399f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.021488504f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0030888414f ? 
            0.0f : 
             (data[7 /* X21 */] <0.108362354f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2567199f ? 
                 (data[11 /* X34 */] <-0.2572131f ? 
                     (data[4 /* X18 */] <-0.17134778f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.065718554f ? 
                             (data[0 /* X5 */] <0.07701883f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.36688685f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23219797f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.40865508f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_53_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18855648f ? 
             (data[8 /* X23 */] <0.1177516f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11535067f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.17591411f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22972034f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.14729275f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_54_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_54_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[6 /* X20 */] <-0.2068703f ? 
             (data[5 /* X19 */] <0.079240665f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.38341475f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.29835624f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.6413863f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31238025f ? 
                 (data[7 /* X21 */] <0.06933251f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.27624997f ? 
                         (data[10 /* X28 */] <-0.11773808f ? 
                             (data[9 /* X27 */] <0.11894814f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[6 /* X20 */] <-0.3994587f ? 
             (data[6 /* X20 */] <-0.6987847f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41918558f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.71634257f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.2349848f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29013383f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.26789042f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.21286115f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0152777f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117032565f ? 
            0.0f : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19864193f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.1552799f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.13519098f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.013085698f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.124107815f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.61778927f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.20606117f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
        0.08163265f : 
         (data[11 /* X34 */] <-0.46093863f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.50552356f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.18011881f ? 
                     (data[2 /* X15 */] <0.23657145f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_54_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.18866609f ? 
            0.0f : 
             (data[0 /* X5 */] <0.10109037f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4272482f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23607318f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5273233f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_55_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_55_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21325505f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12996686f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.25589266f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.23195173f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24521595f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[9 /* X27 */] <0.1797883f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.22705978f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.018955525f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.082651176f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.48917958f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.84730077f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.3581744f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_04_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16173099f ? 
                 (data[6 /* X20 */] <-0.46285737f ? 
                     (data[1 /* X12 */] <0.054087598f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.25177383f ? 
                     (data[3 /* X17 */] <-0.22006486f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.14672157f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                1.0f)) : 
         (data[8 /* X23 */] <0.11239139f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.45328775f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[3 /* X17 */] <-0.3979769f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16678438f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.54095066f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.9770951f ? 
             (data[11 /* X34 */] <0.3846125f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.76682323f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.5696387f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[7 /* X21 */] <0.1370249f ? 
             (data[0 /* X5 */] <0.099646546f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1505084f ? 
             (data[11 /* X34 */] <-0.6899045f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0060535227f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[2 /* X15 */] <0.09578364f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.27122098f ? 
                 (data[10 /* X28 */] <-0.10483685f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.379809f ? 
                         (data[9 /* X27 */] <0.08668937f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4714983f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625176f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06421652f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1736023f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_55_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.36883044f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_56_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_56_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[3 /* X17 */] <-0.8395722f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.31479916f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.2374057f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16461864f ? 
                         (data[4 /* X18 */] <-0.12849528f ? 
                             (data[8 /* X23 */] <0.18870057f ? 
                                1.0f : 
                                 (data[12 /* X35 */] <0.063638f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3028119f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20324889f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11721756f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8155262f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23969749f ? 
                         (data[5 /* X19 */] <-0.07893296f ? 
                             (data[4 /* X18 */] <-0.19015934f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.427274f ? 
                                0.0f : 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18658762f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                    1.0f)) : 
             (data[3 /* X17 */] <0.31578118f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0024017578f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12548059f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[10 /* X28 */] <-0.37429646f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.059942946f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.9770951f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15179883f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03139623f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1560058f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08063482f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X21 */] <0.10226394f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03139623f ? 
             (data[11 /* X34 */] <-0.23197275f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046579335f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7503148f ? 
             (data[12 /* X35 */] <-0.45644522f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20673242f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17616923f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_56_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_04_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_57_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_57_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[0 /* X5 */] <0.0909836f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17056616f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.03707666f ? 
                     (data[3 /* X17 */] <-0.22749746f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.63877076f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27889258f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17844817f ? 
                                     (data[9 /* X27 */] <0.053519793f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31196374f ? 
             (data[3 /* X17 */] <-0.5465907f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.06427285f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[8 /* X23 */] <0.08618595f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9082436f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23469323f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2273101f ? 
                         (data[3 /* X17 */] <-0.20318669f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.30768076f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <-0.008538722f ? 
                                    1.0f : 
                                     (data[5 /* X19 */] <0.2535222f ? 
                                         (data[0 /* X5 */] <0.13631968f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f))) : 
                            0.0f) : 
                         (data[8 /* X23 */] <0.23475833f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[6 /* X20 */] <-0.4772118f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X28 */] <-0.18224423f ? 
                    0.0f : 
                    1.0f))) : 
         (data[1 /* X12 */] <-0.28259477f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_04_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.36061776f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <1.014596f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1184964f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1023942f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04220298f ? 
            0.0f : 
             (data[5 /* X19 */] <0.011066078f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.025192743f ? 
            0.0f : 
             (data[0 /* X5 */] <0.11264096f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.17253956f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14523454f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1800888f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.65736115f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.02417543f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.27467087f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.12183235f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.12314674f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[3 /* X17 */] <-0.106848f ? 
                         (data[0 /* X5 */] <0.1162333f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.04237691f ? 
                 (data[6 /* X20 */] <-0.22840193f ? 
                     (data[9 /* X27 */] <0.20195472f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.17325859f ? 
             (data[10 /* X28 */] <0.13383587f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17300552f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_04_Tree_57_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[0 /* X5 */] <0.09784177f ? 
            0.0f : 
             (data[7 /* X21 */] <0.084578544f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.0016270273f ? 
                    0.0f : 
                    1.0f))) : 
         (data[1 /* X12 */] <-0.40409318f ? 
             (data[0 /* X5 */] <0.14873657f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.44346535f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_58_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_58_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.45410028f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27483976f ? 
             (data[2 /* X15 */] <0.10744654f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022655308f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3338049f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3958701f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.10661347f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
        0.029411765f : 
         (data[3 /* X17 */] <-0.27483976f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19678932f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04033071f ? 
                     (data[3 /* X17 */] <-0.20086078f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.15948382f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2507785f ? 
             (data[2 /* X15 */] <0.10744654f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4054397f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11718126f ? 
            0.0f : 
             (data[2 /* X15 */] <0.13410458f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13108082f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6917074f ? 
             (data[6 /* X20 */] <0.008445925f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
             (data[3 /* X17 */] <-0.21210116f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046579335f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.07528816f ? 
                     (data[2 /* X15 */] <0.25380528f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.22922476f ? 
                 (data[5 /* X19 */] <0.11062778f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_58_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.05107954f ? 
         (data[1 /* X12 */] <-0.4245869f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2142353f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.48216903f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.12327475f ? 
                 (data[3 /* X17 */] <-0.33693165f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_59_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_59_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04352727f ? 
                 (data[5 /* X19 */] <0.18286604f ? 
                     (data[0 /* X5 */] <0.106833264f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16650464f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3061323f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21691409f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.22196181f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.15321647f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[9 /* X27 */] <0.21414624f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15812142f ? 
                 (data[10 /* X28 */] <-0.09846411f ? 
                     (data[5 /* X19 */] <0.01771978f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X21 */] <0.090676956f ? 
                0.0f : 
                1.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[9 /* X27 */] <-0.21809882f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X15 */] <0.12452435f ? 
             (data[2 /* X15 */] <0.10954884f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[11 /* X34 */] <-0.41045797f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.50882596f ? 
                 (data[3 /* X17 */] <-0.6032055f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.18832f ? 
                         (data[6 /* X20 */] <-0.15111163f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2282408f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.21420029f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_59_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[9 /* X27 */] <0.087797694f ? 
             (data[2 /* X15 */] <0.13410458f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.3654234f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44346535f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_60_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_60_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07446844f ? 
        0.03846154f : 
         (data[3 /* X17 */] <-0.3385314f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.07848013f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.008077642f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.24633968f ? 
                         (data[9 /* X27 */] <0.13023494f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.38913402f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[7 /* X21 */] <0.09311632f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.6899045f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18658762f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.026675183f ? 
                        0.0f : 
                        1.0f)))) : 
        0.011494253f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19208775f ? 
             (data[2 /* X15 */] <0.10661347f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.18224423f ? 
                     (data[8 /* X23 */] <0.14236884f ? 
                        0.0f : 
                        1.0f) : 
                     (data[10 /* X28 */] <-0.034404796f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40588573f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.105854385f ? 
             (data[11 /* X34 */] <-0.94591355f ? 
                 (data[8 /* X23 */] <0.13839832f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
        0.75f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[4 /* X18 */] <-0.705665f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.1241887f ? 
                 (data[7 /* X21 */] <0.107767604f ? 
                     (data[6 /* X20 */] <-0.55835116f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16451141f ? 
             (data[8 /* X23 */] <0.12569265f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.38920313f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.28245342f ? 
                 (data[6 /* X20 */] <-0.26549485f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_60_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4273388f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.13243845f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_61_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_61_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[10 /* X28 */] <0.022562776f ? 
             (data[5 /* X19 */] <0.09287558f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.48798183f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40588573f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.013618873f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17328158f ? 
             (data[1 /* X12 */] <-0.14998034f ? 
                 (data[4 /* X18 */] <-0.18499228f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[6 /* X20 */] <-0.47123078f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16342674f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2690285f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.27381176f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X28 */] <0.06126646f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09816102f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.1552799f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <0.04836523f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17413302f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.23867968f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011889497f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.087622166f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.52101195f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.29723313f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24322012f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <6.224999E-5f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.60572934f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_61_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28381264f ? 
             (data[0 /* X5 */] <0.100368455f ? 
                 (data[7 /* X21 */] <0.09128679f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.11437516f ? 
                 (data[1 /* X12 */] <-0.27609324f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_62_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_62_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.012915602f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06301931f ? 
                 (data[9 /* X27 */] <-0.055175677f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2376487f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[8 /* X23 */] <0.10623708f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.01772321f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23186249f ? 
                 (data[0 /* X5 */] <0.07798918f ? 
                     (data[7 /* X21 */] <0.23276997f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08384361f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26572868f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22388647f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.10920565f ? 
                         (data[11 /* X34 */] <-0.074520156f ? 
                            0.0f : 
                            1.0f) : 
                         (data[3 /* X17 */] <-0.20513806f ? 
                             (data[3 /* X17 */] <-0.21748109f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[9 /* X27 */] <0.22412114f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.13270582f ? 
                        1.0f : 
                        0.0f))) : 
             (data[1 /* X12 */] <-0.6456262f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.18305919f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12548059f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (data[2 /* X15 */] <0.15159893f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060091637f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.019709416f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <0.1365638f ? 
             (data[1 /* X12 */] <-0.6134218f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.32084826f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.022387808f ? 
                 (data[11 /* X34 */] <-0.40865508f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.59345037f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.1736642f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.18055387f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (data[10 /* X28 */] <-0.012915602f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14724325f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.14713347f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32157585f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23197275f ? 
                 (data[4 /* X18 */] <-0.14992154f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29739934f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_62_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[2 /* X15 */] <0.08661994f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_63_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_63_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.3946739f ? 
             (data[7 /* X21 */] <0.086408064f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.56464374f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.19047894f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26402068f ? 
                     (data[9 /* X27 */] <0.078680985f ? 
                         (data[4 /* X18 */] <-0.5802447f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[12 /* X35 */] <-0.9076274f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.3946739f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19158599f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24285968f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.088011004f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
        0.75f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.36061776f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.93551344f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.66228247f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42361885f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.14671747f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11790665f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17332159f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07184459f ? 
             (data[11 /* X34 */] <-0.94591355f ? 
                 (data[4 /* X18 */] <-0.08297246f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.12494088f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.13410458f ? 
             (data[8 /* X23 */] <0.15229514f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[4 /* X18 */] <-0.6065686f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.50961643f ? 
                 (data[4 /* X18 */] <-0.19000155f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35268635f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.026441246f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15487282f ? 
             (data[2 /* X15 */] <0.12447451f ? 
                 (data[4 /* X18 */] <-0.28919217f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_63_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11644301f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.108356625f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.26353997f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18013975f ? 
             (data[3 /* X17 */] <-0.44468412f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1193398f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.21420029f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4615425f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[8 /* X23 */] <0.25274938f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_04_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_64_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_64_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.31811702f ? 
             (data[8 /* X23 */] <0.10226656f ? 
                 (data[10 /* X28 */] <-0.20804667f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23240612f ? 
                 (data[2 /* X15 */] <0.10566595f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.36476886f ? 
             (data[8 /* X23 */] <0.10226656f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22936083f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.11811981f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26572868f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[6 /* X20 */] <-0.3695537f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.2918006f ? 
             (data[0 /* X5 */] <0.13141067f ? 
                 (data[4 /* X18 */] <-0.12849528f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07304079f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20299068f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17810354f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <0.00366112f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26929876f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.102800794f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1761826f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27789822f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.16289239f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20192668f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49829558f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <0.30800244f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_64_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05495274f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.119572334f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19358858f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38540983f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_65_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_65_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3982475f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.27381176f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.24993356f ? 
             (data[11 /* X34 */] <0.15384375f ? 
                 (data[6 /* X20 */] <-0.5210227f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3209037f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[12 /* X35 */] <-0.22696021f ? 
             (data[6 /* X20 */] <-0.35759166f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14316295f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14777313f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47763306f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15543365f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19366865f ? 
        0.07317073f : 
         (data[3 /* X17 */] <-0.21397889f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.55949354f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2812048f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.27568436f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07156578f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.08668937f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.01323073f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.38341475f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15860532f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.054234777f ? 
                 (data[11 /* X34 */] <-0.379809f ? 
                     (data[10 /* X28 */] <0.08868157f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.23867968f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.013085698f ? 
                 (data[9 /* X27 */] <0.09998922f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2822f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_65_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18991761f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.048971735f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.8701926f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24520537f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_66_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_66_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20593695f ? 
             (data[9 /* X27 */] <0.08003945f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
                     (data[10 /* X28 */] <-0.38215277f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.14155547f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3144701f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[4 /* X18 */] <-0.16063465f ? 
                         (data[11 /* X34 */] <0.21153732f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6248234f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
             (data[3 /* X17 */] <-0.84664905f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.43534476f ? 
             (data[9 /* X27 */] <0.17535502f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24008806f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.47700518f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.09513219f ? 
                     (data[2 /* X15 */] <0.13414961f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.40703657f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.19931793f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (data[6 /* X20 */] <-0.54778767f ? 
             (data[9 /* X27 */] <0.33273655f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.90838045f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18158923f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.100368455f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.25320098f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18206091f ? 
                     (data[4 /* X18 */] <-0.4688118f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19864193f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.33447248f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.6917074f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5231747f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011889497f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16389672f ? 
                 (data[11 /* X34 */] <-0.79527205f ? 
                     (data[3 /* X17 */] <-0.48431444f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_66_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26768613f ? 
             (data[7 /* X21 */] <0.09372616f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.08286336f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <-0.36772212f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_67_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_67_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.47123078f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12738526f ? 
                     (data[8 /* X23 */] <0.11060466f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17469823f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.06643859f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.47123078f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.045593042f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17415057f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1386298f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.13100317f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15179883f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.008445925f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.607956f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.09403108f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08366157f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049977887f ? 
                 (data[11 /* X34 */] <-0.45913574f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.08792615f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11164546f ? 
                         (data[9 /* X27 */] <0.17390703f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14724325f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.3440759f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12567365f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_67_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28835702f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14724325f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5144221f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_68_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_68_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[9 /* X27 */] <0.108855784f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.20940295f ? 
                 (data[11 /* X34 */] <-0.6899045f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.24098311f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1597357f ? 
                         (data[11 /* X34 */] <0.4711508f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (data[3 /* X17 */] <-0.36259267f ? 
             (data[9 /* X27 */] <0.30170357f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.29137778f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38613775f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10385804f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27447584f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[9 /* X27 */] <-0.0241427f ? 
             (data[0 /* X5 */] <0.092427425f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.124107815f ? 
             (data[8 /* X23 */] <0.11378108f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17756337f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.26523906f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.28605917f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.120582f ? 
                 (data[11 /* X34 */] <-0.30769375f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_68_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_04_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_69_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_69_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6299419f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21955685f ? 
                     (data[6 /* X20 */] <-0.3145284f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.48786113f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3881526f ? 
                            1.0f : 
                             (data[11 /* X34 */] <0.15384375f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2865553f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
            0.0f : 
             (data[8 /* X23 */] <0.10623708f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.84268916f ? 
                     (data[6 /* X20 */] <-0.38759145f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[12 /* X35 */] <-0.22696021f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19041216f ? 
                 (data[1 /* X12 */] <-0.41434005f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.4676422f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14941993f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.19813061f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.13270582f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.46405357f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[11 /* X34 */] <0.10336309f ? 
            0.0f : 
             (data[8 /* X23 */] <0.11100171f ? 
                 (data[2 /* X15 */] <0.16159569f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.7419117f ? 
             (data[1 /* X12 */] <0.0013894893f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05630617f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.42204812f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14877874f ? 
             (data[8 /* X23 */] <0.11536928f ? 
                 (data[4 /* X18 */] <-0.24633968f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.33142027f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.29412588f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06401321f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.21853371f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.10181228f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45446005f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[5 /* X19 */] <0.18286604f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.45532745f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.16015671f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12326321f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_69_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[5 /* X19 */] <-0.06392597f ? 
             (data[8 /* X23 */] <0.11973686f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_70_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_70_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11644301f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21233062f ? 
                 (data[1 /* X12 */] <-0.34353495f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16936839f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3615529f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.11243579f ? 
             (data[4 /* X18 */] <-0.17670435f ? 
                 (data[11 /* X34 */] <0.35517013f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.122426026f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.50465006f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.11773808f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[6 /* X20 */] <-0.5394142f ? 
             (data[1 /* X12 */] <0.20047124f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.273247f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.2293827f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <5.9887697E-4f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.45328775f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (data[6 /* X20 */] <-0.69850904f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09214734f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.61538124f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09816102f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.6983243f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.6917074f ? 
             (data[3 /* X17 */] <-0.022716034f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.08231595f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X27 */] <-0.18817416f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05256034f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                 (data[1 /* X12 */] <-0.396774f ? 
                     (data[3 /* X17 */] <-0.35588074f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_70_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[6 /* X20 */] <-0.065718554f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.31586966f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15860532f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.050825104f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.3323652f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_71_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_71_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.071749106f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.045989648f ? 
                 (data[3 /* X17 */] <-0.41071525f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.107595064f ? 
                         (data[2 /* X15 */] <0.14139447f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.1973319f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.55969864f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.47717208f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.15028676f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24695015f ? 
             (data[12 /* X35 */] <-0.9312854f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.61550385f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.23561884f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24799f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47465327f ? 
             (data[9 /* X27 */] <0.08003945f ? 
                 (data[3 /* X17 */] <-0.48997593f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.73798364f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05630617f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.58055955f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.078778625f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[5 /* X19 */] <0.006975603f ? 
             (data[2 /* X15 */] <0.12133791f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.75f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0048523345f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                 (data[6 /* X20 */] <-0.34252286f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.11434453f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24322012f ? 
                     (data[2 /* X15 */] <0.124837294f ? 
                         (data[4 /* X18 */] <-0.19277404f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_71_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10773063f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_72_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_72_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[0 /* X5 */] <0.11986008f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04352727f ? 
                 (data[5 /* X19 */] <0.05855161f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
                 (data[7 /* X21 */] <0.10470331f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.66466427f ? 
                        1.0f : 
                         (data[11 /* X34 */] <0.24038203f ? 
                             (data[9 /* X27 */] <0.16612291f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)) : 
        0.039215688f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24695015f ? 
             (data[3 /* X17 */] <-0.22671722f ? 
                 (data[12 /* X35 */] <-0.9312854f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[10 /* X28 */] <0.0564285f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.44453254f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26531214f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.13677034f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1296059f ? 
             (data[3 /* X17 */] <-0.4163767f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.801491f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7433858f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.15948382f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19732296f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[9 /* X27 */] <-0.0241427f ? 
             (data[0 /* X5 */] <0.08979624f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.8215148f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67917705f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44346535f ? 
                     (data[6 /* X20 */] <-0.5326414f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.07580909f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_72_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[9 /* X27 */] <-0.03855087f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.098495096f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_73_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_73_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.3979769f ? 
             (data[6 /* X20 */] <-0.29060438f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.088817865f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.022031892f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16706818f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14295664f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16182037f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[12 /* X35 */] <-0.9312854f ? 
            0.0f : 
             (data[0 /* X5 */] <0.06571668f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27447584f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.106934406f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19526473f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16909327f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.79411703f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10971338f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32387f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.33145455f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
            0.0f : 
             (data[0 /* X5 */] <0.09387125f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.060089674f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16242875f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.080585346f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09133248f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.059682555f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.14875533f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.2691783f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12328125f ? 
             (data[1 /* X12 */] <-0.36749727f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_73_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.704505f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39186043f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15826343f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060091637f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26909384f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_74_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_74_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[4 /* X18 */] <-0.40569744f ? 
             (data[1 /* X12 */] <-0.396774f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.54595184f ? 
                     (data[12 /* X35 */] <-0.2365039f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21741098f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.059942946f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.5370219f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
             (data[8 /* X23 */] <0.08577338f ? 
                 (data[7 /* X21 */] <0.11568045f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.04237691f ? 
                    0.0f : 
                     (data[1 /* X12 */] <0.09361118f ? 
                        1.0f : 
                        0.0f))) : 
             (data[9 /* X27 */] <0.12437227f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22282588f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08485778f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[4 /* X18 */] <-0.4271237f ? 
            0.0f : 
             (data[1 /* X12 */] <0.027738543f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12727942f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.08817121f ? 
             (data[1 /* X12 */] <-0.20940295f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.023034377f ? 
            1.0f : 
             (data[0 /* X5 */] <0.13790789f ? 
                 (data[6 /* X20 */] <-0.18055387f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.30967078f ? 
             (data[2 /* X15 */] <0.09744977f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14687295f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1726116f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.37920797f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07473f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.015270416f ? 
                     (data[4 /* X18 */] <-0.4444653f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15992956f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_74_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (data[9 /* X27 */] <-0.36883044f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_75_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_75_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.024042286f ? 
             (data[5 /* X19 */] <0.22649777f ? 
                 (data[10 /* X28 */] <-0.18869483f ? 
                     (data[7 /* X21 */] <0.19940819f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34339336f ? 
                    1.0f : 
                     (data[12 /* X35 */] <0.091563635f ? 
                         (data[9 /* X27 */] <0.17535502f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[7 /* X21 */] <0.073906325f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.34323725f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22886895f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[4 /* X18 */] <-0.2932096f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.34299582f ? 
                 (data[5 /* X19 */] <0.054930422f ? 
                     (data[6 /* X20 */] <-0.30495882f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.47242698f ? 
                 (data[12 /* X35 */] <-0.90838045f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.43217218f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[7 /* X21 */] <0.2786105f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15179883f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08308899f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03139623f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1531877f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.15423745f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X21 */] <0.1016541f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1800888f ? 
             (data[2 /* X15 */] <0.10328122f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046579335f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.62463737f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3895629f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.04217218f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.07158043f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[12 /* X35 */] <0.45806065f ? 
                            1.0f : 
                             (data[10 /* X28 */] <0.3894335f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
                 (data[12 /* X35 */] <-0.48082265f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_75_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24639653f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21271355f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14481287f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.38293204f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_76_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_76_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18742068f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08644069f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39145464f ? 
                     (data[6 /* X20 */] <-0.43893334f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.0736014f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2355045f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.30830726f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20408195f ? 
             (data[10 /* X28 */] <-0.0338801f ? 
                 (data[9 /* X27 */] <0.27293062f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[2 /* X15 */] <0.14326829f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[9 /* X27 */] <-0.0241427f ? 
             (data[0 /* X5 */] <0.09387125f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.8215148f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.36772212f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17284206f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18215314f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3581744f ? 
                     (data[6 /* X20 */] <-0.056148943f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.35139507f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.033009265f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_76_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24322012f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6047307f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <0.069583505f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.6778306f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.53726006f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.17165263f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03139623f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_77_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_77_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0023198863f ? 
             (data[2 /* X15 */] <0.12993926f ? 
                 (data[10 /* X28 */] <-0.20159607f ? 
                     (data[5 /* X19 */] <0.002885128f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.2918242f ? 
                     (data[11 /* X34 */] <-0.33653983f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X34 */] <-0.27884766f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15959236f ? 
                             (data[9 /* X27 */] <0.05349788f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.24917725f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)))) : 
            1.0f) : 
         (data[0 /* X5 */] <0.07835014f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12450044f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[6 /* X20 */] <-0.3839081f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1517921f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049977887f ? 
                     (data[4 /* X18 */] <-0.3751061f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9082436f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.5457198f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.36061776f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10385804f ? 
            0.0f : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.018015536f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14495282f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X23 */] <0.11417813f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.24831611f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16161022f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14523454f ? 
         (data[6 /* X20 */] <-0.23079433f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26814076f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <1.7988282E-4f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.8400256f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08352316f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.094580516f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_77_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (data[1 /* X12 */] <-0.64709f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25041118f ? 
                 (data[1 /* X12 */] <-0.4250203f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.56602705f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03139623f ? 
                        0.0f : 
                         (data[5 /* X19 */] <-0.044220228f ? 
                             (data[11 /* X34 */] <-0.5384625f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.31857973f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_78_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_78_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.087068915f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13205028f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5238651f ? 
                     (data[2 /* X15 */] <0.10661347f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[11 /* X34 */] <0.15864956f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.087068915f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13735291f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.10093036f ? 
                     (data[2 /* X15 */] <0.16659407f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.11469145f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[0 /* X5 */] <0.12780112f ? 
             (data[9 /* X27 */] <0.35046968f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5266927f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1624115f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15011136f ? 
             (data[5 /* X19 */] <-0.09255929f ? 
                 (data[9 /* X27 */] <-0.271442f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.044331964f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20837632f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.61598635f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17003298f ? 
             (data[5 /* X19 */] <0.21558984f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.17241697f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.15318862f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.01441908f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.46093863f ? 
            1.0f : 
             (data[2 /* X15 */] <0.11910943f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_78_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16125098f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18013975f ? 
             (data[9 /* X27 */] <0.018109221f ? 
                 (data[2 /* X15 */] <0.15789327f ? 
                     (data[8 /* X23 */] <0.17164694f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.17427088f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_79_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_79_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.31811702f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2815569f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19158599f ? 
                 (data[3 /* X17 */] <-0.7488232f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.19387472f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.20804667f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05706712f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.46405357f ? 
             (data[7 /* X21 */] <0.14495282f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.90623313f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27483976f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.25610822f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[11 /* X34 */] <0.35937217f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18158923f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.43543082f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9955071f ? 
                 (data[6 /* X20 */] <-0.23797153f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09635589f ? 
                         (data[7 /* X21 */] <0.117046766f ? 
                            1.0f : 
                            0.0f) : 
                         (data[9 /* X27 */] <0.26402068f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[11 /* X34 */] <-0.9224761f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13493764f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.087403774f ? 
                     (data[6 /* X20 */] <-0.31749102f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.47430444f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.42526042f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.11242559f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.28552243f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26180512f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.5114193f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02856549f ? 
                 (data[5 /* X19 */] <0.062878765f ? 
                     (data[6 /* X20 */] <-0.08485778f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31445307f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_79_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[4 /* X18 */] <-0.11644301f ? 
             (data[2 /* X15 */] <0.08661994f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <1.7988282E-4f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.15963833f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4418527f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_80_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_80_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18664017f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.06833273f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.062879115f ? 
                         (data[9 /* X27 */] <0.121315815f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.229539f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21691409f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.87020564f ? 
                     (data[11 /* X34 */] <0.48557383f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22694097f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12860341f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24008806f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08868157f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.53222334f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.25331804f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6640617f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X28 */] <0.077392995f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.08817121f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.114445746f ? 
             (data[11 /* X34 */] <-0.6899045f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.059476182f ? 
                     (data[5 /* X19 */] <-0.14982595f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17969175f ? 
             (data[3 /* X17 */] <-0.48895726f ? 
                 (data[7 /* X21 */] <0.14373314f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.82692343f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.62463737f ? 
                     (data[7 /* X21 */] <0.107814476f ? 
                         (data[0 /* X5 */] <0.14648607f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.13461974f ? 
                                0.0f : 
                                 (data[11 /* X34 */] <-0.67692375f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[4 /* X18 */] <-0.26148072f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.07158875f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17788632f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_04_Tree_80_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.272602f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2854253f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0716082f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.073470406f ? 
                         (data[12 /* X35 */] <0.099434376f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[1 /* X12 */] <-0.31893417f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_81_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_81_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06887466f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06484889f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23839678f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X27 */] <0.20328656f ? 
                         (data[6 /* X20 */] <-0.50592065f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.04694696f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2126452f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.078681864f ? 
                     (data[7 /* X21 */] <0.23443273f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.47700518f ? 
                 (data[9 /* X27 */] <0.05945403f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14992154f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.115223676f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16672999f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42175144f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)) : 
         (data[12 /* X35 */] <0.18151021f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19366865f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.080436654f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14923696f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.016949153f : 
         (data[0 /* X5 */] <0.09459316f ? 
             (data[1 /* X12 */] <-0.21818596f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19739917f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.026532257f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.40865028f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03139623f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.43701473f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7503148f ? 
             (data[2 /* X15 */] <0.13493764f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0653651f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.12766196f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.49061707f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_81_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13763472f ? 
             (data[1 /* X12 */] <-0.4933872f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.088011004f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
            0.0f : 
             (data[9 /* X27 */] <0.20195472f ? 
                 (data[3 /* X17 */] <-0.2918242f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20348717f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_82_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_82_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1392084f ? 
                 (data[9 /* X27 */] <0.14875533f ? 
                     (data[7 /* X21 */] <0.152913f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.119942494f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <0.022562776f ? 
             (data[0 /* X5 */] <0.093149334f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15778916f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.35096288f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.12881212f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24496679f ? 
             (data[12 /* X35 */] <-0.24795635f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.257514f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2540139f ? 
                         (data[5 /* X19 */] <-0.07112464f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.072223425f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12563539f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.22282588f ? 
             (data[1 /* X12 */] <-0.42605072f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (data[12 /* X35 */] <-0.5228149f ? 
             (data[10 /* X28 */] <-0.34350958f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.13606244f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.20804667f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12924494f ? 
                 (data[9 /* X27 */] <0.50579286f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2960346f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12326321f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.29137778f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23195173f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14657083f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2225734f ? 
                     (data[7 /* X21 */] <0.10104426f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48077032f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20801793f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48216903f ? 
                 (data[0 /* X5 */] <0.0909836f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12149325f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_82_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (data[8 /* X23 */] <0.116758965f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04675258f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.22364043f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16504163f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24362294f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X28 */] <0.44024006f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_83_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_83_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[5 /* X19 */] <0.081967644f ? 
             (data[3 /* X17 */] <-0.37391564f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05320319f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22886895f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.23016988f ? 
            0.0f : 
             (data[7 /* X21 */] <0.0736014f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.15028676f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17039393f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.23252349f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5710255f ? 
             (data[6 /* X20 */] <-0.3958701f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10093036f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24806982f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
        0.5f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17332159f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.22855441f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.042719185f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.012809787f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26929876f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0425256f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X23 */] <0.1518981f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010838328f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[5 /* X19 */] <-0.225545f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.49280667f ? 
                 (data[7 /* X21 */] <0.1190498f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11278975f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2923707f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_83_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[9 /* X27 */] <0.08447273f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.080667265f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.059187412f ? 
                     (data[2 /* X15 */] <0.08661994f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_84_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_84_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16465208f ? 
             (data[6 /* X20 */] <-0.3863005f ? 
                 (data[7 /* X21 */] <0.09494584f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.24675037f ? 
                     (data[12 /* X35 */] <-0.9076274f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29635674f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[4 /* X18 */] <-0.3615058f ? 
             (data[6 /* X20 */] <-0.5107054f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22366643f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.35280687f ? 
                     (data[10 /* X28 */] <0.049977887f ? 
                         (data[6 /* X20 */] <-0.4169147f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41345936f ? 
                            1.0f : 
                             (data[10 /* X28 */] <0.21956408f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[2 /* X15 */] <0.14326829f ? 
             (data[8 /* X23 */] <0.11735455f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.61538124f ? 
             (data[6 /* X20 */] <-0.376348f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39703006f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.27577814f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[4 /* X18 */] <-0.13519098f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.38538563f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.057490177f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[4 /* X18 */] <-0.7699438f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08997828f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.76923126f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.056148943f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[6 /* X20 */] <-0.17098427f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012036726f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_84_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24639653f ? 
                 (data[6 /* X20 */] <-0.2044779f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23686367f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <0.48216903f ? 
                    0.0f : 
                    1.0f))) : 
         (data[6 /* X20 */] <-0.35161066f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_85_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_85_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.3979769f ? 
            1.0f : 
             (data[9 /* X27 */] <0.12880555f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.004465856f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.062879115f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[3 /* X17 */] <-0.3286238f ? 
            0.0f : 
             (data[9 /* X27 */] <0.12880555f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.247314f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.014528256f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.19461589f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[2 /* X15 */] <0.16284528f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3846125f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3349532f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.20804667f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09507502f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.016949153f : 
         (data[9 /* X27 */] <-0.21809882f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.025192743f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19834201f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[3 /* X17 */] <-0.23945554f ? 
             (data[11 /* X34 */] <-0.38341475f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.34670615f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.2008464f ? 
             (data[10 /* X28 */] <0.29187593f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_85_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.025381427f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18013975f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2716102f ? 
                 (data[7 /* X21 */] <0.09128679f ? 
                     (data[4 /* X18 */] <-0.25957415f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[12 /* X35 */] <-0.36629823f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19308816f ? 
             (data[10 /* X28 */] <0.48216903f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_86_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_86_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.3946739f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.17427088f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07332367f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15084949f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.1445977f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.3946739f ? 
             (data[12 /* X35 */] <-0.97655827f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.6576563f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23562655f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43919504f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18642204f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25489885f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[10 /* X28 */] <-0.23707445f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1949598f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3349532f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10971338f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <0.020407937f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6820487f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.21809882f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060091637f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.03333088f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.058041155f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.012442028f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.5516638f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.29461423f ? 
                 (data[10 /* X28 */] <0.0663438f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.24653238f ? 
                         (data[6 /* X20 */] <-0.45681468f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.65472907f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                1.0f)) : 
         (data[9 /* X27 */] <0.2008464f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15812142f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_86_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38863513f ? 
             (data[7 /* X21 */] <0.09921473f ? 
                 (data[0 /* X5 */] <0.12852304f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20441508f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.3762803f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_87_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_87_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.040301964f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.14468826f ? 
                     (data[3 /* X17 */] <-0.3144701f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.025827657f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.13325419f ? 
             (data[0 /* X5 */] <0.07798918f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26045248f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.037558194f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.024466636f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2918242f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3910853f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10053573f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16784821f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X23 */] <0.17214777f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21491179f ? 
             (data[11 /* X34 */] <-0.20312665f ? 
                 (data[2 /* X15 */] <0.16013053f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08698191f ? 
            0.0f : 
             (data[0 /* X5 */] <0.12564243f ? 
                 (data[3 /* X17 */] <-0.3654234f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12157277f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.092053995f ? 
                         (data[1 /* X12 */] <-0.10873165f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1800888f ? 
             (data[4 /* X18 */] <-0.5730901f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6082755f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1472814f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1130217f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24451691f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4048328f ? 
                             (data[3 /* X17 */] <-0.23188472f ? 
                                 (data[12 /* X35 */] <0.07297883f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20312665f ? 
                 (data[1 /* X12 */] <-0.64511126f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.39439827f ? 
                         (data[5 /* X19 */] <0.2537676f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_04_Tree_87_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28381264f ? 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.66466415f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_88_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_88_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.070857115f ? 
        1.0f : 
         (data[0 /* X5 */] <0.0909836f ? 
             (data[4 /* X18 */] <-0.23830482f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4392025f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.37194607f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17134778f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18207407f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.1292166f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[3 /* X17 */] <-0.27483976f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.102165334f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53810173f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.014528256f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19289854f ? 
                         (data[5 /* X19 */] <0.18832f ? 
                             (data[12 /* X35 */] <-0.9022725f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (data[8 /* X23 */] <0.1185457f ? 
                        0.0f : 
                        1.0f)))) : 
        0.6666667f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19366865f ? 
         (data[3 /* X17 */] <-0.7136043f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19973809f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.20339891f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.20804667f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.56094587f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15249889f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.17413302f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15179883f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03139623f ? 
             (data[9 /* X27 */] <-0.42757142f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.082610406f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17719854f ? 
                 (data[10 /* X28 */] <0.14028649f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.42526042f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (data[3 /* X17 */] <-0.4857298f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0024017578f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5015209f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.22345449f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.25649038f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12884863f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.14075555f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.67692375f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[10 /* X28 */] <-0.09193563f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16141465f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[10 /* X28 */] <-0.041943368f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14945848f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_88_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21968785f ? 
                 (data[1 /* X12 */] <-0.6075664f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.119963415f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.56602705f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_89_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_89_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.3795771f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18032362f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.088095956f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20348717f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.052026607f ? 
                     (data[9 /* X27 */] <0.12215563f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.9005218f ? 
                             (data[2 /* X15 */] <0.14323978f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.20553164f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28967854f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.067717075f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.31726003f ? 
                 (data[1 /* X12 */] <-0.41434005f ? 
                     (data[10 /* X28 */] <-0.025766434f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.4676422f ? 
                         (data[0 /* X5 */] <0.12517323f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19800901f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[11 /* X34 */] <0.35937217f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.5224794f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.099034175f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1015828f ? 
                     (data[11 /* X34 */] <-0.20673242f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.041303817f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0670193f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16461864f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23947822f ? 
             (data[5 /* X19 */] <-0.09255929f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09696482f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.19708948f ? 
                        1.0f : 
                        0.0f))) : 
             (data[4 /* X18 */] <-0.037433695f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[4 /* X18 */] <-0.17938264f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13328345f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34648505f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.34323725f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2370658f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_89_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5531258f ? 
             (data[2 /* X15 */] <0.12327475f ? 
                 (data[10 /* X28 */] <0.023624837f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (data[1 /* X12 */] <-0.701252f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03207713f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.113289066f ? 
                         (data[7 /* X21 */] <0.14048444f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_90_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_90_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08141827f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3414846f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18158923f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23197275f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22278427f ? 
                     (data[6 /* X20 */] <-0.41358408f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.11076668f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44911024f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.41500932f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.54826164f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20460613f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28716046f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.31490237f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19618306f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.16784367f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.36061776f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
             (data[7 /* X21 */] <0.17361537f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.13606244f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.45410028f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.25039038f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.037154756f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19735177f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1701625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.09513219f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046579335f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18367189f ? 
             (data[12 /* X35 */] <0.45446005f ? 
                 (data[9 /* X27 */] <0.011323564f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.52646595f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[8 /* X23 */] <0.21235377f ? 
                 (data[0 /* X5 */] <0.1328545f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_90_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (data[9 /* X27 */] <-0.11613332f ? 
             (data[10 /* X28 */] <0.16931425f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.8197119f ? 
                 (data[6 /* X20 */] <-0.17576908f ? 
                     (data[6 /* X20 */] <-0.3216684f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.32050943f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_91_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_91_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.13534068f ? 
             (data[2 /* X15 */] <0.13493764f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.2140475f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20113258f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2035476f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.45913574f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.22649777f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.4772118f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11644301f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.51186067f ? 
                0.0f : 
                1.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (data[12 /* X35 */] <-0.5228149f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.07750898f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
        0.022222223f : 
         (data[2 /* X15 */] <0.124107815f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[4 /* X18 */] <-0.5811249f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.010172508f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43913534f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                     (data[6 /* X20 */] <-0.34323725f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.27730915f ? 
                             (data[8 /* X23 */] <0.18836245f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_91_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.024042286f ? 
            0.0f : 
             (data[9 /* X27 */] <0.20147237f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.4611828f ? 
            1.0f : 
             (data[2 /* X15 */] <0.123614036f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_92_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_92_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.46184272f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.11434453f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.115167655f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22940236f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09635589f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38778296f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.05175334f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.5286697f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.20195472f ? 
                         (data[7 /* X21 */] <0.12027203f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[5 /* X19 */] <-0.10210373f ? 
             (data[12 /* X35 */] <-0.1792417f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11769435f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.30353257f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <-0.4766719f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.33711603f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.052156515f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.90838045f ? 
                1.0f : 
                 (data[11 /* X34 */] <0.0010013789f ? 
                     (data[4 /* X18 */] <-0.23046604f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.09711985f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2033856f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12313871f ? 
                     (data[12 /* X35 */] <-0.9751422f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[4 /* X18 */] <-0.1392084f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15669659f ? 
                 (data[2 /* X15 */] <0.14160216f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.036585364f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[5 /* X19 */] <0.07515019f ? 
            0.0f : 
             (data[0 /* X5 */] <0.07582345f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_92_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[4 /* X18 */] <-0.076268785f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.022725f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1869979f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18951656f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_93_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_93_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[0 /* X5 */] <0.11625052f ? 
             (data[4 /* X18 */] <-0.39900175f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67917705f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.18268985f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.45577806f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (data[12 /* X35 */] <-0.06853477f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06676504f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.25134692f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15388547f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.1483785f ? 
             (data[11 /* X34 */] <0.15384375f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26045248f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23186249f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5699172f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24496679f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.068713576f ? 
                             (data[6 /* X20 */] <-0.37960178f ? 
                                 (data[7 /* X21 */] <0.14568463f ? 
                                    0.0f : 
                                     (data[5 /* X19 */] <0.16214097f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (data[5 /* X19 */] <0.057424795f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[1 /* X12 */] <-0.35739172f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[11 /* X34 */] <0.13220918f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.22840193f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[7 /* X21 */] <0.16995631f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08576727f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.075433195f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.8197119f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.16568743f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.20737949f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[3 /* X17 */] <-0.48856056f ? 
             (data[4 /* X18 */] <-0.17134778f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.57881594f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X27 */] <-0.2746232f ? 
                 (data[5 /* X19 */] <-0.22176877f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0048523345f ? 
             (data[11 /* X34 */] <-0.38341475f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0043467907f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.3089438f ? 
                 (data[0 /* X5 */] <0.14151745f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21370865f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.08172852f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_93_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1805007f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2787874f ? 
                 (data[9 /* X27 */] <0.002456998f ? 
                     (data[2 /* X15 */] <0.08823193f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25274938f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_94_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_94_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11264105f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.052586276f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11623611f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.12215563f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29696858f ? 
             (data[3 /* X17 */] <-0.5465907f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16892505f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <0.0024017578f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.17908408f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06932973f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06484889f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41099373f ? 
                    1.0f : 
                    0.0f))) : 
        0.6666667f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[11 /* X34 */] <0.15564664f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.054236293f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.69850904f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (data[0 /* X5 */] <0.11336288f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06301931f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010838328f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.30800244f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14523454f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06301931f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.50961643f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.06691475f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.25785533f ? 
                 (data[12 /* X35 */] <-0.43323952f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15227091f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_94_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_04_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_95_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_95_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.059653807f ? 
                 (data[10 /* X28 */] <-0.43604818f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.3145284f ? 
                         (data[9 /* X27 */] <0.13536711f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.08260437f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.004465856f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[0 /* X5 */] <0.12202582f ? 
                 (data[12 /* X35 */] <-0.8188076f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26922703f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.059653807f ? 
                 (data[6 /* X20 */] <-0.3958701f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14495282f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19252044f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.08817121f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.082610406f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14767767f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X27 */] <-0.061825603f ? 
            1.0f : 
             (data[7 /* X21 */] <0.116290286f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14826667f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[2 /* X15 */] <0.10161509f ? 
             (data[0 /* X5 */] <0.13068877f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.3391509f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.38341475f ? 
                 (data[6 /* X20 */] <-0.05136414f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31445307f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_95_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48216903f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.013085698f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.10104426f ? 
                         (data[3 /* X17 */] <0.0025726364f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_96_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_96_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12816207f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05320319f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22939968f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.16619198f ? 
                 (data[8 /* X23 */] <0.12918249f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04033071f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.23079433f ? 
             (data[0 /* X5 */] <0.0909836f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14596252f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09565573f ? 
                         (data[4 /* X18 */] <-0.52411145f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2544967f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.008077642f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13737729f ? 
                     (data[4 /* X18 */] <-0.5355941f ? 
                         (data[7 /* X21 */] <0.1365434f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2567199f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15906978f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.2877335f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f) : 
             (data[8 /* X23 */] <0.19914731f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.4760156f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0152777f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21262579f ? 
             (data[6 /* X20 */] <-0.56094587f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1184964f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.14875533f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[5 /* X19 */] <-0.13210055f ? 
             (data[0 /* X5 */] <0.13195224f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.29412588f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12326321f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.20130897f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[6 /* X20 */] <-0.001123685f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.209596f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.14982595f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[5 /* X19 */] <-0.25575486f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.13063931f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.27847907f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21422315f ? 
                        0.0f : 
                        1.0f) : 
                     (data[10 /* X28 */] <-0.28394648f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.23079433f ? 
             (data[1 /* X12 */] <-0.44654444f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.25785533f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04406271f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.09143965f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17526062f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14332527f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_96_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.015172483f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17899017f ? 
                0.0f : 
                 (data[12 /* X35 */] <1.7988282E-4f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4272482f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27299905f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5273233f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_97_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_97_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.32409802f ? 
             (data[6 /* X20 */] <-0.4309627f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.31811702f ? 
             (data[7 /* X21 */] <0.071771875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15084949f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.43534476f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4423112f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.3994587f ? 
             (data[12 /* X35 */] <-0.9076708f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16141465f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38538563f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.14192513f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.36989495f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <-0.014281899f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18194452f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09816102f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20776647f ? 
                 (data[6 /* X20 */] <0.15395096f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.033421118f ? 
             (data[12 /* X35 */] <-0.45410028f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16461864f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18441296f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_97_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[2 /* X15 */] <0.08661994f ? 
            1.0f : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_98_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_98_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17859465f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.022725f ? 
                 (data[4 /* X18 */] <-0.54037523f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.023546148f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22057314f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1999155f ? 
                                1.0f : 
                                 (data[4 /* X18 */] <-0.29205522f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.9770951f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16028716f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5312921f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21312563f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.22143176f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_04_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24695015f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15227091f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.44453254f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18672694f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23490532f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[6 /* X20 */] <-0.2918006f ? 
            1.0f : 
             (data[5 /* X19 */] <0.3293337f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.17159246f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.9770951f ? 
             (data[1 /* X12 */] <-0.045453276f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[5 /* X19 */] <-0.16482435f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.001189368f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14007409f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.1488719f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[6 /* X20 */] <-0.25574633f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27850807f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.28552243f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.11434453f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.36749727f ? 
                     (data[4 /* X18 */] <-0.19277404f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_98_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[5 /* X19 */] <-0.06392597f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.085029684f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_99_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_99_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[10 /* X28 */] <-0.032267444f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38538563f ? 
                 (data[6 /* X20 */] <-0.4623801f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <0.022721808f ? 
                     (data[2 /* X15 */] <0.17325859f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40588573f ? 
                 (data[12 /* X35 */] <-0.87020564f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[7 /* X21 */] <0.073906325f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.20080888f ? 
                 (data[10 /* X28 */] <-0.14171486f ? 
                     (data[11 /* X34 */] <0.22916602f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[3 /* X17 */] <-0.3226914f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.43654096f ? 
                 (data[10 /* X28 */] <-0.27255282f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18325536f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.61314946f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23820427f ? 
                     (data[12 /* X35 */] <-0.81995714f ? 
                         (data[6 /* X20 */] <-0.36302376f ? 
                             (data[2 /* X15 */] <0.17592439f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <5.9887697E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2821654f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.082610406f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.12160862f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4356983f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.52744424f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.04827132f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[3 /* X17 */] <-0.49422204f ? 
             (data[12 /* X35 */] <-0.09143965f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39186043f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <-0.2746232f ? 
                 (data[12 /* X35 */] <0.06889453f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.10661347f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20080888f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.25232595f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.5885414f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.1410444f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_99_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4837817f ? 
             (data[7 /* X21 */] <0.09128679f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.094427384f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_100_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_100_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[4 /* X18 */] <-0.2771399f ? 
             (data[5 /* X19 */] <-0.013476773f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18366228f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.15008564f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22443062f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <0.053236265f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41226083f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5710255f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23186249f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26656175f ? 
                     (data[4 /* X18 */] <-0.5060047f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5724422f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <1.5639146E-4f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.6245838f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.857955f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (data[2 /* X15 */] <0.3115472f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X28 */] <0.082230955f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[10 /* X28 */] <0.05320319f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7664405f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7433858f ? 
             (data[2 /* X15 */] <0.1272894f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.037558194f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.90838045f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44135198f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.5537687f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11162808f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.801491f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.46733f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.009690295f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0025726364f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.053828437f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14713347f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.10181228f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45446005f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27831045f ? 
                 (data[10 /* X28 */] <-0.09103431f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.43838328f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_100_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (data[10 /* X28 */] <0.4842683f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_101_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_101_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29696858f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.22886895f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.3863005f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5056346f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1392084f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[7 /* X21 */] <0.11994933f ? 
             (data[12 /* X35 */] <-0.27086124f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.3994587f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19991663f ? 
                 (data[12 /* X35 */] <-0.90838045f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2294904f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.7938561f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14043458f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47681826f ? 
                 (data[12 /* X35 */] <-0.9770951f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16568743f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
            0.0f : 
             (data[4 /* X18 */] <0.19222897f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <0.01323073f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14724325f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.06093375f ? 
                 (data[12 /* X35 */] <-0.20596406f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_101_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[2 /* X15 */] <0.14368482f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1337917f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2660506f ? 
             (data[2 /* X15 */] <0.11327799f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_102_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_102_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03448276f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20208377f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19861886f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18064862f ? 
                     (data[11 /* X34 */] <-0.379809f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.57797146f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.30176252f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[12 /* X35 */] <-0.29758358f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[12 /* X35 */] <-0.22696021f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09507502f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15866503f ? 
                     (data[6 /* X20 */] <-0.35280687f ? 
                         (data[8 /* X23 */] <0.09993079f ? 
                             (data[6 /* X20 */] <-0.53547645f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[5 /* X19 */] <0.29739934f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.059562758f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.34993124f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
             (data[1 /* X12 */] <-0.054236293f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31238025f ? 
                 (data[2 /* X15 */] <0.106284805f ? 
                     (data[12 /* X35 */] <-0.4640019f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4423047f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.10105653f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.7839306f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10971338f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[4 /* X18 */] <-0.45122823f ? 
            0.0f : 
             (data[2 /* X15 */] <0.13410458f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
            0.0f : 
             (data[7 /* X21 */] <0.12177886f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[4 /* X18 */] <-0.705665f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <0.1908715f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19374013f ? 
                 (data[7 /* X21 */] <0.15687332f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.084164456f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X34 */] <-0.4519242f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[2 /* X15 */] <0.1476775f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_102_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[4 /* X18 */] <-0.28919217f ? 
            0.0f : 
             (data[2 /* X15 */] <0.15743037f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.40409318f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1824223f ? 
                 (data[2 /* X15 */] <0.12697187f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_103_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_103_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.31931323f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5724422f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47108832f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.4311954f ? 
             (data[0 /* X5 */] <0.07871109f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (data[12 /* X35 */] <-0.9312854f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.257514f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1601543f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23490532f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.36061776f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14923696f ? 
            0.0f : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[11 /* X34 */] <-0.5114193f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29288235f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.5269922f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[8 /* X23 */] <0.12728085f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24740128f ? 
                 (data[5 /* X19 */] <-0.09528627f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.06376683f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[12 /* X35 */] <0.3857454f ? 
                 (data[6 /* X20 */] <-0.037009723f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_103_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (data[1 /* X12 */] <-0.7788353f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2854253f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.3414846f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_104_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_104_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[10 /* X28 */] <-0.07258378f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06153823f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0059296926f ? 
             (data[7 /* X21 */] <0.15410045f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.48871127f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.011274201f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
        0.029411765f : 
         (data[6 /* X20 */] <-0.3982625f ? 
             (data[10 /* X28 */] <-0.28545406f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X12 */] <-0.029351074f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[9 /* X27 */] <-0.3721554f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.001123685f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19313028f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.13839832f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[9 /* X27 */] <0.12880555f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.039402127f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06421652f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7255012f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_104_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[10 /* X28 */] <0.16125098f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X12 */] <-0.6251325f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.56602705f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_105_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_105_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[1 /* X12 */] <-0.42436174f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.30769375f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2403547f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.47101948f ? 
                    0.0f : 
                    1.0f))) : 
         (data[4 /* X18 */] <-0.20214802f ? 
             (data[1 /* X12 */] <-0.13759063f ? 
                 (data[3 /* X17 */] <-0.3710849f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[6 /* X20 */] <-0.737472f ? 
            0.0f : 
             (data[11 /* X34 */] <0.024036327f ? 
                 (data[5 /* X19 */] <0.21558984f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23976848f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
        0.022222223f : 
         (data[9 /* X27 */] <-0.122783236f ? 
             (data[0 /* X5 */] <0.10181228f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[6 /* X20 */] <-0.25574633f ? 
             (data[4 /* X18 */] <-0.5650552f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                 (data[1 /* X12 */] <-0.39472762f ? 
                     (data[9 /* X27 */] <0.1044225f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_105_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0059195803f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.70641375f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.23195173f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.4338954f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.11761563f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_106_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_106_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.37194607f ? 
             (data[1 /* X12 */] <-0.19183691f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0425256f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.086737245f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17859465f ? 
                     (data[12 /* X35 */] <-0.84730077f ? 
                         (data[11 /* X34 */] <0.45913187f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.25711074f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1345163f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08618595f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.067717075f ? 
             (data[8 /* X23 */] <0.1102076f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.24626379f ? 
                     (data[7 /* X21 */] <0.18213865f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.28160116f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[11 /* X34 */] <0.28365117f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.020407937f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.6749029f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11718126f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.06528946f ? 
                 (data[7 /* X21 */] <0.20359534f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.40955654f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1444051f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.22717951f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
             (data[1 /* X12 */] <-0.3762803f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.00469902f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_106_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26768613f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_107_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_107_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[2 /* X15 */] <0.12993926f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4181046f ? 
                 (data[0 /* X5 */] <0.12419156f ? 
                     (data[12 /* X35 */] <-0.08380469f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.45913574f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.3257931f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.19929445f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15818049f ? 
                             (data[5 /* X19 */] <0.19704635f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[9 /* X27 */] <0.09973868f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[10 /* X28 */] <-0.32577038f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.27976072f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26045248f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5701129f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.3910853f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29739934f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20053378f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.4808004f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[9 /* X27 */] <0.040139902f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055097774f ? 
            0.0f : 
             (data[9 /* X27 */] <0.08890601f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (data[9 /* X27 */] <0.17313838f ? 
             (data[10 /* X28 */] <-0.13708992f ? 
                 (data[11 /* X34 */] <-0.28605917f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17918988f ? 
                 (data[8 /* X23 */] <0.14395705f ? 
                     (data[7 /* X21 */] <0.11793198f ? 
                         (data[3 /* X17 */] <-0.27745152f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.053264845f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[5 /* X19 */] <0.29739934f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_107_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[9 /* X27 */] <-0.03855087f ? 
             (data[10 /* X28 */] <0.049977887f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.43578723f ? 
                 (data[2 /* X15 */] <0.1468085f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_108_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_108_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22545187f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12996686f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17121427f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.36286142f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
             (data[5 /* X19 */] <0.22649777f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.021488504f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.050622027f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36218375f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (data[6 /* X20 */] <-0.5492268f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.21769385f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.836326f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <5.9887697E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0152777f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18215314f ? 
             (data[12 /* X35 */] <-0.6144345f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14191778f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.24036394f ? 
                 (data[9 /* X27 */] <0.17535502f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.26782906f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1366707f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.23059508f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[5 /* X19 */] <-0.13210055f ? 
             (data[8 /* X23 */] <0.13800126f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22282588f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.615385f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[7 /* X21 */] <0.10500822f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11933981f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08089639f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41101784f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.08665213f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_108_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16242875f ? 
             (data[6 /* X20 */] <-0.077680565f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20441508f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.3645696f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_109_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_109_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
             (data[6 /* X20 */] <-0.3863005f ? 
                 (data[8 /* X23 */] <0.10277948f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.97573066f ? 
                     (data[4 /* X18 */] <-0.5969158f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.1364152f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3061323f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.098151386f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10093036f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24285968f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16006216f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07900565f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3695537f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1624115f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.23707445f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X27 */] <-0.061825603f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.01323073f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13570043f ? 
             (data[10 /* X28 */] <-0.10483685f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.085686594f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.40647867f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2583081f ? 
                             (data[5 /* X19 */] <0.4656122f ? 
                                 (data[1 /* X12 */] <-0.044152405f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.008445925f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23570645f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0035382237f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.1270792f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_109_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[2 /* X15 */] <0.13493764f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15471028f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42572618f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_110_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_110_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[3 /* X17 */] <-0.41071525f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5537358f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <0.1310222f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.030666217f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12738526f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71190083f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[7 /* X21 */] <0.11994933f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.105533496f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.4006549f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.01672633f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24008806f ? 
                 (data[11 /* X34 */] <0.28365117f ? 
                     (data[1 /* X12 */] <-0.16841553f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[11 /* X34 */] <0.15564664f ? 
            0.0f : 
             (data[11 /* X34 */] <0.51168746f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18650211f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08644069f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.7419117f ? 
             (data[7 /* X21 */] <0.22972076f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12527442f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2701295f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.07955873f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.7690499f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5918894f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2563605f ? 
                     (data[10 /* X28 */] <0.011274201f ? 
                         (data[11 /* X34 */] <-0.87179375f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[5 /* X19 */] <0.19104698f ? 
                 (data[0 /* X5 */] <0.1445796f ? 
                     (data[1 /* X12 */] <-0.09706401f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_110_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[7 /* X21 */] <0.09372616f ? 
             (data[5 /* X19 */] <-0.06528946f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_111_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_111_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[6 /* X20 */] <-0.3839081f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.087622166f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.030666217f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.039215688f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08303729f ? 
         (data[6 /* X20 */] <-0.3839081f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19158599f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
             (data[8 /* X23 */] <0.08598742f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.69110227f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.7976735f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[6 /* X20 */] <0.008445925f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21657792f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16256018f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14523454f ? 
         (data[6 /* X20 */] <-0.23557913f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22773507f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <0.06889453f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.051619288f ? 
             (data[11 /* X34 */] <-0.076925f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08964258f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31057015f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.63942385f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_111_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[5 /* X19 */] <-0.06392597f ? 
             (data[2 /* X15 */] <0.08661994f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <0.4842683f ? 
             (data[8 /* X23 */] <0.109413505f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_112_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_112_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0059296926f ? 
             (data[9 /* X27 */] <0.07416377f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26545504f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.48082265f ? 
                         (data[9 /* X27 */] <0.12383813f ? 
                             (data[4 /* X18 */] <-0.30170354f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[5 /* X19 */] <0.19603774f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.043413494f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.05123395f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.4006549f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.014528256f ? 
             (data[5 /* X19 */] <0.10378352f ? 
                 (data[3 /* X17 */] <-0.38806933f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.8205784f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
        0.02631579f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07473f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[12 /* X35 */] <0.15860532f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11697244f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <-0.016203756f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.042719185f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.21477385f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.108960584f ? 
                 (data[2 /* X15 */] <0.13493764f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.24646205f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11255009f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06825599f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
             (data[9 /* X27 */] <-0.028575981f ? 
                 (data[8 /* X23 */] <0.14157474f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.06093375f ? 
                 (data[9 /* X27 */] <0.21976602f ? 
                     (data[10 /* X28 */] <0.2822f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_112_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[4 /* X18 */] <-0.11644301f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.21477385f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48055637f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_113_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_113_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.067717075f ? 
             (data[0 /* X5 */] <0.099646546f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.22745511f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2858196f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.11192136f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5651345f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.089219674f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.067717075f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13790789f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5144199f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.32386616f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[9 /* X27 */] <0.21525458f ? 
                 (data[5 /* X19 */] <0.03957029f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14512701f ? 
             (data[2 /* X15 */] <0.17242552f ? 
                 (data[5 /* X19 */] <-0.13953502f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.08984305f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.08459774f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.056293976f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15919434f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.42284057f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.4533896f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.06093375f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <0.19241047f ? 
             (data[2 /* X15 */] <0.10244816f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <0.65953404f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24114098f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_113_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3999237f ? 
             (data[5 /* X19 */] <-0.06528946f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.081775375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_114_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_114_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.32768664f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5673707f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12924494f ? 
             (data[6 /* X20 */] <-0.4126169f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10706902f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.109862074f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <0.35736328f ? 
                 (data[0 /* X5 */] <0.14858429f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08578889f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.09255929f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.10837507f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.47700518f ? 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12313871f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18653488f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.36248076f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.9770951f ? 
             (data[5 /* X19 */] <0.3655739f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43913534f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05898445f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <0.008445925f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.1552799f ? 
                0.0f : 
                1.0f)) : 
        0.036585364f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
             (data[12 /* X35 */] <-0.45410028f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.7071073f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_114_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[7 /* X21 */] <0.09128679f ? 
             (data[5 /* X19 */] <-0.06528946f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_115_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_115_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.29465494f ? 
             (data[2 /* X15 */] <0.105851494f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.22840193f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0052943137f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21936624f ? 
                     (data[6 /* X20 */] <-0.4772118f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.17027055f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48573932f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21539426f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4769567f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.026845068f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.1501804f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[2 /* X15 */] <0.117026776f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.5224794f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05630617f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.342209f ? 
                     (data[3 /* X17 */] <-0.75606537f ? 
                         (data[6 /* X20 */] <-0.1416417f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.025316456f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06698579f ? 
            0.0f : 
             (data[7 /* X21 */] <0.08213918f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[9 /* X27 */] <-0.27351484f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27423915f ? 
                 (data[7 /* X21 */] <0.10706644f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.054122288f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11899661f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.09641328f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[11 /* X34 */] <-0.4519242f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19164746f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)) : 
         (data[2 /* X15 */] <0.152432f ? 
            1.0f : 
             (data[0 /* X5 */] <0.13141067f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_115_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07244194f ? 
             (data[5 /* X19 */] <0.011066078f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11068858f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15523377f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12235578f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_116_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_116_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18783133f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.04355602f ? 
                 (data[1 /* X12 */] <-0.3249973f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.47123078f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11510387f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20215806f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5096125f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.17717505f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4695233f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08578889f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.44371817f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.20047124f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.273247f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.08817121f ? 
             (data[10 /* X28 */] <0.31767836f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.21082158f ? 
                     (data[11 /* X34 */] <0.15384375f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.001123685f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2099187f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.18817416f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[1 /* X12 */] <-0.35139507f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24259497f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.51195455f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.028575981f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X21 */] <0.10952805f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.1842216f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3192152f ? 
                            0.0f : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_116_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2716102f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.15963833f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_117_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_117_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
             (data[8 /* X23 */] <0.1252956f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.10902464f ? 
                     (data[3 /* X17 */] <-0.3710849f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.062879115f ? 
                         (data[12 /* X35 */] <-0.9744319f ? 
                             (data[11 /* X34 */] <0.423075f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.28281578f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[5 /* X19 */] <0.086058125f ? 
             (data[4 /* X18 */] <-0.55886114f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.109606035f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.062879115f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.20063852f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3406902f ? 
                             (data[12 /* X35 */] <-0.65909f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[4 /* X18 */] <-0.17402607f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14326829f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19241905f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.055587202f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.41979414f ? 
                        1.0f : 
                        0.0f))) : 
             (data[10 /* X28 */] <-0.169343f ? 
                 (data[5 /* X19 */] <0.019247029f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18055387f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.2399037f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.04199858f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (data[5 /* X19 */] <-0.0911958f ? 
             (data[2 /* X15 */] <0.16076262f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.76923126f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16159569f ? 
                 (data[12 /* X35 */] <0.045989648f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.46319222f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12747696f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34239456f ? 
             (data[2 /* X15 */] <0.10161509f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13752715f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.17492472f ? 
                 (data[12 /* X35 */] <-0.5504059f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2370658f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49829558f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_117_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.025381427f ? 
         (data[5 /* X19 */] <-0.05165454f ? 
             (data[2 /* X15 */] <0.13410458f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.09154615f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44346535f ? 
                    0.0f : 
                    1.0f))) : 
         (data[4 /* X18 */] <-0.013326543f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5499005f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_118_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_118_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06448315f ? 
             (data[0 /* X5 */] <0.0909836f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16992633f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17574623f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.04432007f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X27 */] <0.15445381f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.18832f ? 
                            0.0f : 
                             (data[12 /* X35 */] <-0.52250475f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.2420032f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09361118f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11625052f ? 
                 (data[8 /* X23 */] <0.13235031f ? 
                     (data[9 /* X27 */] <0.022937356f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1605974f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.1070918f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.9772728f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.33923888f ? 
                             (data[4 /* X18 */] <-0.5270236f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[11 /* X34 */] <0.35937217f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.36061776f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31238025f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12435175f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <0.24628755f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[11 /* X34 */] <-0.5114193f ? 
             (data[0 /* X5 */] <0.096036986f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17430088f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.1342553f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15130252f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.209596f ? 
                 (data[1 /* X12 */] <-0.7002654f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.23016988f ? 
             (data[8 /* X23 */] <0.11814865f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.16205518f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12891902f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.36284694f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.023034377f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.35871425f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_118_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[1 /* X12 */] <-0.6148856f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19875026f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20293456f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27835923f ? 
             (data[1 /* X12 */] <-0.701252f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_119_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_119_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11912129f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18890923f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3257931f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24285968f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.1135959f ? 
                            1.0f : 
                             (data[11 /* X34 */] <0.549997f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08578889f ? 
             (data[7 /* X21 */] <0.115070604f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.067717075f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3286238f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.16472848f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6135784f ? 
                         (data[12 /* X35 */] <-0.9318184f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.046370115f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (data[10 /* X28 */] <-0.029042138f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10093036f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11912129f ? 
             (data[7 /* X21 */] <0.11811981f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.4498142f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21306448f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19060747f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02856549f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.8206134f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18151021f ? 
            0.0f : 
             (data[12 /* X35 */] <0.38668206f ? 
                 (data[3 /* X17 */] <-0.2108102f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.015827166f ? 
             (data[4 /* X18 */] <-0.08832105f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.46256897f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_119_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4837817f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19313028f ? 
                 (data[7 /* X21 */] <0.10862137f ? 
                     (data[3 /* X17 */] <-0.06022584f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42572618f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_120_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_120_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[0 /* X5 */] <0.11697244f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38920313f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.0839687f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.14316295f ? 
                     (data[11 /* X34 */] <-0.5384625f ? 
                        0.0f : 
                        1.0f) : 
                     (data[10 /* X28 */] <-0.22386296f ? 
                         (data[9 /* X27 */] <0.13842729f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[12 /* X35 */] <-0.4311954f ? 
             (data[1 /* X12 */] <-0.19183691f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15162422f ? 
             (data[0 /* X5 */] <0.096804015f ? 
                 (data[6 /* X20 */] <-0.43893334f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.484389f ? 
                 (data[12 /* X35 */] <-0.9770951f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.16698608f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.024036327f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.6666667f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10439074f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20468475f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43869892f ? 
                 (data[1 /* X12 */] <0.14191778f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2061273f ? 
             (data[6 /* X20 */] <-0.51549023f ? 
                 (data[11 /* X34 */] <-0.2838619f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
        0.016949153f : 
         (data[11 /* X34 */] <-0.76923126f ? 
             (data[2 /* X15 */] <0.16159569f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.039547157f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (data[5 /* X19 */] <0.026064487f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12742811f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.31215164f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7503148f ? 
             (data[3 /* X17 */] <-0.5012989f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.030648008f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4563166f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.21420029f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_120_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.025381427f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4273388f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.022725f ? 
            0.0f : 
             (data[0 /* X5 */] <0.14584891f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12567365f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_121_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_121_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07446844f ? 
        0.03846154f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.054815847f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07050336f ? 
                 (data[0 /* X5 */] <0.11841626f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.20596406f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08564277f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07824767f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12389085f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.306245f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.081833325f ? 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (data[12 /* X35 */] <-0.90838045f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27418277f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14223936f ? 
                 (data[12 /* X35 */] <-0.45791778f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.10792286f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19366865f ? 
         (data[9 /* X27 */] <0.08003945f ? 
             (data[6 /* X20 */] <-0.27624997f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1900151f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.037870973f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.20482138f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14945848f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17332159f ? 
         (data[3 /* X17 */] <-0.05970362f ? 
            0.0f : 
             (data[6 /* X20 */] <0.00366112f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21051219f ? 
                    1.0f : 
                     (data[3 /* X17 */] <0.011753294f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[8 /* X23 */] <0.15229514f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15523377f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[2 /* X15 */] <0.10328122f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.048971735f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.29167515f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0032396808f ? 
             (data[0 /* X5 */] <0.07871109f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11434453f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.16020048f ? 
                         (data[8 /* X23 */] <0.1495962f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21874362f ? 
                 (data[12 /* X35 */] <-0.31942266f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_121_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[9 /* X27 */] <0.017973488f ? 
             (data[6 /* X20 */] <-0.08964258f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11871391f ? 
                 (data[7 /* X21 */] <0.087627746f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4144376f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_122_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_122_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[0 /* X5 */] <0.0819597f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17134778f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.76682323f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29948694f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.30676377f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27625513f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.12313871f ? 
                 (data[4 /* X18 */] <-0.36893794f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26656175f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.34479153f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[3 /* X17 */] <-0.41779208f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.16094765f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[7 /* X21 */] <0.13976918f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11434453f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.046579335f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.056293976f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20241582f ? 
                 (data[10 /* X28 */] <0.1015828f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13177164f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0021072528f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.09193563f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17325859f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.105771095f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.027440112f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.35139507f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14426516f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_122_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15272431f ? 
            1.0f : 
             (data[4 /* X18 */] <0.16319682f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_123_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_123_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.25320098f ? 
                 (data[11 /* X34 */] <0.15654807f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23888353f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.11243579f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18473919f ? 
                 (data[6 /* X20 */] <-0.3958701f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4679517f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X27 */] <0.113289066f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9082436f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24496679f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5144199f ? 
                     (data[6 /* X20 */] <-0.41022453f ? 
                         (data[4 /* X18 */] <-0.36939508f ? 
                            1.0f : 
                             (data[1 /* X12 */] <0.13606244f ? 
                                 (data[7 /* X21 */] <0.09604356f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32608664f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.33587757f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[7 /* X21 */] <0.27856663f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13826884f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2199633f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0152777f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19158599f ? 
                 (data[10 /* X28 */] <-0.3886639f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.34273228f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <-0.18224423f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.12957048f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.08817121f ? 
             (data[10 /* X28 */] <0.31767836f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14260031f ? 
             (data[4 /* X18 */] <-0.20348717f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[5 /* X19 */] <-0.25575486f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.5784466f ? 
                 (data[7 /* X21 */] <0.21150953f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26814076f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17407045f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_123_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.015172483f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.7240671f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18013975f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47894374f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.21166137f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_124_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_124_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[1 /* X12 */] <-0.28991395f ? 
             (data[5 /* X19 */] <0.065605745f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <0.2374057f ? 
                 (data[3 /* X17 */] <-0.39939228f ? 
                     (data[10 /* X28 */] <-0.3311753f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.31192905f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.119942494f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.028909737f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14852877f ? 
                                 (data[0 /* X5 */] <0.14565106f ? 
                                     (data[3 /* X17 */] <-0.1695363f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41253564f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.29295826f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_04_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[6 /* X20 */] <-0.3851043f ? 
             (data[11 /* X34 */] <-0.6899045f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.6981295f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16995631f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3987692f ? 
                 (data[3 /* X17 */] <0.15915903f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.027738543f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.50785124f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4134586f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.7355913f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.41738662f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[9 /* X27 */] <-0.42757142f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <0.13545547f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5637028f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30946127f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.26612744f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[6 /* X20 */] <-0.25232595f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27850807f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (data[5 /* X19 */] <-0.008022806f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11753473f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18658762f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.4695832f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_124_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (data[9 /* X27 */] <-0.36883044f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_125_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_125_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1800888f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
                 (data[3 /* X17 */] <-0.28616273f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.3910853f ? 
                         (data[7 /* X21 */] <0.08744013f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2887875f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.081237786f ? 
             (data[8 /* X23 */] <0.15428041f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21414624f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19800901f ? 
                 (data[6 /* X20 */] <-0.76830924f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43564853f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[8 /* X23 */] <0.102297544f ? 
                 (data[7 /* X21 */] <0.092506476f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.24665801f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.273247f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5056346f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.3429309f ? 
                 (data[12 /* X35 */] <-0.9770951f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12435175f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[7 /* X21 */] <0.13214616f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
        0.022222223f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1943092f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16451141f ? 
             (data[6 /* X20 */] <-0.19752498f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20856155f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.29723313f ? 
                     (data[10 /* X28 */] <-0.04033071f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.75222355f ? 
                 (data[7 /* X21 */] <0.10559678f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.079034396f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_125_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24314016f ? 
                 (data[1 /* X12 */] <-0.7129627f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21748659f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[0 /* X5 */] <0.114445746f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.22541124f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_126_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_126_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[9 /* X27 */] <0.08114777f ? 
             (data[3 /* X17 */] <-0.3569312f ? 
                 (data[7 /* X21 */] <0.21203536f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11835141f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53057474f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.053624608f ? 
                         (data[7 /* X21 */] <0.17716488f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17434666f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47399116f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.61057776f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X28 */] <-0.083872356f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1777065f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5710255f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.3958701f ? 
                     (data[6 /* X20 */] <-0.7372763f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.120870136f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.39304182f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
            1.0f) : 
        0.5f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (data[9 /* X27 */] <-0.102833465f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3205787f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05970362f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12614574f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.09154615f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20837632f ? 
                        1.0f : 
                         (data[5 /* X19 */] <-0.14813761f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27422f ? 
             (data[10 /* X28 */] <-0.13063931f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.24633968f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21569441f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20986773f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.63942385f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06520932f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.31285352f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_126_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26929876f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.6610584f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_127_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_127_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (data[4 /* X18 */] <-0.5784466f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.5814597f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12924494f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18012622f ? 
                     (data[1 /* X12 */] <-0.46912658f ? 
                        0.0f : 
                        1.0f) : 
                     (data[4 /* X18 */] <-0.16063465f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.3909669f ? 
                     (data[4 /* X18 */] <-0.5638054f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05130862f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23933654f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.273247f ? 
                 (data[12 /* X35 */] <-0.25177383f ? 
                     (data[6 /* X20 */] <-0.3910853f ? 
                         (data[4 /* X18 */] <-0.19453165f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.1695363f ? 
                                 (data[1 /* X12 */] <0.1743779f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <0.42703897f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.34340116f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X23 */] <0.26863146f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.34329188f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11510387f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3846125f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.102165334f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[0 /* X5 */] <0.09278838f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22074322f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (data[0 /* X5 */] <0.12563539f ? 
                 (data[4 /* X18 */] <-0.117782146f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.22541124f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06347118f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[4 /* X18 */] <-0.5811249f ? 
            1.0f : 
             (data[2 /* X15 */] <0.10328122f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13760918f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[0 /* X5 */] <0.053444173f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12326321f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_127_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[0 /* X5 */] <0.09784177f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.048113048f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08644069f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.1543616f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27835923f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16389672f ? 
                 (data[2 /* X15 */] <0.12327475f ? 
                     (data[6 /* X20 */] <-0.19012348f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.38506332f ? 
                     (data[1 /* X12 */] <-0.66596097f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.103196315f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_04_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_128_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_128_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18664017f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.004465856f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.48871127f ? 
                     (data[5 /* X19 */] <0.002885128f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19861886f ? 
                         (data[10 /* X28 */] <-0.18368675f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.19476458f ? 
                 (data[1 /* X12 */] <-0.4196601f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.61357874f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.059682555f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.053485643f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.06833273f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4311954f ? 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10330343f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.020407937f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.607956f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15860532f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.037154756f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.25811455f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
             (data[12 /* X35 */] <-0.56862473f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6047307f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_128_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28835702f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27776366f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X23 */] <0.15030989f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_129_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_129_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[3 /* X17 */] <-0.40222302f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.045593042f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.19813061f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03959793f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1630179f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.021832172f ? 
                             (data[9 /* X27 */] <0.112199776f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.43534476f ? 
             (data[2 /* X15 */] <0.18325536f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23096332f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.38025376f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.51721674f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.1799231f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[6 /* X20 */] <-0.19131969f ? 
             (data[2 /* X15 */] <0.18408842f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.22362201f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1686695f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.7588961f ? 
             (data[0 /* X5 */] <0.08553335f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19241905f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44135198f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.5113625f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.056293976f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18658762f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.08990073f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.007972595f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12326321f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.1382699f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011889497f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025218546f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_129_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.013085698f ? 
            0.0f : 
             (data[2 /* X15 */] <0.10494734f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.10939236f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_130_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_130_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06887466f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3710849f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.13327152f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384625f ? 
                             (data[0 /* X5 */] <0.12908049f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[9 /* X27 */] <-0.08510034f ? 
             (data[12 /* X35 */] <-0.13724941f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.067717075f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.115744315f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.1518981f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.126607f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.099466525f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022904014f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.70130694f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23947822f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20250635f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.16619198f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21256351f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.14826667f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022904014f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45636657f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15884334f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.023914123f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_130_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[1 /* X12 */] <-0.6749029f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22645943f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46765515f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_131_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_131_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (data[0 /* X5 */] <0.09531508f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.048078906f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07541641f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1392084f ? 
                         (data[11 /* X34 */] <0.2732846f ? 
                            0.0f : 
                             (data[11 /* X34 */] <0.5167524f ? 
                                1.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19457851f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f))) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.3414846f ? 
             (data[8 /* X23 */] <0.13403074f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[6 /* X20 */] <-0.36476886f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38472238f ? 
                 (data[8 /* X23 */] <0.10186951f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.09615156f ? 
                         (data[6 /* X20 */] <-0.51463044f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5457198f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.083872356f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010838328f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.72785616f ? 
                 (data[3 /* X17 */] <-0.5012989f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7503148f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34103107f ? 
                 (data[9 /* X27 */] <-0.27683982f ? 
                     (data[5 /* X19 */] <-0.21748921f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.14660054f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.33653983f ? 
                             (data[3 /* X17 */] <-0.50877637f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <-0.055527613f ? 
                                     (data[12 /* X35 */] <0.16590725f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            0.0f))) : 
                 (data[8 /* X23 */] <0.16778019f ? 
                     (data[4 /* X18 */] <-0.23562655f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X34 */] <-0.4519242f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06818156f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.27149704f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.31545788f ? 
                                    0.0f : 
                                    1.0f)))))) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_04_Tree_131_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[7 /* X21 */] <0.09372616f ? 
             (data[0 /* X5 */] <0.11625052f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <0.023084765f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_132_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_132_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (data[9 /* X27 */] <0.16928275f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.45791778f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3320447f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.22223514f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.102165334f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.36158332f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26045248f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24405202f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5699172f ? 
                 (data[6 /* X20 */] <-0.41500932f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34339336f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[9 /* X27 */] <0.016865166f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[7 /* X21 */] <0.14525774f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.27018988f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29319203f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.025192743f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[4 /* X18 */] <-0.14456497f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35869423f ? 
                     (data[6 /* X20 */] <-0.027440112f ? 
                         (data[8 /* X23 */] <0.14078063f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.007181061f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_132_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[9 /* X27 */] <-0.03855087f ? 
             (data[9 /* X27 */] <-0.16383223f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.2529492f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44346535f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_133_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_133_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.070857115f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (data[9 /* X27 */] <0.08003945f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15084949f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07578034f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[12 /* X35 */] <-0.90838045f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.34700358f ? 
                 (data[4 /* X18 */] <-0.33740127f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9082436f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (data[12 /* X35 */] <-0.74995506f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5073771f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.08336432f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13570043f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.13054149f ? 
                 (data[4 /* X18 */] <-0.35347095f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[5 /* X19 */] <-0.1566434f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                 (data[1 /* X12 */] <-0.39091867f ? 
                     (data[4 /* X18 */] <-0.19277404f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_133_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4418527f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.15743037f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.44947213f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_134_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_134_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.070857115f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
             (data[6 /* X20 */] <-0.37194607f ? 
                 (data[7 /* X21 */] <0.22616415f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13385184f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3257931f ? 
                     (data[6 /* X20 */] <-0.22840193f ? 
                         (data[1 /* X12 */] <-0.027887238f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[4 /* X18 */] <-0.46922547f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39191803f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[11 /* X34 */] <-0.076925f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117782146f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21525458f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9082436f ? 
            0.0f : 
             (data[7 /* X21 */] <0.1608087f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66766477f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <1.014596f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.43083248f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.50341797f ? 
                         (data[12 /* X35 */] <-0.9389203f ? 
                             (data[4 /* X18 */] <-0.36294243f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
             (data[4 /* X18 */] <-0.42846283f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[11 /* X34 */] <-0.9477165f ? 
             (data[4 /* X18 */] <-0.10171246f ? 
                 (data[3 /* X17 */] <-0.23520944f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.1552799f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24315138f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03207713f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23865192f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24862583f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_134_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2454113f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.3710849f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[6 /* X20 */] <0.024407735f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12924494f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.15367983f ? 
                     (data[4 /* X18 */] <0.09015222f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_135_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_135_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[4 /* X18 */] <-0.40703657f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17131561f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.46110758f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.35280687f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (data[10 /* X28 */] <-0.17901891f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.34339336f ? 
                     (data[7 /* X21 */] <0.1135959f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17219871f ? 
            0.0f : 
             (data[11 /* X34 */] <0.20432441f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24008806f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.27434218f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.20184253f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16608894f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21834667f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2338204f ? 
                 (data[4 /* X18 */] <-0.4070199f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13826884f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.76682323f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14260031f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20837632f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6899045f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.024577208f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.008708671f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1337917f ? 
                 (data[11 /* X34 */] <-0.8197119f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.3902319f ? 
                         (data[4 /* X18 */] <-0.086653724f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48216903f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12137627f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_135_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[7 /* X21 */] <0.09128679f ? 
             (data[0 /* X5 */] <0.11625052f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.272602f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26929876f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.5384625f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_136_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_136_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12924494f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.315975f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15586862f ? 
                     (data[11 /* X34 */] <-0.15295587f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.05175334f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.13327152f ? 
                     (data[11 /* X34 */] <0.36257842f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
            0.0f : 
             (data[5 /* X19 */] <0.21831682f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15865313f ? 
                    0.0f : 
                    1.0f))) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13570043f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.09507522f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11228001f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.098329544f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <0.15860532f ? 
             (data[3 /* X17 */] <-0.22671722f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35414442f ? 
                     (data[9 /* X27 */] <0.081260525f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_136_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24520537f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0059195803f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.057108507f ? 
                     (data[0 /* X5 */] <0.093968555f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.38293204f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_137_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_137_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[4 /* X18 */] <-0.40703657f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04355602f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12607867f ? 
                    0.0f : 
                    1.0f)) : 
             (data[12 /* X35 */] <-0.3395759f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23398964f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.118481025f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.23195173f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22740774f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.20214657f ? 
                 (data[4 /* X18 */] <-0.16599122f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1552781f ? 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16173099f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.4736232f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15179883f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23407225f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.056293976f ? 
                 (data[0 /* X5 */] <0.089539774f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27276245f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.018867925f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (data[9 /* X27 */] <0.06563128f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.26668036f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0536754f ? 
                     (data[12 /* X35 */] <-0.12961446f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43537265f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.1392628f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_137_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16075915f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2716102f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.43056414f ? 
                     (data[8 /* X23 */] <0.11674511f ? 
                         (data[2 /* X15 */] <0.09229753f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[10 /* X28 */] <0.26607347f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_138_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_138_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.28847727f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.1540325f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.40703657f ? 
                 (data[10 /* X28 */] <-0.24315725f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.06833273f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3323652f ? 
                             (data[10 /* X28 */] <-0.124505915f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15662985f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.40505376f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11644301f ? 
             (data[4 /* X18 */] <-0.58222127f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0790796f ? 
                0.0f : 
                1.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (data[10 /* X28 */] <-0.17901891f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.15974131f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43913534f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.26467553f ? 
                    0.0f : 
                    1.0f))) : 
         (data[0 /* X5 */] <0.100368455f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.9770951f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.597544f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09648039f ? 
             (data[8 /* X23 */] <0.12648675f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07082677f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.109862074f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <0.003941886f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1518981f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2622894f ? 
                1.0f : 
                 (data[3 /* X17 */] <0.11580219f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
             (data[8 /* X23 */] <0.15030989f ? 
                 (data[4 /* X18 */] <-0.3130615f ? 
                     (data[10 /* X28 */] <-0.18347953f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_138_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42572618f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.114445746f ? 
             (data[4 /* X18 */] <-0.23026998f ? 
                 (data[6 /* X20 */] <-0.0032917997f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <0.16286363f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_139_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_139_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.33145455f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14188668f ? 
                 (data[10 /* X28 */] <-0.28234214f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.113247894f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16606246f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13878524f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08303729f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14512701f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (data[4 /* X18 */] <-0.2692314f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.206388f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11863293f ? 
                 (data[0 /* X5 */] <0.088095956f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21491179f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.010775377f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.10948339f ? 
             (data[4 /* X18 */] <-0.17088987f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19266093f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.012996428f ? 
             (data[9 /* X27 */] <0.035706617f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22143169f ? 
                     (data[3 /* X17 */] <-0.508907f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.00480133f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24517639f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07976646f ? 
                                 (data[3 /* X17 */] <-0.3285236f ? 
                                     (data[4 /* X18 */] <-0.5658659f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)) : 
                     (data[4 /* X18 */] <-0.48795778f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_139_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
        0.9285714f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_140_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_140_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03448276f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12046043f ? 
                 (data[5 /* X19 */] <0.22649777f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1931401f ? 
                         (data[6 /* X20 */] <-0.35280687f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.9514613f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.6009535f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
            0.0f : 
             (data[11 /* X34 */] <0.10336309f ? 
                 (data[5 /* X19 */] <0.21558984f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (data[12 /* X35 */] <-0.9770951f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.5432295f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09635589f ? 
                     (data[4 /* X18 */] <-0.569223f ? 
                        1.0f : 
                        0.0f) : 
                     (data[5 /* X19 */] <0.26467553f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09380212f ? 
            0.0f : 
             (data[11 /* X34 */] <0.0024017578f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.209596f ? 
             (data[5 /* X19 */] <-0.1552799f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27850807f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.3820563f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23726434f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.54782444f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_140_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42572618f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.11243579f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18286817f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05621879f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1918914f ? 
                         (data[2 /* X15 */] <0.10661347f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_141_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_141_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18802986f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.1241887f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.10289515f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.03707666f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.045989648f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28185436f ? 
                    0.0f : 
                    1.0f)) : 
             (data[10 /* X28 */] <-0.088710316f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23562655f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17422521f ? 
                         (data[11 /* X34 */] <-0.5961547f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.43893334f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47153643f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5710255f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22696021f ? 
             (data[3 /* X17 */] <-0.28050125f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.15948382f ? 
                     (data[7 /* X21 */] <0.15227091f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.32200405f ? 
                            0.0f : 
                            1.0f) : 
                         (data[12 /* X35 */] <-0.7946613f ? 
                             (data[7 /* X21 */] <0.19345859f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1389901f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1352219f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.03707666f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20441508f ? 
             (data[0 /* X5 */] <0.092427425f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[8 /* X23 */] <0.08459774f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15860532f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15084949f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.050752535f ? 
                     (data[5 /* X19 */] <0.24285968f ? 
                        0.0f : 
                         (data[1 /* X12 */] <0.09727077f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2020365f ? 
                 (data[10 /* X28 */] <0.008894483f ? 
                     (data[11 /* X34 */] <-0.66826993f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.119942494f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23479992f ? 
             (data[1 /* X12 */] <-0.3557866f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.23318674f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26509154f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.28552243f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_04_Tree_141_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[12 /* X35 */] <-0.29567486f ? 
            0.0f : 
             (data[10 /* X28 */] <0.23059508f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5176474f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_142_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_142_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06448315f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0564285f ? 
                 (data[3 /* X17 */] <-0.28616273f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.3910853f ? 
                         (data[11 /* X34 */] <-0.105771095f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.019702682f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[4 /* X18 */] <-0.32936642f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08225971f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.43893334f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.3767464f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.10336309f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.04033071f ? 
                         (data[8 /* X23 */] <0.16113958f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[1 /* X12 */] <-0.054236293f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1982551f ? 
             (data[2 /* X15 */] <0.10744654f ? 
                 (data[6 /* X20 */] <-0.23797153f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.061555475f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.045549925f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.011274201f ? 
                    1.0f : 
                    0.0f))) : 
         (data[8 /* X23 */] <0.1276779f ? 
             (data[2 /* X15 */] <0.14243522f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X23 */] <0.15382391f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14435153f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[4 /* X18 */] <-0.601212f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022904014f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.10161509f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.50961643f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.7701327f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.13882782f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31445307f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_142_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[4 /* X18 */] <-0.11644301f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15826343f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4418527f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_143_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_143_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[5 /* X19 */] <0.081967644f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.32936642f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11841626f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.13935919f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17039393f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09168558f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47926956f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (data[10 /* X28 */] <0.05213229f ? 
             (data[3 /* X17 */] <-0.25785533f ? 
                 (data[9 /* X27 */] <0.29948694f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21558984f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24496679f ? 
                 (data[3 /* X17 */] <-0.2941301f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.17521681f ? 
                         (data[0 /* X5 */] <0.123408824f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.15480037f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[10 /* X28 */] <-0.37429646f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18642204f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.5237996f ? 
                    0.0f : 
                    1.0f))) : 
         (data[6 /* X20 */] <-0.5489839f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05630617f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[5 /* X19 */] <-0.103467226f ? 
             (data[4 /* X18 */] <0.1259415f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.16326182f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11255009f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.39273518f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.046579335f ? 
            0.0f : 
             (data[2 /* X15 */] <0.1339947f ? 
                 (data[8 /* X23 */] <0.11378108f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5401009f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.013085698f ? 
                 (data[4 /* X18 */] <-0.54630727f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.48138544f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.129859f ? 
                             (data[7 /* X21 */] <0.15921183f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <-0.1692325f ? 
                                     (data[6 /* X20 */] <-0.16296972f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16029322f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17273f ? 
                                0.0f : 
                                1.0f) : 
                             (data[4 /* X18 */] <-0.37728128f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
             (data[10 /* X28 */] <-9.565641E-4f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_143_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (data[10 /* X28 */] <0.4842683f ? 
             (data[4 /* X18 */] <0.026845068f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_144_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_144_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12996686f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5073771f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21955685f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3284832f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.16619198f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15069425f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.04694696f ? 
            1.0f : 
             (data[7 /* X21 */] <0.069942355f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16619198f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.19277404f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16444096f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24558665f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08868157f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29283702f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18708783f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.20139706f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.23477252f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20504439f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6658619f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20105822f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.18866964f ? 
                 (data[12 /* X35 */] <-0.95419025f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0241706f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.016203756f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.11502499f ? 
             (data[8 /* X23 */] <0.116560444f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[6 /* X20 */] <-0.2524194f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27850807f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.23704569f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.19104698f ? 
                 (data[7 /* X21 */] <0.09372616f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.10483685f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23557852f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_144_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18013975f ? 
             (data[5 /* X19 */] <0.19104698f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48216903f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <0.040301964f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16714533f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19763555f ? 
                 (data[7 /* X21 */] <0.11731641f ? 
                     (data[11 /* X34 */] <-0.7115391f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_145_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_145_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38729438f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11712152f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.16934648f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17701267f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.25711074f ? 
             (data[1 /* X12 */] <-0.005433648f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14354055f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5710255f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (data[1 /* X12 */] <0.10093036f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.273247f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.26929876f ? 
                        1.0f : 
                        0.0f))) : 
             (data[8 /* X23 */] <0.17214777f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[0 /* X5 */] <0.12310869f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055097774f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (data[12 /* X35 */] <-0.08953091f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.039402127f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24322012f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_145_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18013975f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.23093936f ? 
                 (data[1 /* X12 */] <-0.4334728f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16063465f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[8 /* X23 */] <0.2317056f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_146_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_146_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.29465494f ? 
             (data[6 /* X20 */] <-0.22361712f ? 
                 (data[5 /* X19 */] <0.29194537f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3958701f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.15384375f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.38439846f ? 
                         (data[2 /* X15 */] <0.11327799f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[3 /* X17 */] <-0.28050125f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.1940813f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22179282f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67768735f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
        0.019607844f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.025192743f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20776647f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[4 /* X18 */] <-0.601212f ? 
             (data[7 /* X21 */] <0.16019885f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.2572131f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21558984f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0564285f ? 
                     (data[5 /* X19 */] <0.22669598f ? 
                         (data[3 /* X17 */] <-0.1252329f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011889497f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.34348083f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_146_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16075915f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1805007f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.3192152f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.20471726f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_147_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_147_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
             (data[5 /* X19 */] <0.062878765f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.03707666f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20215806f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2368618f ? 
                             (data[10 /* X28 */] <-0.24675037f ? 
                                 (data[4 /* X18 */] <-0.42845622f ? 
                                    1.0f : 
                                     (data[7 /* X21 */] <0.15711045f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[7 /* X21 */] <0.12665759f ? 
             (data[12 /* X35 */] <-0.97655827f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0338801f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11841626f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.16581532f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.18890876f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[7 /* X21 */] <0.19173835f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22903174f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
        0.75f : 
         (data[12 /* X35 */] <-0.5224794f ? 
             (data[10 /* X28 */] <-0.27577814f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12313871f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.27884766f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17332159f ? 
         (data[4 /* X18 */] <-0.1686695f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20250635f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09252608f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X5 */] <0.09026169f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.068659596f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12269254f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.2733598f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17666458f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.18414082f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[4 /* X18 */] <-0.6065686f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08997828f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15501742f ? 
                     (data[10 /* X28 */] <-0.09193563f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.10399699f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.053182703f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20492955f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15812142f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_147_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.018810222f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.18866609f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.11119714f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5670757f ? 
             (data[11 /* X34 */] <-0.92067325f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.34348083f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_148_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_148_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[5 /* X19 */] <0.22649777f ? 
             (data[0 /* X5 */] <0.088095956f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.12327475f ? 
                     (data[12 /* X35 */] <-0.6399142f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16841553f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.06963743f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30170357f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20324889f ? 
                     (data[4 /* X18 */] <-0.11797803f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08303729f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9082436f ? 
             (data[4 /* X18 */] <-0.3025836f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3296489f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16659407f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17912152f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.272727f ? 
                                 (data[4 /* X18 */] <-0.55264217f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22606172f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33273655f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15179883f ? 
         (data[9 /* X27 */] <-0.32560593f ? 
            1.0f : 
             (data[0 /* X5 */] <0.05994138f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14572945f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.034892883f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[7 /* X21 */] <0.09525076f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (data[5 /* X19 */] <0.14468826f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22972076f ? 
                 (data[9 /* X27 */] <-0.24533531f ? 
                     (data[2 /* X15 */] <0.12993926f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[0 /* X5 */] <0.099646546f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44501397f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17325859f ? 
                         (data[12 /* X35 */] <-0.32812345f ? 
                            0.0f : 
                            1.0f) : 
                         (data[11 /* X34 */] <-0.4519242f ? 
                             (data[1 /* X12 */] <-0.35800016f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_148_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (data[8 /* X23 */] <0.0965093f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_149_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_149_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
             (data[6 /* X20 */] <-0.3863005f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1328545f ? 
                     (data[2 /* X15 */] <0.0944393f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.264891f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07715037f ? 
            0.0f : 
             (data[8 /* X23 */] <0.13229533f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.15743037f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.46285737f ? 
                 (data[6 /* X20 */] <-0.79013056f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07737924f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.52027506f ? 
                 (data[6 /* X20 */] <-0.6152382f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12313871f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13213259f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.45551756f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15130252f ? 
             (data[6 /* X20 */] <0.029977547f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10719352f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.056293976f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.15024917f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15858215f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[8 /* X23 */] <0.120332435f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1392084f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010838328f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.05136414f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17400737f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_149_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18941954f ? 
             (data[6 /* X20 */] <-0.077680565f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.004829389f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44991598f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[8 /* X23 */] <0.097303405f ? 
             (data[8 /* X23 */] <0.085263886f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18483694f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48216903f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_150_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_150_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.3863005f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1328545f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5568175f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[3 /* X17 */] <-0.53668314f ? 
             (data[12 /* X35 */] <-0.8663882f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5710255f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.33711603f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.30526188f ? 
                     (data[11 /* X34 */] <0.0016024688f ? 
                        1.0f : 
                        0.0f) : 
                     (data[11 /* X34 */] <0.10376548f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.8892044f ? 
                            0.0f : 
                            1.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117032565f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.061555475f ? 
            0.0f : 
             (data[8 /* X23 */] <0.14991283f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.038473077f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.28552243f ? 
                 (data[0 /* X5 */] <0.15264466f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13270582f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08935196f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.5974199f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20492955f ? 
             (data[5 /* X19 */] <0.19377397f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0057280352f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_150_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[1 /* X12 */] <-0.54462147f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17651534f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17761305f ? 
             (data[1 /* X12 */] <-0.7393117f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.70348275f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.3329738f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.20793018f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_151_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_151_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.3863005f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4746016f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.9763848f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09635589f ? 
                     (data[2 /* X15 */] <0.10328122f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41918558f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0564285f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
        0.75f : 
         (data[2 /* X15 */] <0.10453081f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.00997137f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21226484f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43684414f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.098604895f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.14126787f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[12 /* X35 */] <-0.75073045f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09816102f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13519098f ? 
             (data[9 /* X27 */] <-0.07995803f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11264096f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916369f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09133248f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12215563f ? 
                 (data[9 /* X27 */] <-0.27531588f ? 
                     (data[7 /* X21 */] <0.14739218f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17910394f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05448595f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14724325f ? 
            1.0f : 
             (data[7 /* X21 */] <0.12787727f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_151_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13343516f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.061812613f ? 
                 (data[2 /* X15 */] <0.14493442f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.34422147f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6047307f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04838066f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_152_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_152_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08141827f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22696021f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X18 */] <-0.17268692f ? 
             (data[3 /* X17 */] <-0.33994678f ? 
                 (data[11 /* X34 */] <-0.3581744f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.19943061f ? 
                         (data[2 /* X15 */] <0.16659407f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
         (data[12 /* X35 */] <-0.22696021f ? 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10093036f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4638187f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26656175f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.11218075f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19366865f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.28103477f ? 
                 (data[2 /* X15 */] <0.109272115f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.2922914f ? 
                         (data[5 /* X19 */] <0.08602797f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.23963763f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.086292f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1715374f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.046579335f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.056293976f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.15377717f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.21077938f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5899806f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13502024f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15810928f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.111229025f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* X15 */] <0.1082796f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15170452f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07505414f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.23199053f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20312665f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49507028f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_152_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[12 /* X35 */] <-0.31667098f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.06332615f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.118722185f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16343744f ? 
             (data[1 /* X12 */] <-0.40262935f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5144221f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.1625883f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_153_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_153_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[10 /* X28 */] <-0.083872356f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1668317f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18555409f ? 
             (data[6 /* X20 */] <-0.3025664f ? 
                 (data[8 /* X23 */] <0.10186951f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13153383f ? 
                     (data[5 /* X19 */] <-0.117102146f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44135198f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08618595f ? 
             (data[8 /* X23 */] <0.08456788f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.43654096f ? 
                 (data[5 /* X19 */] <0.079240665f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14260031f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25711694f ? 
                 (data[6 /* X20 */] <-0.41022453f ? 
                     (data[2 /* X15 */] <0.12987526f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.17997752f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05764531f ? 
            0.0f : 
             (data[8 /* X23 */] <0.14038357f ? 
                 (data[12 /* X35 */] <-0.29758358f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.087735f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.080436654f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
        0.025316456f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14296128f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4338954f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.20940295f ? 
                     (data[12 /* X35 */] <-0.20596406f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
             (data[0 /* X5 */] <0.11552861f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06301931f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22606172f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08346175f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.094934344f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_153_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.025381427f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26929876f ? 
             (data[7 /* X21 */] <0.09372616f ? 
                 (data[4 /* X18 */] <-0.26355296f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.13213259f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09229604f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_154_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_154_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[7 /* X21 */] <0.13854949f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13002391f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.3257931f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.28845012f ? 
                 (data[9 /* X27 */] <0.082256086f ? 
                     (data[8 /* X23 */] <0.17701267f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.7956957f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.093498655f ? 
                         (data[12 /* X35 */] <-0.030538281f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[3 /* X17 */] <-0.5281909f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2706706f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[6 /* X20 */] <-0.43534476f ? 
             (data[8 /* X23 */] <0.12132507f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12832637f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.04530458f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.0844794f ? 
                    1.0f : 
                    0.0f))) : 
        0.6666667f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.083872356f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.045528166f ? 
            0.0f : 
             (data[2 /* X15 */] <0.124107815f ? 
                 (data[10 /* X28 */] <0.16354834f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05256034f ? 
             (data[1 /* X12 */] <-0.28993112f ? 
                 (data[11 /* X34 */] <-0.45913574f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.15762189f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.34339336f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_154_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_04_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_155_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_155_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15084949f ? 
             (data[9 /* X27 */] <0.14749776f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31249726f ? 
                     (data[3 /* X17 */] <-0.39373082f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.4696806f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.056248408f ? 
                        1.0f : 
                        0.0f))) : 
             (data[9 /* X27 */] <0.20215245f ? 
                 (data[3 /* X17 */] <-0.18059723f ? 
                     (data[5 /* X19 */] <0.17741206f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05320319f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.257514f ? 
                 (data[5 /* X19 */] <-0.08437834f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24008806f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22388647f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.1921822f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                1.0f) : 
             (data[3 /* X17 */] <-0.28050125f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4837817f ? 
             (data[10 /* X28 */] <-0.058926668f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.05882654f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[8 /* X23 */] <0.095516674f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14196128f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.12665759f ? 
                 (data[11 /* X34 */] <-0.6899045f ? 
                     (data[11 /* X34 */] <-0.87149805f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.067717075f ? 
             (data[10 /* X28 */] <-0.10289033f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.17659084f ? 
                     (data[10 /* X28 */] <-0.06262425f ? 
                         (data[4 /* X18 */] <-0.47131535f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24831364f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.028842188f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23607318f ? 
             (data[1 /* X12 */] <-0.59878343f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20673242f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_155_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28381264f ? 
            0.0f : 
             (data[8 /* X23 */] <0.109413505f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_156_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_156_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[1 /* X12 */] <-0.28991395f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16678438f ? 
                 (data[3 /* X17 */] <-0.4311067f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046579335f ? 
                         (data[12 /* X35 */] <0.13565515f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12744713f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.28365117f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15693198f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.005924111f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.113573104f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.18175007f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21467793f ? 
                 (data[8 /* X23 */] <0.10504593f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_04_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1023942f ? 
             (data[0 /* X5 */] <0.05921947f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.17187807f ? 
                     (data[1 /* X12 */] <-0.3058843f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8468865f ? 
            0.0f : 
             (data[1 /* X12 */] <0.03652156f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.052623764f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <-0.73798364f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.75837994f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.059942946f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10093036f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[11 /* X34 */] <-0.9477165f ? 
             (data[0 /* X5 */] <0.08737404f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.00765391f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.054042142f ? 
                    0.0f : 
                    1.0f))) : 
         (data[5 /* X19 */] <-0.1552799f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025218546f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_156_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19864193f ? 
            1.0f : 
             (data[0 /* X5 */] <0.10975332f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_157_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_157_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
         (data[6 /* X20 */] <-0.12074381f ? 
             (data[5 /* X19 */] <-0.025134806f ? 
                 (data[6 /* X20 */] <-0.16154552f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
             (data[9 /* X27 */] <0.20289204f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2562457f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.13063931f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.18206091f ? 
                     (data[11 /* X34 */] <0.31249726f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5710255f ? 
         (data[6 /* X20 */] <-0.47123078f ? 
             (data[8 /* X23 */] <0.11814865f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9082436f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.31665725f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1023942f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4621364f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.061555475f ? 
             (data[0 /* X5 */] <0.09387125f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.79447156f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12563539f ? 
                 (data[6 /* X20 */] <0.0060535227f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[5 /* X19 */] <-0.25575486f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14471272f ? 
                 (data[0 /* X5 */] <0.11214075f ? 
                     (data[3 /* X17 */] <-0.56357515f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.11128747f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_157_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[1 /* X12 */] <-0.6148856f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.16387908f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.061697904f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24639653f ? 
             (data[5 /* X19 */] <0.14552847f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.037433695f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.43902263f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21643992f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_158_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_158_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.08737404f ? 
            1.0f : 
             (data[9 /* X27 */] <0.17092174f ? 
                 (data[2 /* X15 */] <0.119942494f ? 
                     (data[12 /* X35 */] <-0.76988685f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.080585346f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22012496f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[7 /* X21 */] <0.09311632f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15884334f ? 
                 (data[8 /* X23 */] <0.13283959f ? 
                     (data[12 /* X35 */] <-0.6487918f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23947822f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24150227f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.059187412f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19051687f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15306804f ? 
                 (data[9 /* X27 */] <-0.24580683f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.13887966f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18015853f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_158_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18855648f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15234613f ? 
                 (data[9 /* X27 */] <-0.07290881f ? 
                     (data[7 /* X21 */] <0.22693522f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_159_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_159_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.46184272f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2865553f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.41071525f ? 
             (data[2 /* X15 */] <0.1187515f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.15510912f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.116155796f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4502828f ? 
                         (data[6 /* X20 */] <-0.5078268f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2365039f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.01838089f ? 
                            0.0f : 
                            1.0f) : 
                         (data[11 /* X34 */] <0.048271637f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.072555035f ? 
             (data[2 /* X15 */] <0.18325536f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41918558f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27447584f ? 
            0.0f : 
             (data[0 /* X5 */] <0.15234613f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07737924f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18991986f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20907362f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.17095564f ? 
             (data[1 /* X12 */] <-0.08644069f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14945848f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[11 /* X34 */] <-0.9477165f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15992956f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.089539774f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.0873966f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17899017f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.34112242f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[8 /* X23 */] <0.13343516f ? 
             (data[10 /* X28 */] <-0.10539279f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2399037f ? 
                 (data[1 /* X12 */] <-0.7071073f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15811773f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.039738398f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_159_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6047307f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17899017f ? 
             (data[2 /* X15 */] <0.093237944f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.10109037f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_160_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_160_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.3863005f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38472238f ? 
                 (data[7 /* X21 */] <0.09128679f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21574485f ? 
                 (data[2 /* X15 */] <0.1110164f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.9744319f ? 
                         (data[7 /* X21 */] <0.18642204f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.47123078f ? 
             (data[10 /* X28 */] <0.02417543f ? 
                 (data[3 /* X17 */] <-0.19180709f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.75825953f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2938183f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17666458f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.38561034f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.53187084f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                 (data[4 /* X18 */] <0.11255009f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15631664f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.41769165f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <1.014596f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.3595349f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19325212f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.064341016f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.1581254f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[11 /* X34 */] <0.10336309f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3655739f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.01672633f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.138419f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19104698f ? 
                 (data[3 /* X17 */] <-0.2691783f ? 
                     (data[4 /* X18 */] <-0.07492964f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25785112f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31445307f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_160_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.013085698f ? 
             (data[2 /* X15 */] <0.124107815f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.119667165f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12875205f ? 
                 (data[4 /* X18 */] <-0.20884374f ? 
                     (data[7 /* X21 */] <0.12036543f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[10 /* X28 */] <0.44024006f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_161_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_161_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2776705f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.2223515f ? 
                 (data[8 /* X23 */] <0.15110399f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19716205f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.19796404f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[4 /* X18 */] <-0.42176715f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5228149f ? 
                 (data[2 /* X15 */] <0.114944115f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.06872267f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38601613f ? 
                     (data[7 /* X21 */] <0.11522799f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16301556f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (data[6 /* X20 */] <-0.69835013f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.53597975f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18991986f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42532572f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24378589f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <0.20527968f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08485778f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117032565f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.13104972f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12806605f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.33447248f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.20214802f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1337917f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.17333892f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <0.008445925f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.15159893f ? 
                     (data[2 /* X15 */] <0.11261805f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[6 /* X20 */] <-0.05495274f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12177647f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01600744f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12472947f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15162422f ? 
             (data[12 /* X35 */] <-0.15633681f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16507758f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_161_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[1 /* X12 */] <-0.61195797f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27368906f ? 
                 (data[7 /* X21 */] <0.098604895f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.10901645f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16425768f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46926782f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_162_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_162_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[6 /* X20 */] <-0.3863005f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.25437453f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.113241084f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2306257f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11264105f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (data[3 /* X17 */] <-0.22388647f ? 
                 (data[9 /* X27 */] <0.27732053f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.12337754f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15030989f ? 
             (data[2 /* X15 */] <0.11724786f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2973851f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.36025682f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.21218193f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[2 /* X15 */] <0.13493764f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20349759f ? 
                 (data[4 /* X18 */] <-0.4498891f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11835141f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.077680565f ? 
             (data[7 /* X21 */] <0.105313145f ? 
                 (data[7 /* X21 */] <0.08232975f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.44947213f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.013853651f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11164546f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0012768909f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16606246f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20195472f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_162_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[2 /* X15 */] <0.124107815f ? 
             (data[2 /* X15 */] <0.11314206f ? 
                 (data[10 /* X28 */] <0.23059508f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20349759f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3817174f ? 
             (data[1 /* X12 */] <-0.71003497f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.053698413f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_163_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_163_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07446844f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17889765f ? 
            0.0f : 
             (data[8 /* X23 */] <0.18944605f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24036394f ? 
                 (data[4 /* X18 */] <-0.48202848f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.096155f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.57745576f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24695015f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21324566f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29283702f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.273247f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5056346f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6658619f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31321332f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.35841933f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.19277404f ? 
                     (data[10 /* X28 */] <-0.18224423f ? 
                         (data[3 /* X17 */] <-0.385659f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.11423132f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[9 /* X27 */] <-0.0241427f ? 
             (data[12 /* X35 */] <0.11088682f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.48892722f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.11502499f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16242875f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[5 /* X19 */] <-0.25575486f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3857454f ? 
                 (data[3 /* X17 */] <-0.3257931f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27381176f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18955542f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1501804f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.43902263f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                 (data[10 /* X28 */] <-0.02097887f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12157277f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_163_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24497293f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15306804f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[0 /* X5 */] <0.114445746f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.33128944f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1719581f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_164_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_164_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[0 /* X5 */] <0.11625052f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19183691f ? 
                 (data[7 /* X21 */] <0.119500116f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08548501f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10461008f ? 
                     (data[11 /* X34 */] <0.07932656f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.28552243f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13754693f ? 
             (data[7 /* X21 */] <0.116290286f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23670168f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.30408517f ? 
                        0.0f : 
                        1.0f))) : 
             (data[10 /* X28 */] <-0.16289239f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.04082165f ? 
                     (data[12 /* X35 */] <-0.92967486f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15776047f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12581559f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[11 /* X34 */] <-0.6917074f ? 
             (data[10 /* X28 */] <0.1015828f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06448315f ? 
             (data[8 /* X23 */] <0.1276779f ? 
                 (data[7 /* X21 */] <0.10682711f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.14633626f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.33735943f ? 
                         (data[10 /* X28 */] <0.14028649f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16500081f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.5114193f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15983914f ? 
                 (data[7 /* X21 */] <0.10714267f ? 
                     (data[11 /* X34 */] <-0.69350857f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.062878765f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.35139507f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_164_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_04_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_165_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_165_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[12 /* X35 */] <-0.41019925f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21955685f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.86406934f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43913534f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19012348f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
             (data[5 /* X19 */] <0.24831364f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.35280687f ? 
                     (data[2 /* X15 */] <0.12993926f ? 
                         (data[5 /* X19 */] <0.13105343f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.119339496f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7968634f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.28313294f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28507876f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[11 /* X34 */] <-0.48617896f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
             (data[6 /* X20 */] <-0.046579335f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19374013f ? 
                    1.0f : 
                     (data[3 /* X17 */] <0.010025442f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02939885f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48283422f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_165_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28381264f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.34112242f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_166_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_166_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06448315f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06932973f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.052702885f ? 
                     (data[6 /* X20 */] <-0.38151568f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42361885f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[3 /* X17 */] <-0.3286238f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.089009605f ? 
                 (data[4 /* X18 */] <-0.3688017f ? 
                     (data[6 /* X20 */] <-0.37194607f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4374988f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[9 /* X27 */] <0.20195472f ? 
                         (data[1 /* X12 */] <-0.19736601f ? 
                            1.0f : 
                            0.0f) : 
                         (data[11 /* X34 */] <0.038459376f ? 
                             (data[8 /* X23 */] <0.09474367f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18598157f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15272431f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.124602355f ? 
            0.0f : 
             (data[2 /* X15 */] <0.1382699f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07619384f ? 
             (data[12 /* X35 */] <-0.34185928f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.06093375f ? 
                     (data[9 /* X27 */] <0.113289066f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2148601f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22482878f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3063898f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_166_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27835923f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48216903f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05026764f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.099948965f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_167_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_167_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12563539f ? 
             (data[3 /* X17 */] <-0.39090008f ? 
                 (data[2 /* X15 */] <0.10494734f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.24754114f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[5 /* X19 */] <0.1951481f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.19514546f ? 
                        0.0f : 
                        1.0f))) : 
             (data[3 /* X17 */] <-0.41071525f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2503609f ? 
                     (data[8 /* X23 */] <0.15861244f ? 
                         (data[9 /* X27 */] <0.32102916f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22649777f ? 
             (data[3 /* X17 */] <-0.3654234f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.15644176f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1267719f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.21883231f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2686621f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.18082617f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[5 /* X19 */] <0.3655739f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.36259267f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.5224794f ? 
             (data[10 /* X28 */] <-0.26932752f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6300913f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42361885f ? 
                         (data[10 /* X28 */] <-0.17311786f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.013834409f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[8 /* X23 */] <0.1113187f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010838328f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[0 /* X5 */] <0.09206647f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0054033753f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.09317315f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.020073274f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.18305919f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6808825f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11356661f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[5 /* X19 */] <-0.22481799f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4502702f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3445677f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19658437f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[5 /* X19 */] <0.19377397f ? 
             (data[10 /* X28 */] <0.20156732f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2567199f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_167_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[0 /* X5 */] <0.09784177f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.21920714f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.14037818f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.010544909f ? 
                         (data[6 /* X20 */] <-0.08485778f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3757339f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_168_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_168_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049977887f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.004465856f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09078862f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11330328f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.12215563f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[7 /* X21 */] <0.11994933f ? 
             (data[4 /* X18 */] <-0.40971488f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.59534705f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.45410028f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.117900245f ? 
                 (data[9 /* X27 */] <0.082256086f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.14339335f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.15040214f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19241905f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.27739078f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06579829f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18283883f ? 
             (data[8 /* X23 */] <0.1177516f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15977256f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20441508f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11278975f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.3846719f ? 
                     (data[8 /* X23 */] <0.13919242f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17219871f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.40865028f ? 
                 (data[4 /* X18 */] <-0.18741748f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13263583f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1587602f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35268635f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_168_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[7 /* X21 */] <0.10073934f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.6749029f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.1181086f ? 
                     (data[0 /* X5 */] <0.10574084f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4144376f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_169_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_169_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3061323f ? 
            0.0f : 
             (data[8 /* X23 */] <0.18247111f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X5 */] <0.0819597f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20348717f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.26695502f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12751557f ? 
                         (data[3 /* X17 */] <-0.25906077f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15983914f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07760792f ? 
             (data[8 /* X23 */] <0.10226656f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.58144325f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.12091679f ? 
                1.0f : 
                0.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19241905f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.019350871f ? 
                 (data[12 /* X35 */] <-0.7938561f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.2451377f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04279026f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09648039f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022904014f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.6899045f ? 
                     (data[3 /* X17 */] <7.8130874E-4f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22388647f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26929876f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15272431f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14456497f ? 
             (data[10 /* X28 */] <-0.041733738f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.013895592f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[3 /* X17 */] <-0.42769969f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_169_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4418527f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5499005f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.062018152f ? 
                 (data[2 /* X15 */] <0.10494734f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.0070934584f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_170_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_170_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[0 /* X5 */] <0.09351029f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.045989648f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0759492f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.49374214f ? 
                         (data[6 /* X20 */] <-0.29451516f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18066956f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.07835014f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16934648f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X23 */] <0.10147245f ? 
                 (data[3 /* X17 */] <-0.218225f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08303729f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (data[8 /* X23 */] <0.13204548f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.021755971f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25632283f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.124477856f ? 
             (data[4 /* X18 */] <-0.3527038f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.36629823f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[6 /* X20 */] <-0.2918006f ? 
            1.0f : 
             (data[0 /* X5 */] <0.10031507f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.071653634f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.354666f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6658619f ? 
                 (data[8 /* X23 */] <0.14003897f ? 
                     (data[2 /* X15 */] <0.177716f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.02504771f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.45791778f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.025505926f ? 
             (data[11 /* X34 */] <-0.4338954f ? 
                 (data[8 /* X23 */] <0.11808478f ? 
                     (data[3 /* X17 */] <0.025218546f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X19 */] <-0.068789326f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <0.033478f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.053525936f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06825599f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.1503106f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07887677f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.087622166f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.12827313f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10706902f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14724325f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.076925f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2303306f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.1682602f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_170_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0166743f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.022725f ? 
                 (data[8 /* X23 */] <0.13278864f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.9285714f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_171_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_171_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[9 /* X27 */] <0.08114777f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22972076f ? 
                 (data[3 /* X17 */] <-0.30880862f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14777313f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35101116f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30828363f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16373125f ? 
                                 (data[5 /* X19 */] <0.20752019f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47794542f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.15674996f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4814707f ? 
            0.0f : 
             (data[2 /* X15 */] <0.17909004f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3521964f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_04_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (data[7 /* X21 */] <0.14457406f ? 
                 (data[2 /* X15 */] <0.19373585f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.11498821f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3533025f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18533868f ? 
             (data[7 /* X21 */] <0.13824457f ? 
                 (data[5 /* X19 */] <0.015110647f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.73798364f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43913534f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12435175f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.027887238f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010838328f ? 
            0.0f : 
             (data[7 /* X21 */] <0.1254379f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                     (data[5 /* X19 */] <-0.15416962f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X27 */] <-0.18095407f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35875645f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.1483785f ? 
         (data[2 /* X15 */] <0.09328445f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19343373f ? 
                 (data[2 /* X15 */] <0.09955781f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.02890401f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4615425f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008234114f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_171_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19864193f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.15536109f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_172_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_172_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08141827f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4392025f ? 
             (data[10 /* X28 */] <-0.05323194f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3260495f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.09032297f ? 
             (data[10 /* X28 */] <-0.2889534f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22111364f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.080481656f ? 
                        1.0f : 
                        0.0f))) : 
             (data[3 /* X17 */] <-0.6852969f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20658115f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12665759f ? 
             (data[10 /* X28 */] <0.008048894f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9082436f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117032565f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[5 /* X19 */] <-0.014840265f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2160897f ? 
                 (data[11 /* X34 */] <-0.94230783f ? 
                     (data[3 /* X17 */] <-0.041356854f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.1566434f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0425256f ? 
             (data[10 /* X28 */] <-0.07580909f ? 
                 (data[7 /* X21 */] <0.111201204f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3144701f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2521336f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4403761f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21820155f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.19239739f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_172_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[1 /* X12 */] <-0.7071073f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44346535f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5499005f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_173_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_173_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16857429f ? 
                 (data[1 /* X12 */] <-0.45532745f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4108418f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20124057f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26402068f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19927041f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29696858f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.48917958f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.07798918f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.22886895f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11644301f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24558665f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.10576875f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.61538124f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14191778f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <0.34375805f ? 
                 (data[2 /* X15 */] <0.11827637f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010406692f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.016203756f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20156732f ? 
            1.0f : 
             (data[7 /* X21 */] <0.14373314f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67917705f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_173_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14724325f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23726434f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.022725f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20156732f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16294871f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.18604459f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_174_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_174_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[12 /* X35 */] <-0.41019925f ? 
             (data[5 /* X19 */] <0.08116566f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.21127199f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.16611768f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.40829054f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5710255f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.13708992f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.26219428f ? 
                     (data[10 /* X28 */] <-0.021527542f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14811298f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24115545f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23971897f ? 
                         (data[6 /* X20 */] <-0.4676422f ? 
                             (data[1 /* X12 */] <-0.022049766f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[11 /* X34 */] <-0.8215148f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21574485f ? 
                 (data[0 /* X5 */] <0.12808965f ? 
                     (data[6 /* X20 */] <-0.027440112f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20250635f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.0338801f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7503148f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33293408f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2020591f ? 
                     (data[10 /* X28 */] <-0.108369544f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1780278f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06421652f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.26740748f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.15821137f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_174_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[5 /* X19 */] <-0.06392597f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17576486f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.07290881f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.57280195f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_175_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_175_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (data[11 /* X34 */] <-0.4356983f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.7518638f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18533868f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1032872f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.5150949f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.43893334f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8959925f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14499415f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.15295897f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31167847f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.70605403f ? 
                 (data[2 /* X15 */] <0.14660054f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19197984f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27831045f ? 
                 (data[12 /* X35 */] <-0.90678245f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
        0.011494253f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[11 /* X34 */] <0.15564664f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4337485f ? 
                 (data[1 /* X12 */] <-0.08644069f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12727942f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[11 /* X34 */] <-0.9224761f ? 
             (data[5 /* X19 */] <0.024700996f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.6222048f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2728765f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025218546f ? 
                 (data[12 /* X35 */] <-0.5724422f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.7044245f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_175_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[7 /* X21 */] <0.09128679f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.0911996f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.36883044f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_176_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_176_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.061555475f ? 
             (data[3 /* X17 */] <-0.3286238f ? 
                 (data[11 /* X34 */] <-0.3581744f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.059682555f ? 
                     (data[0 /* X5 */] <0.15306804f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.36251274f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4679517f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3061323f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13810505f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[4 /* X18 */] <-0.25973108f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.10447924f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5144199f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3605912f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[12 /* X35 */] <-0.6831491f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11448403f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.17859465f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.13327152f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0152777f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117032565f ? 
            0.0f : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.061555475f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04838066f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.011274201f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.31667098f ? 
             (data[5 /* X19 */] <0.095602565f ? 
                 (data[4 /* X18 */] <0.021206023f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.12476871f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09315628f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <0.010838328f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
        0.08163265f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2678358f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.17374785f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.63942385f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.24633968f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_176_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.02538274f ? 
         (data[1 /* X12 */] <-0.61195797f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18151021f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022904014f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21955313f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.26929876f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1919976f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_177_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_177_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[11 /* X34 */] <-0.46093863f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3395759f ? 
                 (data[6 /* X20 */] <-0.47242698f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21013586f ? 
            0.0f : 
             (data[7 /* X21 */] <0.11446077f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[11 /* X34 */] <0.10336309f ? 
             (data[12 /* X35 */] <-0.7289589f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.3748972f ? 
                     (data[3 /* X17 */] <-0.24911372f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.12360838f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21948396f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.011494253f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05687288f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.0241427f ? 
                 (data[7 /* X21 */] <0.11690013f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.12452435f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
             (data[12 /* X35 */] <-0.45410028f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.3934796f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20105822f ? 
                         (data[3 /* X17 */] <-0.5906566f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15480062f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_177_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27776366f ? 
             (data[2 /* X15 */] <0.08995219f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.08668937f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16934648f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.21883231f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.099357784f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_178_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_178_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[1 /* X12 */] <-0.41583103f ? 
            0.0f : 
             (data[9 /* X27 */] <0.19308816f ? 
                 (data[0 /* X5 */] <0.08376448f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35576642f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
                     (data[4 /* X18 */] <-0.39183012f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18048136f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.45940396f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.25711074f ? 
             (data[4 /* X18 */] <-0.20080888f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15666305f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18317209f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20408195f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47086757f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15451187f ? 
                     (data[0 /* X5 */] <0.13919236f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27447584f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.004901129f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.13054149f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.12452435f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2199633f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[6 /* X20 */] <-0.2524194f ? 
             (data[2 /* X15 */] <0.13322459f ? 
                 (data[0 /* X5 */] <0.15162422f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.21082129f ? 
                 (data[0 /* X5 */] <0.0909836f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.35477892f ? 
                         (data[8 /* X23 */] <0.21241406f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23026998f ? 
                     (data[11 /* X34 */] <-0.30769375f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16910939f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12020059f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_178_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2728064f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_04_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_179_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_179_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[1 /* X12 */] <-0.19037308f ? 
             (data[9 /* X27 */] <0.07560616f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.6121819f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.37573946f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.13730359f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[11 /* X34 */] <0.15554573f ? 
                 (data[3 /* X17 */] <-0.12197988f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13754693f ? 
             (data[9 /* X27 */] <0.08668937f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5883387f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.054133475f ? 
                        1.0f : 
                        0.0f))) : 
             (data[4 /* X18 */] <-0.52220273f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.12299854f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.062879115f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15179883f ? 
         (data[11 /* X34 */] <-0.69351023f ? 
             (data[4 /* X18 */] <-0.18741748f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.12494088f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.7071073f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.42484388f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.46093863f ? 
             (data[4 /* X18 */] <-0.18741748f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.28050125f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19973809f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <6.224999E-5f ? 
                 (data[1 /* X12 */] <-0.36749727f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_179_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[1 /* X12 */] <-0.43115842f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17825697f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11790665f ? 
                 (data[2 /* X15 */] <0.083287686f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.117241636f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16608894f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23276997f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_180_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_180_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.40929988f ? 
             (data[5 /* X19 */] <0.14741525f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.543266f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0425256f ? 
                 (data[5 /* X19 */] <0.22649777f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.61057776f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5436336f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.090117306f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[3 /* X17 */] <-0.28050125f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22377078f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.636365f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.45738593f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1534906f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23797153f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (data[3 /* X17 */] <-0.3611773f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <1.014596f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1507008f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16208708f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.14373055f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14260031f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6899045f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09133248f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2568506f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.22954795f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17825697f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046579335f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[5 /* X19 */] <-0.06801644f ? 
            0.0f : 
             (data[8 /* X23 */] <0.1443541f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13978276f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_180_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
        0.0f : 
         (data[8 /* X23 */] <0.1443541f ? 
             (data[0 /* X5 */] <0.11119714f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.92067325f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.08485778f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.106083676f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20189947f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.24911162f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_181_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_181_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[9 /* X27 */] <-0.030792622f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12852304f ? 
                 (data[11 /* X34 */] <-0.379809f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.2710824f ? 
                     (data[4 /* X18 */] <-0.49477312f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.43419158f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.12997422f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[1 /* X12 */] <-0.25478187f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18825373f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.07451699f ? 
                     (data[5 /* X19 */] <0.5836475f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26045248f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20408195f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15937415f ? 
                     (data[0 /* X5 */] <0.13934109f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.2760822f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.5f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.018015536f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16841553f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025218546f ? 
                 (data[2 /* X15 */] <0.13478722f ? 
                     (data[1 /* X12 */] <-0.08881943f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.102800794f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05320319f ? 
                 (data[0 /* X5 */] <0.12563539f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.30769375f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22991872f ? 
                     (data[5 /* X19 */] <0.2537676f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X34 */] <-0.68269295f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_181_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2787874f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4273388f ? 
                 (data[2 /* X15 */] <0.08661994f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_04_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_182_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_182_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[11 /* X34 */] <0.15384375f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14801465f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08964258f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22545187f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[0 /* X5 */] <0.11336288f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22545187f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.004465856f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.034800984f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.41546646f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.067717075f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.273247f ? 
                 (data[6 /* X20 */] <-0.47242698f ? 
                     (data[2 /* X15 */] <0.16992633f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.25450605f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15805443f ? 
            1.0f : 
             (data[11 /* X34 */] <0.5637002f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.36061776f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <1.014596f ? 
                 (data[12 /* X35 */] <-0.75073045f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.089219674f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X17 */] <-0.76738834f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.60311806f ? 
             (data[3 /* X17 */] <-0.022904014f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0778256f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10719352f ? 
             (data[5 /* X19 */] <-0.09255929f ? 
                 (data[7 /* X21 */] <0.13641505f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2376487f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[3 /* X17 */] <-0.03139623f ? 
                 (data[7 /* X21 */] <0.13885441f ? 
                     (data[2 /* X15 */] <0.13939668f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010838328f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046579335f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06019909f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.60554844f ? 
                 (data[6 /* X20 */] <-0.23182952f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_182_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
         (data[9 /* X27 */] <-0.03855087f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.12849528f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[8 /* X23 */] <0.086582996f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_183_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_183_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
        0.01923077f : 
         (data[3 /* X17 */] <-0.3795771f ? 
             (data[3 /* X17 */] <-0.74611187f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.8357863f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.3863005f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17427088f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.22433579f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.23664625f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[6 /* X20 */] <-0.43534476f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13330282f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22530185f ? 
             (data[11 /* X34 */] <0.28245232f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.4766719f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.046781328f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24323596f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (data[6 /* X20 */] <-0.54778767f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.09084175f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05828825f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18533868f ? 
                 (data[0 /* X5 */] <0.085208304f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76923126f ? 
         (data[6 /* X20 */] <0.020407937f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.43637437f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0036259147f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06347118f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.033421118f ? 
             (data[3 /* X17 */] <-0.60037476f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17220911f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_183_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06093375f ? 
             (data[3 /* X17 */] <-0.5918825f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.7403852f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.9224761f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1328545f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5111968f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_184_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_184_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[10 /* X28 */] <0.025788084f ? 
             (data[11 /* X34 */] <-0.45913574f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23746172f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34339336f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.148689f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
        0.06521739f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[8 /* X23 */] <0.08578889f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.34193155f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4502828f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23787738f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.7251414f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23867968f ? 
                                    0.0f : 
                                     (data[5 /* X19 */] <0.641695f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                        1.0f)) : 
                1.0f)) : 
         (data[10 /* X28 */] <0.03385135f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.08817121f ? 
             (data[11 /* X34 */] <-0.66466415f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.6917074f ? 
             (data[1 /* X12 */] <-0.20061994f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[10 /* X28 */] <-0.15805443f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3581744f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15360232f ? 
                     (data[1 /* X12 */] <-0.36749727f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20544861f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[4 /* X18 */] <-0.19277404f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_184_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28381264f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.66466415f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_04_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_185_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_185_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (data[0 /* X5 */] <0.13357641f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16127089f ? 
                     (data[9 /* X27 */] <0.08668937f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4814707f ? 
            0.0f : 
             (data[9 /* X27 */] <0.15995283f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3846125f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.43441778f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20491502f ? 
                 (data[12 /* X35 */] <-0.9312854f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.4760156f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.36061776f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12727942f ? 
            0.0f : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19864193f ? 
            0.0f : 
             (data[7 /* X21 */] <0.18581219f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.01323073f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.105622f ? 
                 (data[10 /* X28 */] <0.16608894f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[12 /* X35 */] <-0.08953091f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.032861695f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15884334f ? 
                     (data[3 /* X17 */] <-0.6021716f ? 
                         (data[7 /* X21 */] <0.19733362f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[10 /* X28 */] <0.35960737f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_185_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (data[1 /* X12 */] <-0.6778306f ? 
            1.0f : 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.0995085f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18676646f ? 
                        0.0f : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.4319541f ? 
                         (data[9 /* X27 */] <0.2092492f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[6 /* X20 */] <-0.32050943f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_186_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_186_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07446844f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43689606f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.15594874f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.025788084f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.15795638f ? 
                 (data[11 /* X34 */] <-0.48798183f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2376487f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20124057f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35623297f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20408195f ? 
             (data[3 /* X17 */] <-0.22388647f ? 
                 (data[0 /* X5 */] <0.12544623f ? 
                     (data[2 /* X15 */] <0.13003467f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27447584f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25632283f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.61538124f ? 
             (data[10 /* X28 */] <-0.20804667f ? 
                 (data[8 /* X23 */] <0.13681011f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13327152f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3846628f ? 
                 (data[11 /* X34 */] <0.7686261f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (data[0 /* X5 */] <0.09026169f ? 
             (data[5 /* X19 */] <0.041062895f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26929876f ? 
            1.0f : 
             (data[8 /* X23 */] <0.109413505f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (data[2 /* X15 */] <0.10161509f ? 
             (data[5 /* X19 */] <-0.008411616f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0133291595f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.10104426f ? 
                     (data[3 /* X17 */] <-0.3144701f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.06774582f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.45913574f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_186_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16425768f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17361537f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.24633968f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4837817f ? 
             (data[5 /* X19 */] <-0.048927557f ? 
                 (data[2 /* X15 */] <0.13327152f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_187_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_187_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (data[9 /* X27 */] <0.08003945f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.15204087f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.115223676f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.48082265f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
             (data[0 /* X5 */] <0.08043725f ? 
                 (data[6 /* X20 */] <-0.022655308f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.15966707f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.35963273f ? 
                     (data[6 /* X20 */] <-0.38151568f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.2365039f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.118254855f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7169188f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22282588f ? 
             (data[2 /* X15 */] <0.17125024f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18326522f ? 
                 (data[2 /* X15 */] <0.12993926f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24754114f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5482818f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.027887238f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[2 /* X15 */] <0.15618078f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[11 /* X34 */] <-0.46093863f ? 
             (data[9 /* X27 */] <-0.36772212f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.082610406f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.22159375f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22282588f ? 
             (data[0 /* X5 */] <0.089656346f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15670484f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.48077032f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3655739f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16407111f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24349631f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_187_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[0 /* X5 */] <0.09784177f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.26717666f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1869979f ? 
             (data[2 /* X15 */] <0.12398774f ? 
                 (data[6 /* X20 */] <-0.19490829f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.43776143f ? 
                     (data[12 /* X35 */] <0.20632383f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <0.17908408f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_04_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_188_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_188_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08141827f ? 
         (data[11 /* X34 */] <-0.59074605f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23830482f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04220298f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.030666217f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17889765f ? 
                         (data[9 /* X27 */] <0.015756845f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.07158875f ? 
                                 (data[6 /* X20 */] <-0.37847602f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[4 /* X18 */] <-0.43515253f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21436791f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (data[6 /* X20 */] <-0.737472f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20529766f ? 
                 (data[1 /* X12 */] <-0.44361678f ? 
                     (data[2 /* X15 */] <0.152645f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.18048586f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.27458614f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.71814543f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4258355f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.21803728f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.14584891f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18280631f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47238496f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0241706f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07951879f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09380212f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.6983243f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14724325f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24087091f ? 
                     (data[1 /* X12 */] <-0.3557866f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_188_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16461864f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22019108f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.2626169f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.11781489f ? 
             (data[8 /* X23 */] <0.1086194f ? 
                 (data[6 /* X20 */] <0.04919153f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[2 /* X15 */] <0.12244169f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.020034125f ? 
                     (data[6 /* X20 */] <0.0041738614f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_04_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_189_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_189_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19403267f ? 
         (data[1 /* X12 */] <-0.40497378f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
                 (data[5 /* X19 */] <0.082508065f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.4066911f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.11598536f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.15318862f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.22954795f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41918558f ? 
                     (data[4 /* X18 */] <-0.580583f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2752756f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17332159f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.070648395f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18575455f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0670193f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.15435046f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06586359f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14452581f ? 
            0.0f : 
             (data[2 /* X15 */] <0.114944115f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23459949f ? 
             (data[9 /* X27 */] <0.15762189f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0016270273f ? 
                     (data[5 /* X19 */] <0.22583726f ? 
                         (data[10 /* X28 */] <-0.05323432f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16461864f ? 
                         (data[9 /* X27 */] <0.29565564f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.26154f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_189_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (data[1 /* X12 */] <-0.40454274f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.44278082f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.15762189f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39831105f ? 
                 (data[5 /* X19 */] <-0.05681814f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.08513539f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_04_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_190_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_190_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03448276f : 
         (data[11 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.007393529f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2521336f ? 
                     (data[6 /* X20 */] <-0.35280687f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16173099f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (data[6 /* X20 */] <-0.3982625f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10093036f ? 
                 (data[11 /* X34 */] <-0.1009611f ? 
                     (data[12 /* X35 */] <-0.5916202f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (data[6 /* X20 */] <-0.71645206f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09214734f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.49928844f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14872168f ? 
             (data[11 /* X34 */] <-0.40865508f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43155518f ? 
                 (data[3 /* X17 */] <-0.07668805f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
        0.04761905f : 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.007393529f ? 
                 (data[5 /* X19 */] <0.18286604f ? 
                     (data[4 /* X18 */] <-0.14992154f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_190_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12348302f ? 
         (data[4 /* X18 */] <-0.113764726f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3762803f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38765416f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20312665f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_191_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_191_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[3 /* X17 */] <-0.3979769f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.021488504f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21955685f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.030666217f ? 
                     (data[6 /* X20 */] <-0.38151568f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20815505f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.48737672f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16028716f ? 
                 (data[10 /* X28 */] <-0.09846411f ? 
                     (data[3 /* X17 */] <-0.22323781f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.27458614f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
        0.75f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14923696f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.04827132f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.068358436f ? 
            1.0f : 
             (data[10 /* X28 */] <0.24994692f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[4 /* X18 */] <-0.17938264f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0025726364f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33394116f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34103107f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.27342632f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14456497f ? 
            1.0f : 
             (data[10 /* X28 */] <0.2757494f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_191_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43155518f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.34348083f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.12452435f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39831105f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_192_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_192_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03448276f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.040301964f ? 
             (data[10 /* X28 */] <-0.23914033f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19183691f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19069414f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17039393f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24923567f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12599634f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.15948382f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5266324f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.13066068f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <0.23220773f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9968706f ? 
             (data[10 /* X28 */] <-0.22417322f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-1.4373768E-5f ? 
             (data[1 /* X12 */] <0.059942946f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023588538f ? 
         (data[0 /* X5 */] <0.0942322f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17576486f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0025726364f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.070648395f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (data[4 /* X18 */] <-0.5583595f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15325792f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X17 */] <-0.48997593f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.7087832f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6944581f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.077547066f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.08485778f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4144376f ? 
             (data[12 /* X35 */] <-0.45410028f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_192_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.035706617f ? 
         (data[0 /* X5 */] <0.0942322f ? 
            0.0f : 
             (data[10 /* X28 */] <0.18866609f ? 
                 (data[2 /* X15 */] <0.08661994f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4418527f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_193_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_193_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08391857f ? 
        0.03448276f : 
         (data[10 /* X28 */] <-0.027429484f ? 
             (data[11 /* X34 */] <-0.45913574f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18032362f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09324522f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30267566f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.32897642f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.04759776f ? 
                         (data[8 /* X23 */] <0.115284465f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5710255f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26863146f ? 
             (data[6 /* X20 */] <-0.3982625f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.22761673f ? 
                     (data[7 /* X21 */] <0.13519536f ? 
                         (data[1 /* X12 */] <0.23596984f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.27319756f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.396465f ? 
         (data[8 /* X23 */] <0.11417813f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07331924f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.07750898f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1688271f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.059942946f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X27 */] <0.40795463f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[4 /* X18 */] <-0.13117355f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.8197119f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046579335f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055097774f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.00307492f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15084949f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17998955f ? 
         (data[4 /* X18 */] <-0.591838f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.33293408f ? 
                 (data[6 /* X20 */] <-0.046579335f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14028649f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23220773f ? 
             (data[8 /* X23 */] <0.19356164f ? 
                 (data[2 /* X15 */] <0.13327152f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18708798f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.029999655f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_193_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (data[9 /* X27 */] <0.08447273f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19491825f ? 
                 (data[1 /* X12 */] <-0.39091867f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1531877f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.60037476f ? 
                 (data[1 /* X12 */] <-0.6309878f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.32050943f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_04_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_194_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_194_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.009690295f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20940295f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                 (data[0 /* X5 */] <0.0537f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.4089205f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.052234933f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17039393f ? 
                     (data[12 /* X35 */] <-0.088070154f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19713466f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3028119f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.3581744f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.10899598f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.3117336f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (data[6 /* X20 */] <-0.3839081f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.48917958f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3587763f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.10461216f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16876961f ? 
                             (data[0 /* X5 */] <0.11457788f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9082436f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.5501801f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.052623764f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <-0.71645206f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.76682323f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1829052f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09816102f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.66466415f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.008445925f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17696527f ? 
             (data[3 /* X17 */] <-0.2823907f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.29386145f ? 
                     (data[11 /* X34 */] <-0.27884766f ? 
                         (data[8 /* X23 */] <0.14078063f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.40151483f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                 (data[8 /* X23 */] <0.13283959f ? 
                     (data[6 /* X20 */] <-0.05125684f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20922066f ? 
                         (data[12 /* X35 */] <0.52556765f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20230074f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_194_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_04_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_195_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_195_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.052361302f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15084949f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32621065f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.036853246f ? 
                     (data[6 /* X20 */] <-0.3910853f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.18362492f ? 
                 (data[6 /* X20 */] <-0.33845243f ? 
                     (data[1 /* X12 */] <-0.00611267f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15384375f ? 
         (data[8 /* X23 */] <0.08578889f ? 
             (data[3 /* X17 */] <-0.088011004f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <-0.10074024f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.12385569f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.3286238f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.014528256f ? 
                 (data[6 /* X20 */] <-0.3958701f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.015760405f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7773484f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
         (data[8 /* X23 */] <0.14792757f ? 
             (data[12 /* X35 */] <-0.90838045f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32466918f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1697495f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.055551436f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (data[8 /* X23 */] <0.08817121f ? 
             (data[3 /* X17 */] <-0.23989785f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14767767f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.14466918f ? 
                     (data[5 /* X19 */] <0.35544023f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.61598635f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1501804f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.025734752f ? 
                 (data[5 /* X19 */] <-0.06256247f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.17582822f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12215563f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <0.1951167f ? 
                 (data[10 /* X28 */] <-0.0264239f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_195_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15441386f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48216903f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03139623f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08644069f ? 
                        0.0f : 
                         (data[3 /* X17 */] <0.010003327f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (data[5 /* X19 */] <0.032881945f ? 
                 (data[6 /* X20 */] <-0.08964258f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <0.08668937f ? 
                     (data[5 /* X19 */] <0.114729285f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.102165334f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_04_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_196_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_196_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.090485275f ? 
         (data[9 /* X27 */] <0.08447273f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.022031892f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20698042f ? 
                     (data[6 /* X20 */] <-0.3910853f ? 
                         (data[8 /* X23 */] <0.09948719f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16461864f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.24986508f ? 
         (data[9 /* X27 */] <0.0667396f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20408195f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.3615058f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.36237648f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10093036f ? 
                         (data[7 /* X21 */] <0.09372616f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_04_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.9770951f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46462673f ? 
            1.0f : 
             (data[9 /* X27 */] <0.5057884f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.13752627f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.09278838f ? 
         (data[5 /* X19 */] <0.08333114f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.35403347f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.4356983f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04193956f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20230189f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38669977f ? 
         (data[5 /* X19 */] <-0.2548148f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.59451634f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.26668036f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.13331264f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.76923126f ? 
                             (data[4 /* X18 */] <-0.18825446f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17337333f ? 
                                 (data[1 /* X12 */] <-0.56747127f ? 
                                    0.0f : 
                                     (data[5 /* X19 */] <0.051050473f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)))))) : 
         (data[1 /* X12 */] <-0.36164194f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_04_Tree_196_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17977878f ? 
         (data[9 /* X27 */] <0.1797883f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.050825104f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.010625735f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.17908408f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_197_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_197_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[0 /* X5 */] <0.09567603f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.08151317f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.027367122f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21081568f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.48917958f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.4149323f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.3982625f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.15801997f ? 
             (data[11 /* X34 */] <-0.20312665f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.011494253f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_04_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.7373856f ? 
        1.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117032565f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_04_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07005029f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.14605798f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11438682f ? 
             (data[8 /* X23 */] <0.1518981f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04002411f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.19172873f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16137002f ? 
             (data[8 /* X23 */] <0.11814865f ? 
                 (data[4 /* X18 */] <-0.5623769f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.8197119f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11243579f ? 
             (data[11 /* X34 */] <-0.6141835f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.15467747f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010558438f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_197_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
         (data[1 /* X12 */] <-0.7071073f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.31667098f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.21477385f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20426367f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13605987f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_04_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_198_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_198_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06887466f ? 
             (data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.06895624f ? 
                     (data[9 /* X27 */] <0.021029836f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53134114f ? 
                         (data[1 /* X12 */] <-0.45522013f ? 
                            0.0f : 
                            1.0f) : 
                         (data[10 /* X28 */] <0.03707666f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[0 /* X5 */] <0.048029833f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.46374533f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20349759f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.19636795f ? 
                         (data[12 /* X35 */] <-0.87784064f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_04_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17117593f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.033742584f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.59014094f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3881526f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.021974012f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.4760156f ? 
             (data[9 /* X27 */] <-0.06847552f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.23169164f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0024017578f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13330282f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_04_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11630064f ? 
        0.0f : 
        1.0f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}

class h2o_rf_04_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14322583f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.058627803f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.06528946f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.025192743f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.14982595f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_04_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02715532f ? 
         (data[4 /* X18 */] <-0.54630727f ? 
             (data[1 /* X12 */] <-0.349234f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.41193265f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2551541f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017870503f ? 
                     (data[1 /* X12 */] <-0.35288504f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_198_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.674171f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27319756f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28835702f ? 
                 (data[2 /* X15 */] <0.083287686f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48861966f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_04_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_04_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_04_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_04_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_04_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_04_Tree_199_class_4.score0(fdata);
    preds[6] += h2o_rf_04_Tree_199_class_5.score0(fdata);
  }
}
class h2o_rf_04_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17268692f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
            0.0f : 
             (data[5 /* X19 */] <0.14468826f ? 
                 (data[3 /* X17 */] <-0.3201316f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.51261705f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34381977f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37623018f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.46393925f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.2562457f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_04_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08607943f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.049881786f ? 
             (data[2 /* X15 */] <0.114944115f ? 
                 (data[6 /* X20 */] <-0.37194607f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08545627f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.45791778f ? 
                     (data[6 /* X20 */] <-0.3910853f ? 
                         (data[2 /* X15 */] <0.16659407f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[9 /* X27 */] <-0.16677707f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10183696f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X17 */] <0.15824668f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1531877f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_04_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17176197f ? 
         (data[1 /* X12 */] <0.052623764f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X17 */] <-0.7588961f ? 
             (data[7 /* X21 */] <0.1888614f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43913534f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.08931893f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_04_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05545751f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11278975f ? 
            0.0f : 
             (data[2 /* X15 */] <0.13493764f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1553627f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17790502f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5637028f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.13270582f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.010775377f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_04_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022196328f ? 
         (data[11 /* X34 */] <-0.30769375f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15306804f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.10814033f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_04_Tree_199_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2830063f ? 
        0.010869565f : 
        0.9285714f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}



