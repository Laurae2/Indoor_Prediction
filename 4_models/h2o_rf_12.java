/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:43:32.059+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_12

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_12 > h2o_rf_12.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_12.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_12", algorithm="drf")
public class h2o_rf_12 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 13; }
  public int nclasses() { return 5; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_12.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X5 */ null,
    /* X12 */ null,
    /* X15 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X23 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* Label */ h2o_rf_12_ColInfo_13.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.2864864864864865,0.13513513513513514,0.14594594594594595,0.2864864864864865,0.14594594594594595};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.2864864864864865,0.13513513513513514,0.14594594594594595,0.2864864864864865,0.14594594594594595};

  public h2o_rf_12() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-1506890334513702384L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_12_Forest_0.score0(data,preds);
    h2o_rf_12_Forest_1.score0(data,preds);
    h2o_rf_12_Forest_2.score0(data,preds);
    h2o_rf_12_Forest_3.score0(data,preds);
    h2o_rf_12_Forest_4.score0(data,preds);
    h2o_rf_12_Forest_5.score0(data,preds);
    h2o_rf_12_Forest_6.score0(data,preds);
    h2o_rf_12_Forest_7.score0(data,preds);
    h2o_rf_12_Forest_8.score0(data,preds);
    h2o_rf_12_Forest_9.score0(data,preds);
    h2o_rf_12_Forest_10.score0(data,preds);
    h2o_rf_12_Forest_11.score0(data,preds);
    h2o_rf_12_Forest_12.score0(data,preds);
    h2o_rf_12_Forest_13.score0(data,preds);
    h2o_rf_12_Forest_14.score0(data,preds);
    h2o_rf_12_Forest_15.score0(data,preds);
    h2o_rf_12_Forest_16.score0(data,preds);
    h2o_rf_12_Forest_17.score0(data,preds);
    h2o_rf_12_Forest_18.score0(data,preds);
    h2o_rf_12_Forest_19.score0(data,preds);
    h2o_rf_12_Forest_20.score0(data,preds);
    h2o_rf_12_Forest_21.score0(data,preds);
    h2o_rf_12_Forest_22.score0(data,preds);
    h2o_rf_12_Forest_23.score0(data,preds);
    h2o_rf_12_Forest_24.score0(data,preds);
    h2o_rf_12_Forest_25.score0(data,preds);
    h2o_rf_12_Forest_26.score0(data,preds);
    h2o_rf_12_Forest_27.score0(data,preds);
    h2o_rf_12_Forest_28.score0(data,preds);
    h2o_rf_12_Forest_29.score0(data,preds);
    h2o_rf_12_Forest_30.score0(data,preds);
    h2o_rf_12_Forest_31.score0(data,preds);
    h2o_rf_12_Forest_32.score0(data,preds);
    h2o_rf_12_Forest_33.score0(data,preds);
    h2o_rf_12_Forest_34.score0(data,preds);
    h2o_rf_12_Forest_35.score0(data,preds);
    h2o_rf_12_Forest_36.score0(data,preds);
    h2o_rf_12_Forest_37.score0(data,preds);
    h2o_rf_12_Forest_38.score0(data,preds);
    h2o_rf_12_Forest_39.score0(data,preds);
    h2o_rf_12_Forest_40.score0(data,preds);
    h2o_rf_12_Forest_41.score0(data,preds);
    h2o_rf_12_Forest_42.score0(data,preds);
    h2o_rf_12_Forest_43.score0(data,preds);
    h2o_rf_12_Forest_44.score0(data,preds);
    h2o_rf_12_Forest_45.score0(data,preds);
    h2o_rf_12_Forest_46.score0(data,preds);
    h2o_rf_12_Forest_47.score0(data,preds);
    h2o_rf_12_Forest_48.score0(data,preds);
    h2o_rf_12_Forest_49.score0(data,preds);
    h2o_rf_12_Forest_50.score0(data,preds);
    h2o_rf_12_Forest_51.score0(data,preds);
    h2o_rf_12_Forest_52.score0(data,preds);
    h2o_rf_12_Forest_53.score0(data,preds);
    h2o_rf_12_Forest_54.score0(data,preds);
    h2o_rf_12_Forest_55.score0(data,preds);
    h2o_rf_12_Forest_56.score0(data,preds);
    h2o_rf_12_Forest_57.score0(data,preds);
    h2o_rf_12_Forest_58.score0(data,preds);
    h2o_rf_12_Forest_59.score0(data,preds);
    h2o_rf_12_Forest_60.score0(data,preds);
    h2o_rf_12_Forest_61.score0(data,preds);
    h2o_rf_12_Forest_62.score0(data,preds);
    h2o_rf_12_Forest_63.score0(data,preds);
    h2o_rf_12_Forest_64.score0(data,preds);
    h2o_rf_12_Forest_65.score0(data,preds);
    h2o_rf_12_Forest_66.score0(data,preds);
    h2o_rf_12_Forest_67.score0(data,preds);
    h2o_rf_12_Forest_68.score0(data,preds);
    h2o_rf_12_Forest_69.score0(data,preds);
    h2o_rf_12_Forest_70.score0(data,preds);
    h2o_rf_12_Forest_71.score0(data,preds);
    h2o_rf_12_Forest_72.score0(data,preds);
    h2o_rf_12_Forest_73.score0(data,preds);
    h2o_rf_12_Forest_74.score0(data,preds);
    h2o_rf_12_Forest_75.score0(data,preds);
    h2o_rf_12_Forest_76.score0(data,preds);
    h2o_rf_12_Forest_77.score0(data,preds);
    h2o_rf_12_Forest_78.score0(data,preds);
    h2o_rf_12_Forest_79.score0(data,preds);
    h2o_rf_12_Forest_80.score0(data,preds);
    h2o_rf_12_Forest_81.score0(data,preds);
    h2o_rf_12_Forest_82.score0(data,preds);
    h2o_rf_12_Forest_83.score0(data,preds);
    h2o_rf_12_Forest_84.score0(data,preds);
    h2o_rf_12_Forest_85.score0(data,preds);
    h2o_rf_12_Forest_86.score0(data,preds);
    h2o_rf_12_Forest_87.score0(data,preds);
    h2o_rf_12_Forest_88.score0(data,preds);
    h2o_rf_12_Forest_89.score0(data,preds);
    h2o_rf_12_Forest_90.score0(data,preds);
    h2o_rf_12_Forest_91.score0(data,preds);
    h2o_rf_12_Forest_92.score0(data,preds);
    h2o_rf_12_Forest_93.score0(data,preds);
    h2o_rf_12_Forest_94.score0(data,preds);
    h2o_rf_12_Forest_95.score0(data,preds);
    h2o_rf_12_Forest_96.score0(data,preds);
    h2o_rf_12_Forest_97.score0(data,preds);
    h2o_rf_12_Forest_98.score0(data,preds);
    h2o_rf_12_Forest_99.score0(data,preds);
    h2o_rf_12_Forest_100.score0(data,preds);
    h2o_rf_12_Forest_101.score0(data,preds);
    h2o_rf_12_Forest_102.score0(data,preds);
    h2o_rf_12_Forest_103.score0(data,preds);
    h2o_rf_12_Forest_104.score0(data,preds);
    h2o_rf_12_Forest_105.score0(data,preds);
    h2o_rf_12_Forest_106.score0(data,preds);
    h2o_rf_12_Forest_107.score0(data,preds);
    h2o_rf_12_Forest_108.score0(data,preds);
    h2o_rf_12_Forest_109.score0(data,preds);
    h2o_rf_12_Forest_110.score0(data,preds);
    h2o_rf_12_Forest_111.score0(data,preds);
    h2o_rf_12_Forest_112.score0(data,preds);
    h2o_rf_12_Forest_113.score0(data,preds);
    h2o_rf_12_Forest_114.score0(data,preds);
    h2o_rf_12_Forest_115.score0(data,preds);
    h2o_rf_12_Forest_116.score0(data,preds);
    h2o_rf_12_Forest_117.score0(data,preds);
    h2o_rf_12_Forest_118.score0(data,preds);
    h2o_rf_12_Forest_119.score0(data,preds);
    h2o_rf_12_Forest_120.score0(data,preds);
    h2o_rf_12_Forest_121.score0(data,preds);
    h2o_rf_12_Forest_122.score0(data,preds);
    h2o_rf_12_Forest_123.score0(data,preds);
    h2o_rf_12_Forest_124.score0(data,preds);
    h2o_rf_12_Forest_125.score0(data,preds);
    h2o_rf_12_Forest_126.score0(data,preds);
    h2o_rf_12_Forest_127.score0(data,preds);
    h2o_rf_12_Forest_128.score0(data,preds);
    h2o_rf_12_Forest_129.score0(data,preds);
    h2o_rf_12_Forest_130.score0(data,preds);
    h2o_rf_12_Forest_131.score0(data,preds);
    h2o_rf_12_Forest_132.score0(data,preds);
    h2o_rf_12_Forest_133.score0(data,preds);
    h2o_rf_12_Forest_134.score0(data,preds);
    h2o_rf_12_Forest_135.score0(data,preds);
    h2o_rf_12_Forest_136.score0(data,preds);
    h2o_rf_12_Forest_137.score0(data,preds);
    h2o_rf_12_Forest_138.score0(data,preds);
    h2o_rf_12_Forest_139.score0(data,preds);
    h2o_rf_12_Forest_140.score0(data,preds);
    h2o_rf_12_Forest_141.score0(data,preds);
    h2o_rf_12_Forest_142.score0(data,preds);
    h2o_rf_12_Forest_143.score0(data,preds);
    h2o_rf_12_Forest_144.score0(data,preds);
    h2o_rf_12_Forest_145.score0(data,preds);
    h2o_rf_12_Forest_146.score0(data,preds);
    h2o_rf_12_Forest_147.score0(data,preds);
    h2o_rf_12_Forest_148.score0(data,preds);
    h2o_rf_12_Forest_149.score0(data,preds);
    h2o_rf_12_Forest_150.score0(data,preds);
    h2o_rf_12_Forest_151.score0(data,preds);
    h2o_rf_12_Forest_152.score0(data,preds);
    h2o_rf_12_Forest_153.score0(data,preds);
    h2o_rf_12_Forest_154.score0(data,preds);
    h2o_rf_12_Forest_155.score0(data,preds);
    h2o_rf_12_Forest_156.score0(data,preds);
    h2o_rf_12_Forest_157.score0(data,preds);
    h2o_rf_12_Forest_158.score0(data,preds);
    h2o_rf_12_Forest_159.score0(data,preds);
    h2o_rf_12_Forest_160.score0(data,preds);
    h2o_rf_12_Forest_161.score0(data,preds);
    h2o_rf_12_Forest_162.score0(data,preds);
    h2o_rf_12_Forest_163.score0(data,preds);
    h2o_rf_12_Forest_164.score0(data,preds);
    h2o_rf_12_Forest_165.score0(data,preds);
    h2o_rf_12_Forest_166.score0(data,preds);
    h2o_rf_12_Forest_167.score0(data,preds);
    h2o_rf_12_Forest_168.score0(data,preds);
    h2o_rf_12_Forest_169.score0(data,preds);
    h2o_rf_12_Forest_170.score0(data,preds);
    h2o_rf_12_Forest_171.score0(data,preds);
    h2o_rf_12_Forest_172.score0(data,preds);
    h2o_rf_12_Forest_173.score0(data,preds);
    h2o_rf_12_Forest_174.score0(data,preds);
    h2o_rf_12_Forest_175.score0(data,preds);
    h2o_rf_12_Forest_176.score0(data,preds);
    h2o_rf_12_Forest_177.score0(data,preds);
    h2o_rf_12_Forest_178.score0(data,preds);
    h2o_rf_12_Forest_179.score0(data,preds);
    h2o_rf_12_Forest_180.score0(data,preds);
    h2o_rf_12_Forest_181.score0(data,preds);
    h2o_rf_12_Forest_182.score0(data,preds);
    h2o_rf_12_Forest_183.score0(data,preds);
    h2o_rf_12_Forest_184.score0(data,preds);
    h2o_rf_12_Forest_185.score0(data,preds);
    h2o_rf_12_Forest_186.score0(data,preds);
    h2o_rf_12_Forest_187.score0(data,preds);
    h2o_rf_12_Forest_188.score0(data,preds);
    h2o_rf_12_Forest_189.score0(data,preds);
    h2o_rf_12_Forest_190.score0(data,preds);
    h2o_rf_12_Forest_191.score0(data,preds);
    h2o_rf_12_Forest_192.score0(data,preds);
    h2o_rf_12_Forest_193.score0(data,preds);
    h2o_rf_12_Forest_194.score0(data,preds);
    h2o_rf_12_Forest_195.score0(data,preds);
    h2o_rf_12_Forest_196.score0(data,preds);
    h2o_rf_12_Forest_197.score0(data,preds);
    h2o_rf_12_Forest_198.score0(data,preds);
    h2o_rf_12_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_12 implements java.io.Serializable {
  public static final String[] VALUES = new String[13];
  static {
    NamesHolder_h2o_rf_12_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_12_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X5";
      sa[1] = "X12";
      sa[2] = "X15";
      sa[3] = "X17";
      sa[4] = "X18";
      sa[5] = "X19";
      sa[6] = "X20";
      sa[7] = "X21";
      sa[8] = "X23";
      sa[9] = "X27";
      sa[10] = "X28";
      sa[11] = "X34";
      sa[12] = "X35";
    }
  }
}
// The class representing column Label
class h2o_rf_12_ColInfo_13 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_rf_12_ColInfo_13_0.fill(VALUES);
  }
  static final class h2o_rf_12_ColInfo_13_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}

class h2o_rf_12_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_0_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21531452f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.11380698f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.02960363f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18834572f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10592654f ? 
                     (data[8 /* X23 */] <0.11183027f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19942322f ? 
                             (data[9 /* X27 */] <0.10541345f ? 
                                 (data[3 /* X17 */] <-0.48767817f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13798785f ? 
                                    1.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18260446f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f)) : 
                     (data[12 /* X35 */] <-0.265625f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.09178926f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24879101f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.2890625f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27579f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.32519126f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18020448f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.22093026f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.23046786f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.31755152f ? 
             (data[6 /* X20 */] <-0.46468717f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.84375f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.34871218f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.04432007f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11200152f ? 
                 (data[8 /* X23 */] <0.025420895f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27625245f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.65151507f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.07698364f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[12 /* X35 */] <-0.19140625f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3004822f ? 
                 (data[6 /* X20 */] <-0.07315877f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.16798916f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
            0.0f : 
             (data[2 /* X15 */] <0.103417344f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                 (data[1 /* X12 */] <-0.22455293f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.12074925f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18246043f ? 
                     (data[12 /* X35 */] <0.265625f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.04298827f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[12 /* X35 */] <0.44140625f ? 
                     (data[9 /* X27 */] <0.07866149f ? 
                         (data[3 /* X17 */] <-0.024182135f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
         (data[2 /* X15 */] <0.16160929f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15703818f ? 
                 (data[0 /* X5 */] <0.10714724f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.5020131f ? 
                         (data[9 /* X27 */] <0.12526937f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[9 /* X27 */] <-0.04356345f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.003701011f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053800933f ? 
             (data[9 /* X27 */] <0.1826632f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4609375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <-0.16537781f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.12818773f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_1_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.38122806f ? 
             (data[10 /* X28 */] <-0.15065022f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1816857f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.09250635f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.4049537f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.34234798f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.23385783f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0017154803f ? 
                         (data[3 /* X17 */] <-0.35497913f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.150677f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.520263f ? 
             (data[10 /* X28 */] <-0.35829583f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.6123798f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.19676702f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.4049537f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.34234798f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.45547614f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15311748f ? 
                         (data[3 /* X17 */] <-0.35497913f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1600943f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.19626471f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[9 /* X27 */] <0.13393746f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.52020484f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.83420306f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04151054f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023600962f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1660382f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.13345563f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.05388803f ? 
                     (data[7 /* X21 */] <0.111830585f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.5970702f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21718547f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.109375f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.01728888f ? 
                             (data[10 /* X28 */] <0.040250238f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14392866f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.014641631f ? 
                 (data[2 /* X15 */] <0.1276246f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11187445f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17058536f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.12000532f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.26011118f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3711698f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19627105f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44526598f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32187963f ? 
            1.0f : 
             (data[3 /* X17 */] <0.0056823003f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.39827663f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1799231f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.009137663f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.39390174f ? 
                 (data[5 /* X19 */] <-0.05793012f ? 
                     (data[4 /* X18 */] <-0.2536098f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_2_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.48974517f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09493634f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34542382f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.10796359f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.3115022f ? 
             (data[7 /* X21 */] <0.14420259f ? 
                 (data[6 /* X20 */] <-0.6228014f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13111293f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.578125f ? 
                        1.0f : 
                        0.0f))) : 
             (data[9 /* X27 */] <-0.029641813f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8174337f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.39354998f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11341562f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <-0.29577395f ? 
             (data[7 /* X21 */] <0.14420259f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26495087f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.796875f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39490125f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8174337f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.086900316f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18637238f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06476584f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.6555622f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12283937f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30199865f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2935816f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08283769f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19481593f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.16011634f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <-0.2666672f ? 
                     (data[6 /* X20 */] <0.052019652f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.053800933f ? 
                 (data[9 /* X27 */] <0.2139869f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2630976f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27269685f ? 
             (data[7 /* X21 */] <0.09123021f ? 
                 (data[5 /* X19 */] <0.07366052f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.5903401f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[1 /* X12 */] <-0.4112134f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_3_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.05337711f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.770793f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.39562106f ? 
                     (data[8 /* X23 */] <0.1201715f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.119834885f ? 
             (data[6 /* X20 */] <-0.39256313f ? 
                 (data[7 /* X21 */] <0.08975876f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.5755074f ? 
                 (data[9 /* X27 */] <0.20702608f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.092516616f ? 
                         (data[5 /* X19 */] <0.6057444f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20504394f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0096105905f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <-0.015020129f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.25926483f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.37641892f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2750434f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.31143838f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07628056f ? 
                     (data[3 /* X17 */] <-0.20481697f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5f ? 
                            0.0f : 
                             (data[12 /* X35 */] <-0.193181f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15342605f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09527561f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08170395f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.13802877f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5227851f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.59393275f ? 
             (data[4 /* X18 */] <-0.31546184f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.123496234f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23984717f ? 
                 (data[9 /* X27 */] <-0.106210835f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.080237076f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[2 /* X15 */] <0.12160233f ? 
             (data[4 /* X18 */] <-0.20061989f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.014641631f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053800933f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24198544f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4506548f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.46955478f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.35364598f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.11517287f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.53125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24071398f ? 
             (data[1 /* X12 */] <-0.5328255f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21188954f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26464102f ? 
                        0.0f : 
                        1.0f))) : 
             (data[5 /* X19 */] <0.35972714f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
             (data[4 /* X18 */] <-0.06023997f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3914294f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_4_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2765366f ? 
             (data[6 /* X20 */] <-0.32239097f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.13342257f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.16774587f ? 
                     (data[9 /* X27 */] <0.23629516f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16193543f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20354567f ? 
             (data[10 /* X28 */] <-0.15065022f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14674789f ? 
                     (data[12 /* X35 */] <-0.0028388281f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18920058f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24499726f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15706305f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.16117828f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.5180908f ? 
                             (data[6 /* X20 */] <-0.40224206f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.25797567f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.19898474f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15450278f ? 
                     (data[6 /* X20 */] <-0.60381687f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.04159783f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.064499125f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3064992f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.15450278f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11425357f ? 
             (data[0 /* X5 */] <0.12701881f ? 
                 (data[8 /* X23 */] <0.10168358f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.064560935f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.03928255f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13122271f ? 
             (data[4 /* X18 */] <-0.76753217f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0603981f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3029756f ? 
                         (data[4 /* X18 */] <-0.2575142f ? 
                            1.0f : 
                             (data[12 /* X35 */] <0.111182086f ? 
                                1.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17677525f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f))) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.39424425f ? 
            0.0f : 
             (data[9 /* X27 */] <0.032693975f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.18898478f ? 
                     (data[1 /* X12 */] <-0.24029969f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[1 /* X12 */] <-0.43101072f ? 
             (data[6 /* X20 */] <-0.01992471f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.13052556f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.9583333f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_5_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.19140625f ? 
             (data[11 /* X34 */] <-0.7675974f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21082011f ? 
                 (data[6 /* X20 */] <-0.39256313f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25102183f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.048821524f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09375f ? 
                            1.0f : 
                            0.0f) : 
                         (data[6 /* X20 */] <-0.12031065f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.62147087f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[12 /* X35 */] <-0.9765625f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11200152f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21120027f ? 
                 (data[6 /* X20 */] <-0.39256313f ? 
                     (data[7 /* X21 */] <0.089649476f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[3 /* X17 */] <-0.2899756f ? 
                 (data[4 /* X18 */] <-0.18928164f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[6 /* X20 */] <0.018790971f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.6996887f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2394793f ? 
             (data[11 /* X34 */] <-0.45274818f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04782773f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19214135f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[5 /* X19 */] <0.07938185f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.07586736f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061060123f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23162149f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.59620047f ? 
                     (data[8 /* X23 */] <0.13097712f ? 
                         (data[4 /* X18 */] <-0.20061989f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.13630871f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19851662f ? 
                            1.0f : 
                             (data[12 /* X35 */] <0.41363975f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47709414f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.62862974f ? 
                     (data[4 /* X18 */] <-0.22329639f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[6 /* X20 */] <-0.023554305f ? 
             (data[1 /* X12 */] <-0.45080805f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.115948826f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.062217858f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19470094f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5233994f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.23414695f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2932707f ? 
                     (data[0 /* X5 */] <0.1539626f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04749251f ? 
                             (data[5 /* X19 */] <0.015302932f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_12_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_6_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[3 /* X17 */] <-0.2765366f ? 
             (data[9 /* X27 */] <0.10957459f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12515251f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[4 /* X18 */] <-0.35935533f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04842468f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.6213914f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05380085f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.038709857f ? 
                             (data[12 /* X35 */] <-0.64999825f ? 
                                 (data[11 /* X34 */] <0.423075f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.19060516f ? 
             (data[11 /* X34 */] <-0.048078906f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20336716f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
             (data[12 /* X35 */] <-0.7734375f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12839451f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0459239f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.102471575f ? 
                         (data[9 /* X27 */] <-0.022680992f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06981727f ? 
                 (data[9 /* X27 */] <0.10865298f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3875f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16228473f ? 
             (data[9 /* X27 */] <-0.33591792f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12535469f ? 
                 (data[7 /* X21 */] <0.12948805f ? 
                     (data[9 /* X27 */] <0.11653542f ? 
                         (data[6 /* X20 */] <0.197851f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12944351f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47716454f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5265939f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4576156f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.46667013f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[11 /* X34 */] <-0.2842563f ? 
             (data[9 /* X27 */] <0.06780967f ? 
                 (data[5 /* X19 */] <-0.22384876f ? 
                     (data[9 /* X27 */] <-0.25327665f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.10741622f ? 
                     (data[11 /* X34 */] <-0.6141694f ? 
                         (data[0 /* X5 */] <0.14526659f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.92283386f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.07315877f ? 
                         (data[12 /* X35 */] <-0.4444461f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
             (data[1 /* X12 */] <-0.5271691f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11769181f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.507986f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.41930473f ? 
             (data[9 /* X27 */] <-0.04356345f ? 
                 (data[2 /* X15 */] <0.08614161f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <0.0f ? 
             (data[1 /* X12 */] <-0.55545104f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_7_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[9 /* X27 */] <0.22268793f ? 
             (data[12 /* X35 */] <-0.453125f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06001946f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15234375f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <0.15375917f ? 
             (data[3 /* X17 */] <-0.77676594f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.083110385f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12646247f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.13243096f ? 
                 (data[4 /* X18 */] <-0.1346949f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.094456255f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26281443f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[3 /* X17 */] <-0.5497962f ? 
                     (data[7 /* X21 */] <0.16487195f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.1833179f ? 
                             (data[0 /* X5 */] <0.1117989f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (data[4 /* X18 */] <-0.34419912f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.22790854f ? 
                             (data[2 /* X15 */] <0.13338429f ? 
                                 (data[3 /* X17 */] <-0.16110061f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_12_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.033650193f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.51348877f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16035934f ? 
                     (data[6 /* X20 */] <-0.39256313f ? 
                         (data[0 /* X5 */] <0.1702687f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19084181f ? 
                         (data[6 /* X20 */] <-0.36352637f ? 
                            1.0f : 
                            0.0f) : 
                         (data[10 /* X28 */] <0.09852452f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.01171875f ? 
                 (data[12 /* X35 */] <-0.43744525f ? 
                     (data[1 /* X12 */] <0.2208205f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2208243f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26857647f ? 
                 (data[8 /* X23 */] <0.22145505f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4270096f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[1 /* X12 */] <-0.4861604f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14524281f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18097216f ? 
                     (data[6 /* X20 */] <-0.08283769f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23717551f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[7 /* X21 */] <0.093437396f ? 
             (data[5 /* X19 */] <0.20137379f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.017628074f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.11323853f ? 
                 (data[7 /* X21 */] <0.13990894f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14317697f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13887806f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[7 /* X21 */] <0.09123021f ? 
             (data[2 /* X15 */] <0.32800192f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <-0.25594187f ? 
                 (data[12 /* X35 */] <0.23351148f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.6632811f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2867731f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15565725f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17274652f ? 
                 (data[4 /* X18 */] <-0.5353112f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.15706305f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15102004f ? 
                             (data[3 /* X17 */] <-0.6373625f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10592654f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (data[4 /* X18 */] <-0.241124f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16670838f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8298144f ? 
                                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1621317f ? 
                                        1.0f : 
                                         (data[7 /* X21 */] <0.12576647f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                0.0f)))) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67772514f ? 
                     (data[6 /* X20 */] <-0.20239988f ? 
                         (data[0 /* X5 */] <0.110142946f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.00907718f ? 
                        0.0f : 
                        1.0f))) : 
             (data[4 /* X18 */] <-0.1779434f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16546081f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046875f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17647763f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_12_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[1 /* X12 */] <-0.5285832f ? 
            1.0f : 
            0.0f) : 
         (data[0 /* X5 */] <0.11825194f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.01953125f ? 
                 (data[5 /* X19 */] <0.23263724f ? 
                     (data[7 /* X21 */] <0.088823795f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18025725f ? 
                     (data[12 /* X35 */] <0.24885045f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14052618f ? 
                             (data[3 /* X17 */] <-0.5796894f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_8_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.23099716f ? 
         (data[12 /* X35 */] <-0.08984375f ? 
             (data[10 /* X28 */] <-0.121899284f ? 
                 (data[10 /* X28 */] <-0.37179956f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.2481654f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07078651f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.222529f ? 
                     (data[11 /* X34 */] <-0.7403852f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26081884f ? 
                 (data[0 /* X5 */] <0.06506627f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14273848f ? 
                     (data[10 /* X28 */] <-0.36637422f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21410304f ? 
         (data[12 /* X35 */] <-0.23632812f ? 
             (data[6 /* X20 */] <-0.36110666f ? 
                 (data[8 /* X23 */] <0.108616546f ? 
                     (data[12 /* X35 */] <-0.7045466f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28072095f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22667155f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.1929162f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18209256f ? 
             (data[6 /* X20 */] <0.02363043f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.55789834f ? 
                     (data[2 /* X15 */] <0.08068611f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11192891f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.14978905f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.7223563f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16796875f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.03686282f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13825953f ? 
             (data[10 /* X28 */] <-0.09314835f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1562417f ? 
                         (data[0 /* X5 */] <0.12148702f ? 
                             (data[8 /* X23 */] <0.12215879f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.1025917f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.140625f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3259765f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24426153f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14630592f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21225739f ? 
             (data[10 /* X28 */] <-0.2848212f ? 
                 (data[2 /* X15 */] <0.0988711f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.08250461f ? 
                     (data[8 /* X23 */] <0.09937259f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26464102f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.023459794f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18761052f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.18712804f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2261048f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_12_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_9_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18843216f ? 
             (data[10 /* X28 */] <-0.067591965f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1328125f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.082365535f ? 
                     (data[9 /* X27 */] <0.3532033f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0576898f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.35085166f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15974845f ? 
                 (data[8 /* X23 */] <0.15136987f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.13966039f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.07523507f ? 
                 (data[7 /* X21 */] <0.073572755f ? 
                     (data[8 /* X23 */] <0.0485308f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36712494f ? 
                         (data[10 /* X28 */] <-0.10592654f ? 
                             (data[11 /* X34 */] <0.15384375f ? 
                                 (data[6 /* X20 */] <-0.34029698f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16994798f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09583217f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[5 /* X19 */] <-0.012159463f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_12_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27579f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23662236f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08731881f ? 
             (data[10 /* X28 */] <-0.33912852f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.011742863f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.21875f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16356403f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.011570468f ? 
                                0.0f : 
                                 (data[5 /* X19 */] <0.105981305f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18914454f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.234375f ? 
                 (data[0 /* X5 */] <0.12701881f ? 
                     (data[8 /* X23 */] <0.14097041f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[2 /* X15 */] <0.16115467f ? 
             (data[10 /* X28 */] <-0.08037016f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24753335f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13228528f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.12935664f ? 
                     (data[8 /* X23 */] <0.14097041f ? 
                         (data[8 /* X23 */] <0.0887674f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15028927f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[8 /* X23 */] <0.15483636f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15891714f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.19847462f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11357628f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061060123f ? 
             (data[10 /* X28 */] <-0.10912109f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0234375f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16323438f ? 
                     (data[0 /* X5 */] <0.09032753f ? 
                         (data[5 /* X19 */] <0.5023869f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.29132587f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25000155f ? 
                             (data[5 /* X19 */] <0.14061765f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[4 /* X18 */] <-0.2799876f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.02631579f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.04605711f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15933618f ? 
             (data[10 /* X28 */] <0.31894833f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3203125f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.25378022f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.54413825f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07306462f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17260653f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.17386676f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16962288f ? 
                        0.0f : 
                        1.0f))) : 
             (data[1 /* X12 */] <-0.34899324f ? 
                 (data[11 /* X34 */] <-0.8990387f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_12_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_10_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2007673f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27727857f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.45547614f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.18236583f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.10594477f ? 
                             (data[11 /* X34 */] <-0.1692325f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.10260391f ? 
             (data[3 /* X17 */] <-0.24074826f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.13220918f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2007673f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27727857f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.45547614f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.011771641f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.1938085f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.05644226f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029984051f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.057033014f ? 
             (data[9 /* X27 */] <-0.18974069f ? 
                 (data[12 /* X35 */] <0.19583547f ? 
                     (data[1 /* X12 */] <-0.39990065f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.21889521f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.3320241f ? 
                 (data[11 /* X34 */] <-0.7115391f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.03825783f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.026587406f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08896314f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.7331736f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0554924f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11377544f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.24279004f ? 
                     (data[7 /* X21 */] <0.12360223f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18808717f ? 
                 (data[10 /* X28 */] <0.00907718f ? 
                     (data[1 /* X12 */] <-0.320852f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17492902f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1765746f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025094183f ? 
             (data[1 /* X12 */] <-0.405557f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.124080904f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918751f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.061726376f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1702687f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21286608f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <-0.56959194f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_11_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (data[11 /* X34 */] <-0.5114193f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51420313f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.4602029f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19042745f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17984067f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.09375f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19424777f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15601274f ? 
                         (data[1 /* X12 */] <-0.09897955f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.33064234f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38794708f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23197275f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26967347f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18246043f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.59375f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[6 /* X20 */] <-0.47967342f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0050351443f ? 
                 (data[5 /* X19 */] <-0.10370078f ? 
                     (data[0 /* X5 */] <0.10480941f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.49241972f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16523582f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08714083f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13753904f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.15165642f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.122343145f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[11 /* X34 */] <-0.9224761f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13981491f ? 
                 (data[10 /* X28 */] <-0.18898478f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.13342257f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.01970247f ? 
             (data[5 /* X19 */] <0.11657051f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15660486f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15059362f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03330935f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X34 */] <-0.5997605f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.578125f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.13221404f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (data[1 /* X12 */] <-0.39565834f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14676322f ? 
             (data[5 /* X19 */] <0.1423165f ? 
                 (data[5 /* X19 */] <-0.21534958f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023815075f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23557852f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32472175f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22360021f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.19343302f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[3 /* X17 */] <-0.25953317f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16615555f ? 
                     (data[0 /* X5 */] <0.10338536f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.012293116f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[1 /* X12 */] <-0.43101072f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3462425f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <-0.05793012f ? 
                 (data[2 /* X15 */] <0.08614161f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.9583333f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_12_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.125f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16070005f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                     (data[11 /* X34 */] <-0.4519242f ? 
                         (data[3 /* X17 */] <-0.4064469f ? 
                            1.0f : 
                            0.0f) : 
                         (data[12 /* X35 */] <-0.6676144f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23347872f ? 
                                 (data[6 /* X20 */] <-0.29185835f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.43448064f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6963662f ? 
                         (data[6 /* X20 */] <-0.31689584f ? 
                             (data[3 /* X17 */] <-0.19360131f ? 
                                0.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23664542f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[11 /* X34 */] <-0.261543f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.64453125f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.26864937f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.21874747f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82744604f ? 
             (data[10 /* X28 */] <-0.25926483f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.083329834f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.12351206f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.003965401f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.022680992f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38671875f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2732596f ? 
                1.0f : 
                 (data[3 /* X17 */] <0.11916716f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.53485674f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.056640625f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5428098f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.15060589f ? 
                     (data[5 /* X19 */] <0.5583646f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.240343f ? 
                 (data[8 /* X23 */] <0.09770275f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.5130282f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31255922f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.14342432f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24879101f ? 
                 (data[8 /* X23 */] <0.11940975f ? 
                     (data[3 /* X17 */] <-0.21531452f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20876047f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_13_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[1 /* X12 */] <-0.3871738f ? 
             (data[0 /* X5 */] <0.11065399f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.08984375f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.1015625f ? 
             (data[2 /* X15 */] <0.12796707f ? 
                 (data[6 /* X20 */] <-0.6006599f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.20579074f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2624645f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.25141796f ? 
                             (data[3 /* X17 */] <-0.579916f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                     (data[9 /* X27 */] <0.14333746f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31029955f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1922744f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.330679f ? 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16724664f ? 
                                         (data[2 /* X15 */] <0.14083834f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27579f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.018095156f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21410304f ? 
                 (data[6 /* X20 */] <-0.46515504f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.25926483f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.26922813f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.19140625f ? 
             (data[5 /* X19 */] <0.22527583f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3379468f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15102004f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.54545623f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.221701f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15059014f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26054206f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (data[9 /* X27 */] <-0.1967015f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22172979f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6015625f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.046875577f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X5 */] <0.11653712f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.16796875f ? 
            0.0f : 
             (data[5 /* X19 */] <0.07938185f ? 
                 (data[6 /* X20 */] <-5.668693E-4f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13221404f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15102004f ? 
                     (data[6 /* X20 */] <0.04298827f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.68269295f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.178524f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.05793012f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2091144f ? 
                     (data[10 /* X28 */] <-0.054813776f ? 
                         (data[6 /* X20 */] <-0.17049228f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.39257812f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6057444f ? 
                 (data[6 /* X20 */] <-0.05864039f ? 
                     (data[12 /* X35 */] <0.703127f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[1 /* X12 */] <-0.59363157f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27269685f ? 
                 (data[2 /* X15 */] <0.08068611f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27528235f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.099434376f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1359916f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.09225811f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_14_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[10 /* X28 */] <-0.104329266f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.03515625f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15913531f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22556725f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16214168f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.460225f ? 
                                1.0f : 
                                 (data[12 /* X35 */] <-0.395452f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23197275f ? 
                 (data[6 /* X20 */] <-0.34416854f ? 
                     (data[0 /* X5 */] <0.10480941f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.10957459f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0675259f ? 
                        1.0f : 
                        0.0f)))) : 
        0.027027028f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97906137f ? 
             (data[12 /* X35 */] <-0.796875f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0696848f ? 
                     (data[6 /* X20 */] <-0.16994798f ? 
                         (data[1 /* X12 */] <-0.21889655f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.47483397f ? 
                     (data[9 /* X27 */] <0.20006526f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20312665f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48346755f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.04830823f ? 
                 (data[2 /* X15 */] <0.12251158f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.76021683f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.30823514f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12000532f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07202503f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16798916f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.66609377f ? 
                 (data[10 /* X28 */] <-0.16985749f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.050407622f ? 
         (data[4 /* X18 */] <-0.7080064f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[1 /* X12 */] <-0.405557f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.31395647f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.46041858f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.028469892f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0047550476f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4719931f ? 
                             (data[10 /* X28 */] <-0.14952187f ? 
                                 (data[1 /* X12 */] <-0.35731474f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (data[10 /* X28 */] <-0.14952187f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25346008f ? 
             (data[9 /* X27 */] <-0.04356345f ? 
                 (data[6 /* X20 */] <-0.092516616f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.059878152f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48346755f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13445383f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28359511f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_15_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17024717f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17951752f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18943512f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.47483397f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53551376f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.25575182f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4140014f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[6 /* X20 */] <-0.259478f ? 
             (data[10 /* X28 */] <-0.10912109f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.19060516f ? 
                 (data[2 /* X15 */] <0.16433704f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17024717f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17951752f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.18252301f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.43369856f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19990067f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4134586f ? 
                        1.0f : 
                        0.0f)))) : 
        0.009259259f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
        0.012987013f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.009112051f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19202489f ? 
                 (data[7 /* X21 */] <0.11903812f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.006293658f ? 
                         (data[10 /* X28 */] <0.37964472f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.7619088f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <0.08574633f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[2 /* X15 */] <0.09477948f ? 
             (data[8 /* X23 */] <0.11901601f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1485985f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.10079467f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23557852f ? 
                     (data[11 /* X34 */] <-0.50432044f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.5199318f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36712494f ? 
                         (data[11 /* X34 */] <-0.42307812f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[4 /* X18 */] <-0.5974585f ? 
                         (data[8 /* X23 */] <0.21261111f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.50103754f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.57186776f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27286264f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.279515f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_16_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47675788f ? 
             (data[2 /* X15 */] <0.0915971f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.38255537f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.14426112f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.32421875f ? 
                 (data[5 /* X19 */] <0.21097249f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.31127697f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.53774697f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.18310131f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.11766748f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026579723f ? 
            0.0f : 
             (data[2 /* X15 */] <0.19434227f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.01967375f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16442412f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.16977692f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19898474f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.21875f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.40882462f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2939318f ? 
             (data[2 /* X15 */] <0.12342083f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16186006f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13520122f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.8876016f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1660382f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14552416f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0054063294f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[5 /* X19 */] <0.1423165f ? 
             (data[3 /* X17 */] <-0.47812155f ? 
                 (data[10 /* X28 */] <-0.010090107f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15450278f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.20284075f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                 (data[2 /* X15 */] <0.12009064f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32322297f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.1554296f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.81666625f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[1 /* X12 */] <-0.5328255f ? 
            1.0f : 
             (data[2 /* X15 */] <0.083413854f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.11927065f ? 
                     (data[3 /* X17 */] <-0.012236361f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[2 /* X15 */] <0.15342605f ? 
             (data[10 /* X28 */] <0.08574633f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.4338389f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_17_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30981693f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47777858f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.25115186f ? 
                     (data[2 /* X15 */] <0.13633062f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.05322269f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09314835f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1775407f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.111543655f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2624645f ? 
                     (data[3 /* X17 */] <-0.28698918f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[8 /* X23 */] <0.09012862f ? 
            1.0f : 
             (data[7 /* X21 */] <0.0853444f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.024327675f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.31755152f ? 
             (data[8 /* X23 */] <0.12825997f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15350749f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.09078242f ? 
                     (data[8 /* X23 */] <0.22381401f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[10 /* X28 */] <-0.24648665f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24071398f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15842693f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055086922f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06476584f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.007869706f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.047411755f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17297491f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01024579f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.024877075f ? 
                     (data[1 /* X12 */] <-0.5243409f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.062499374f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.016744096f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.114294186f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1376431f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[2 /* X15 */] <0.09883048f ? 
             (data[6 /* X20 */] <-0.02476417f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17227428f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.44515166f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28859088f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44034114f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_18_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.051623736f ? 
            1.0f : 
             (data[2 /* X15 */] <0.0934156f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.08565857f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51420313f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.45502248f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[6 /* X20 */] <-0.31755152f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3974726f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19585644f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09179746f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.7945484f ? 
                     (data[0 /* X5 */] <0.114861116f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.96475804f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20600371f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.31997123f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.31755152f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3974726f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20914464f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.7945484f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.26961616f ? 
             (data[2 /* X15 */] <0.12433007f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11558017f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.006692321f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.1967015f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.23023379f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12185696f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.22159375f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.085257426f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17692508f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.3540058f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X20 */] <-0.05081874f ? 
                     (data[12 /* X35 */] <0.088385f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2324899f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.13977748f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[4 /* X18 */] <-0.10707936f ? 
             (data[2 /* X15 */] <0.08171213f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.40114868f ? 
                 (data[6 /* X20 */] <-0.03928255f ? 
                     (data[5 /* X19 */] <0.24524003f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28496128f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24669823f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.040502246f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17043944f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.17864984f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2292287f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_12_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_19_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08143109f ? 
         (data[11 /* X34 */] <-0.5366596f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X19 */] <0.24816115f ? 
             (data[3 /* X17 */] <-0.37658247f ? 
                 (data[12 /* X35 */] <0.0078125f ? 
                     (data[12 /* X35 */] <-0.77102345f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.39453125f ? 
                 (data[10 /* X28 */] <-0.24648665f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.26549378f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.12654513f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21410304f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1772812f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07335093f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.18446636f ? 
                     (data[5 /* X19 */] <0.12515251f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.39453125f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.030155024f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8002697f ? 
                         (data[11 /* X34 */] <0.28076875f ? 
                             (data[1 /* X12 */] <-0.22399989f ? 
                                 (data[5 /* X19 */] <0.24115695f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (data[0 /* X5 */] <0.12438875f ? 
                         (data[5 /* X19 */] <0.21669383f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)) : 
         (data[5 /* X19 */] <-0.03790546f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (data[11 /* X34 */] <-0.78726006f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023600962f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.83413315f ? 
                     (data[5 /* X19 */] <-0.012159463f ? 
                         (data[5 /* X19 */] <-0.02352299f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[0 /* X5 */] <0.07675543f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16796875f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.07938185f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14617804f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2987231f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[5 /* X19 */] <0.32682946f ? 
             (data[6 /* X20 */] <-0.06347985f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16310908f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2842563f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.017628074f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08283769f ? 
                     (data[5 /* X19 */] <0.14803784f ? 
                         (data[11 /* X34 */] <-0.62222284f ? 
                            0.0f : 
                            1.0f) : 
                         (data[12 /* X35 */] <-0.6194481f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.9083331f ? 
                         (data[10 /* X28 */] <0.06434316f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17748407f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1899646f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.06640625f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.38603383f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.208817f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[10 /* X28 */] <0.042619932f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1743599f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.53937215f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3125f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.18930581f ? 
                     (data[10 /* X28 */] <0.22630644f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_20_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[9 /* X27 */] <0.085211724f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.211618f ? 
                     (data[10 /* X28 */] <-0.36149037f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21889655f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13695195f ? 
                                1.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7723703f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18025586f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.07062984f ? 
             (data[11 /* X34 */] <-0.06971347f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35456866f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.10592654f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32757965f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[9 /* X27 */] <0.085211724f ? 
             (data[8 /* X23 */] <0.12363799f ? 
                 (data[11 /* X34 */] <-0.1995209f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15450278f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.31088072f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25081635f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.26343232f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20713915f ? 
                    1.0f : 
                    0.0f))) : 
        0.009259259f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[5 /* X19 */] <0.097976185f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.014806787f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.022680992f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.379809f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15888155f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12351143f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.105901256f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.33914185f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0421008f ? 
                     (data[1 /* X12 */] <-0.09413308f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.022733688f ? 
             (data[4 /* X18 */] <-0.5946239f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.09858749f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16753143f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.08318319f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.14392866f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0054063294f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.20934165f ? 
                     (data[8 /* X23 */] <0.16742182f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[1 /* X12 */] <-0.3885879f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.207063f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.17092317f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30099717f ? 
            1.0f : 
             (data[8 /* X23 */] <0.111505285f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1776782f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15936942f ? 
                 (data[11 /* X34 */] <-0.15625176f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.197851f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_21_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (data[6 /* X20 */] <-0.20624393f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.038917776f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09314835f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17962003f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32935932f ? 
                             (data[5 /* X19 */] <0.05402866f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27124175f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14966393f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16782725f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.014828464f ? 
                         (data[0 /* X5 */] <0.086106755f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (data[8 /* X23 */] <0.08290678f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053800933f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08208153f ? 
                     (data[11 /* X34 */] <-0.42307812f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.21669383f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.64922655f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.010741866f ? 
                                         (data[7 /* X21 */] <0.096668266f ? 
                                             (data[8 /* X23 */] <0.13966665f ? 
                                                1.0f : 
                                                0.0f) : 
                                            1.0f) : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_12_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (data[6 /* X20 */] <-0.43490842f ? 
             (data[5 /* X19 */] <0.03075053f ? 
                 (data[6 /* X20 */] <-0.5078639f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23101844f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09786058f ? 
                     (data[5 /* X19 */] <0.14803784f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.13015868f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.13174324f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.23307261f ? 
                    1.0f : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.23038279f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.11551019f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.18268985f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.16454595f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[2 /* X15 */] <0.13478644f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.1411475f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.17977446f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.098575674f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[8 /* X23 */] <0.10023921f ? 
             (data[6 /* X20 */] <0.18333262f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.4252916f ? 
                 (data[0 /* X5 */] <0.11649857f ? 
                     (data[11 /* X34 */] <-0.79807734f ? 
                         (data[4 /* X18 */] <-0.10089712f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023600962f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.27521276f ? 
                             (data[3 /* X17 */] <0.0743705f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061060123f ? 
             (data[6 /* X20 */] <-0.26784363f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27957645f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.09314835f ? 
                     (data[9 /* X27 */] <0.107724324f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.29132587f ? 
                             (data[10 /* X28 */] <-0.26282236f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[11 /* X34 */] <-0.25000155f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10991392f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1582043f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)) : 
                     (data[1 /* X12 */] <-0.3885879f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17891501f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.5362115f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))))) : 
            0.0f) : 
        0.02631579f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.04605711f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15842693f ? 
             (data[6 /* X20 */] <-0.021375237f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06051799f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25971183f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07306462f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3157538f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053800933f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16186006f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.7331736f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_12_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_22_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.013671875f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14279917f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.16526116f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18256824f ? 
                         (data[8 /* X23 */] <0.11889943f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.15118185f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
            0.0f) : 
         (data[8 /* X23 */] <0.06701872f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.4602029f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.08802878f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.09078242f ? 
                             (data[10 /* X28 */] <-0.011707345f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2265625f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.26189554f ? 
                 (data[7 /* X21 */] <0.08975876f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26287517f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12858081f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3880074f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X5 */] <0.18371123f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0077816746f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.25283483f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.07306462f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.52403945f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20299834f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11328125f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5399491f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.1995209f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.405557f ? 
                 (data[9 /* X27 */] <0.15133952f ? 
                     (data[3 /* X17 */] <-0.35866383f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.44103387f ? 
             (data[1 /* X12 */] <-0.51868457f ? 
                 (data[2 /* X15 */] <0.08068611f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <-0.05793012f ? 
                     (data[6 /* X20 */] <0.00865835f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.050561633f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[8 /* X23 */] <0.09301736f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_23_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.19140625f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22174992f ? 
                 (data[11 /* X34 */] <-0.7675974f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.22576708f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25883093f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2871875f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.2457764f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24879101f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25899023f ? 
                     (data[7 /* X21 */] <0.120659314f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.18182f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16639131f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.54120475f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[12 /* X35 */] <-0.7988281f ? 
             (data[7 /* X21 */] <0.10668049f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.2765366f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25883093f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.39866582f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.16979255f ? 
                 (data[5 /* X19 */] <0.24988875f ? 
                     (data[8 /* X23 */] <0.15714735f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07296814f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.053578295f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20798914f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37630913f ? 
                             (data[12 /* X35 */] <-0.509092f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[1 /* X12 */] <-0.67282087f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14160581f ? 
                 (data[5 /* X19 */] <0.23957916f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.6513353f ? 
                    0.0f : 
                    1.0f))) : 
         (data[5 /* X19 */] <-0.07509412f ? 
             (data[8 /* X23 */] <0.13692617f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.111425385f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.10473053f ? 
                     (data[8 /* X23 */] <0.18701439f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.484375f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1938085f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17420761f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.35768253f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[2 /* X15 */] <0.10250809f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.012319319f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.003701011f ? 
                             (data[10 /* X28 */] <-0.14209117f ? 
                                0.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15404099f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f))) : 
             (data[1 /* X12 */] <-0.4119191f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.79955274f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23992178f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (data[12 /* X35 */] <0.03515625f ? 
             (data[7 /* X21 */] <0.17216024f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3969064f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24669823f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.19525152f ? 
                     (data[11 /* X34 */] <-0.68269295f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_24_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[12 /* X35 */] <-0.1015625f ? 
             (data[1 /* X12 */] <-0.41686976f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.4603156f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.026628418f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21318759f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09303621f ? 
                                 (data[11 /* X34 */] <-0.26154f ? 
                                    0.0f : 
                                     (data[6 /* X20 */] <-0.39115715f ? 
                                         (data[10 /* X28 */] <-0.10592654f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f)) : 
                                0.0f))))) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.020000836f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24244636f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (data[12 /* X35 */] <-0.7988281f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.8200455f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.09065277f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[8 /* X23 */] <0.042175576f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.92613906f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.61538124f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13486189f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15021437f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (data[12 /* X35 */] <-0.08984375f ? 
            0.0f : 
             (data[8 /* X23 */] <0.09879484f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.60965216f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.004272591f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.11698787f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.10991392f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.14698523f ? 
                                 (data[3 /* X17 */] <-0.22009283f ? 
                                    0.0f : 
                                     (data[6 /* X20 */] <0.3078638f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)))))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05387706f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.5073718f ? 
        0.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.31054688f ? 
             (data[10 /* X28 */] <-0.13148293f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.12077089f ? 
                     (data[8 /* X23 */] <0.11498908f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.13458245f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[1 /* X12 */] <-0.46203238f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.42307812f ? 
                             (data[6 /* X20 */] <-0.060088627f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.10777049f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)))) : 
             (data[1 /* X12 */] <-0.40535814f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11558017f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (data[0 /* X5 */] <0.12760326f ? 
             (data[7 /* X21 */] <0.2230906f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48346755f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.050612547f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3452979f ? 
                     (data[8 /* X23 */] <0.11772938f ? 
                         (data[4 /* X18 */] <-0.10991392f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_25_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2358657f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.38770095f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.1440993f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.51041424f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04749251f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6823673f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1725203f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.42454422f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.19537388f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2358657f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.24969392f ? 
                     (data[11 /* X34 */] <-0.4519242f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09511055f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.62147087f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.52403945f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25253424f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[5 /* X19 */] <0.097976185f ? 
             (data[7 /* X21 */] <0.12507369f ? 
                 (data[4 /* X18 */] <0.014806787f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.09850597f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.18974069f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.66826993f ? 
                     (data[10 /* X28 */] <-0.1698175f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.17092317f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19174595f ? 
                                 (data[0 /* X5 */] <0.17054433f ? 
                                    0.0f : 
                                     (data[10 /* X28 */] <0.35398245f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14963728f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2292283f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[5 /* X19 */] <0.1466075f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.44797984f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.52403945f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.49519336f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10991392f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16041932f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06619263f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.33302748f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07023006f ? 
             (data[9 /* X27 */] <0.03300557f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.84058f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.16520184f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.56959194f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.0818655f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12677197f ? 
             (data[9 /* X27 */] <0.088692136f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18359375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_26_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.23099716f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.102165334f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35468134f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.31044865f ? 
                     (data[4 /* X18 */] <-0.087237425f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.33100972f ? 
                 (data[1 /* X12 */] <-0.41686976f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.07558651f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.31513178f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.3389129f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[4 /* X18 */] <-0.3706936f ? 
             (data[2 /* X15 */] <0.118556745f ? 
                 (data[10 /* X28 */] <-0.11231564f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[12 /* X35 */] <-0.16796875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                     (data[11 /* X34 */] <-0.26442462f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2547523f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20706473f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9225632f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1772812f ? 
             (data[6 /* X20 */] <-0.31755152f ? 
                 (data[7 /* X21 */] <0.11624495f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.51348877f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.35142773f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.32660857f ? 
                     (data[2 /* X15 */] <0.14978905f ? 
                         (data[10 /* X28 */] <-0.18259569f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24980648f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16559303f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.22099176f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47716454f ? 
             (data[1 /* X12 */] <-0.6742349f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07081517f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12727545f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[1 /* X12 */] <-0.27263215f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.1996682f ? 
                 (data[2 /* X15 */] <0.14797056f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.390625f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.13052556f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[6 /* X20 */] <-0.24979907f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.15065022f ? 
                 (data[1 /* X12 */] <-0.39990065f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.4112134f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.10462325f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12039077f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0906644f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[12 /* X35 */] <-0.1875f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.03639808f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12617719f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (data[1 /* X12 */] <-0.57100606f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2631837f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.67340106f ? 
                     (data[2 /* X15 */] <0.08432311f ? 
                         (data[9 /* X27 */] <-0.015720166f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.7115391f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31255922f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1702687f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_27_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.081967436f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19007896f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1328125f ? 
                     (data[5 /* X19 */] <0.14401138f ? 
                         (data[6 /* X20 */] <-0.23766622f ? 
                             (data[2 /* X15 */] <0.10227886f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11552556f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.122425064f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.045670897f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.26967347f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1687023f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[5 /* X19 */] <0.03218086f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.56850636f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23571311f ? 
             (data[12 /* X35 */] <-0.88671875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <-0.026161402f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[5 /* X19 */] <-0.1480411f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.9531251f ? 
                 (data[9 /* X27 */] <-0.022680992f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.1229662f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.35546875f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.24517897f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.081967436f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15252537f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0625f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15142898f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.38255537f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.51682794f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.112982616f ? 
                 (data[5 /* X19 */] <0.17180336f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.5243409f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X12 */] <-0.4621208f ? 
            1.0f : 
             (data[2 /* X15 */] <0.14304736f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12399465f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.107802555f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_28_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[9 /* X27 */] <0.09217254f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.32723042f ? 
                 (data[0 /* X5 */] <0.10831615f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09527561f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.066174366f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.064560935f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[9 /* X27 */] <0.09217254f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.32723042f ? 
                 (data[1 /* X12 */] <-0.37727514f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7099002f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09705533f ? 
                        1.0f : 
                        0.0f)))) : 
        0.009259259f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[5 /* X19 */] <0.097976185f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.013951511f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <0.17092317f ? 
             (data[6 /* X20 */] <0.009112051f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.06001946f ? 
                     (data[10 /* X28 */] <0.25186282f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3838407f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08654341f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17354223f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[5 /* X19 */] <0.2152635f ? 
             (data[2 /* X15 */] <0.095234096f ? 
                 (data[5 /* X19 */] <-0.18272638f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.09123021f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.08267738f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08041796f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.067591965f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19128916f ? 
                         (data[9 /* X27 */] <0.20352131f ? 
                             (data[11 /* X34 */] <-0.446155f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[2 /* X15 */] <0.13524106f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23557852f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12497321f ? 
            1.0f : 
             (data[0 /* X5 */] <0.12867518f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16335718f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.59134924f ? 
                         (data[6 /* X20 */] <-0.15117882f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[5 /* X19 */] <-0.059360456f ? 
             (data[12 /* X35 */] <0.0703125f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.51868457f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.40324643f ? 
             (data[0 /* X5 */] <0.11792966f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25575182f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2901974f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15913531f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_29_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[4 /* X18 */] <-0.5391673f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.085103184f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08984375f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19050649f ? 
             (data[0 /* X5 */] <0.04811699f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.5390625f ? 
                     (data[6 /* X20 */] <-0.30545285f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.4183927f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.25926483f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.23957916f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.20006526f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16951162f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[6 /* X20 */] <-0.46468717f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16396381f ? 
                 (data[3 /* X17 */] <-0.22058067f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4416661f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.30393207f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26071748f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10673781f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.088377275f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[3 /* X17 */] <-0.38852826f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.024573278f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07793812f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47716454f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[6 /* X20 */] <-0.28272772f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24798799f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2774192f ? 
                         (data[3 /* X17 */] <-0.5843216f ? 
                             (data[0 /* X5 */] <0.11673191f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.59751165f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24554273f ? 
             (data[2 /* X15 */] <0.12069308f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2282243f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.1772363f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <0.047411755f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.42676842f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_30_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (data[8 /* X23 */] <0.12499979f ? 
                 (data[11 /* X34 */] <-0.7331736f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17394927f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13867608f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[4 /* X18 */] <-0.30833322f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.140625f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19423206f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.42313296f ? 
             (data[0 /* X5 */] <0.09312025f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.62617576f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.008329299f ? 
                        1.0f : 
                        0.0f))) : 
             (data[12 /* X35 */] <-0.453125f ? 
                 (data[2 /* X15 */] <0.16797404f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25443062f ? 
             (data[7 /* X21 */] <0.034579195f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.359375f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23092206f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8136094f ? 
                                 (data[1 /* X12 */] <-0.41338423f ? 
                                     (data[10 /* X28 */] <-0.022220396f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[5 /* X19 */] <0.22445098f ? 
                                         (data[10 /* X28 */] <-0.14862826f ? 
                                            0.0f : 
                                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18596762f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f)) : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16949336f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[8 /* X23 */] <0.17202546f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (data[9 /* X27 */] <-0.18974069f ? 
            1.0f : 
             (data[8 /* X23 */] <0.11431578f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14959778f ? 
                     (data[0 /* X5 */] <0.11952866f ? 
                         (data[10 /* X28 */] <-0.13148293f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3221168f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X34 */] <-0.52403945f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023600962f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.116851f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.58920705f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.31252614f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.28966495f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1796795f ? 
             (data[5 /* X19 */] <0.14803784f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.229547f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18420155f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10592654f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.03125f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.1506546f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.3003484f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.029761054f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1858025f ? 
                                 (data[5 /* X19 */] <0.33450136f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27139488f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.12019414f ? 
                 (data[5 /* X19 */] <0.13659517f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3668788f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.12109375f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.3703134f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[9 /* X27 */] <-0.04356345f ? 
             (data[8 /* X23 */] <0.11754901f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X21 */] <0.14346687f ? 
             (data[0 /* X5 */] <0.20124497f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_31_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[12 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08574633f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24720445f ? 
                     (data[6 /* X20 */] <-0.39256313f ? 
                         (data[1 /* X12 */] <-0.10576901f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23197275f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.12584989f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.38288423f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[3 /* X17 */] <-0.6453624f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (data[12 /* X35 */] <-0.056640625f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
                 (data[8 /* X23 */] <0.025649898f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.39256313f ? 
                         (data[8 /* X23 */] <0.12796724f ? 
                             (data[4 /* X18 */] <-0.24268258f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2566561f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[9 /* X27 */] <0.18586823f ? 
                     (data[2 /* X15 */] <0.15003738f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.21195814f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.20312665f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.12584989f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.094581395f ? 
         (data[12 /* X35 */] <-0.25f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26271266f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.10182967f ? 
             (data[5 /* X19 */] <-0.10942211f ? 
                 (data[9 /* X27 */] <-0.18974069f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.063384496f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03330935f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16310908f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.30273438f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07717561f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22009477f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.16433704f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3486328f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[5 /* X19 */] <0.15838183f ? 
                 (data[3 /* X17 */] <-0.44228423f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25108507f ? 
                    1.0f : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.32392332f ? 
             (data[8 /* X23 */] <0.12537123f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14630592f ? 
         (data[5 /* X19 */] <0.11943118f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047411755f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.62605137f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.09267049f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.23601651f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08298559f ? 
             (data[1 /* X12 */] <-0.52999735f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23688857f ? 
                    0.0f : 
                    1.0f)) : 
             (data[10 /* X28 */] <0.40200657f ? 
                 (data[1 /* X12 */] <-0.32071134f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_32_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08143109f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-5.064631E-4f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.046875f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.38628367f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.067591965f ? 
                 (data[5 /* X19 */] <0.1623661f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.078125f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X35 */] <-0.5234375f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.124827094f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29965314f ? 
                 (data[3 /* X17 */] <-0.4667856f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.4925912f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.3046875f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17888503f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12839451f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.021946386f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[3 /* X17 */] <-0.1919538f ? 
                             (data[3 /* X17 */] <-0.555433f ? 
                                1.0f : 
                                 (data[2 /* X15 */] <0.24943563f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21410304f ? 
         (data[10 /* X28 */] <-0.37267128f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.31755152f ? 
                 (data[4 /* X18 */] <-0.55777466f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.07672803f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.92613906f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.18268985f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25921977f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    1.0f))) : 
         (data[8 /* X23 */] <0.15743622f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04842468f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.1423165f ? 
                     (data[8 /* X23 */] <0.08594976f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.043152403f ? 
                 (data[11 /* X34 */] <-0.94230783f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.10261378f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.65384686f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.08769124f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[8 /* X23 */] <0.15599185f ? 
            1.0f : 
             (data[9 /* X27 */] <0.10261378f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16310908f ? 
         (data[10 /* X28 */] <-0.13787203f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44140625f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <0.17092317f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40144354f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.25264448f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.08954515f ? 
                             (data[3 /* X17 */] <0.04749251f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
         (data[4 /* X18 */] <-0.36927631f ? 
             (data[9 /* X27 */] <0.23138896f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4158666f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5914411f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.14357768f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25346008f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.084123686f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.13052556f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.024877075f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <0.014248365f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28012183f ? 
                     (data[3 /* X17 */] <-0.28173947f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.35593987f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_33_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.056640625f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18491523f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8288764f ? 
                     (data[6 /* X20 */] <-0.3248107f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13832593f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.1066483f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.28111672f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14922822f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.90658855f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5828591f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0678604f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.34375f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25102183f ? 
                     (data[3 /* X17 */] <-0.3101109f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19854848f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.520263f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1702687f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.32421875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24556161f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25883093f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.61673343f ? 
                                0.0f : 
                                 (data[12 /* X35 */] <-0.74658203f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (data[11 /* X34 */] <-0.76021683f ? 
             (data[7 /* X21 */] <0.15406588f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.085103184f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.22957009f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.52624273f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12818925f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[9 /* X27 */] <-0.033122223f ? 
             (data[1 /* X12 */] <-0.49605906f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.12507369f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03330935f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.12248249f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
        0.04347826f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
             (data[12 /* X35 */] <-0.05859375f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5256458f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5292969f ? 
                        0.0f : 
                         (data[3 /* X17 */] <0.12601171f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[1 /* X12 */] <-0.39424425f ? 
                     (data[1 /* X12 */] <-0.53070396f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.44928592f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[8 /* X23 */] <0.1201715f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.25567627f ? 
                             (data[8 /* X23 */] <0.11824711f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02363043f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.28605917f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15102004f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.38583967f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X5 */] <0.13061091f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19717498f ? 
             (data[2 /* X15 */] <0.07159362f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13403231f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22667913f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X27 */] <-0.3689818f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_34_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (data[0 /* X5 */] <0.13081779f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.09765625f ? 
                 (data[9 /* X27 */] <0.11653542f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13426617f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.1791828f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.15135708f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15483636f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.18268985f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26308882f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[6 /* X20 */] <-0.19172555f ? 
             (data[4 /* X18 */] <-0.38203183f ? 
                 (data[6 /* X20 */] <-0.37687394f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.0770301f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47987512f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.53125f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[12 /* X35 */] <-0.3203125f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.041519623f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[6 /* X20 */] <-0.46468717f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.77734375f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17052841f ? 
                    0.0f : 
                    1.0f))) : 
         (data[6 /* X20 */] <-0.24415383f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28911638f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.039049882f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.030069124f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0077816746f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15079212f ? 
                 (data[2 /* X15 */] <0.13882491f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.254502f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.64729947f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28911638f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.49950594f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[6 /* X20 */] <-0.2594886f ? 
            0.0f : 
             (data[7 /* X21 */] <0.15597424f ? 
                 (data[12 /* X35 */] <-0.1328125f ? 
                     (data[9 /* X27 */] <0.33094424f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3055059f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12839451f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046875f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.38900968f ? 
             (data[8 /* X23 */] <0.06528548f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.03660263f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07957355f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.1539396f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (data[9 /* X27 */] <-0.34809935f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_35_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[10 /* X28 */] <-0.107523814f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.09765625f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14221472f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                         (data[6 /* X20 */] <-0.40666562f ? 
                             (data[1 /* X12 */] <0.09955318f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.14714551f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.19662175f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.37786672f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (data[0 /* X5 */] <0.08143109f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.10399457f ? 
                     (data[4 /* X18 */] <-0.13259041f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X5 */] <0.10115655f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.096122675f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24124882f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <-0.1906998f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[0 /* X5 */] <0.09078242f ? 
             (data[1 /* X12 */] <-0.2545765f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.6875f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0025401188f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.92327833f ? 
                 (data[8 /* X23 */] <0.0242654f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.25926483f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17736508f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[8 /* X23 */] <0.106305555f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[0 /* X5 */] <0.089613505f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.08736014f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1796875f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.13172646f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.31081268f ? 
             (data[0 /* X5 */] <0.13052556f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16292483f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20968235f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.19495077f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[10 /* X28 */] <-0.107523814f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.09765625f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5428098f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.1147735f ? 
                         (data[0 /* X5 */] <0.1782626f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.39370435f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21030012f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.41604656f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X35 */] <-0.0546875f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31255922f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X12 */] <-0.40414292f ? 
             (data[0 /* X5 */] <0.12760326f ? 
                 (data[8 /* X23 */] <0.16292483f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11474519f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11558305f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.18834625f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_36_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[10 /* X28 */] <-0.102731995f ? 
             (data[10 /* X28 */] <-0.35828033f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.222529f ? 
                     (data[5 /* X19 */] <0.14803784f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.125f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16951162f ? 
                                1.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17008889f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1941232f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12617846f ? 
                                 (data[11 /* X34 */] <-0.21538626f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.078142f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.05f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.10777141f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.40847927f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2449264f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.56850636f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.46540076f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25238502f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2852672f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.10877421f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.18161277f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
        0.013513514f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48798183f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_12_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07238379f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1493675f ? 
                 (data[2 /* X15 */] <0.0988711f ? 
                     (data[0 /* X5 */] <0.08748573f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.28703538f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.015625f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14184378f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.18186636f ? 
                                0.0f : 
                                 (data[2 /* X15 */] <0.16246064f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15264599f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
                     (data[1 /* X12 */] <-0.53552055f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X21 */] <0.10888767f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27199423f ? 
                 (data[2 /* X15 */] <0.08614161f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.111600585f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_37_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[10 /* X28 */] <-0.14106657f ? 
                 (data[5 /* X19 */] <0.29107115f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.058621485f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.063384496f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8174337f ? 
                     (data[10 /* X28 */] <-0.35672352f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.00346854f ? 
                             (data[6 /* X20 */] <-0.3993384f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15724804f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[4 /* X18 */] <0.1718415f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[7 /* X21 */] <0.09012662f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.19440942f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13741788f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.33870175f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11341562f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18230972f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.2412873f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <0.73066086f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23616853f ? 
             (data[0 /* X5 */] <0.086106755f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.07223345f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13366455f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.3672416f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.22186677f ? 
                     (data[4 /* X18 */] <-0.14392866f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                 (data[10 /* X28 */] <-0.14761567f ? 
                     (data[4 /* X18 */] <-0.5180908f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0025373925f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (data[11 /* X34 */] <-0.5961547f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.22950098f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24435098f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.2606707f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13366455f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.3672416f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.22186677f ? 
                     (data[4 /* X18 */] <-0.14392866f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_38_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[5 /* X19 */] <0.26818582f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27263215f ? 
                 (data[12 /* X35 */] <-0.171875f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11130271f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11328125f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19990067f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44818172f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.4726219f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4134586f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[5 /* X19 */] <0.24673082f ? 
            1.0f : 
             (data[5 /* X19 */] <0.3547754f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.4408797f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.22115546f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82744604f ? 
             (data[7 /* X21 */] <0.011771641f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <0.29119784f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[5 /* X19 */] <-0.015020129f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20703125f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09252413f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.1480411f ? 
             (data[11 /* X34 */] <-0.50240487f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.1617606f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.781195f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15127382f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5053129f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09375f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.8125004f ? 
                         (data[0 /* X5 */] <0.12576771f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[10 /* X28 */] <-0.07398106f ? 
                     (data[11 /* X34 */] <-0.50961643f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.05859375f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49464846f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20577402f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.027711637f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46909207f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.4915876f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.6162571f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.781195f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.390625f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4539261f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_39_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[10 /* X28 */] <-0.33593398f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.47241423f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.00346854f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.16252938f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07231964f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[10 /* X28 */] <-0.28801578f ? 
            1.0f : 
             (data[2 /* X15 */] <0.0879601f ? 
                 (data[12 /* X35 */] <-0.12140344f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.14493498f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15245816f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.34220836f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[10 /* X28 */] <-0.33593398f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14536366f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3883993f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.28365117f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.84091f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.39903554f ? 
                     (data[7 /* X21 */] <0.06768693f ? 
                         (data[6 /* X20 */] <-0.1587317f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
        0.009259259f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[2 /* X15 */] <0.12342083f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28738102f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.16796875f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24707873f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.61778927f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.76201975f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29679248f ? 
                     (data[6 /* X20 */] <0.052667193f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23396136f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16753143f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.1047906f ? 
                             (data[2 /* X15 */] <0.18324943f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3659624f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0286618f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08283769f ? 
                 (data[11 /* X34 */] <-0.23557852f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14728859f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.37419128f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.09852452f ? 
             (data[2 /* X15 */] <0.12342083f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13825953f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28221104f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.066174366f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.11786051f ? 
                     (data[5 /* X19 */] <0.13659517f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
             (data[2 /* X15 */] <0.1470613f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4364609f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_40_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.046948075f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.17578125f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5335048f ? 
                     (data[8 /* X23 */] <0.10168358f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.31997123f ? 
             (data[4 /* X18 */] <-0.5180908f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.09779591f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049084604f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.019207953f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.39377302f ? 
             (data[12 /* X35 */] <-0.640625f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.047878794f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.4398442f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.92327833f ? 
                 (data[10 /* X28 */] <-0.25933036f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17982584f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0033164634f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.046219807f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[6 /* X20 */] <0.05387706f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.15519276f ? 
                 (data[6 /* X20 */] <0.24464929f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.006692321f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.30041155f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.113709845f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15857954f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08162783f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16880457f ? 
                 (data[6 /* X20 */] <-0.34418595f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.084514f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.5497962f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[6 /* X20 */] <-0.37178066f ? 
                     (data[12 /* X35 */] <-0.58055955f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7087284f ? 
                 (data[4 /* X18 */] <-0.29922366f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17332427f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.44103387f ? 
             (data[2 /* X15 */] <0.08159536f ? 
                 (data[10 /* X28 */] <-0.112792954f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.021484375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_41_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[6 /* X20 */] <-0.31997123f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28163022f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.56610584f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22707525f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14221472f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1256797f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.1953825f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.2703668f ? 
             (data[10 /* X28 */] <-0.107787706f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[6 /* X20 */] <-0.31997123f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28163022f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.56610584f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12273814f ? 
                 (data[1 /* X12 */] <-0.3806712f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
            0.0f : 
             (data[10 /* X28 */] <0.006953226f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13130842f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.058716517f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1890868f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.36544847f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2700178f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.14420259f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[11 /* X34 */] <-0.2842563f ? 
             (data[9 /* X27 */] <0.18614362f ? 
                 (data[4 /* X18 */] <-0.31400236f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19169505f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4591316f ? 
                         (data[10 /* X28 */] <-0.13127147f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.80444473f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12474874f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.14671181f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11289999f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19627105f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11377544f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2631837f ? 
             (data[2 /* X15 */] <0.08159536f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.5922175f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_42_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[9 /* X27 */] <0.08347152f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.26081884f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5173454f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.2765366f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
                 (data[12 /* X35 */] <-0.0859375f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24574064f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.083564706f ? 
                 (data[8 /* X23 */] <0.15021437f ? 
                     (data[11 /* X34 */] <-0.3f ? 
                        0.0f : 
                        1.0f) : 
                     (data[0 /* X5 */] <0.06506627f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
         (data[10 /* X28 */] <-0.35829583f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
                 (data[6 /* X20 */] <-0.31513178f ? 
                     (data[10 /* X28 */] <-0.24274305f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.040361285f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.390625f ? 
                         (data[11 /* X34 */] <0.27429873f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16995412f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <0.10786177f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                    1.0f))) : 
         (data[6 /* X20 */] <-0.3393291f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (data[9 /* X27 */] <-0.1967015f ? 
             (data[2 /* X15 */] <0.12721676f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.026050162f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.13685909f ? 
                     (data[10 /* X28 */] <-0.12827176f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.016295115f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (data[10 /* X28 */] <-0.102731995f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                 (data[12 /* X35 */] <0.265625f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18175234f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.31997123f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                     (data[5 /* X19 */] <0.12515251f ? 
                         (data[9 /* X27 */] <-0.19781867f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33912256f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15745187f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))) : 
         (data[3 /* X17 */] <-0.5064928f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.124080904f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.379809f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14536366f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.24279004f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05987266f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.49003184f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28221104f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <-0.053800933f ? 
             (data[11 /* X34 */] <-0.7439909f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46909207f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.16789736f ? 
                 (data[10 /* X28 */] <0.41159022f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X19 */] <-0.19524209f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_43_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (data[0 /* X5 */] <0.082600005f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.379809f ? 
                 (data[12 /* X35 */] <-0.4453125f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.37161875f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1941232f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22670616f ? 
             (data[6 /* X20 */] <-0.5304878f ? 
                 (data[5 /* X19 */] <0.031043978f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.3990392f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.20424756f ? 
                     (data[11 /* X34 */] <-0.23557852f ? 
                        0.0f : 
                        1.0f) : 
                     (data[8 /* X23 */] <0.080884665f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7482127f ? 
                            0.0f : 
                             (data[12 /* X35 */] <-0.5f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (data[6 /* X20 */] <-0.31755152f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47501767f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.234375f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14739642f ? 
                     (data[1 /* X12 */] <-0.37025774f ? 
                         (data[3 /* X17 */] <-0.63679254f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[5 /* X19 */] <0.6171871f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.11620634f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.8474215f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12041964f ? 
            0.0f : 
             (data[2 /* X15 */] <0.119783826f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X19 */] <-0.08653678f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.011531781f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.04692721f ? 
                     (data[6 /* X20 */] <0.14625685f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.50961643f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061060123f ? 
             (data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45021838f ? 
                     (data[1 /* X12 */] <-0.47908992f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X35 */] <-0.109375f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.012178071f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.028603507f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.02631579f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3539236f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26783556f ? 
             (data[2 /* X15 */] <0.0970526f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.17510316f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_44_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (data[8 /* X23 */] <0.10168358f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06178722f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.069002554f ? 
                 (data[5 /* X19 */] <0.10441248f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.22370222f ? 
                         (data[6 /* X20 */] <-0.34416854f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18347995f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.30545285f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1922744f ? 
                                1.0f : 
                                 (data[4 /* X18 */] <-0.031654507f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (data[7 /* X21 */] <0.14420259f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026579723f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.014881928f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (data[11 /* X34 */] <-0.023878703f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20006526f ? 
                        1.0f : 
                        0.0f) : 
                     (data[5 /* X19 */] <0.10441248f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.12152004f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22133072f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0026958566f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1525168f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1765746f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[5 /* X19 */] <-0.067942455f ? 
             (data[0 /* X5 */] <0.10480941f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <0.07495117f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.06118762f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[1 /* X12 */] <-0.39565834f ? 
            0.0f : 
             (data[5 /* X19 */] <0.17092317f ? 
                 (data[2 /* X15 */] <0.10796359f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18928164f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.09711603f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.041884445f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.03768978f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                         (data[12 /* X35 */] <-0.35865062f ? 
                            0.0f : 
                            1.0f) : 
                         (data[10 /* X28 */] <-0.10493838f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14630592f ? 
         (data[1 /* X12 */] <-0.51868457f ? 
             (data[12 /* X35 */] <0.07783935f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11449726f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19909924f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_45_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.34053895f ? 
            1.0f : 
             (data[2 /* X15 */] <0.092244305f ? 
                 (data[1 /* X12 */] <-0.3619739f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27337188f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X28 */] <-0.14426112f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.45948452f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[2 /* X15 */] <0.1506983f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1875f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2025915f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04842468f ? 
                     (data[9 /* X27 */] <0.048485473f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.17265813f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13192825f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026579723f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16979255f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14079194f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21030012f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.29893494f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.2267063f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (data[6 /* X20 */] <-0.31997123f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.024182135f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.462703f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[6 /* X20 */] <0.057506654f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X27 */] <-0.17581904f ? 
            1.0f : 
             (data[9 /* X27 */] <0.0548669f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6171875f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.056496523f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.20963441f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14628735f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.1702687f ? 
                         (data[3 /* X17 */] <-0.4064469f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061060123f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                 (data[12 /* X35 */] <-0.6015625f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.51388985f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X18 */] <-0.016609393f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5074266f ? 
                        1.0f : 
                        0.0f))) : 
             (data[4 /* X18 */] <-0.29982954f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[1 /* X12 */] <-0.4635349f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08567082f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.6049388f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.12109375f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.023602128f ? 
                     (data[3 /* X17 */] <-0.03612791f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.49243042f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19470094f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19084181f ? 
                     (data[5 /* X19 */] <0.017086672f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.41320994f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42564622f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_12_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_46_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.063384496f ? 
             (data[10 /* X28 */] <-0.3612408f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.083329834f ? 
                     (data[6 /* X20 */] <-0.46999452f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27145967f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1676008f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.33114216f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17788632f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.18718834f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.520263f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.06965714f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15086573f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <-0.06051799f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.087237425f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.040966358f ? 
                 (data[6 /* X20 */] <-0.4603156f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.255262f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[11 /* X34 */] <-0.7674284f ? 
             (data[1 /* X12 */] <-0.31788316f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.057033014f ? 
             (data[9 /* X27 */] <-0.4264593f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.24140614f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.3093986f ? 
                 (data[11 /* X34 */] <-0.7331736f ? 
                     (data[2 /* X15 */] <0.10614509f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.33100972f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5804631f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.22476439f ? 
                            1.0f : 
                             (data[10 /* X28 */] <0.26793876f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[11 /* X34 */] <-0.2842563f ? 
             (data[10 /* X28 */] <0.03782811f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.030155024f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10991392f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.49936154f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.14212833f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[5 /* X19 */] <0.47854602f ? 
                             (data[10 /* X28 */] <-0.12971754f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4569898f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14005364f ? 
             (data[11 /* X34 */] <-0.8449522f ? 
                 (data[6 /* X20 */] <0.06718557f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13185668f ? 
            0.0f : 
             (data[10 /* X28 */] <0.14861508f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.3689818f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_47_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[4 /* X18 */] <-0.32959244f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19932292f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.067591965f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43189532f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.12804651f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.4183927f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3581744f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.044569682f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12515251f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.11247592f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23865028f ? 
             (data[4 /* X18 */] <-0.33100972f ? 
                 (data[9 /* X27 */] <-0.054775428f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.18446636f ? 
                     (data[7 /* X21 */] <0.14420259f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.22567739f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.32071134f ? 
                         (data[11 /* X34 */] <0.19006278f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[4 /* X18 */] <-0.14676322f ? 
             (data[5 /* X19 */] <0.019307865f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5550671f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.06920561f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.1252591f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18195786f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1660382f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.426884f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18246043f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.488765f ? 
                         (data[8 /* X23 */] <0.1432814f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.08961327f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.08733227f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2842563f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14803784f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.029110225f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.092516616f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.37727514f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16354743f ? 
             (data[9 /* X27 */] <0.20006526f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15948051f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22660407f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07306462f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16968423f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.28525886f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.17180288f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <0.16880457f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.12705782f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32536003f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.54696643f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.16418135f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.13286339f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.09852452f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_12_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_48_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (data[11 /* X34 */] <-0.38161185f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0078125f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24720445f ? 
                         (data[6 /* X20 */] <-0.38288423f ? 
                             (data[2 /* X15 */] <0.10178069f ? 
                                1.0f : 
                                0.0f) : 
                             (data[11 /* X34 */] <-0.22814162f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13804498f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.061464336f ? 
                 (data[0 /* X5 */] <0.10013375f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.18236583f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
             (data[12 /* X35 */] <-0.7734375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19007896f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11496736f ? 
                     (data[12 /* X35 */] <-0.84375f ? 
                         (data[6 /* X20 */] <-0.28609502f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2616948f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.092516616f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20070702f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0703125f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[11 /* X34 */] <-0.6664671f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.145137f ? 
                1.0f : 
                 (data[12 /* X35 */] <0.1875f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.14251506f ? 
                        0.0f : 
                        1.0f))) : 
             (data[9 /* X27 */] <-0.1967015f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.07284423f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.10212174f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45935583f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09671664f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.062346112f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21889655f ? 
                        0.0f : 
                        1.0f))) : 
             (data[10 /* X28 */] <-0.18898478f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[4 /* X18 */] <-0.5620265f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16176933f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.13787203f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.515625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0546875f ? 
             (data[9 /* X27 */] <0.14797072f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.09858749f ? 
                     (data[11 /* X34 */] <-0.23557852f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2774192f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.052667193f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07306462f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31925887f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.791735f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[9 /* X27 */] <-0.3689818f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_49_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2089979f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2714758f ? 
                 (data[6 /* X20 */] <-0.43611827f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <0.0026880847f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.22696744f ? 
                 (data[3 /* X17 */] <-0.4602029f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18096185f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.18950121f ? 
                         (data[1 /* X12 */] <-0.17465441f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.102165334f ? 
            0.0f : 
             (data[9 /* X27 */] <0.1757024f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.34074515f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15300772f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14677775f ? 
             (data[9 /* X27 */] <-0.054004684f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.1394289f ? 
                     (data[0 /* X5 */] <0.10948507f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.36813736f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2804763f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.17958066f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.56850636f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24737933f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.033400577f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.39872086f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
        0.009259259f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[7 /* X21 */] <0.11882f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06599235f ? 
                 (data[6 /* X20 */] <0.062346112f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.15884556f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.76021683f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22527583f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.462703f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.017628074f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.27390715f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11118188f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.083143495f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[5 /* X19 */] <0.20239049f ? 
             (data[4 /* X18 */] <-0.7136755f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.23197275f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.018790971f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19084181f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16763863f ? 
             (data[5 /* X19 */] <0.19952983f ? 
                 (data[9 /* X27 */] <0.10067191f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.604878f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.009137663f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.08204998f ? 
            1.0f : 
             (data[5 /* X19 */] <0.14803784f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.13686337f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4910131f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_50_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (data[1 /* X12 */] <-0.42111206f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.3581744f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8288764f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[7 /* X21 */] <0.073572755f ? 
             (data[9 /* X27 */] <0.2522714f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.4375f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15102004f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.054813776f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.14426112f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.39423203f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (data[6 /* X20 */] <-0.43490842f ? 
             (data[11 /* X34 */] <-0.102165334f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.19820493f ? 
                 (data[9 /* X27 */] <0.048400663f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04508724f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.090173006f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24157256f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X23 */] <0.12710448f ? 
             (data[6 /* X20 */] <0.011531781f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15974845f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.31060296f ? 
                        0.0f : 
                        1.0f))) : 
             (data[9 /* X27 */] <0.123496234f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48077032f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.15429811f ? 
                        0.0f : 
                         (data[4 /* X18 */] <0.00346854f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.052591067f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (data[12 /* X35 */] <-0.015625f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16177507f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.40054652f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2554003f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46109602f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3357756f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24352062f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.30393207f ? 
                 (data[9 /* X27 */] <-0.03660263f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                        0.0f : 
                         (data[5 /* X19 */] <-0.10370078f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.18540333f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.47241423f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_51_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (data[11 /* X34 */] <-0.379809f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51420313f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.12546593f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42826143f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[5 /* X19 */] <0.23957916f ? 
                     (data[3 /* X17 */] <-0.33477226f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25623915f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[11 /* X34 */] <-0.25529754f ? 
                         (data[1 /* X12 */] <-0.26414758f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047411755f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[7 /* X21 */] <0.15155987f ? 
             (data[10 /* X28 */] <-0.07717561f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.22128741f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.13308851f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24162324f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23911145f ? 
             (data[5 /* X19 */] <-0.0035774645f ? 
                 (data[11 /* X34 */] <-0.94230783f ? 
                     (data[0 /* X5 */] <0.118836395f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.07223345f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18944983f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2252302f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <0.1642867f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[7 /* X21 */] <0.1055769f ? 
             (data[7 /* X21 */] <0.08622012f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16248986f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.07091566f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[10 /* X28 */] <-0.10592654f ? 
                 (data[2 /* X15 */] <0.0851752f ? 
                     (data[11 /* X34 */] <-0.091348045f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22418997f ? 
                         (data[11 /* X34 */] <-0.50961643f ? 
                            1.0f : 
                            0.0f) : 
                         (data[8 /* X23 */] <0.14831764f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[6 /* X20 */] <-0.1815693f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.15625f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2665518f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.16205429f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2370006f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[12 /* X35 */] <-0.046875f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.1308723f ? 
                             (data[1 /* X12 */] <-0.3843104f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2732746f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12994109f ? 
             (data[2 /* X15 */] <0.083413854f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27086115f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.6995195f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
                 (data[9 /* X27 */] <-0.18974069f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21889655f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.084708534f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_52_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[6 /* X20 */] <-0.31997123f ? 
             (data[11 /* X34 */] <-0.102165334f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17443678f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.094750606f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.19061467f ? 
                    1.0f : 
                    0.0f))) : 
         (data[7 /* X21 */] <0.1309595f ? 
             (data[6 /* X20 */] <-0.23770042f ? 
                 (data[8 /* X23 */] <0.13172646f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[6 /* X20 */] <-0.5365371f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11200152f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.32959244f ? 
             (data[9 /* X27 */] <-0.054775428f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16752824f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.26094452f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.37496334f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.25096864f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.1054134f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[6 /* X20 */] <0.006692321f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.67140675f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <-0.17581904f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.028535763f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.083143495f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14790338f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.30842617f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.17620659f ? 
                     (data[9 /* X27 */] <0.068118885f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23548184f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.022733688f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.14392866f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17420761f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.012236361f ? 
                         (data[9 /* X27 */] <0.0051622894f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.062271275f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07023006f ? 
             (data[9 /* X27 */] <0.0071472228f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.39424425f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22214763f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.21740232f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[0 /* X5 */] <0.11591411f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16296297f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.075899184f ? 
                 (data[9 /* X27 */] <-0.12066941f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12761202f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.11377145f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.615443f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.42307812f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.11031275f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[4 /* X18 */] <-0.21195814f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10345154f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_53_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (data[6 /* X20 */] <-0.35626718f ? 
                 (data[0 /* X5 */] <0.09312025f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.02590837f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23915406f ? 
                         (data[11 /* X34 */] <-0.25000155f ? 
                             (data[6 /* X20 */] <-0.14376178f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.63043016f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.31513178f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10384177f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.11416073f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04508724f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16505913f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.1256601f ? 
         (data[11 /* X34 */] <-0.78726006f ? 
             (data[2 /* X15 */] <0.12160233f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05255335f ? 
             (data[11 /* X34 */] <-0.76201975f ? 
                 (data[0 /* X5 */] <0.1089078f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34256312f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14519662f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.28405577f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X21 */] <0.13610959f ? 
                 (data[6 /* X20 */] <-0.01508525f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2399935f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.077480115f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.30541158f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.5073718f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02716858f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08283769f ? 
                     (data[8 /* X23 */] <0.094470434f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5074266f ? 
                             (data[7 /* X21 */] <0.09618664f ? 
                                 (data[1 /* X12 */] <-0.22790487f ? 
                                     (data[3 /* X17 */] <-0.3856165f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17921738f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1305922f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17619845f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.13772066f ? 
                     (data[4 /* X18 */] <-0.16660514f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24640936f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26560345f ? 
                 (data[7 /* X21 */] <0.09123021f ? 
                     (data[4 /* X18 */] <-0.26864937f ? 
                         (data[0 /* X5 */] <0.12818773f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[8 /* X23 */] <0.24795303f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.17724952f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.047411755f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_54_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.102731995f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.77452374f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19717498f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.8404607f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32536003f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.20793018f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19050649f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30981693f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.05322269f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24879101f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1875f ? 
                     (data[9 /* X27 */] <0.03963896f ? 
                         (data[10 /* X28 */] <-0.19218856f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[11 /* X34 */] <0.028843125f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <-0.14800148f ? 
                     (data[8 /* X23 */] <0.15945834f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.62179124f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9225632f ? 
         (data[6 /* X20 */] <-0.31997123f ? 
             (data[7 /* X21 */] <0.15155987f ? 
                 (data[6 /* X20 */] <-0.60478103f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.030766562f ? 
                         (data[4 /* X18 */] <-0.36109707f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.714778f ? 
                 (data[8 /* X23 */] <0.0242654f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.19606242f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[6 /* X20 */] <0.027260026f ? 
             (data[5 /* X19 */] <-0.16495927f ? 
                 (data[11 /* X34 */] <-0.45913574f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47716454f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6093449f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.83413494f ? 
             (data[8 /* X23 */] <0.12074925f ? 
                1.0f : 
                 (data[12 /* X35 */] <0.3203125f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.5223633f ? 
                 (data[10 /* X28 */] <-0.03578767f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16233279f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[6 /* X20 */] <-0.16147892f ? 
             (data[5 /* X19 */] <-0.2010584f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.11653542f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.12948805f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.013951511f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.103978865f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.125f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.38668212f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.67340106f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17070767f ? 
             (data[9 /* X27 */] <0.099133365f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1632552f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21434575f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_55_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19533566f ? 
             (data[0 /* X5 */] <0.13461676f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16711327f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.07501562f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.015625f ? 
                     (data[9 /* X27 */] <0.1877842f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.25000155f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.33654922f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24237682f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.15915798f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.32617188f ? 
             (data[6 /* X20 */] <-0.47241423f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18434054f ? 
             (data[12 /* X35 */] <-0.6640625f ? 
                 (data[11 /* X34 */] <-0.50240487f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.110402495f ? 
                         (data[3 /* X17 */] <-0.35937226f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.058268227f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.71634257f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14187038f ? 
                 (data[6 /* X20 */] <-0.35868692f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2868442f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.022812366f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[2 /* X15 */] <0.12342083f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.35408834f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.021484375f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.76201975f ? 
                 (data[6 /* X20 */] <0.04298827f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13111293f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.13752589f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (data[2 /* X15 */] <0.0897786f ? 
             (data[3 /* X17 */] <-0.51118225f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.29699498f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43945312f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (data[9 /* X27 */] <0.06643711f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.1938085f ? 
                         (data[9 /* X27 */] <0.092750534f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01508525f ? 
                 (data[1 /* X12 */] <-0.37161875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[2 /* X15 */] <0.08204998f ? 
             (data[0 /* X5 */] <0.08435338f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19496779f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28980073f ? 
                    0.0f : 
                    1.0f))) : 
        0.9583333f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_56_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24219252f ? 
             (data[10 /* X28 */] <-0.25831252f ? 
                 (data[2 /* X15 */] <0.14615206f ? 
                     (data[4 /* X18 */] <-0.3026641f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.109375f ? 
                     (data[5 /* X19 */] <0.07938185f ? 
                         (data[6 /* X20 */] <-0.3248107f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.05859375f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1929677f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18246043f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.34179688f ? 
             (data[6 /* X20 */] <-0.48209316f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.12514004f ? 
             (data[12 /* X35 */] <-0.0546875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24779317f ? 
                     (data[6 /* X20 */] <-0.4603156f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17962003f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.037349146f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[2 /* X15 */] <0.17161104f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.15252537f ? 
                             (data[12 /* X35 */] <-0.5106085f ? 
                                0.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.122425064f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.22115546f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.1256601f ? 
         (data[9 /* X27 */] <-0.15493658f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.82331765f ? 
                 (data[6 /* X20 */] <0.08654341f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.16885822f ? 
             (data[1 /* X12 */] <-0.32071134f ? 
                 (data[0 /* X5 */] <0.1632552f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07202503f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.1779434f ? 
                    1.0f : 
                     (data[6 /* X20 */] <0.2568319f ? 
                         (data[12 /* X35 */] <0.099434376f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (data[3 /* X17 */] <-0.59160644f ? 
             (data[10 /* X28 */] <-0.24015328f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.484375f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07793812f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23557852f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10373052f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.582845f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.10714724f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.10091911f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.40272883f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.124353126f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.050047092f ? 
            0.0f : 
             (data[10 /* X28 */] <0.055344768f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20072436f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0054063294f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[9 /* X27 */] <-0.34809935f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_57_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[0 /* X5 */] <0.11795971f ? 
             (data[5 /* X19 */] <-0.012159463f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.13277782f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.092516616f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3221168f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.02960363f ? 
             (data[11 /* X34 */] <-0.379809f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.32224533f ? 
                     (data[10 /* X28 */] <-0.1528917f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
                     (data[0 /* X5 */] <0.14221472f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1411821f ? 
                            1.0f : 
                            0.0f) : 
                         (data[5 /* X19 */] <0.23863122f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17912914f ? 
                                1.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17643507f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.16662295f ? 
                 (data[3 /* X17 */] <-0.15558565f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.004326504f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24814259f ? 
             (data[5 /* X19 */] <-0.09225811f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.003701011f ? 
                     (data[4 /* X18 */] <-0.4524142f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.39256313f ? 
                     (data[5 /* X19 */] <0.24755292f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047411755f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.39990065f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14677775f ? 
            0.0f : 
             (data[0 /* X5 */] <0.122343145f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[0 /* X5 */] <0.092535794f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18678074f ? 
                 (data[11 /* X34 */] <-0.40865508f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29470056f ? 
                 (data[10 /* X28 */] <0.09213542f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
             (data[5 /* X19 */] <0.1938085f ? 
                 (data[11 /* X34 */] <-0.4158666f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.09314835f ? 
                     (data[8 /* X23 */] <0.13022809f ? 
                         (data[0 /* X5 */] <0.12280573f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14713962f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33928168f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39496824f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17161104f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.0874489f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.061060123f ? 
             (data[3 /* X17 */] <-0.4870809f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.112476565f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15008841f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14723405f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.11425435f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6057444f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_12_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06391795f ? 
             (data[5 /* X19 */] <-0.05220879f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.09196448f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2572464f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17197256f ? 
                     (data[11 /* X34 */] <-0.27884766f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.42111206f ? 
             (data[10 /* X28 */] <0.42756295f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24530049f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.088940874f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1490316f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_12_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_58_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.245733f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (data[6 /* X20 */] <-0.39256313f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.05220879f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.56594735f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.033650193f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (data[5 /* X19 */] <0.23671849f ? 
                 (data[6 /* X20 */] <-0.3006134f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.03928255f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0400264f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1579723f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06718557f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.20076774f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X20 */] <0.013951511f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1660382f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0018528608f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.11216702f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.26414758f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.14999697f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[1 /* X12 */] <-0.39424425f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23167679f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.40470833f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.07938185f ? 
                 (data[6 /* X20 */] <-0.107034996f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08767715f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24904507f ? 
                         (data[10 /* X28 */] <-0.14319336f ? 
                             (data[2 /* X15 */] <0.1374993f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19643418f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.045670897f ? 
         (data[1 /* X12 */] <-0.5130282f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13107726f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.35271373f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17804606f ? 
                 (data[2 /* X15 */] <0.08406947f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.20269045f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4052011f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_59_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[11 /* X34 */] <-0.25901598f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04523013f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.07938185f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X27 */] <0.12523644f ? 
             (data[3 /* X17 */] <-0.42137912f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3581744f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.12424197f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.15065022f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42739314f ? 
                     (data[1 /* X12 */] <-0.4132164f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X15 */] <0.14475167f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.052635547f ? 
                     (data[12 /* X35 */] <-0.296875f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20107809f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.24789502f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[6 /* X20 */] <-0.46661302f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.38065767f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.23957916f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3943771f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.100553535f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.70300704f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[9 /* X27 */] <-0.13927473f ? 
             (data[0 /* X5 */] <0.13403231f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.40414292f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13409938f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.23269553f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[1 /* X12 */] <-0.405557f ? 
                 (data[2 /* X15 */] <0.16269056f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5441078f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.00551267f ? 
                     (data[5 /* X19 */] <0.033611197f ? 
                         (data[6 /* X20 */] <-0.11404097f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45214644f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.5135701f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30673885f ? 
            1.0f : 
            0.0f) : 
         (data[1 /* X12 */] <-0.40496597f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4307575f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_60_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[7 /* X21 */] <0.06842266f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.34074515f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.379809f ? 
                     (data[10 /* X28 */] <-0.14620307f ? 
                         (data[12 /* X35 */] <-0.21875f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.22100374f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.16091737f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18025725f ? 
                     (data[12 /* X35 */] <-0.515625f ? 
                         (data[8 /* X23 */] <0.12548849f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.17067075f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[12 /* X35 */] <-0.118452266f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.25514776f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.46468717f ? 
            1.0f : 
             (data[5 /* X19 */] <0.19094783f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.3801201f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28481257f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1929677f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36016414f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0021406368f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.11514344f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.14569743f ? 
             (data[7 /* X21 */] <0.15008841f ? 
                 (data[11 /* X34 */] <-0.5745201f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[6 /* X20 */] <-0.2594886f ? 
             (data[2 /* X15 */] <0.13342257f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22994354f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (data[10 /* X28 */] <-0.14236787f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1912626f ? 
                         (data[6 /* X20 */] <-0.1840436f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[9 /* X27 */] <0.25575182f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5422131f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1776782f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44034114f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.14569743f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.122726455f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.07836755f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5233994f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_61_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.102731995f ? 
             (data[5 /* X19 */] <0.15375917f ? 
                 (data[4 /* X18 */] <-0.24597287f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.095234096f ? 
                         (data[8 /* X23 */] <0.0848439f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22994354f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.078125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.13808167f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3004822f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.10480941f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21713921f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.16796875f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01637339f ? 
                 (data[0 /* X5 */] <0.102411576f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.054720253f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <0.072661854f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (data[6 /* X20 */] <-0.47120437f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8288764f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1918122f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.11057461f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.62147087f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[4 /* X18 */] <-0.041884445f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.6894531f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12041964f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.15519276f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <0.080078125f ? 
            0.0f : 
             (data[8 /* X23 */] <0.12537123f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.07938185f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4519242f ? 
                        1.0f : 
                         (data[3 /* X17 */] <0.008388763f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061060123f ? 
             (data[6 /* X20 */] <-0.25172612f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25883093f ? 
                     (data[11 /* X34 */] <-0.25000155f ? 
                         (data[5 /* X19 */] <0.20072013f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7698681f ? 
                     (data[3 /* X17 */] <-0.4755654f ? 
                         (data[0 /* X5 */] <0.062728435f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1562417f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26154f ? 
                                1.0f : 
                                0.0f) : 
                             (data[2 /* X15 */] <0.13384138f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22727318f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[4 /* X18 */] <-0.3037531f ? 
                                    1.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17600185f ? 
                                        0.0f : 
                                        1.0f))))) : 
                    0.0f)) : 
            0.0f) : 
        0.02631579f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28221104f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3969064f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X23 */] <0.10919429f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_62_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.014881928f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.057485092f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.085161984f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19354545f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1875f ? 
                     (data[6 /* X20 */] <-0.4603156f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.16346328f ? 
                             (data[4 /* X18 */] <-0.11756594f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.86328125f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.06768693f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (data[10 /* X28 */] <-0.38704675f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
                 (data[4 /* X18 */] <-0.54076725f ? 
                     (data[0 /* X5 */] <0.10304297f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32879937f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7773844f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X21 */] <0.13831678f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.44095775f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28588057f ? 
                                0.0f : 
                                1.0f)))))) : 
         (data[9 /* X27 */] <0.0034220843f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28707403f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14842518f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.111425385f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <0.057368442f ? 
             (data[1 /* X12 */] <-0.37161875f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.21991734f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20673242f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.017628074f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.13169447f ? 
                     (data[6 /* X20 */] <0.02363043f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X34 */] <-0.79807734f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (data[10 /* X28 */] <-0.107523814f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5550671f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03330935f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.5073718f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.34375f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.088692136f ? 
                         (data[8 /* X23 */] <0.14198214f ? 
                             (data[5 /* X19 */] <-0.17307699f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25401163f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0546875f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17216024f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7175086f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28221104f ? 
             (data[1 /* X12 */] <-0.43076766f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.010775377f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4178115f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_63_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[6 /* X20 */] <-0.46515504f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6486544f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2750434f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.2643365f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26378196f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46015626f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.16315617f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[11 /* X34 */] <0.1997435f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[0 /* X5 */] <0.16208628f ? 
                    1.0f : 
                    0.0f))) : 
         (data[7 /* X21 */] <0.07062984f ? 
             (data[5 /* X19 */] <0.24243982f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18614362f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.05288242f ? 
                     (data[12 /* X35 */] <-0.16989899f ? 
                         (data[4 /* X18 */] <-0.34275782f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[6 /* X20 */] <-0.31392193f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25960383f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19990067f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23616774f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13830636f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.009259259f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[6 /* X20 */] <0.027260026f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.11471318f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.1967015f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.093164854f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.42483696f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.014641631f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.05342161f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[4 /* X18 */] <-0.1623533f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                 (data[9 /* X27 */] <0.088692136f ? 
                     (data[3 /* X17 */] <-0.06001946f ? 
                         (data[9 /* X27 */] <-0.24366018f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.59722376f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.49006733f ? 
                 (data[4 /* X18 */] <-0.08815311f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16354743f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07023006f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.3480171f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07306462f ? 
             (data[2 /* X15 */] <0.08159536f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.059438284f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33928168f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.44515166f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[0 /* X5 */] <0.11595726f ? 
                        0.0f : 
                        1.0f))) : 
             (data[5 /* X19 */] <-0.23529142f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.09359511f ? 
                     (data[4 /* X18 */] <-0.01057949f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_64_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[6 /* X20 */] <-0.31755152f ? 
             (data[0 /* X5 */] <0.09396999f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.46540076f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.41784495f ? 
                        1.0f : 
                        0.0f))) : 
             (data[10 /* X28 */] <-0.2624594f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.18446636f ? 
             (data[10 /* X28 */] <-0.17620659f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.1776638f ? 
                 (data[11 /* X34 */] <0.0024017578f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[6 /* X20 */] <-0.19414528f ? 
             (data[2 /* X15 */] <0.1597908f ? 
                 (data[8 /* X23 */] <0.10168358f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.45730093f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.4727378f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11934432f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[7 /* X21 */] <0.14567405f ? 
                     (data[10 /* X28 */] <-0.118704736f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.041884445f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9661884f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08775328f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20248613f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18372373f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0030627258f ? 
            0.0f : 
             (data[10 /* X28 */] <0.12727545f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.59375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.085257426f ? 
             (data[6 /* X20 */] <-0.19841823f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20713915f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0024528503f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.363672f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.02960363f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.119566284f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.07717561f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28859088f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5106212f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_65_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.009765625f ? 
             (data[6 /* X20 */] <-0.3248107f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4506548f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22878805f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.044404782f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26081884f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.2281365f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.007869706f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.03564043f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.015466277f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21410304f ? 
         (data[12 /* X35 */] <-0.19140625f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.052224394f ? 
                 (data[8 /* X23 */] <0.09128412f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.46886286f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.36022547f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.41916054f ? 
                                0.0f : 
                                1.0f) : 
                             (data[10 /* X28 */] <-0.26948738f ? 
                                 (data[1 /* X12 */] <-0.30109805f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                1.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.15743622f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15342605f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.76923126f ? 
                 (data[6 /* X20 */] <0.080164246f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0054063294f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.5564913f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.24620779f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0234375f ? 
             (data[11 /* X34 */] <-0.8197119f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625176f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.02476417f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49464846f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2554003f ? 
            0.0f : 
             (data[3 /* X17 */] <0.27583277f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2810163f ? 
             (data[6 /* X20 */] <-0.19898474f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.0970616f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.24542725f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28859088f ? 
             (data[1 /* X12 */] <-0.5865611f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5074266f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_66_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19864643f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19932292f ? 
                 (data[5 /* X19 */] <0.010725866f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22667913f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15519252f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20966657f ? 
                                 (data[8 /* X23 */] <0.10962761f ? 
                                     (data[0 /* X5 */] <0.12387014f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.640625f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.23463462f ? 
                        0.0f : 
                        1.0f))) : 
             (data[3 /* X17 */] <-0.64834887f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
        0.024590164f : 
         (data[7 /* X21 */] <0.15597424f ? 
             (data[9 /* X27 */] <0.23138896f ? 
                 (data[10 /* X28 */] <-0.118704736f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2750434f ? 
                 (data[10 /* X28 */] <-0.25926483f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.07938185f ? 
                         (data[11 /* X34 */] <0.10448619f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.5180908f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[6 /* X20 */] <0.018790971f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18314599f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6111923f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.45117947f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02716858f ? 
                 (data[12 /* X35 */] <0.40884f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.24894938f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4763085f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16803f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.2624645f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.055010796f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19890714f ? 
                 (data[12 /* X35 */] <-0.4972256f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.007869706f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40000093f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3814682f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46457642f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18808717f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.16660514f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X35 */] <0.44235983f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.045670897f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48346755f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23101844f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.37500003f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04234824f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X21 */] <0.2396919f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_67_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[6 /* X20 */] <-0.31755152f ? 
             (data[7 /* X21 */] <0.15155987f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.38086757f ? 
                 (data[1 /* X12 */] <-0.39546147f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.09522221f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16070005f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[7 /* X21 */] <0.07062984f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.28801578f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.16989899f ? 
                     (data[7 /* X21 */] <0.12991035f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[6 /* X20 */] <-0.31755152f ? 
             (data[7 /* X21 */] <0.15155987f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.4459796f ? 
                     (data[2 /* X15 */] <0.15342605f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.37965178f ? 
                 (data[7 /* X21 */] <0.17639188f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.30195618f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.12897594f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.50808156f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13461518f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
        0.012987013f : 
         (data[9 /* X27 */] <0.06432926f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40144354f ? 
                     (data[6 /* X20 */] <-0.053800933f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.12468097f ? 
                 (data[8 /* X23 */] <0.11323853f ? 
                     (data[0 /* X5 */] <0.09191755f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X27 */] <0.16460241f ? 
                         (data[2 /* X15 */] <0.15706305f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08041796f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.067591965f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15252537f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.043014526f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53708845f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.2301865f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <0.39186713f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.43813157f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22225083f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.20061989f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.060309093f ? 
             (data[1 /* X12 */] <-0.46777716f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.7517891f ? 
                     (data[11 /* X34 */] <-0.82692343f ? 
                         (data[9 /* X27 */] <0.16484536f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.1934509f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f)) : 
             (data[10 /* X28 */] <0.063384496f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3539236f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.033122223f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18873641f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3221168f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.43076766f ? 
                 (data[9 /* X27 */] <0.10012583f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.359375f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.33819535f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_68_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18395686f ? 
             (data[1 /* X12 */] <-0.3829315f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0234375f ? 
                     (data[10 /* X28 */] <-0.37665823f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32697952f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17726134f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4134586f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16793086f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.20525116f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.39272457f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17070179f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.42948568f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17731033f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13713846f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.15187562f ? 
                         (data[9 /* X27 */] <0.06084885f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.22248286f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[6 /* X20 */] <-0.43502894f ? 
            1.0f : 
             (data[7 /* X21 */] <0.15155987f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.4500613f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27435622f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1929677f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.7734375f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.45553f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[9 /* X27 */] <-0.022680992f ? 
             (data[0 /* X5 */] <0.089029044f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.14569743f ? 
             (data[11 /* X34 */] <-0.7007218f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47716454f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.18098897f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[6 /* X20 */] <-0.230098f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.27150866f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.13403744f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24717845f ? 
                 (data[11 /* X34 */] <-0.379809f ? 
                     (data[1 /* X12 */] <-0.57347465f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X15 */] <0.095234096f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18936211f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[10 /* X28 */] <-0.14426112f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23557852f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.34545454f ? 
             (data[1 /* X12 */] <-0.51868457f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.05793012f ? 
                     (data[7 /* X21 */] <0.10005894f ? 
                         (data[1 /* X12 */] <-0.078811966f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16979255f ? 
            1.0f : 
             (data[8 /* X23 */] <0.12825997f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_69_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.033203125f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19007896f ? 
                 (data[6 /* X20 */] <-0.42643937f ? 
                     (data[6 /* X20 */] <-0.53518516f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14363988f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.25000155f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[12 /* X35 */] <-0.453125f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37689114f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.114394024f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16233279f ? 
                     (data[8 /* X23 */] <0.15062149f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29246664f ? 
                             (data[2 /* X15 */] <0.16700956f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
             (data[6 /* X20 */] <-0.6006599f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.8931106f ? 
                     (data[2 /* X15 */] <0.13887806f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9719097f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18892346f ? 
                 (data[7 /* X21 */] <0.16095975f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.18239327f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.34416854f ? 
                            1.0f : 
                            0.0f) : 
                         (data[10 /* X28 */] <-0.08032025f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.094581395f ? 
         (data[5 /* X19 */] <0.14803784f ? 
             (data[8 /* X23 */] <0.08319566f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.33100972f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06355598f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.39141607f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26945156f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.46289062f ? 
            0.0f : 
             (data[8 /* X23 */] <0.10572781f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
             (data[12 /* X35 */] <-0.0546875f ? 
                 (data[4 /* X18 */] <-0.6087968f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.10592299f ? 
                         (data[10 /* X28 */] <-0.10937066f ? 
                             (data[4 /* X18 */] <-0.372336f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                     (data[1 /* X12 */] <-0.58082616f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17024371f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[5 /* X19 */] <0.14517717f ? 
             (data[7 /* X21 */] <0.09123021f ? 
                 (data[4 /* X18 */] <-0.14392866f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3430348f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.2675773f ? 
             (data[8 /* X23 */] <0.09648385f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_70_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5356581f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0916184f ? 
                 (data[7 /* X21 */] <0.094173126f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15446857f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047411755f ? 
                         (data[4 /* X18 */] <-0.52313393f ? 
                             (data[12 /* X35 */] <0.0f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17161104f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.05f ? 
                                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2091771f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32884043f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.19161452f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.116598204f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[12 /* X35 */] <-0.16796875f ? 
             (data[1 /* X12 */] <-0.18778649f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.50923157f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.18252203f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.086662136f ? 
                     (data[5 /* X19 */] <0.17092317f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_12_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
         (data[6 /* X20 */] <-0.46515504f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19773822f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.123883866f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33732095f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13639022f ? 
                     (data[2 /* X15 */] <0.15539372f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.3599773f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[6 /* X20 */] <0.0030627258f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.4564644f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18540333f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.13865942f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[11 /* X34 */] <-0.80889463f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023600962f ? 
                 (data[0 /* X5 */] <0.10130266f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20714486f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13735774f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.15526691f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061060123f ? 
             (data[6 /* X20 */] <-0.19742545f ? 
                 (data[4 /* X18 */] <-0.53416514f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.09711603f ? 
                         (data[8 /* X23 */] <0.11554952f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43673316f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26442462f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15714735f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.10592654f ? 
                                 (data[6 /* X20 */] <-0.089416616f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.77734375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[6 /* X20 */] <-0.02960363f ? 
             (data[1 /* X12 */] <-0.65726584f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X17 */] <-0.42137912f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.92067325f ? 
                     (data[12 /* X35 */] <0.125f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25640103f ? 
             (data[1 /* X12 */] <-0.6431249f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <0.050407622f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_71_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (data[5 /* X19 */] <0.07652119f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.30078125f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21531452f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24152207f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13932241f ? 
                             (data[10 /* X28 */] <-0.14659616f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13199644f ? 
                                     (data[9 /* X27 */] <0.23076613f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4423047f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23557852f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.24171337f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[6 /* X20 */] <-0.37078556f ? 
                 (data[9 /* X27 */] <0.36712494f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.47241423f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.25102183f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5053506f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24816115f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18208176f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.1430587f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0673955f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2207105f ? 
                     (data[4 /* X18 */] <0.14463681f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
        0.013513514f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.56911147f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_12_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[10 /* X28 */] <-0.15065022f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.12109375f ? 
                 (data[7 /* X21 */] <0.10447331f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16994455f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.17462859f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24380949f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18897134f ? 
                         (data[5 /* X19 */] <0.14813589f ? 
                             (data[1 /* X12 */] <-0.62615573f ? 
                                0.0f : 
                                1.0f) : 
                             (data[11 /* X34 */] <-0.8923075f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33347923f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[2 /* X15 */] <0.08432311f ? 
            1.0f : 
             (data[2 /* X15 */] <0.09710943f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.17292315f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2354328f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10551275f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[11 /* X34 */] <-0.69351023f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12906212f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_72_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (data[0 /* X5 */] <0.11591411f ? 
             (data[0 /* X5 */] <0.07450639f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0390625f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.30078125f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19181141f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25230512f ? 
                        1.0f : 
                        0.0f) : 
                     (data[5 /* X19 */] <0.21223056f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15931168f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[6 /* X20 */] <-0.30545285f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.3962631f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47849807f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3737766f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22660407f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23671849f ? 
             (data[0 /* X5 */] <0.07623727f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05380085f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.026145032f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27435622f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95188504f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.03125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
        0.013513514f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.56911147f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21118075f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <0.11130271f ? 
                 (data[1 /* X12 */] <-0.4354205f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15448833f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26081884f ? 
                 (data[12 /* X35 */] <-0.3046875f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.20569563f ? 
                         (data[11 /* X34 */] <-0.7921053f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.5199318f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.12171989f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.16660514f ? 
                         (data[11 /* X34 */] <-0.33653983f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.8195783f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3969064f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.43982401f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[12 /* X35 */] <-0.08984375f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16251855f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.016765157f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_73_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[3 /* X17 */] <-0.2765366f ? 
             (data[10 /* X28 */] <-0.2624594f ? 
                 (data[3 /* X17 */] <-0.347243f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.210412f ? 
                 (data[6 /* X20 */] <-0.3248107f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.098575674f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.11130973f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.56442314f ? 
                         (data[1 /* X12 */] <-0.19103079f ? 
                             (data[2 /* X15 */] <0.18310212f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))) : 
         (data[2 /* X15 */] <0.0879601f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.1019161f ? 
                 (data[3 /* X17 */] <-0.42436558f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.12261989f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.11112428f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.640625f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.37107402f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.11084225f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10294082f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.625f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.03515625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23616853f ? 
            0.0f : 
             (data[7 /* X21 */] <0.24246004f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27281302f ? 
             (data[1 /* X12 */] <-0.46777716f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18962403f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.022733688f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27589476f ? 
                 (data[7 /* X21 */] <0.09807196f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1340378f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.03789248f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18614362f ? 
                 (data[6 /* X20 */] <-0.053800933f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.8125004f ? 
                     (data[4 /* X18 */] <-0.3480171f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01508525f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15744568f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0056823003f ? 
                     (data[2 /* X15 */] <0.1291482f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0743705f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.26697576f ? 
                 (data[6 /* X20 */] <-0.37228847f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.12342083f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14861695f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.15602638f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1796795f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20123057f ? 
                     (data[4 /* X18 */] <-0.15526691f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_74_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18430148f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.091382876f ? 
                 (data[10 /* X28 */] <-0.30275312f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.39038303f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14125969f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18186636f ? 
                                1.0f : 
                                 (data[4 /* X18 */] <-0.15850112f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.90658855f ? 
             (data[0 /* X5 */] <0.08143109f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.06768693f ? 
                     (data[1 /* X12 */] <-0.21907642f ? 
                        1.0f : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.5f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4646853f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026579723f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.51348877f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10170349f ? 
                         (data[12 /* X35 */] <-0.25f ? 
                             (data[6 /* X20 */] <-0.46418715f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[6 /* X20 */] <-0.5183891f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2667372f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.15353411f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.09099933f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15086573f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.24382587f ? 
                 (data[5 /* X19 */] <-0.05793012f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.13461259f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[0 /* X5 */] <0.09838037f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.083143495f ? 
                     (data[10 /* X28 */] <0.25186282f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[9 /* X27 */] <-0.022680992f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047411755f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13850015f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.12360223f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06718557f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.116115406f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29055592f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (data[4 /* X18 */] <-0.51950806f ? 
             (data[8 /* X23 */] <0.112667665f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.085211724f ? 
             (data[2 /* X15 */] <0.09459161f ? 
                 (data[7 /* X21 */] <0.12360223f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053800933f ? 
                 (data[5 /* X19 */] <0.29354012f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.03125f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.230811f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15156604f ? 
                         (data[4 /* X18 */] <-0.4553827f ? 
                             (data[0 /* X5 */] <0.12818773f ? 
                                0.0f : 
                                1.0f) : 
                             (data[0 /* X5 */] <0.060975064f ? 
                                0.0f : 
                                 (data[12 /* X35 */] <-0.6f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[9 /* X27 */] <0.22834359f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.40547788f ? 
                                 (data[7 /* X21 */] <0.12971495f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.484375f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.012967988f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_12_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[8 /* X23 */] <0.048819672f ? 
             (data[1 /* X12 */] <-0.29525766f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.08159536f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3914294f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X27 */] <-0.3689818f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_75_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[4 /* X18 */] <-0.43872306f ? 
             (data[5 /* X19 */] <0.06507852f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.00907718f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.109375f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.03202336f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1640625f ? 
                     (data[3 /* X17 */] <-0.32976928f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.38616294f ? 
                             (data[10 /* X28 */] <-0.18770696f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23500209f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.08894004f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.56622165f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26287517f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08631628f ? 
                 (data[5 /* X19 */] <0.21553959f ? 
                     (data[12 /* X35 */] <-0.265625f ? 
                         (data[12 /* X35 */] <-0.90072775f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.17478743f ? 
                     (data[7 /* X21 */] <0.15835695f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.22790854f ? 
                             (data[8 /* X23 */] <0.17425737f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04508724f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.6224375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.1256601f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13542497f ? 
             (data[5 /* X19 */] <-0.06937279f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14797056f ? 
                 (data[11 /* X34 */] <-0.92067325f ? 
                     (data[9 /* X27 */] <0.26967347f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
             (data[5 /* X19 */] <-0.19524209f ? 
                 (data[6 /* X20 */] <-0.08283769f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.84375f ? 
                     (data[8 /* X23 */] <0.15224552f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1674605f ? 
                            0.0f : 
                             (data[5 /* X19 */] <-0.08390894f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.071498014f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.052667193f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055086922f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.5073718f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
             (data[2 /* X15 */] <0.10614509f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.2280215f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.28125f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.07910156f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.07198617f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
             (data[3 /* X17 */] <-0.62147087f ? 
                 (data[5 /* X19 */] <0.36544847f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.328125f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.026012471f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (data[8 /* X23 */] <0.09735047f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.015458683f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23322563f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26560345f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.082551785f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_76_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12509383f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.14459099f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18928164f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13123229f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35637152f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4228115f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15438549f ? 
                     (data[12 /* X35 */] <0.03716278f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[2 /* X15 */] <0.14978905f ? 
             (data[10 /* X28 */] <-0.18259569f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.46545753f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.09078242f ? 
                 (data[3 /* X17 */] <0.08930272f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1772812f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18343128f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.1480593f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[9 /* X27 */] <-0.022680992f ? 
             (data[0 /* X5 */] <0.09428917f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.56911147f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19343302f ? 
                 (data[11 /* X34 */] <-0.4757025f ? 
                     (data[6 /* X20 */] <0.13034432f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[9 /* X27 */] <0.12001582f ? 
             (data[7 /* X21 */] <0.09123021f ? 
                 (data[6 /* X20 */] <-0.13123229f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <-0.25817674f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.12435274f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.092516616f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3333952f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f))) : 
         (data[1 /* X12 */] <-0.39424425f ? 
            0.0f : 
             (data[9 /* X27 */] <0.0051622894f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08654341f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24236512f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.17162962f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14068909f ? 
                    1.0f : 
                    0.0f))) : 
         (data[1 /* X12 */] <-0.4621208f ? 
            1.0f : 
             (data[2 /* X15 */] <0.083413854f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16220398f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16793086f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.042080685f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_77_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[1 /* X12 */] <-0.3815174f ? 
            0.0f : 
             (data[2 /* X15 */] <0.12978557f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.016479202f ? 
                     (data[11 /* X34 */] <-0.25000155f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15725936f ? 
                     (data[7 /* X21 */] <0.11060459f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.1015625f ? 
             (data[5 /* X19 */] <0.24816115f ? 
                 (data[3 /* X17 */] <-0.35269094f ? 
                     (data[9 /* X27 */] <0.04692721f ? 
                         (data[5 /* X19 */] <0.014821787f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[2 /* X15 */] <0.0988711f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.006469195f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25888747f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.460225f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5254834f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21410304f ? 
         (data[6 /* X20 */] <-0.31997123f ? 
             (data[7 /* X21 */] <0.15155987f ? 
                 (data[4 /* X18 */] <-0.40470833f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.2810163f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9118357f ? 
                 (data[10 /* X28 */] <-0.25926483f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14714551f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.18533124f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)) : 
         (data[8 /* X23 */] <0.1906567f ? 
             (data[10 /* X28 */] <-0.06439742f ? 
                 (data[4 /* X18 */] <-0.028508177f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28707403f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07202503f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.19140625f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055086922f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.49040267f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011455655f ? 
             (data[6 /* X20 */] <-0.2221565f ? 
                 (data[1 /* X12 */] <-0.4204974f ? 
                     (data[4 /* X18 */] <-0.45965943f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.09752242f ? 
                         (data[7 /* X21 */] <0.07633782f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17260653f ? 
                     (data[4 /* X18 */] <-0.44111472f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12772082f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09379195f ? 
                                0.0f : 
                                1.0f) : 
                             (data[8 /* X23 */] <0.11618521f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[12 /* X35 */] <-0.46875f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[4 /* X18 */] <-0.5167621f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.24565467f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6621094f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.42266178f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.45913574f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.363672f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[1 /* X12 */] <-0.59363157f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24071398f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.06541117f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <0.01171875f ? 
             (data[1 /* X12 */] <-0.55545104f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <0.26144648f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1938085f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42307812f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_78_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (data[5 /* X19 */] <0.1508985f ? 
                 (data[2 /* X15 */] <0.14251506f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.47483397f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.10005894f ? 
                         (data[0 /* X5 */] <0.15422496f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (data[1 /* X12 */] <-0.20475562f ? 
                 (data[4 /* X18 */] <-0.10991392f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[2 /* X15 */] <0.0879601f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.36011815f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.14567405f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (data[5 /* X19 */] <0.22527583f ? 
                 (data[6 /* X20 */] <-0.3248107f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25623915f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.21324018f ? 
                 (data[7 /* X21 */] <0.16774587f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25238502f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.024465572f ? 
            0.0f : 
             (data[5 /* X19 */] <0.09940652f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.022680992f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13405089f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.20306079f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.059926383f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5246394f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[10 /* X28 */] <-0.14745566f ? 
             (data[8 /* X23 */] <0.12020293f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17951752f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3123418f ? 
                     (data[6 /* X20 */] <-0.06347985f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5599738f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.4999975f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[9 /* X27 */] <0.03300557f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08574633f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28248915f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <0.0434468f ? 
             (data[1 /* X12 */] <-0.54413825f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20306079f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.21531452f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.38900968f ? 
                 (data[1 /* X12 */] <-0.660094f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.42298365f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_79_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[6 /* X20 */] <-0.31755152f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.7298145f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.14260279f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11618071f ? 
                 (data[7 /* X21 */] <0.09711603f ? 
                     (data[10 /* X28 */] <-0.09314835f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26617298f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.15384476f ? 
             (data[6 /* X20 */] <-0.14091122f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.0051622894f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[6 /* X20 */] <-0.31755152f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28163022f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.39906624f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.083143495f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.15270047f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.18486892f ? 
                 (data[7 /* X21 */] <0.011771641f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.25926483f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[7 /* X21 */] <0.08497653f ? 
             (data[3 /* X17 */] <-0.11974833f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[6 /* X20 */] <0.004272591f ? 
            0.0f : 
             (data[2 /* X15 */] <0.1579723f ? 
                 (data[4 /* X18 */] <-0.13768333f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[7 /* X21 */] <0.13390242f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.011655187f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.057506654f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.8923236f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09622233f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.12987158f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.033141468f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06831931f ? 
                     (data[12 /* X35 */] <-0.012545938f ? 
                         (data[10 /* X28 */] <-0.12316058f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12567818f ? 
             (data[5 /* X19 */] <0.016447198f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.2015332f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29751673f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.060309093f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44034114f ? 
                 (data[12 /* X35 */] <3.8146973E-6f ? 
                     (data[6 /* X20 */] <-0.12967108f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[2 /* X15 */] <0.12705782f ? 
                 (data[10 /* X28 */] <0.08574633f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.023057362f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.46777716f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20718087f ? 
                                0.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25378644f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_12_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_80_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20567815f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                 (data[12 /* X35 */] <-0.296875f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.104329266f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20306079f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25383696f ? 
                     (data[9 /* X27 */] <0.31143838f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08170395f ? 
                             (data[9 /* X27 */] <0.105044976f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13140734f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1875f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8208665f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18487923f ? 
                                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.117343865f ? 
                                        1.0f : 
                                         (data[2 /* X15 */] <0.17161104f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.06842266f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.04728115f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48202088f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4711508f ? 
                             (data[12 /* X35 */] <-0.55f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_12_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.618987f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24426153f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35337198f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45060316f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.7265625f ? 
                    0.0f : 
                    1.0f)) : 
             (data[10 /* X28 */] <-0.12828837f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.34168822f ? 
                    0.0f : 
                    1.0f))) : 
         (data[0 /* X5 */] <0.13753904f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (data[8 /* X23 */] <0.099083714f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48798183f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04842468f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.039290268f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.3554394f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15741062f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.39405513f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5673086f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.14850096f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[9 /* X27 */] <-0.033122223f ? 
                 (data[0 /* X5 */] <0.22605367f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (data[8 /* X23 */] <0.119593754f ? 
             (data[11 /* X34 */] <-0.34735712f ? 
                 (data[12 /* X35 */] <0.4609375f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.12333437f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.10912109f ? 
                 (data[7 /* X21 */] <0.095409624f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16994798f ? 
                         (data[5 /* X19 */] <0.3175354f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.125f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.12069308f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                     (data[9 /* X27 */] <0.01908393f ? 
                         (data[9 /* X27 */] <-0.17346376f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24329141f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17315893f ? 
                                1.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1544617f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[8 /* X23 */] <0.25702813f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))) : 
         (data[3 /* X17 */] <-0.26459083f ? 
             (data[7 /* X21 */] <0.10079467f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.22081527f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.55710036f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.17294444f ? 
                             (data[1 /* X12 */] <-0.3044667f ? 
                                1.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17051892f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_12_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (data[8 /* X23 */] <0.09735047f ? 
             (data[11 /* X34 */] <-0.9711539f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28221104f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06763265f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.10432659f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.15744568f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_81_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[11 /* X34 */] <-0.15444888f ? 
             (data[12 /* X35 */] <-0.35546875f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <0.083431125f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.08984375f ? 
             (data[3 /* X17 */] <-0.32581294f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16793086f ? 
                     (data[7 /* X21 */] <0.14714551f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12600173f ? 
                             (data[3 /* X17 */] <-0.19242197f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[4 /* X18 */] <-0.3277317f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X27 */] <0.07707673f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
             (data[12 /* X35 */] <-0.88671875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13766699f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.10957459f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.3480171f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.067591965f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19697301f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.40224206f ? 
                                1.0f : 
                                0.0f)))))) : 
         (data[12 /* X35 */] <-0.1015625f ? 
             (data[4 /* X18 */] <-0.16660514f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (data[9 /* X27 */] <-0.18974069f ? 
            1.0f : 
             (data[12 /* X35 */] <0.0f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023600962f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12818925f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.16650873f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[1 /* X12 */] <-0.40071884f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.33335587f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[1 /* X12 */] <-0.23869388f ? 
             (data[9 /* X27 */] <0.05388803f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17354223f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25901598f ? 
             (data[0 /* X5 */] <0.11357628f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0056823003f ? 
                     (data[9 /* X27 */] <0.01357656f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1979625f ? 
                             (data[10 /* X28 */] <-0.10674883f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09618409f ? 
                                    1.0f : 
                                     (data[6 /* X20 */] <-0.081770524f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                             (data[7 /* X21 */] <0.1290327f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6621094f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14493832f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0074103503f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03832237f ? 
                         (data[3 /* X17 */] <-0.47812155f ? 
                             (data[9 /* X27 */] <0.41964072f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13927345f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.12018921f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.09855957f ? 
             (data[1 /* X12 */] <-0.51868457f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.240343f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06813857f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.12013832f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.42111206f ? 
             (data[9 /* X27 */] <-0.3672416f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4178115f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_82_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08984375f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20912358f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.19108982f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17728218f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[5 /* X19 */] <0.24816115f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.16796875f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.50598145f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17667125f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21410304f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2582532f ? 
             (data[12 /* X35 */] <-0.6640617f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13970727f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2376487f ? 
                         (data[6 /* X20 */] <-0.44095775f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (data[5 /* X19 */] <-0.10370078f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.12622853f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.35808265f ? 
                        0.0f : 
                         (data[3 /* X17 */] <0.38720047f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18341894f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.13114944f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19140625f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17838822f ? 
                 (data[0 /* X5 */] <0.09312025f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.34911454f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.13040325f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.2796285f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.026145032f ? 
                 (data[11 /* X34 */] <-0.66826993f ? 
                     (data[6 /* X20 */] <0.02363043f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17565551f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15483636f ? 
                         (data[2 /* X15 */] <0.1502595f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
         (data[12 /* X35 */] <-0.056640625f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12509383f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2075838f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.30769375f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.070253685f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[9 /* X27 */] <0.099133365f ? 
                 (data[8 /* X23 */] <0.14052138f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14978905f ? 
                         (data[1 /* X12 */] <-0.64878124f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16428706f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0054063294f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X17 */] <-0.47606838f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.80599105f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14630592f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21225739f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26464102f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31894833f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.37109375f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.28111672f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_83_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27819815f ? 
             (data[3 /* X17 */] <-0.33477226f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1529916f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1702687f ? 
                         (data[12 /* X35 */] <-0.0625f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[11 /* X34 */] <-0.35096288f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X35 */] <-0.1640625f ? 
                     (data[10 /* X28 */] <-0.13148293f ? 
                         (data[6 /* X20 */] <-0.42875546f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.067591965f ? 
                 (data[11 /* X34 */] <-0.35096288f ? 
                     (data[3 /* X17 */] <-0.45423f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.09078242f ? 
                     (data[3 /* X17 */] <-0.6931455f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X35 */] <-0.125f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15411086f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.40985283f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.92327833f ? 
             (data[6 /* X20 */] <-0.43611827f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2908333f ? 
                     (data[10 /* X28 */] <-0.39982495f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
         (data[8 /* X23 */] <0.15194762f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.05739456f ? 
                 (data[9 /* X27 */] <0.34224796f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[9 /* X27 */] <-0.18974069f ? 
             (data[6 /* X20 */] <-0.08041796f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17797579f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26450986f ? 
                     (data[9 /* X27 */] <-0.11021617f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13509189f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.8125004f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.006692321f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09622233f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.19436096f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[7 /* X21 */] <0.10520904f ? 
             (data[6 /* X20 */] <-0.06831931f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.095234096f ? 
                 (data[6 /* X20 */] <-0.06831931f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.011531781f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.41159022f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47529107f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.5170516f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32187963f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24640936f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2704429f ? 
                 (data[7 /* X21 */] <0.09123021f ? 
                     (data[9 /* X27 */] <0.01908393f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[10 /* X28 */] <0.40200657f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_84_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[4 /* X18 */] <-0.3621899f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17405817f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.46999452f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18025324f ? 
                 (data[9 /* X27 */] <0.12024848f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047411755f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34572092f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.424014f ? 
                                 (data[5 /* X19 */] <0.33181167f ? 
                                    0.0f : 
                                     (data[0 /* X5 */] <0.1244472f ? 
                                        1.0f : 
                                         (data[6 /* X20 */] <-0.20130633f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.259478f ? 
             (data[10 /* X28 */] <-0.08037016f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[4 /* X18 */] <-0.3621899f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17415157f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.46999452f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.28851476f ? 
                 (data[7 /* X21 */] <0.094173126f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5828591f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04159907f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                         (data[5 /* X19 */] <0.056496523f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35637152f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[2 /* X15 */] <0.16615555f ? 
             (data[12 /* X35 */] <0.20703125f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.24547373f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07081517f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.38885134f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[2 /* X15 */] <0.09387022f ? 
             (data[12 /* X35 */] <0.06619263f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.085257426f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0554924f ? 
                     (data[11 /* X34 */] <-0.7668234f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.26276922f ? 
                             (data[9 /* X27 */] <0.38898972f ? 
                                 (data[2 /* X15 */] <0.26462725f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.03444309f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.22630644f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.061726376f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.242654f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10205046f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20994031f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16928005f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13685909f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.8374681f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_85_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14250694f ? 
             (data[6 /* X20 */] <-0.46273533f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23023346f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18892346f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14833365f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.3732053f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31791562f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.0879601f ? 
             (data[1 /* X12 */] <-0.17364554f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.25463852f ? 
                 (data[12 /* X35 */] <-0.22684097f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.034048747f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07183074f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14969948f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.14893489f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23920608f ? 
             (data[6 /* X20 */] <-0.32239097f ? 
                 (data[1 /* X12 */] <-0.34965196f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11625651f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.041884445f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.013284654f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.013538829f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.325f ? 
                         (data[6 /* X20 */] <-0.4603156f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.317907f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18429568f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.21681382f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26071748f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
        0.012987013f : 
         (data[9 /* X27 */] <0.06432926f ? 
             (data[1 /* X12 */] <-0.5102f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2920673f ? 
                        1.0f : 
                         (data[9 /* X27 */] <-0.13780645f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.09937259f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.105901256f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0286618f ? 
             (data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08166315f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47849807f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13572693f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.24705079f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.30936468f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20061989f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.17301205f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24071398f ? 
             (data[1 /* X12 */] <-0.5922175f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06881746f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.10888767f ? 
                         (data[4 /* X18 */] <-0.24041449f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18962403f ? 
             (data[10 /* X28 */] <0.47867572f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_86_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[6 /* X20 */] <-0.31997123f ? 
             (data[7 /* X21 */] <0.09490885f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.5180908f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21324018f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.14810795f ? 
                     (data[6 /* X20 */] <-0.18828374f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.09095669f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12643436f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23920608f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[6 /* X20 */] <-0.5365371f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <0.085211724f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17478743f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.15818141f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26378196f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.3732053f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2909638f ? 
                     (data[6 /* X20 */] <-0.3248107f ? 
                         (data[6 /* X20 */] <-0.36110666f ? 
                             (data[1 /* X12 */] <-0.4657938f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[6 /* X20 */] <0.006692321f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.61078644f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.1967015f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17960146f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20884292f ? 
                     (data[9 /* X27 */] <0.0039659026f ? 
                         (data[6 /* X20 */] <0.25592452f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07436863f ? 
             (data[6 /* X20 */] <-0.25618395f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.10399457f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.26442462f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[9 /* X27 */] <0.20006526f ? 
             (data[1 /* X12 */] <-0.39424425f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09622233f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18078893f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06718557f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48346755f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.379809f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.047595408f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16533117f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.118836395f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_87_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07078651f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                 (data[3 /* X17 */] <-0.19739586f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.25230402f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[0 /* X5 */] <0.09312025f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27390715f ? 
                 (data[3 /* X17 */] <-0.39450115f ? 
                     (data[11 /* X34 */] <-0.35096288f ? 
                        0.0f : 
                        1.0f) : 
                     (data[0 /* X5 */] <0.07675543f ? 
                         (data[2 /* X15 */] <0.14688872f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.07062984f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.537446f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.28125f ? 
                            1.0f : 
                            0.0f) : 
                         (data[10 /* X28 */] <-0.10592654f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.05f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (data[10 /* X28 */] <-0.38864404f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.06971347f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21210945f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.28698918f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13494554f ? 
                             (data[6 /* X20 */] <-0.40224206f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f))) : 
         (data[8 /* X23 */] <0.14068154f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14324819f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28707403f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14887981f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14948769f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.207981f ? 
             (data[11 /* X34 */] <-0.52403945f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.024182135f ? 
                     (data[2 /* X15 */] <0.13147947f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07989315f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[1 /* X12 */] <-0.5679611f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[5 /* X19 */] <0.3110958f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (data[10 /* X28 */] <-0.14106657f ? 
             (data[2 /* X15 */] <0.09732978f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26081884f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.011655187f ? 
                     (data[1 /* X12 */] <-0.52715033f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.033611197f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.022989366f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.36544847f ? 
                 (data[3 /* X17 */] <-0.49006733f ? 
                     (data[11 /* X34 */] <-0.61057776f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.111634254f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.13243096f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.09585678f ? 
                         (data[12 /* X35 */] <-0.46875f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24352062f ? 
             (data[2 /* X15 */] <0.081750944f ? 
                 (data[2 /* X15 */] <0.07224139f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19961917f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.18969546f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19367874f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.37964472f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[0 /* X5 */] <0.15156604f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_88_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[3 /* X17 */] <-0.31237394f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35456866f ? 
                 (data[10 /* X28 */] <-0.13787203f ? 
                     (data[8 /* X23 */] <0.0814263f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.11818476f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[5 /* X19 */] <0.23671849f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.43305394f ? 
                     (data[4 /* X18 */] <-0.5436573f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15706305f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[12 /* X35 */] <-0.15625f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.052120034f ? 
                             (data[11 /* X34 */] <-0.236927f ? 
                                 (data[10 /* X28 */] <-0.10547234f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)))) : 
        0.027027028f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.26400968f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                 (data[6 /* X20 */] <-0.53774697f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2857563f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.2624645f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (data[9 /* X27 */] <0.19658485f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.034049217f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.055539794f ? 
             (data[9 /* X27 */] <-0.18974069f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1631319f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14775224f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.34375f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08170395f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[5 /* X19 */] <-0.09225811f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.29132587f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.013951511f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5673086f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[2 /* X15 */] <0.23257159f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.085257426f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.10197245f ? 
        0.0f : 
         (data[3 /* X17 */] <-0.49753344f ? 
             (data[10 /* X28 */] <-0.09953745f ? 
                 (data[5 /* X19 */] <0.039332528f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.08429676f ? 
                     (data[8 /* X23 */] <0.13528773f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.28605917f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
                     (data[5 /* X19 */] <0.10226718f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16871515f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.062346112f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1736154f ? 
                                1.0f : 
                                 (data[2 /* X15 */] <0.12775569f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                     (data[10 /* X28 */] <-0.04399174f ? 
                         (data[3 /* X17 */] <-0.20775509f ? 
                             (data[10 /* X28 */] <-0.108428195f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[3 /* X17 */] <-0.35717058f ? 
            0.0f : 
             (data[9 /* X27 */] <0.099133365f ? 
                 (data[6 /* X20 */] <-0.092516616f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3029756f ? 
                     (data[5 /* X19 */] <0.13659517f ? 
                         (data[0 /* X5 */] <0.13307026f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49464846f ? 
             (data[1 /* X12 */] <-0.41969797f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20876047f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.22595899f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_89_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[10 /* X28 */] <-0.33114216f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03621532f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.067993976f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24591932f ? 
                         (data[5 /* X19 */] <0.06627994f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.46273828f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.14856647f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[12 /* X35 */] <-0.10260391f ? 
             (data[0 /* X5 */] <0.121758685f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24183019f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.25162497f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[10 /* X28 */] <-0.35829583f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26344523f ? 
                 (data[6 /* X20 */] <-0.53774697f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19247809f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (data[0 /* X5 */] <0.11708302f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16159973f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33112046f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.31400236f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0963429f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.1518191f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0026958566f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15342605f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08170395f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.1199632f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[6 /* X20 */] <-0.02960363f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18897134f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16796875f ? 
            0.0f : 
             (data[5 /* X19 */] <0.07938185f ? 
                 (data[2 /* X15 */] <0.115237586f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <0.38897705f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12533306f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[4 /* X18 */] <-0.14392866f ? 
                 (data[10 /* X28 */] <-0.14426112f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19895816f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12839451f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[6 /* X20 */] <-0.14575067f ? 
                     (data[12 /* X35 */] <-0.31624603f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23629877f ? 
             (data[8 /* X23 */] <0.09991773f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.013951511f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28221104f ? 
             (data[12 /* X35 */] <-0.022827148f ? 
                 (data[0 /* X5 */] <0.10714724f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1537003f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.5508151f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_90_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[12 /* X35 */] <-0.1015625f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.063384496f ? 
                 (data[7 /* X21 */] <0.036786377f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.40224206f ? 
                         (data[2 /* X15 */] <0.14251506f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14363988f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29316452f ? 
                                1.0f : 
                                 (data[5 /* X19 */] <0.7322306f ? 
                                    0.0f : 
                                    1.0f))))) : 
                0.0f) : 
            0.0f) : 
        0.027027028f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (data[12 /* X35 */] <-0.056640625f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10592654f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18992887f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23920608f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1706888f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.4070815f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22607099f ? 
                         (data[9 /* X27 */] <0.083862334f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.23649055f ? 
             (data[11 /* X34 */] <-0.52403945f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.094581395f ? 
         (data[12 /* X35 */] <-0.32226562f ? 
            0.0f : 
             (data[10 /* X28 */] <0.034633562f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07928422f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4915876f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18834572f ? 
                    1.0f : 
                     (data[6 /* X20 */] <0.2361113f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16310908f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15820312f ? 
             (data[11 /* X34 */] <-0.28605917f ? 
                 (data[6 /* X20 */] <-0.107034996f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23837572f ? 
                 (data[9 /* X27 */] <0.031002514f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.13659517f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15024368f ? 
             (data[11 /* X34 */] <-0.5673086f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.107988514f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14630592f ? 
         (data[9 /* X27 */] <-0.04356345f ? 
             (data[11 /* X34 */] <-0.53125095f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.10182967f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21483244f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.124110006f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.2750434f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07073904f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918751f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21759182f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18646006f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.22115546f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27546033f ? 
                        1.0f : 
                        0.0f) : 
                     (data[11 /* X34 */] <-0.02641763f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_12_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_91_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[12 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2750434f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.21669383f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.021855371f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[7 /* X21 */] <0.07062984f ? 
                 (data[6 /* X20 */] <-0.19600733f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3581744f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.4064469f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1678115f ? 
                            0.0f : 
                             (data[11 /* X34 */] <0.06333913f ? 
                                1.0f : 
                                0.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[4 /* X18 */] <-0.5535228f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28163022f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23571311f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19681469f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0625f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010676361f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[9 /* X27 */] <-0.022680992f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.033165354f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.42676842f ? 
             (data[3 /* X17 */] <-0.018209249f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28844437f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.056640625f ? 
             (data[1 /* X12 */] <-0.44797984f ? 
                 (data[3 /* X17 */] <-0.16753143f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.0801943f ? 
                 (data[6 /* X20 */] <-0.09408093f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18594988f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.242654f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.19874518f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.578125f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                     (data[8 /* X23 */] <0.12941547f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20075005f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.5568651f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42307812f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.083983f ? 
                     (data[6 /* X20 */] <-0.021470122f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_92_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34828448f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.328125f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20707177f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24715714f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.00346854f ? 
                     (data[9 /* X27 */] <0.06084885f ? 
                         (data[10 /* X28 */] <-0.15703931f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0073585417f ? 
                             (data[6 /* X20 */] <-0.4332146f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[3 /* X17 */] <-0.20336875f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11187445f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8946717f ? 
             (data[12 /* X35 */] <-0.9765625f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20707177f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24715714f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20061989f ? 
                     (data[9 /* X27 */] <0.06084885f ? 
                         (data[2 /* X15 */] <0.120392516f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23920608f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07296814f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.24737933f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21097249f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.78646046f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07027149f ? 
                     (data[1 /* X12 */] <-0.27546033f ? 
                        0.0f : 
                        1.0f) : 
                     (data[0 /* X5 */] <0.10480941f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[7 /* X21 */] <0.0882873f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2394793f ? 
             (data[11 /* X34 */] <-0.45274818f ? 
                 (data[12 /* X35 */] <0.2421875f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03330935f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.24313831f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[5 /* X19 */] <0.18665683f ? 
             (data[2 /* X15 */] <0.09432485f ? 
                 (data[7 /* X21 */] <0.14211366f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.0546875f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08567985f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.035546735f ? 
                         (data[11 /* X34 */] <-0.8888891f ? 
                             (data[2 /* X15 */] <0.12505747f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[5 /* X19 */] <-0.059360456f ? 
             (data[12 /* X35 */] <0.16015625f ? 
                 (data[4 /* X18 */] <-0.40861386f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.119783826f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11769641f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.1247847f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17394042f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22667913f ? 
                 (data[1 /* X12 */] <-0.4621208f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.03928255f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_93_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.23099716f ? 
         (data[3 /* X17 */] <-0.33178583f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.2658148f ? 
                 (data[5 /* X19 */] <0.05954716f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.59375f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2449264f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.067591965f ? 
             (data[11 /* X34 */] <-0.7548082f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67372996f ? 
                     (data[7 /* X21 */] <0.088922426f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0625f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.19416903f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.21111172f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.23323217f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[7 /* X21 */] <0.07798712f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.09078242f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36712494f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X27 */] <0.20006526f ? 
                         (data[12 /* X35 */] <-0.5f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24499726f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27435622f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16077946f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.14904024f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.2667372f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.26387897f ? 
                                1.0f : 
                                 (data[0 /* X5 */] <0.12215822f ? 
                                    0.0f : 
                                     (data[5 /* X19 */] <0.4537295f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025553431f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.54296875f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.069529176f ? 
             (data[2 /* X15 */] <0.08985393f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14572147f ? 
             (data[2 /* X15 */] <0.15524456f ? 
                 (data[5 /* X19 */] <-0.09153736f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.109794684f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.39368808f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19140625f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.59787387f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055086922f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6790872f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[3 /* X17 */] <-0.59160644f ? 
             (data[4 /* X18 */] <-0.458565f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16015625f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14108732f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17687967f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.11187445f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[5 /* X19 */] <0.1521614f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[10 /* X28 */] <-0.104329266f ? 
             (data[11 /* X34 */] <-0.77644277f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48528355f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.15965287f ? 
                 (data[6 /* X20 */] <-0.32061526f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53418463f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5307778f ? 
                     (data[9 /* X27 */] <0.22790854f ? 
                         (data[12 /* X35 */] <-0.1875f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.11560973f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.34375f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22253841f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_12_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (data[0 /* X5 */] <0.12760326f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28221104f ? 
             (data[2 /* X15 */] <0.09656737f ? 
                 (data[11 /* X34 */] <-0.3581744f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-2.905869E-4f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23396136f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.331967f ? 
                         (data[3 /* X17 */] <-0.024182135f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[12 /* X35 */] <0.046875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_94_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.16796875f ? 
             (data[10 /* X28 */] <-0.3613952f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19990067f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24720445f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                            1.0f : 
                             (data[8 /* X23 */] <0.1440672f ? 
                                1.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14567742f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.2578125f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06863803f ? 
                 (data[10 /* X28 */] <-0.030807909f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.014445657f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
             (data[12 /* X35 */] <-0.9765625f ? 
                 (data[3 /* X17 */] <-0.16753143f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06981727f ? 
                 (data[11 /* X34 */] <0.35810453f ? 
                     (data[10 /* X28 */] <-0.18005674f ? 
                        1.0f : 
                         (data[11 /* X34 */] <0.28249964f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[6 /* X20 */] <-0.528068f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28707403f ? 
        0.018518519f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.062346112f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                 (data[10 /* X28 */] <-0.24754372f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42307812f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.124080904f ? 
                 (data[12 /* X35 */] <0.4453125f ? 
                     (data[11 /* X34 */] <-0.73370886f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.11653542f ? 
                            0.0f : 
                             (data[12 /* X35 */] <0.15222f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.092516616f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.37785378f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5722656f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.094456255f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36016414f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.19977039f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2074114f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.099609375f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.42535433f ? 
                 (data[11 /* X34 */] <-0.48798183f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-8.163452E-4f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.021484375f ? 
             (data[3 /* X17 */] <-0.2630976f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_95_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (data[6 /* X20 */] <-0.46515504f ? 
                 (data[2 /* X15 */] <0.09967936f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.76923126f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.14803784f ? 
                         (data[6 /* X20 */] <-0.30681857f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43869892f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.33114216f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.16885492f ? 
                 (data[1 /* X12 */] <-0.19061467f ? 
                     (data[3 /* X17 */] <-0.16760276f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (data[6 /* X20 */] <-0.39256313f ? 
                 (data[2 /* X15 */] <0.09967936f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.13908662f ? 
                         (data[3 /* X17 */] <-0.23920608f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27369064f ? 
                 (data[0 /* X5 */] <0.11766748f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5167826f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.0017771093f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (data[9 /* X27 */] <-0.18974069f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1632552f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.94591355f ? 
                 (data[12 /* X35 */] <0.6875f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16559303f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15000941f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09417451f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[9 /* X27 */] <-0.14797576f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.5942713f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.03330935f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18501733f ? 
                        1.0f : 
                         (data[10 /* X28 */] <0.03468697f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[2 /* X15 */] <0.10614509f ? 
             (data[6 /* X20 */] <-0.077998236f ? 
                 (data[12 /* X35 */] <-0.22353363f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.2572131f ? 
                 (data[9 /* X27 */] <0.06780967f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.024182135f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45439234f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.107780404f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11769181f ? 
             (data[7 /* X21 */] <0.11035913f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2075838f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (data[8 /* X23 */] <0.10832767f ? 
             (data[0 /* X5 */] <0.13052556f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28221104f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04870331f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.111600585f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28359511f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.3810755f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[12 /* X35 */] <0.046875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_96_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.62433875f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11551019f ? 
                 (data[10 /* X28 */] <-0.30363607f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.7403852f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.25868425f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.31245998f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16523582f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15664406f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40898457f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.43428305f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.39762193f ? 
             (data[12 /* X35 */] <-0.48046875f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20525116f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.29904404f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X21 */] <0.073572755f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.051316768f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.34755373f ? 
                     (data[7 /* X21 */] <0.15224718f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.050360348f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.091348045f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.37454534f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.22814941f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_12_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.145137f ? 
             (data[9 /* X27 */] <-0.08532838f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.12548889f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.3093986f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.84375f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15970083f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.29577395f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[6 /* X20 */] <-0.21834257f ? 
             (data[0 /* X5 */] <0.13520122f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2368969f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1684816f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5521503f ? 
                 (data[4 /* X18 */] <-0.26864937f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.1875f ? 
                         (data[3 /* X17 */] <-0.14363988f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24152207f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.19567439f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07081517f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13987689f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15945622f ? 
             (data[10 /* X28 */] <-0.2752376f ? 
                 (data[5 /* X19 */] <0.08721748f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.38010332f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14249454f ? 
                     (data[4 /* X18 */] <-0.6428115f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[6 /* X20 */] <-0.24979907f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27369064f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.12509383f ? 
                 (data[1 /* X12 */] <-0.37161875f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23932004f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.326932f ? 
                     (data[0 /* X5 */] <0.10582291f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22844654f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3538475f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19230938f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (data[0 /* X5 */] <0.12994109f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49464846f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047164857f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.105049565f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.5413101f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.34671804f ? 
                     (data[10 /* X28 */] <0.21352825f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28496128f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.578125f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.18976612f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.8846156f ? 
                         (data[0 /* X5 */] <0.1619379f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17736377f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_12_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_97_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.37199545f ? 
             (data[6 /* X20 */] <-0.43089414f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.6171875f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.36110666f ? 
             (data[1 /* X12 */] <-0.34899324f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.03300557f ? 
                     (data[3 /* X17 */] <-0.111529864f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26491642f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.5707482f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X20 */] <-0.2126317f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.43611827f ? 
             (data[12 /* X35 */] <-0.6640625f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14451145f ? 
                     (data[5 /* X19 */] <-0.046289228f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1632552f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10576901f ? 
                     (data[12 /* X35 */] <-0.625f ? 
                         (data[5 /* X19 */] <0.78882706f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.106305555f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[6 /* X20 */] <0.018790971f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21118075f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <0.07652119f ? 
             (data[12 /* X35 */] <0.13671875f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.00490575f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.053391244f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.122902244f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.047411755f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.07194891f ? 
             (data[6 /* X20 */] <-0.28548732f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24259497f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.47908992f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.017909855f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3093986f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[2 /* X15 */] <0.08204998f ? 
             (data[6 /* X20 */] <-0.28981528f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17085315f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2890625f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <0.0f ? 
             (data[6 /* X20 */] <0.08752943f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_98_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04508724f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0078125f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.222529f ? 
                     (data[10 /* X28 */] <-0.37344497f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.7952881f ? 
                             (data[1 /* X12 */] <-0.25062725f ? 
                                1.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.38789633f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.54000694f ? 
                                1.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1324578f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15950459f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14959778f ? 
                     (data[5 /* X19 */] <0.23957916f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4999975f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.18740937f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0568604f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24816115f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.84375f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19525152f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.003701011f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[12 /* X35 */] <-0.056640625f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14536366f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26617298f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.17524804f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010071439f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.013221194f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18944983f ? 
             (data[1 /* X12 */] <-0.4875745f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23963042f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[6 /* X20 */] <-0.2594886f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27957645f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.28111672f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.0546875f ? 
                 (data[7 /* X21 */] <0.09858749f ? 
                     (data[0 /* X5 */] <0.15857954f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.42252615f ? 
                     (data[10 /* X28 */] <0.23908463f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.34545454f ? 
             (data[8 /* X23 */] <0.0485308f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <0.0f ? 
             (data[1 /* X12 */] <-0.55545104f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_99_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07078651f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0078125f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20449308f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18834625f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17517112f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4158507f ? 
                 (data[12 /* X35 */] <-0.4765625f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.083564706f ? 
             (data[4 /* X18 */] <-0.46990323f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.349008f ? 
                     (data[7 /* X21 */] <0.16186006f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12216011f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.032465477f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[10 /* X28 */] <-0.05533788f ? 
                 (data[12 /* X35 */] <-0.5234375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (data[10 /* X28 */] <-0.38864404f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.43611827f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2593947f ? 
                     (data[10 /* X28 */] <-0.24713555f ? 
                         (data[12 /* X35 */] <-0.87784064f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24144138f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[6 /* X20 */] <-0.38247824f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.06153625f ? 
                                0.0f : 
                                1.0f) : 
                             (data[7 /* X21 */] <0.03766925f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.6917074f ? 
            0.0f : 
             (data[9 /* X27 */] <0.050407622f ? 
                 (data[2 /* X15 */] <0.0970526f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[3 /* X17 */] <-0.0630059f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.197851f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.48187026f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <0.0018528608f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2718982f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.83413494f ? 
             (data[1 /* X12 */] <-0.27263215f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.018790971f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09622233f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.117029205f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[10 /* X28 */] <-0.12828837f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.21484375f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14433356f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.42848676f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055086922f ? 
                 (data[12 /* X35 */] <-0.546875f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3235893f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[0 /* X5 */] <0.13695459f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.03125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28221104f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.34545454f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06763265f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.0988711f ? 
                         (data[12 /* X35 */] <-0.32812345f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[9 /* X27 */] <-0.33939832f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_100_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.16796875f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23621963f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11477706f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24798799f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.14790338f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.23297119f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13123229f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06968043f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.328125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[12 /* X35 */] <-0.056640625f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20889026f ? 
                 (data[5 /* X19 */] <0.17092317f ? 
                     (data[10 /* X28 */] <-0.13110872f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.334751f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2453125f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.116384394f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.5135803f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.094581395f ? 
         (data[9 /* X27 */] <-0.0052789412f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.011655187f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.11589717f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.5961547f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.032560293f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16184318f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3196778f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.47784063f ? 
                 (data[9 /* X27 */] <-0.04356345f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13445252f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (data[4 /* X18 */] <-0.4954143f ? 
             (data[3 /* X17 */] <-0.39450115f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28261775f ? 
                 (data[11 /* X34 */] <-0.92181414f ? 
                     (data[4 /* X18 */] <-0.33667883f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X27 */] <0.06084885f ? 
                         (data[2 /* X15 */] <0.1253944f ? 
                            1.0f : 
                            0.0f) : 
                         (data[5 /* X19 */] <0.17092317f ? 
                             (data[6 /* X20 */] <4.0102273E-4f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.37426975f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24811822f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.24818139f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23731987f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3969064f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.008388331f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <0.4270014f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39918435f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_101_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30981693f ? 
             (data[12 /* X35 */] <-0.6171875f ? 
                 (data[12 /* X35 */] <-0.7977667f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.4246675f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.38530394f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08984375f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.012236361f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.11653542f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4155009f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.044569682f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.03125f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.38530394f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20707177f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.23972033f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.14959778f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[2 /* X15 */] <0.14751594f ? 
             (data[12 /* X35 */] <0.21484375f ? 
                 (data[12 /* X35 */] <-0.15785645f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26967347f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.14674789f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.006692321f ? 
            0.0f : 
             (data[12 /* X35 */] <0.16796875f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.29658648f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.10261378f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14392866f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.030889621f ? 
                 (data[2 /* X15 */] <0.12573604f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.12078739f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.75390625f ? 
                 (data[12 /* X35 */] <0.17051487f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.45423f ? 
                         (data[11 /* X34 */] <-0.79083765f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[9 /* X27 */] <0.16526116f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (data[2 /* X15 */] <0.123875454f ? 
             (data[4 /* X18 */] <-0.15296999f ? 
                 (data[9 /* X27 */] <0.0051622894f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08761708f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.7403852f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14163026f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33492106f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17377543f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_102_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.23099716f ? 
         (data[12 /* X35 */] <-0.32617188f ? 
             (data[1 /* X12 */] <-0.2782885f ? 
                 (data[5 /* X19 */] <0.067224026f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15129253f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.12263069f ? 
                        1.0f : 
                        0.0f))) : 
             (data[2 /* X15 */] <0.0879601f ? 
                 (data[5 /* X19 */] <0.0032501423f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.39283016f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (data[12 /* X35 */] <-0.5390625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1941232f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6956829f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.11578648f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9225632f ? 
         (data[12 /* X35 */] <-0.19140625f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2750434f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24720445f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.30769375f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1636203f ? 
                     (data[5 /* X19 */] <0.2492339f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14061119f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[4 /* X18 */] <-0.29416043f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.56959194f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.49519336f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.03853318f ? 
            0.0f : 
             (data[7 /* X21 */] <0.17289597f ? 
                 (data[12 /* X35 */] <-0.1328125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[4 /* X18 */] <-0.5620265f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.004189078f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.00557497f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23077084f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26442462f ? 
                         (data[12 /* X35 */] <-0.53125f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918498f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.107780404f ? 
                                     (data[11 /* X34 */] <-0.8923075f ? 
                                         (data[3 /* X17 */] <-0.078601785f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0673955f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.56959194f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.1478719f ? 
                     (data[8 /* X23 */] <0.11279266f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[1 /* X12 */] <-0.40414292f ? 
             (data[2 /* X15 */] <0.16160929f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2734375f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_103_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[11 /* X34 */] <-0.25901598f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.37562504f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.1015625f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14279917f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23435982f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.35866383f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.003701011f ? 
                             (data[12 /* X35 */] <-0.762499f ? 
                                 (data[7 /* X21 */] <0.2049612f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                     (data[6 /* X20 */] <-0.34416854f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.148672f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14983155f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X17 */] <-0.2750434f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21410304f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.31755152f ? 
                 (data[0 /* X5 */] <0.07602714f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.255262f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.76988685f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (data[7 /* X21 */] <0.078354985f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (data[9 /* X27 */] <-0.14971596f ? 
             (data[9 /* X27 */] <-0.25540122f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.640625f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11318341f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.15891714f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[8 /* X23 */] <0.12652673f ? 
             (data[2 /* X15 */] <0.09432485f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <0.123496234f ? 
                 (data[6 /* X20 */] <-0.31029233f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18546864f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.071498014f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.052667193f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16793086f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12514693f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14530618f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15624687f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16704859f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.13794035f ? 
                         (data[3 /* X17 */] <-0.09585678f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[3 /* X17 */] <-0.23920608f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[1 /* X12 */] <-0.5328255f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27286264f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.21289062f ? 
            0.0f : 
             (data[2 /* X15 */] <0.10250809f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43819f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18614362f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15393384f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.100430764f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_104_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[10 /* X28 */] <-0.14585839f ? 
             (data[4 /* X18 */] <-0.19778533f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.24023932f ? 
                    0.0f : 
                    1.0f)) : 
             (data[12 /* X35 */] <-0.5078125f ? 
                 (data[6 /* X20 */] <-0.107034996f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.31997123f ? 
             (data[11 /* X34 */] <0.13773225f ? 
                 (data[6 /* X20 */] <-0.344517f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0058826325f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26435447f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.22128741f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11341562f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <-0.31997123f ? 
             (data[11 /* X34 */] <0.13818474f ? 
                 (data[8 /* X23 */] <0.23456553f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31592837f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.24009755f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19909924f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.006303102f ? 
                 (data[10 /* X28 */] <-0.17786323f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.091382876f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.76851636f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12283937f ? 
             (data[9 /* X27 */] <-0.17286886f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.5249092f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[9 /* X27 */] <0.085211724f ? 
             (data[6 /* X20 */] <-0.107034996f ? 
                 (data[12 /* X35 */] <0.453125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                 (data[8 /* X23 */] <0.09821709f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.0882873f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02363043f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.31009492f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04102266f ? 
             (data[10 /* X28 */] <-0.25585446f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.305529f ? 
             (data[9 /* X27 */] <0.08401884f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.34131017f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_105_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23869388f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.16796875f ? 
                 (data[1 /* X12 */] <-0.3825623f ? 
                     (data[7 /* X21 */] <0.15008841f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24741714f ? 
                         (data[6 /* X20 */] <-0.4810181f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.2572131f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25674316f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16220398f ? 
                         (data[3 /* X17 */] <-0.395987f ? 
                             (data[5 /* X19 */] <0.06583723f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.296875f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19423206f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38794708f ? 
             (data[11 /* X34 */] <-0.102165334f ? 
                 (data[6 /* X20 */] <-0.53746533f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23797867f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.49053174f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.30393207f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97763103f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28435796f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09927436f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18487923f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.032560293f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010071439f ? 
            0.0f : 
             (data[11 /* X34 */] <0.08894004f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.11558305f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.64663535f ? 
                 (data[5 /* X19 */] <-0.15030043f ? 
                     (data[6 /* X20 */] <0.24467656f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[6 /* X20 */] <-0.2526536f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.01171875f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19481593f ? 
                     (data[1 /* X12 */] <-0.40306202f ? 
                         (data[9 /* X27 */] <0.1209826f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3539236f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <0.088692136f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27286264f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15948051f ? 
                     (data[2 /* X15 */] <0.08432311f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.39827663f ? 
                 (data[6 /* X20 */] <-0.31997123f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.4519242f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.39391997f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_106_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[10 /* X28 */] <-0.14426112f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.25283483f ? 
                 (data[12 /* X35 */] <-0.171875f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[10 /* X28 */] <-0.084282555f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2386249f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04900903f ? 
             (data[0 /* X5 */] <0.13286339f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.23957916f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21834257f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20434402f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6603899f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.23267165f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[8 /* X23 */] <0.17563526f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[6 /* X20 */] <-0.5365371f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19061467f ? 
             (data[1 /* X12 */] <-0.48980036f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12584989f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.016657006f ? 
                         (data[6 /* X20 */] <-0.38288423f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24144138f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
             (data[7 /* X21 */] <0.11433139f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39736068f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.5250279f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.006692321f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.6120148f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2394793f ? 
             (data[5 /* X19 */] <-0.08653678f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31556472f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.27446222f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.49667227f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X21 */] <0.24242724f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061060123f ? 
             (data[1 /* X12 */] <-0.405557f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25195304f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1702687f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46457642f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07879649f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.2993944f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[6 /* X20 */] <-0.1320056f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.11707597f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[11 /* X34 */] <-0.59329545f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6801217f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.484375f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.09512589f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26783556f ? 
             (data[1 /* X12 */] <-0.43081897f ? 
                 (data[0 /* X5 */] <0.13987689f ? 
                    0.0f : 
                     (data[3 /* X17 */] <0.098416485f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047711242f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.379809f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24737933f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[7 /* X21 */] <0.17544489f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_107_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43030366f ? 
        0.0f : 
         (data[2 /* X15 */] <0.113873705f ? 
             (data[1 /* X12 */] <-0.38336098f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.5889432f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.43872306f ? 
                 (data[10 /* X28 */] <-0.09314835f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.17222866f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.48077032f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[0 /* X5 */] <0.08026218f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.21875f ? 
                        1.0f : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.3125f ? 
                         (data[9 /* X27 */] <0.11853982f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.082285754f ? 
                                 (data[3 /* X17 */] <-0.3049687f ? 
                                    1.0f : 
                                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17536008f ? 
                                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.554548f ? 
                                            1.0f : 
                                             (data[3 /* X17 */] <-0.21327478f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f)) : 
                                0.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.22115546f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.04883824f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.046960223f ? 
                                    1.0f : 
                                    0.0f))))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_12_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.51348877f ? 
             (data[9 /* X27 */] <0.1768047f ? 
                 (data[6 /* X20 */] <-0.29577395f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13111293f ? 
                         (data[11 /* X34 */] <-0.4519242f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.21669383f ? 
                     (data[12 /* X35 */] <-0.5f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.10592654f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.07404538f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20979951f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (data[9 /* X27 */] <-0.18974069f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08283626f ? 
                 (data[11 /* X34 */] <-0.8197119f ? 
                     (data[0 /* X5 */] <0.118836395f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.10218643f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.384756f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04749251f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12839451f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.221701f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[6 /* X20 */] <0.057506654f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3374836f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[6 /* X20 */] <0.05387706f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16310908f ? 
         (data[9 /* X27 */] <0.14089829f ? 
             (data[4 /* X18 */] <-0.34518254f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.16520184f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26081884f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.017628074f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.65625f ? 
                         (data[5 /* X19 */] <0.12515251f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.65350884f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.06693482f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.18477732f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.051728368f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.484375f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4228115f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.47327745f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32187963f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.5617813f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26783556f ? 
            0.0f : 
             (data[8 /* X23 */] <0.10919429f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_108_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51992446f ? 
             (data[0 /* X5 */] <0.10714724f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27285677f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35096288f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1950514f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.041884445f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0625f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26803038f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1042448f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.16796875f ? 
             (data[4 /* X18 */] <-0.3706936f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.067591965f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.05966199f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X21 */] <0.14567405f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.029257394f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <2.65625E-6f ? 
                             (data[7 /* X21 */] <0.050985917f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.51023024f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.229547f ? 
             (data[6 /* X20 */] <-0.38288423f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.075899184f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.060189947f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9661884f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.083143495f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.014346687f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[11 /* X34 */] <0.08894004f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.2932707f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15751767f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.31641778f ? 
                 (data[10 /* X28 */] <-0.18898478f ? 
                     (data[11 /* X34 */] <-0.5817316f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33653983f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.016479202f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.83413494f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.006692321f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09622233f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21324018f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[7 /* X21 */] <0.09123021f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12594898f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.056640625f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13870797f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.10592654f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.013951511f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (data[2 /* X15 */] <0.123875454f ? 
             (data[6 /* X20 */] <-0.02960363f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.078993596f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08283626f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.7619088f ? 
                        1.0f : 
                        0.0f))) : 
             (data[1 /* X12 */] <-0.614843f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.421875f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.080001704f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25186282f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_109_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.37109375f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.14106657f ? 
             (data[7 /* X21 */] <0.120659314f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.16464613f ? 
                     (data[6 /* X20 */] <0.08372202f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.036380585f ? 
                 (data[12 /* X35 */] <-0.3046875f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15483636f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14670135f ? 
                             (data[9 /* X27 */] <0.37332714f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27579f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23662236f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24205436f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.30878034f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.39256313f ? 
                 (data[7 /* X21 */] <0.08975876f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.39117268f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.96046704f ? 
                     (data[8 /* X23 */] <0.025420895f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19364701f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.64472926f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.3039692f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[2 /* X15 */] <0.1229662f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.21350312f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.29893494f ? 
                     (data[9 /* X27 */] <-0.22160819f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45887488f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.25137195f ? 
                    1.0f : 
                     (data[12 /* X35 */] <0.109375f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13243096f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.006263474f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.017876115f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11766748f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (data[12 /* X35 */] <0.01171875f ? 
             (data[7 /* X21 */] <0.09858749f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51992446f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.16793086f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.030889621f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25401163f ? 
            0.0f : 
             (data[7 /* X21 */] <0.13390242f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21531452f ? 
                     (data[1 /* X12 */] <-0.36126822f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23753162f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27286264f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24602115f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                        0.0f : 
                         (data[5 /* X19 */] <-0.06988608f ? 
                             (data[12 /* X35 */] <0.1f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[8 /* X23 */] <0.25768965f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31894833f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.38900968f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.09375f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.095234096f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_12_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_110_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17436743f ? 
            0.0f : 
             (data[7 /* X21 */] <0.17775415f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.1698175f ? 
                     (data[4 /* X18 */] <-0.31400236f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22576708f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22228545f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24656871f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.08727567f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.021553857f ? 
                     (data[9 /* X27 */] <0.17222197f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.36149037f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.857483f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25238502f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2652637f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                     (data[6 /* X20 */] <-0.53774697f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22411816f ? 
                         (data[5 /* X19 */] <0.06906549f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.071498014f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[11 /* X34 */] <0.17868501f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.11832271f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[0 /* X5 */] <0.10877421f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11795971f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3282598f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.11595197f ? 
                 (data[1 /* X12 */] <-0.5130282f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.78646046f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.26102322f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.006692321f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15342605f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.19276062f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[11 /* X34 */] <-0.7610611f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6640625f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2563605f ? 
                     (data[3 /* X17 */] <-0.077420995f ? 
                         (data[6 /* X20 */] <0.004272591f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.076864496f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.1938085f ? 
                 (data[10 /* X28 */] <-0.30398852f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17271969f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25162497f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.011655187f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.49839687f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.11767785f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23837572f ? 
             (data[5 /* X19 */] <0.12229185f ? 
                 (data[1 /* X12 */] <-0.47908992f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.0968088f ? 
                         (data[5 /* X19 */] <-0.03991686f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32884043f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <0.0f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_111_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.084123686f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.09765625f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.039237026f ? 
                     (data[6 /* X20 */] <-0.30179963f ? 
                         (data[7 /* X21 */] <0.14714551f ? 
                            1.0f : 
                            0.0f) : 
                         (data[11 /* X34 */] <-0.25716f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2965458f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[0 /* X5 */] <0.12818773f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.32421875f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16660514f ? 
                     (data[6 /* X20 */] <-0.4215999f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.31755152f ? 
             (data[10 /* X28 */] <-0.1409527f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1929677f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.6874969f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.058891814f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28707403f ? 
        0.018518519f : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (data[2 /* X15 */] <0.13978732f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.88217187f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.1460103f ? 
                     (data[3 /* X17 */] <-0.39450115f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[12 /* X35 */] <-0.0546875f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-5.668693E-4f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.432653f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25436687f ? 
                             (data[10 /* X28 */] <-0.23262446f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (data[5 /* X19 */] <0.17378384f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3515625f ? 
                 (data[2 /* X15 */] <0.105897374f ? 
                     (data[10 /* X28 */] <0.021855371f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.0703125f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.15602638f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21043216f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14363988f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.07017156f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08486924f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.4447127f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6640625f ? 
                 (data[4 /* X18 */] <-0.08843771f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.8458343f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39496824f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.006983552f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.34545454f ? 
             (data[2 /* X15 */] <0.08159536f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.038459376f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <0.4270014f ? 
             (data[8 /* X23 */] <0.1068833f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_112_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.6894531f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.033122223f ? 
                 (data[12 /* X35 */] <-0.18789673f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04900903f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (data[9 /* X27 */] <0.069588706f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.30620867f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X19 */] <0.083537996f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.40224206f ? 
                             (data[12 /* X35 */] <-0.3f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.207981f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.25951782f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[12 /* X35 */] <-0.9765625f ? 
             (data[9 /* X27 */] <0.29403633f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.11827562f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.091339946f ? 
                 (data[3 /* X17 */] <-0.7050913f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14689037f ? 
                 (data[5 /* X19 */] <0.14803784f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04896841f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.33667883f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.13639243f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.29984358f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.59091f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.46091774f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[12 /* X35 */] <0.21484375f ? 
             (data[6 /* X20 */] <0.04298827f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6160413f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15555182f ? 
                 (data[5 /* X19 */] <-0.014834871f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18834625f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.004272591f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (data[9 /* X27 */] <-0.1967015f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.009969333f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.043348115f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.03803607f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14392866f ? 
             (data[9 /* X27 */] <0.0051622894f ? 
                 (data[4 /* X18 */] <-0.54918236f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5561026f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.053800933f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4179793f ? 
                     (data[8 /* X23 */] <0.12479348f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10873816f ? 
             (data[9 /* X27 */] <-0.04356345f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.061960258f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.10653734f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31894833f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7333669f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_113_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
             (data[9 /* X27 */] <0.1826632f ? 
                 (data[2 /* X15 */] <0.15160047f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20105617f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2953404f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32179803f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.19757578f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.09741869f ? 
                             (data[0 /* X5 */] <0.15437144f ? 
                                 (data[4 /* X18 */] <-0.10991392f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            1.0f)))) : 
            0.0f) : 
         (data[8 /* X23 */] <0.13750392f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23557852f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.33368492f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.01908393f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[10 /* X28 */] <-0.34551764f ? 
            1.0f : 
             (data[5 /* X19 */] <0.22527583f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3006134f ? 
                     (data[9 /* X27 */] <0.032615468f ? 
                         (data[8 /* X23 */] <0.13403744f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.4845129f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8696074f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26758093f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48346755f ? 
             (data[2 /* X15 */] <0.12705782f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <0.12801318f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055086922f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2516188f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08896314f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.29242948f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0554924f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53708845f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.5685558f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5586583f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.061060123f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <0.20096016f ? 
             (data[6 /* X20 */] <0.04782773f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14294113f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <0.7527981f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33492106f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (data[0 /* X5 */] <0.12497321f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25103134f ? 
             (data[2 /* X15 */] <0.0970526f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.03444309f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23101844f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.3657856f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2774192f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[6 /* X20 */] <-0.31997123f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_114_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.37199545f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5685558f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.6171875f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.15703931f ? 
                     (data[3 /* X17 */] <-0.39450115f ? 
                         (data[3 /* X17 */] <-0.55145746f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (data[9 /* X27 */] <-0.029641813f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.39256313f ? 
                     (data[11 /* X34 */] <0.21514219f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16370775f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.05322269f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.3389129f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43488014f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.43410444f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.43611827f ? 
             (data[8 /* X23 */] <0.1090562f ? 
                 (data[12 /* X35 */] <-0.7084538f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8260157f ? 
                 (data[7 /* X21 */] <0.036786377f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34678993f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11598311f ? 
                             (data[5 /* X19 */] <0.17192984f ? 
                                 (data[3 /* X17 */] <-0.33477226f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f))) : 
                 (data[11 /* X34 */] <-0.5384625f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[6 /* X20 */] <0.05387706f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.15519276f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16796875f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.0064381305f ? 
                 (data[9 /* X27 */] <-0.120132476f ? 
                     (data[0 /* X5 */] <0.111864716f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09984363f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.37727514f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061060123f ? 
             (data[12 /* X35 */] <-0.5078125f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.39424425f ? 
                     (data[12 /* X35 */] <0.49204132f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.520263f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.51111186f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[8 /* X23 */] <0.06470773f ? 
             (data[5 /* X19 */] <0.05935719f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <-0.06079079f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.07140674f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[8 /* X23 */] <0.086662136f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_115_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21979418f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7916877f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.13987689f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15322913f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.16860485f ? 
             (data[7 /* X21 */] <0.1258094f ? 
                 (data[9 /* X27 */] <0.10261378f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21979418f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7916877f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
                 (data[5 /* X19 */] <0.19952983f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.06795387f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.43305394f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9661884f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (data[9 /* X27 */] <-0.33591792f ? 
            1.0f : 
             (data[5 /* X19 */] <0.016447198f ? 
                 (data[7 /* X21 */] <0.11896373f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09622233f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.16796875f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.7115391f ? 
                 (data[3 /* X17 */] <0.0065076537f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3192724f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[5 /* X19 */] <-0.08557317f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[9 /* X27 */] <0.180923f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18246043f ? 
                 (data[8 /* X23 */] <0.11554952f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.22023672f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11923218f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32186028f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <0.35612482f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[3 /* X17 */] <-0.25773606f ? 
                                1.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.012754144f ? 
                                    0.0f : 
                                    1.0f))))) : 
                0.0f)) : 
         (data[5 /* X19 */] <0.20096016f ? 
             (data[6 /* X20 */] <-0.03686282f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.10261378f ? 
                     (data[7 /* X21 */] <0.21188954f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.15155987f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1480593f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[9 /* X27 */] <-0.045303658f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19055343f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.03928255f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38671875f ? 
             (data[11 /* X34 */] <-0.92067325f ? 
                 (data[3 /* X17 */] <-0.0421008f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.15155987f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12818773f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_116_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23445159f ? 
             (data[10 /* X28 */] <-0.083564706f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.191204f ? 
                     (data[11 /* X34 */] <-0.732737f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04298827f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33928168f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <-0.5729742f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22182184f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.019207953f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26261306f ? 
                     (data[5 /* X19 */] <0.21669383f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32832092f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4002378f ? 
                     (data[8 /* X23 */] <0.19874518f ? 
                         (data[3 /* X17 */] <-0.11974833f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.003954213f ? 
            0.0f : 
             (data[10 /* X28 */] <0.14324819f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.31755152f ? 
             (data[7 /* X21 */] <0.1147735f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.255262f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3084189f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19909924f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.21033369f ? 
                 (data[1 /* X12 */] <-0.26446402f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.10261378f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.004272591f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.22613095f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.1967015f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[1 /* X12 */] <-0.405557f ? 
             (data[6 /* X20 */] <-0.06831931f ? 
                 (data[4 /* X18 */] <-0.2573111f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23232478f ? 
                     (data[9 /* X27 */] <0.06084885f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5234334f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16049814f ? 
                                1.0f : 
                                 (data[4 /* X18 */] <-0.46109828f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.1276348f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3883338f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.57186776f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.009137663f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27286264f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4258182f ? 
                 (data[1 /* X12 */] <-0.43076766f ? 
                     (data[0 /* X5 */] <0.16793086f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_117_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[5 /* X19 */] <0.097976185f ? 
             (data[2 /* X15 */] <0.12069308f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20047842f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4374972f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17399576f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.694073f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35637152f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.10912109f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.09410477f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1736317f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[5 /* X19 */] <0.085103184f ? 
             (data[2 /* X15 */] <0.12069308f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20047842f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.16473791f ? 
                     (data[5 /* X19 */] <0.39221743f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.009259259f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <6.339786E-4f ? 
            0.0f : 
             (data[8 /* X23 */] <0.15079212f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.76021683f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22527583f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.60965216f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.21140851f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.01508525f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <0.028244467f ? 
                 (data[5 /* X19 */] <0.07938185f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03330935f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[5 /* X19 */] <0.2152635f ? 
             (data[3 /* X17 */] <-0.3228265f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13572693f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.062346112f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[5 /* X19 */] <0.23470819f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.50240487f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12839451f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18380031f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16994798f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14125969f ? 
                                 (data[2 /* X15 */] <0.19575931f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08015102f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16442412f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.119075544f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <0.2710301f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[5 /* X19 */] <-0.056499787f ? 
             (data[2 /* X15 */] <0.12342083f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27269685f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5546875f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16417272f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.15282845f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40324643f ? 
             (data[10 /* X28 */] <0.42756295f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.082551785f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.16353977f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_118_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19061467f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14279917f ? 
                 (data[9 /* X27 */] <0.123496234f ? 
                     (data[8 /* X23 */] <0.15435612f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16690907f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.11605653f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2608778f ? 
                    0.0f : 
                    1.0f))) : 
         (data[0 /* X5 */] <0.12701881f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35456866f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13259041f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.03716278f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14677775f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21118075f ? 
                 (data[9 /* X27 */] <-0.07140674f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.48768517f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04749251f ? 
                             (data[5 /* X19 */] <0.16176903f ? 
                                 (data[6 /* X20 */] <-0.30932444f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[7 /* X21 */] <0.15569057f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <-0.5115237f ? 
                                    0.0f : 
                                    1.0f))))) : 
                1.0f) : 
             (data[7 /* X21 */] <0.109396175f ? 
                 (data[9 /* X27 */] <0.16526116f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.0897786f ? 
                    0.0f : 
                    1.0f))) : 
        0.009259259f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41045797f ? 
             (data[2 /* X15 */] <0.109782085f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19961745f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <0.12093181f ? 
             (data[11 /* X34 */] <-0.63942385f ? 
                 (data[5 /* X19 */] <0.033611197f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4601086f ? 
                 (data[0 /* X5 */] <0.07540377f ? 
                     (data[8 /* X23 */] <0.09912344f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[11 /* X34 */] <-0.23377563f ? 
             (data[0 /* X5 */] <0.09370471f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.11653542f ? 
                     (data[5 /* X19 */] <-0.21812743f ? 
                         (data[4 /* X18 */] <-0.38203183f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.5130282f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5594913f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04749251f ? 
                                 (data[12 /* X35 */] <-0.5929305f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)))) : 
            0.0f) : 
         (data[9 /* X27 */] <0.24705079f ? 
             (data[1 /* X12 */] <-0.5271691f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.81940395f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (data[1 /* X12 */] <-0.51444227f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24669823f ? 
                 (data[2 /* X15 */] <0.08432311f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19095582f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.19945867f ? 
                             (data[9 /* X27 */] <0.2467352f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_119_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[10 /* X28 */] <-0.14585839f ? 
             (data[7 /* X21 */] <0.17951752f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.33465147f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
             (data[7 /* X21 */] <0.16112433f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19527869f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13169447f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.009802201f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.34204406f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.08853599f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[10 /* X28 */] <-0.33912852f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029984051f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.07127504f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.34551764f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0026958566f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20914464f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.61673343f ? 
                         (data[11 /* X34 */] <0.21096443f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.34029698f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17282069f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[9 /* X27 */] <0.28359511f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[3 /* X17 */] <-0.39333457f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.30820078f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.45063666f ? 
                        1.0f : 
                         (data[11 /* X34 */] <0.31842768f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0026958566f ? 
             (data[11 /* X34 */] <-0.85622376f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.11090863f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15445727f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16874743f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (data[7 /* X21 */] <0.07945857f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16796875f ? 
            0.0f : 
             (data[5 /* X19 */] <0.08796385f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4276487f ? 
                    1.0f : 
                     (data[12 /* X35 */] <0.29616594f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                 (data[12 /* X35 */] <0.21319266f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18837185f ? 
                         (data[8 /* X23 */] <0.11975784f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4029931f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18077795f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20285238f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29679248f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16494875f ? 
                        0.0f : 
                        1.0f))) : 
             (data[7 /* X21 */] <0.14640978f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13433644f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26783556f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19717498f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.19884184f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <0.01171875f ? 
                 (data[11 /* X34 */] <-0.6033662f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20876047f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06155592f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_120_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12584989f ? 
             (data[11 /* X34 */] <-0.3581744f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.375f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.12654513f ? 
                 (data[11 /* X34 */] <-0.43750116f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.30273438f ? 
             (data[6 /* X20 */] <-0.46515504f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.34149045f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.036520716f ? 
                     (data[4 /* X18 */] <-0.20097409f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3269203f ? 
                             (data[2 /* X15 */] <0.14686276f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1173607f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)) : 
                     (data[8 /* X23 */] <0.18950121f ? 
                         (data[9 /* X27 */] <0.14152929f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[12 /* X35 */] <-0.09154989f ? 
                 (data[2 /* X15 */] <0.14615206f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (data[10 /* X28 */] <-0.38864404f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.09855957f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029984051f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.328125f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18909949f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.034551088f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04749251f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24485013f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1712313f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (data[0 /* X5 */] <0.11416073f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[5 /* X19 */] <-0.14216448f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[11 /* X34 */] <-0.33473697f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.03928255f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28707403f ? 
         (data[5 /* X19 */] <-0.06508178f ? 
             (data[11 /* X34 */] <-0.25360733f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.76021683f ? 
             (data[6 /* X20 */] <0.055086922f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <-0.28178415f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.26074857f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3895629f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.26366925f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[5 /* X19 */] <-0.19524209f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (data[10 /* X28 */] <-0.102731995f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                 (data[12 /* X35 */] <-0.1796875f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6708334f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.50634134f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.3687094f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.20382419f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.015324607f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.039800894f ? 
                         (data[4 /* X18 */] <-0.5784503f ? 
                             (data[0 /* X5 */] <0.1297484f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[0 /* X5 */] <0.16377649f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5722656f ? 
             (data[4 /* X18 */] <-0.032649975f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.037998587f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.055708002f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.10480941f ? 
                            0.0f : 
                             (data[10 /* X28 */] <0.1722172f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[11 /* X34 */] <-0.1f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.060840577f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.17073381f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.24152577f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_12_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28221104f ? 
             (data[2 /* X15 */] <0.08432311f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.49902666f ? 
                 (data[1 /* X12 */] <-0.5809047f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <0.19016425f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.44515166f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_121_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.23099716f ? 
         (data[3 /* X17 */] <-0.33178583f ? 
             (data[6 /* X20 */] <-0.13849148f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0390625f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.078125f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.07250287f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.067591965f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.05859375f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22838905f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.09136687f ? 
                 (data[8 /* X23 */] <0.15311779f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.1875f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9225632f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2757201f ? 
             (data[10 /* X28 */] <-0.37107402f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.39256313f ? 
                     (data[0 /* X5 */] <0.07675543f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15842693f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.033261757f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.050623063f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.049108546f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.703125f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3043191f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5550671f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11021654f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[3 /* X17 */] <-0.47812155f ? 
             (data[3 /* X17 */] <-0.8857711f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16150182f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.3706936f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.08037016f ? 
                         (data[5 /* X19 */] <0.14504664f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[10 /* X28 */] <-0.102731995f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19921875f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15799507f ? 
                 (data[12 /* X35 */] <-0.25f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.19748491f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.49519336f ? 
                         (data[5 /* X19 */] <0.27069986f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[3 /* X17 */] <-0.35717058f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.10945472f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39881203f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_122_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2765366f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.34234798f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.094750606f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.33654267f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.08370212f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[6 /* X20 */] <-0.259478f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21746731f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35456866f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.311575f ? 
                     (data[6 /* X20 */] <0.18947206f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[7 /* X21 */] <0.011771641f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.31513178f ? 
                 (data[12 /* X35 */] <-0.84375f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.46394518f ? 
                         (data[11 /* X34 */] <0.38461125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.057222165f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
        0.012987013f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02363043f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47716454f ? 
                 (data[2 /* X15 */] <0.12251158f ? 
                     (data[6 /* X20 */] <0.18484494f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.22630644f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07793812f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.05750084f ? 
                 (data[11 /* X34 */] <-0.26041725f ? 
                     (data[6 /* X20 */] <-0.14091122f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.03300557f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15303132f ? 
                        0.0f : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.5130282f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16559303f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.28263175f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[0 /* X5 */] <0.1077317f ? 
                 (data[8 /* X23 */] <0.13865942f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.25999147f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.15397225f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.4112134f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08526856f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.41930473f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.25857908f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09622233f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4519242f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.009946609f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1466139f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.18974069f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_123_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (data[11 /* X34 */] <-0.38161185f ? 
             (data[10 /* X28 */] <-0.15065022f ? 
                 (data[6 /* X20 */] <-0.107034996f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22145398f ? 
                 (data[1 /* X12 */] <-0.3829315f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.31928185f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.32617188f ? 
             (data[0 /* X5 */] <0.14161178f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.042035587f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16554013f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.16061383f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11130271f ? 
                         (data[4 /* X18 */] <-0.26864937f ? 
                             (data[1 /* X12 */] <-0.20423812f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07748712f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.07244495f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15564664f ? 
             (data[4 /* X18 */] <-0.5379327f ? 
                 (data[7 /* X21 */] <0.1324984f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.53774697f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
                 (data[1 /* X12 */] <-0.24717845f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.17579009f ? 
                         (data[3 /* X17 */] <-0.47812155f ? 
                            0.0f : 
                            1.0f) : 
                         (data[5 /* X19 */] <0.21290408f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23179157f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1015625f ? 
             (data[0 /* X5 */] <0.13570134f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42668387f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47867572f ? 
                 (data[5 /* X19 */] <-0.22181678f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11974833f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23764f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.24253988f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.16796875f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.93149054f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3810466f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14519662f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29808584f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[5 /* X19 */] <-0.25594187f ? 
             (data[4 /* X18 */] <-0.43021938f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.3990392f ? 
                 (data[10 /* X28 */] <-0.27543423f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27546033f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.099609375f ? 
             (data[11 /* X34 */] <-0.7656255f ? 
                 (data[9 /* X27 */] <0.29751673f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.4112134f ? 
                 (data[4 /* X18 */] <-0.18361253f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16155854f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17609498f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.14560543f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.087137155f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47867572f ? 
                 (data[2 /* X15 */] <0.08068611f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.13338159f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.10106179f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16442412f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45311934f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_124_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.091382876f ? 
             (data[11 /* X34 */] <-0.51322216f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.31335747f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24129234f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.34369028f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53508604f ? 
                         (data[2 /* X15 */] <0.09348911f ? 
                             (data[3 /* X17 */] <-0.5707482f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[2 /* X15 */] <0.1783323f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.17972505f ? 
                                0.0f : 
                                 (data[11 /* X34 */] <0.0256375f ? 
                                    0.0f : 
                                    1.0f)))))) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.61075366f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33112046f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1914345f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.12248249f ? 
                         (data[8 /* X23 */] <0.11185593f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[12 /* X35 */] <-0.4765625f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.43611827f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36201286f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.21874747f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.36087978f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.94330305f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17974533f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (data[9 /* X27 */] <-0.18974069f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.80889463f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13619986f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16995306f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20811182f ? 
                 (data[2 /* X15 */] <0.15888155f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24501413f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.30722848f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27511197f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (data[9 /* X27 */] <0.06780967f ? 
             (data[11 /* X34 */] <-0.3581744f ? 
                 (data[3 /* X17 */] <-0.45423f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.06606947f ? 
            0.0f : 
             (data[5 /* X19 */] <0.1938085f ? 
                 (data[7 /* X21 */] <0.09410757f ? 
                     (data[5 /* X19 */] <0.14183362f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.16982009f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.16445453f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[12 /* X35 */] <-0.0546875f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22878805f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.15755618f ? 
                                 (data[1 /* X12 */] <-0.2618718f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01508525f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.38900968f ? 
             (data[5 /* X19 */] <0.11943118f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.11119065f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.14904024f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.1018472f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
        0.9583333f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_125_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[9 /* X27 */] <0.15830034f ? 
             (data[12 /* X35 */] <-0.88671875f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.3581744f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.02960363f ? 
             (data[4 /* X18 */] <-0.28244016f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
                     (data[10 /* X28 */] <-0.15703931f ? 
                         (data[6 /* X20 */] <-0.4662825f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17278264f ? 
                             (data[5 /* X19 */] <0.23500209f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26154f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20453958f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.35f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[9 /* X27 */] <0.113055006f ? 
            1.0f : 
             (data[7 /* X21 */] <0.1147735f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.45929477f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.118704736f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25238502f ? 
             (data[8 /* X23 */] <0.043908816f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27344695f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4228115f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.8125f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[10 /* X28 */] <-0.016470527f ? 
                        1.0f : 
                        0.0f))) : 
             (data[3 /* X17 */] <-0.20124213f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[9 /* X27 */] <-0.17407884f ? 
            1.0f : 
             (data[8 /* X23 */] <0.12607728f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.048073683f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.11540695f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.14163026f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.8954329f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.17235984f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.34131017f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18797752f ? 
             (data[6 /* X20 */] <-0.2526536f ? 
                 (data[11 /* X34 */] <-0.2572131f ? 
                     (data[6 /* X20 */] <-0.52895963f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.075899184f ? 
                     (data[10 /* X28 */] <-0.15703931f ? 
                         (data[9 /* X27 */] <0.07210462f ? 
                             (data[12 /* X35 */] <0.2f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06560979f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26154f ? 
                                1.0f : 
                                0.0f) : 
                             (data[2 /* X15 */] <0.10890403f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[6 /* X20 */] <-0.24347663f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.21875f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[2 /* X15 */] <0.08204998f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.053800933f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45703125f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.7115391f ? 
                 (data[1 /* X12 */] <-0.67140675f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.13847244f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.11130271f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_126_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[9 /* X27 */] <0.22268793f ? 
             (data[3 /* X17 */] <-0.34970447f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28514996f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12639284f ? 
                 (data[11 /* X34 */] <-0.55288553f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.046875f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.13148293f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (data[6 /* X20 */] <-0.33259854f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.35096288f ? 
                         (data[7 /* X21 */] <0.10838541f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.70091885f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.9031081f ? 
                     (data[6 /* X20 */] <-0.198083f ? 
                         (data[0 /* X5 */] <0.10480941f ? 
                             (data[6 /* X20 */] <-0.57064927f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15493768f ? 
                     (data[3 /* X17 */] <-0.15167338f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.51348877f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.17908408f ? 
                 (data[6 /* X20 */] <-0.43127882f ? 
                     (data[5 /* X19 */] <0.2260254f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.15597424f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.14831153f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.36533424f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18543425f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.092516616f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21141012f ? 
                                1.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.523075f ? 
                                     (data[10 /* X28 */] <-0.15296409f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23269553f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13607176f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28707403f ? 
         (data[9 /* X27 */] <-0.10273042f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.18974069f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.8197119f ? 
                 (data[6 /* X20 */] <0.057506654f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12948805f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.15400949f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12041964f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.22177292f ? 
                         (data[12 /* X35 */] <0.21875f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (data[5 /* X19 */] <0.1380255f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26081884f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08654341f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19128916f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.19856808f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35114515f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10945472f ? 
                 (data[5 /* X19 */] <0.48044276f ? 
                     (data[12 /* X35 */] <-0.390625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.060932074f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32187963f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.089883894f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28221104f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.34545454f ? 
                 (data[5 /* X19 */] <-0.060120188f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.085712194f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[8 /* X23 */] <0.10919429f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_127_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.23099716f ? 
         (data[4 /* X18 */] <-0.40896016f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0963429f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26967347f ? 
                     (data[11 /* X34 */] <-0.22115546f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19230938f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.09562298f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3248107f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.09852452f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[12 /* X35 */] <-0.30273438f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21531452f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.041884445f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24798799f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.37408578f ? 
                     (data[11 /* X34 */] <-0.33653983f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.11416073f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.48407605f ? 
                 (data[9 /* X27 */] <0.20702608f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9225632f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21203336f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.57594955f ? 
                     (data[6 /* X20 */] <-0.35384747f ? 
                         (data[9 /* X27 */] <-0.029357014f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.066669f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <-0.5248677f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.019207953f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.31088072f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.5180908f ? 
                        0.0f : 
                        1.0f))) : 
             (data[10 /* X28 */] <-0.102731995f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18916944f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.25283483f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[0 /* X5 */] <0.11912863f ? 
             (data[10 /* X28 */] <-0.061202873f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15743734f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <-0.18974069f ? 
                 (data[9 /* X27 */] <-0.27182996f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26198673f ? 
                     (data[4 /* X18 */] <-0.22436939f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.03125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.54696643f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[11 /* X34 */] <-0.83413494f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.014641631f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[4 /* X18 */] <-0.5620265f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.5812594f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.06780967f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.08241338f ? 
                     (data[1 /* X12 */] <-0.042581275f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.10614509f ? 
                         (data[9 /* X27 */] <0.21356641f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[12 /* X35 */] <-0.099609375f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.43725586f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.15410925f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13956851f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24267021f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.013951511f ? 
                     (data[1 /* X12 */] <-0.5243409f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07306462f ? 
            0.0f : 
             (data[10 /* X28 */] <0.48187026f ? 
                 (data[4 /* X18 */] <-0.021267325f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15367927f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2744301f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17260653f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.51868457f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.1796875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_128_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47636786f ? 
             (data[10 /* X28 */] <-0.14426112f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3025138f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.13069482f ? 
                 (data[7 /* X21 */] <0.19021563f ? 
                     (data[12 /* X35 */] <-0.046875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34162077f ? 
                 (data[10 /* X28 */] <-0.3551013f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.15948051f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13286339f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.37299874f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24253988f ? 
                     (data[12 /* X35 */] <-0.2271181f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43488014f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.36463672f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[6 /* X20 */] <-0.46636492f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13787203f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16494825f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.4215999f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19985177f ? 
                     (data[7 /* X21 */] <0.13537386f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4679503f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.4951597f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0755785f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[6 /* X20 */] <0.006692321f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.76618505f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2394793f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06476584f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47784767f ? 
                     (data[5 /* X19 */] <-0.13802877f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.18771507f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061060123f ? 
             (data[12 /* X35 */] <-0.6015625f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.52999735f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.064560935f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16083157f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29242948f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47555995f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.06793919f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3357756f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24640936f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13047f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4519242f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06748213f ? 
                        1.0f : 
                        0.0f))) : 
             (data[6 /* X20 */] <-0.28851476f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_129_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.5332031f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23621963f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03621532f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.17490341f ? 
                     (data[10 /* X28 */] <0.17519367f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.013284654f ? 
                 (data[7 /* X21 */] <0.16656618f ? 
                     (data[9 /* X27 */] <-0.03660263f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12978096f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.1710133f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.39498287f ? 
             (data[0 /* X5 */] <0.07588219f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.08975876f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17225413f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.034124088f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.40321872f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[6 /* X20 */] <0.018790971f ? 
            0.0f : 
             (data[2 /* X15 */] <0.13342257f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20913514f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12801659f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.21278368f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061060123f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.035546735f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                     (data[4 /* X18 */] <-0.49372295f ? 
                         (data[10 /* X28 */] <-0.117551014f ? 
                             (data[12 /* X35 */] <-0.222225f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18252203f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.150272f ? 
                             (data[8 /* X23 */] <0.123893686f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.29982954f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.34545454f ? 
             (data[2 /* X15 */] <0.08159536f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12654513f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.10568609f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_130_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.34613687f ? 
             (data[12 /* X35 */] <-0.68359375f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35508275f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.11609571f ? 
                         (data[5 /* X19 */] <-0.03723075f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[12 /* X35 */] <-0.10546875f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04900903f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26617298f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19598484f ? 
                     (data[9 /* X27 */] <-0.008759351f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.38216767f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3409555f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20580402f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.421875f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
        0.024590164f : 
         (data[10 /* X28 */] <-0.36149037f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19890714f ? 
                 (data[3 /* X17 */] <-0.4064469f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.13403744f ? 
                         (data[3 /* X17 */] <-0.29608777f ? 
                            0.0f : 
                            1.0f) : 
                         (data[1 /* X12 */] <-0.23082554f ? 
                             (data[4 /* X18 */] <-0.29132587f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24625304f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))) : 
                 (data[2 /* X15 */] <0.11887458f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.057033014f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19884665f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.8342124f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.17087574f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18714738f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23727213f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.27744865f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20884292f ? 
                     (data[5 /* X19 */] <-0.22957009f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[9 /* X27 */] <0.05388803f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22556567f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[1 /* X12 */] <-0.40414292f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2935553f ? 
                 (data[10 /* X28 */] <0.23019388f ? 
                     (data[11 /* X34 */] <-0.552625f ? 
                         (data[4 /* X18 */] <-0.24597287f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[12 /* X35 */] <0.34765625f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18252203f ? 
                     (data[9 /* X27 */] <0.0675285f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.93333346f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23161072f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1291706f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5235022f ? 
                                        1.0f : 
                                         (data[0 /* X5 */] <0.12057263f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.100528084f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.124080904f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1639587f ? 
                            0.0f : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[1 /* X12 */] <-0.4635349f ? 
             (data[0 /* X5 */] <0.12468097f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04102266f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1058716f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48346755f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_131_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.033203125f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14279917f ? 
                 (data[5 /* X19 */] <0.07938185f ? 
                     (data[0 /* X5 */] <0.123156086f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.12978557f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5721121f ? 
                         (data[9 /* X27 */] <0.28555733f ? 
                             (data[6 /* X20 */] <-0.29749048f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f))) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05360385f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.31755152f ? 
             (data[5 /* X19 */] <0.24816115f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.16433704f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.39391997f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16676195f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.18268985f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2210177f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09501247f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.03853318f ? 
                 (data[12 /* X35 */] <0.140625f ? 
                     (data[0 /* X5 */] <0.1625303f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[6 /* X20 */] <0.20468011f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0234375f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16070005f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16186006f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.01508525f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X18 */] <-0.21195814f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.46289062f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.31386715f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <0.14517717f ? 
             (data[10 /* X28 */] <-0.13848855f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.09328445f ? 
                     (data[11 /* X34 */] <-0.50961643f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.030546198f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17621335f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.07196523f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[6 /* X20 */] <-0.03444309f ? 
                         (data[6 /* X20 */] <-0.31282794f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.39747873f ? 
             (data[9 /* X27 */] <-0.03660263f ? 
                 (data[8 /* X23 */] <0.11786051f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.021484375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_132_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43030366f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[12 /* X35 */] <-0.17578125f ? 
                 (data[1 /* X12 */] <-0.24601015f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.07134604f ? 
                 (data[12 /* X35 */] <-0.5f ? 
                     (data[4 /* X18 */] <-0.35935533f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.041884445f ? 
                     (data[6 /* X20 */] <-0.46999452f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
                         (data[6 /* X20 */] <-0.28609502f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24720445f ? 
             (data[10 /* X28 */] <-0.36149037f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.042753324f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8345977f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17161104f ? 
                                0.0f : 
                                 (data[5 /* X19 */] <-0.03377665f ? 
                                     (data[4 /* X18 */] <-0.3898956f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (data[6 /* X20 */] <-0.24737933f ? 
                                 (data[0 /* X5 */] <0.1446576f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16539893f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[1 /* X12 */] <-0.34820473f ? 
                0.0f : 
                1.0f)) : 
        0.6666667f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (data[9 /* X27 */] <-0.18974069f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1632552f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.05793012f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X27 */] <0.15481992f ? 
             (data[8 /* X23 */] <0.050264042f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16310908f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2842563f ? 
             (data[9 /* X27 */] <0.13713877f ? 
                 (data[4 /* X18 */] <-0.41037744f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.401683f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.114034876f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.011655187f ? 
                     (data[6 /* X20 */] <-0.20866366f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.00991464f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.30549866f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3348523f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.12594898f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18179119f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.18941513f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.49243042f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28061375f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06763265f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.22344032f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.10977204f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_133_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[12 /* X35 */] <-0.32617188f ? 
             (data[5 /* X19 */] <0.25960383f ? 
                 (data[4 /* X18 */] <-0.20061989f ? 
                     (data[1 /* X12 */] <-0.42252615f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.16359581f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.34623244f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.31507507f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1823299f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.14221472f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24152207f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.2570677f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.56850636f ? 
             (data[1 /* X12 */] <-0.3659624f ? 
                 (data[1 /* X12 */] <-0.40003377f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05117248f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10011263f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41743332f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.24975497f ? 
                        1.0f : 
                        0.0f))) : 
             (data[11 /* X34 */] <-0.5889432f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.021855371f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.17581904f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.12342083f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47716454f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.1617606f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.056640625f ? 
            0.0f : 
             (data[5 /* X19 */] <0.19094783f ? 
                 (data[1 /* X12 */] <-0.4112134f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3334611f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.12342083f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15425861f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39881203f ? 
                 (data[1 /* X12 */] <-0.42252615f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_134_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25901598f ? 
             (data[6 /* X20 */] <-0.37155592f ? 
                 (data[7 /* X21 */] <0.22513263f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.09279777f ? 
                     (data[1 /* X12 */] <-0.3659624f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4666461f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.51437354f ? 
                             (data[9 /* X27 */] <0.51681656f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19049105f ? 
                 (data[6 /* X20 */] <-0.39140055f ? 
                     (data[9 /* X27 */] <0.03300557f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.207674f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09765668f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.16618621f ? 
                     (data[12 /* X35 */] <-0.796875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[11 /* X34 */] <-0.2932707f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.57103735f ? 
                 (data[0 /* X5 */] <0.07558651f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3532033f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.908975f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[11 /* X34 */] <-0.97656256f ? 
             (data[8 /* X23 */] <0.1392693f ? 
                 (data[2 /* X15 */] <0.15160047f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27281302f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21118075f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19181892f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.20521793f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29403633f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.13637014f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.061272793f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1702687f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18077795f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X27 */] <0.11653542f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2732746f ? 
             (data[11 /* X34 */] <-0.90264446f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.22329639f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.07892926f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[7 /* X21 */] <0.20894662f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27256075f ? 
             (data[2 /* X15 */] <0.115237586f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.56959194f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <0.0703125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_135_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (data[4 /* X18 */] <-0.43872306f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.15065022f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.222529f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21889775f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.16796875f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18892346f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.59698486f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16774587f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.40224206f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.156631f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14125969f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17032093f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.044473145f ? 
                0.0f : 
                 (data[11 /* X34 */] <7.5381144E-4f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.375f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.029257394f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[10 /* X28 */] <-0.37107402f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.3228265f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.49081898f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.16994798f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2f ? 
                                 (data[0 /* X5 */] <0.08918161f ? 
                                     (data[5 /* X19 */] <0.34485167f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f))))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.01171875f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15228303f ? 
             (data[11 /* X34 */] <-0.76201975f ? 
                 (data[12 /* X35 */] <0.2109375f ? 
                     (data[8 /* X23 */] <0.12834263f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.11901601f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <0.12175603f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47716454f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0658289f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.098575674f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.18098897f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.13765275f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26081884f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13286339f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.2573997f ? 
                         (data[0 /* X5 */] <0.13897344f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.004272591f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11058451f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f) : 
             (data[7 /* X21 */] <0.13335656f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.5193485f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.045663014f ? 
                        1.0f : 
                         (data[10 /* X28 */] <0.48362538f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[7 /* X21 */] <0.13793303f ? 
                         (data[5 /* X19 */] <0.12515251f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.77734375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.604878f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.92788476f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.37109375f ? 
             (data[7 /* X21 */] <0.09123021f ? 
                 (data[2 /* X15 */] <0.10432659f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15947351f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09417451f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.28565675f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_136_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[12 /* X35 */] <-0.6171875f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44369397f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35636905f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.0897786f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22182184f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19007896f ? 
                 (data[5 /* X19 */] <-0.05220879f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.060189947f ? 
                         (data[6 /* X20 */] <-0.40224206f ? 
                             (data[5 /* X19 */] <0.20848824f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[2 /* X15 */] <0.14887981f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.56850636f ? 
             (data[4 /* X18 */] <-0.47557235f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.010380218f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19114704f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.21097249f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16676195f ? 
            0.0f : 
             (data[0 /* X5 */] <0.17002669f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.19711289f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[11 /* X34 */] <-0.97656256f ? 
             (data[9 /* X27 */] <0.13045706f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <-0.14947143f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18503547f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21128312f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.43028966f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.5997605f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7519531f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.014641631f ? 
                 (data[5 /* X19 */] <0.13659517f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.51762736f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.113419086f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16855562f ? 
                         (data[2 /* X15 */] <0.0988711f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.10592654f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.092516616f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[5 /* X19 */] <0.15581109f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3969064f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16220398f ? 
                 (data[9 /* X27 */] <0.04692721f ? 
                     (data[2 /* X15 */] <0.14251506f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.115385f ? 
                             (data[6 /* X20 */] <-0.030571522f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2774192f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[8 /* X23 */] <0.17794625f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_137_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[4 /* X18 */] <-0.44155762f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09314835f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15716672f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.5171764f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.28534982f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[12 /* X35 */] <-0.17578125f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22366117f ? 
                     (data[7 /* X21 */] <0.033199705f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12041964f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1656078f ? 
                                1.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23567465f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22934838f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.41796875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.51348877f ? 
             (data[6 /* X20 */] <-0.31997123f ? 
                 (data[12 /* X35 */] <-0.734375f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1592745f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.118951134f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[7 /* X21 */] <0.15303132f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.39977646f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[12 /* X35 */] <-0.890625f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.032201633f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[8 /* X23 */] <0.14068154f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (data[9 /* X27 */] <-0.022680992f ? 
             (data[6 /* X20 */] <0.0018528608f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.16796875f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.062346112f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.084629446f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.1765746f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07444476f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.5073718f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1481805f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
                 (data[12 /* X35 */] <-0.0546875f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1673126f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09735607f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1171875f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.12652709f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32187963f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.038827848f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27269685f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047411755f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.098349705f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.29826295f ? 
                        0.0f : 
                        1.0f))) : 
             (data[12 /* X35 */] <-0.1796875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_138_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[3 /* X17 */] <-0.7752727f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.08316044f ? 
                 (data[5 /* X19 */] <0.04505386f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23156084f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.067591965f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17777233f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13769893f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14676245f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.328125f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.068208784f ? 
                         (data[5 /* X19 */] <0.17092317f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.013951511f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.2582519f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[3 /* X17 */] <-0.11974833f ? 
            1.0f : 
             (data[8 /* X23 */] <0.12883772f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38742787f ? 
                     (data[1 /* X12 */] <-0.37727514f ? 
                         (data[4 /* X18 */] <-0.5108633f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25883093f ? 
             (data[10 /* X28 */] <-0.25287575f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.083329834f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.00390625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05255335f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0026281013f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0036671462f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42307812f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18078893f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5550671f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.01815307f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.055050325f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[12 /* X35 */] <0.1328125f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X28 */] <0.12574244f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4054978f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.37727514f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44034114f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.12994109f ? 
            0.0f : 
             (data[10 /* X28 */] <0.11130271f ? 
                 (data[10 /* X28 */] <-0.20730299f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_139_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2750434f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20061989f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.1423165f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.003954213f ? 
                         (data[11 /* X34 */] <-0.5961547f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7459171f ? 
                 (data[6 /* X20 */] <-0.24737933f ? 
                     (data[4 /* X18 */] <-0.41604656f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.1177164f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4906795f ? 
             (data[10 /* X28 */] <-0.0030989123f ? 
                 (data[6 /* X20 */] <-0.3006134f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.609375f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25443062f ? 
             (data[7 /* X21 */] <0.032372013f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.47483397f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6744004f ? 
                         (data[6 /* X20 */] <-0.34961292f ? 
                             (data[3 /* X17 */] <-0.2591237f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[6 /* X20 */] <-0.16178139f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2065262f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.094581395f ? 
         (data[3 /* X17 */] <-0.30640104f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.18446636f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <-0.15667678f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.024182135f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12041964f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.05016619f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[6 /* X20 */] <0.03330935f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.24541381f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3093986f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
        0.04347826f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.008936611f ? 
                     (data[1 /* X12 */] <-0.3093986f ? 
                         (data[12 /* X35 */] <-0.125f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.5123125f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19230938f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7373351f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.4870809f ? 
                 (data[9 /* X27 */] <0.1285925f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.37922782f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.021069454f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[2 /* X15 */] <0.1006896f ? 
             (data[3 /* X17 */] <-0.56822336f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22541082f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14519662f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X27 */] <-0.33591792f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_140_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.16796875f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.29296204f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24727598f ? 
                     (data[5 /* X19 */] <0.07938185f ? 
                         (data[4 /* X18 */] <-0.17339034f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.22241516f ? 
                     (data[2 /* X15 */] <0.0915971f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X28 */] <-0.36779177f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18834625f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5320836f ? 
                                1.0f : 
                                0.0f) : 
                             (data[1 /* X12 */] <-0.273575f ? 
                                 (data[9 /* X27 */] <0.16108467f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.73046875f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.61538124f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <0.24816115f ? 
                 (data[2 /* X15 */] <0.10250809f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.011771641f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.1562417f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10551275f ? 
             (data[11 /* X34 */] <-0.97475964f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.017703986f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <0.12743631f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06391795f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                 (data[1 /* X12 */] <-0.49040267f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13433182f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.4847463f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.01171875f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27957645f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5428098f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14158116f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.03789248f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[5 /* X19 */] <0.3540058f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24207625f ? 
                 (data[2 /* X15 */] <0.12614858f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17438076f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X17 */] <-0.4183927f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.075899184f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.37500003f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <-0.17581904f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20434402f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_141_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[12 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2101547f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12360223f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16994798f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.6744004f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[1 /* X12 */] <-0.18861991f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.33273944f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.16774756f ? 
                     (data[10 /* X28 */] <-0.11874026f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[3 /* X17 */] <-0.63043016f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (data[12 /* X35 */] <-0.19140625f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19043593f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3303833f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.10854058f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14420259f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3825569f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26115742f ? 
             (data[10 /* X28 */] <-0.20815207f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19140625f ? 
             (data[0 /* X5 */] <0.092535794f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.35408834f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.019121297f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.124080904f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.15891714f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.052667193f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.13758105f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.13787203f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.5356537f ? 
                         (data[5 /* X19 */] <0.3540058f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.050407622f ? 
         (data[9 /* X27 */] <-0.2735798f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15682617f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
             (data[10 /* X28 */] <-0.12509383f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2421875f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12287798f ? 
                     (data[0 /* X5 */] <0.10043978f ? 
                         (data[6 /* X20 */] <-0.16994798f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6744004f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20062263f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[6 /* X20 */] <-0.34416854f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.21538626f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46981063f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[12 /* X35 */] <-0.123046875f ? 
            0.0f : 
             (data[10 /* X28 */] <0.04102266f ? 
                 (data[7 /* X21 */] <0.14125969f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24554273f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1341196f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.14958817f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.41478476f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_142_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2750434f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36297792f ? 
                     (data[7 /* X21 */] <0.10594477f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16902348f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19423206f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20165327f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14333095f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.15065022f ? 
             (data[1 /* X12 */] <-0.29242948f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16510852f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.118836395f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.19565307f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3714447f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5144199f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.39256313f ? 
                         (data[10 /* X28 */] <-0.18259569f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[11 /* X34 */] <-0.048078906f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.37104675f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053800933f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25832653f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.38506415f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.009259259f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[1 /* X12 */] <-0.3065704f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16160929f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.10685621f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <0.011531781f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27188817f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14519662f ? 
             (data[11 /* X34 */] <-0.8197119f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18434054f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.50240487f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15830284f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-4.4441223E-4f ? 
                 (data[11 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13753904f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.053800933f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2854623f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.092795774f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2227578f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.024787737f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[2 /* X15 */] <0.16755372f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.103316344f ? 
             (data[8 /* X23 */] <0.10032853f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[1 /* X12 */] <-0.5328255f ? 
            1.0f : 
             (data[2 /* X15 */] <0.08159536f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19296496f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27528235f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.33819535f ? 
                 (data[8 /* X23 */] <0.06431161f ? 
                     (data[7 /* X21 */] <0.062628604f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_143_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (data[5 /* X19 */] <0.15232883f ? 
             (data[4 /* X18 */] <-0.33100972f ? 
                 (data[2 /* X15 */] <0.1006896f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.55226535f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.095234096f ? 
                         (data[12 /* X35 */] <-0.03125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15063936f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20105617f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.12263184f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19898474f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049508177f ? 
             (data[0 /* X5 */] <0.082600005f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6972857f ? 
                     (data[12 /* X35 */] <-0.65625f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.059134953f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8174337f ? 
             (data[6 /* X20 */] <-0.46515504f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.32660857f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43165633f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                         (data[6 /* X20 */] <-0.38197276f ? 
                             (data[4 /* X18 */] <-0.21876109f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[8 /* X23 */] <0.21841525f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.60984266f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.09007199f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (data[5 /* X19 */] <-0.08081545f ? 
             (data[10 /* X28 */] <0.48224953f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24440627f ? 
                 (data[8 /* X23 */] <0.09937259f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.390625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.3090397f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <0.0030627258f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14558154f ? 
                 (data[0 /* X5 */] <0.11245908f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (data[5 /* X19 */] <0.042193193f ? 
             (data[4 /* X18 */] <-0.40754288f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17260653f ? 
                     (data[5 /* X19 */] <0.14803784f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09699286f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.63077f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[4 /* X18 */] <-0.46690965f ? 
                             (data[9 /* X27 */] <0.25116098f ? 
                                1.0f : 
                                 (data[4 /* X18 */] <-0.5414535f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[12 /* X35 */] <-0.3f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16207764f ? 
                                    1.0f : 
                                     (data[9 /* X27 */] <0.11004399f ? 
                                        0.0f : 
                                        1.0f))))) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19874518f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* X15 */] <0.16605061f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.41930473f ? 
             (data[10 /* X28 */] <-0.28277823f ? 
                 (data[2 /* X15 */] <0.06977512f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.08250461f ? 
                     (data[5 /* X19 */] <-0.033329032f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[10 /* X28 */] <0.4270014f ? 
             (data[7 /* X21 */] <0.17510316f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_144_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[3 /* X17 */] <-0.33178583f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16995306f ? 
                 (data[11 /* X34 */] <-0.3581744f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4569898f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.63020056f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51420313f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[12 /* X35 */] <-0.25f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.23671849f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.36629242f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.125f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19240588f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[0 /* X5 */] <0.076170966f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23671849f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.121252164f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25238502f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26171967f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22704962f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.3739332f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7544991f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X5 */] <0.3054126f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010071439f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.015020129f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.11474519f ? 
            1.0f : 
             (data[10 /* X28 */] <0.047411755f ? 
                 (data[0 /* X5 */] <0.1471328f ? 
                     (data[7 /* X21 */] <0.1824954f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[6 /* X20 */] <-0.2594886f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27957645f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.23269553f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90611434f ? 
                 (data[12 /* X35 */] <-0.09375f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49464846f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0743705f ? 
             (data[5 /* X19 */] <0.18236583f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4609375f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15801033f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.29339194f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X5 */] <0.11503742f ? 
             (data[7 /* X21 */] <0.10786966f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <0.10171907f ? 
                 (data[1 /* X12 */] <-0.4281825f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_145_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43030366f ? 
        0.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08984375f ? 
             (data[6 /* X20 */] <-0.31755152f ? 
                 (data[0 /* X5 */] <0.10364049f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.13831678f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22020361f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14187038f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20441511f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.26154f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (data[12 /* X35 */] <-0.2265625f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (data[6 /* X20 */] <-0.45547614f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.836853f ? 
                         (data[6 /* X20 */] <-0.36183536f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.13933268f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22608443f ? 
             (data[2 /* X15 */] <0.11250983f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16220398f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06355598f ? 
            0.0f : 
             (data[6 /* X20 */] <0.24999334f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.08574633f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.050407622f ? 
        0.028571429f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0234375f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18573123f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.09858749f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.03928255f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2774192f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (data[0 /* X5 */] <0.12497321f ? 
             (data[8 /* X23 */] <0.16292483f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2777021f ? 
             (data[1 /* X12 */] <-0.43459013f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3515625f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047411755f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.13403744f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_146_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19485696f ? 
             (data[6 /* X20 */] <-0.44095775f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.15450278f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.028244467f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.25463852f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22684097f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.102165334f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.17620659f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19485696f ? 
             (data[6 /* X20 */] <-0.43611827f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.14420259f ? 
                 (data[11 /* X34 */] <-0.3004822f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26758093f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
        0.012987013f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.058716517f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.284595f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7290876f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5585394f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[4 /* X18 */] <-0.57194746f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.44268644f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <0.14803784f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.034633562f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.004272591f ? 
                             (data[12 /* X35 */] <0.0012939454f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06327945f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4179793f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28496128f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011001954f ? 
                 (data[9 /* X27 */] <0.088692136f ? 
                     (data[11 /* X34 */] <-0.49519336f ? 
                         (data[10 /* X28 */] <0.35408834f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3004822f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20006526f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_147_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18921234f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04523013f ? 
                 (data[9 /* X27 */] <0.123496234f ? 
                     (data[8 /* X23 */] <0.116714165f ? 
                        1.0f : 
                        0.0f) : 
                     (data[11 /* X34 */] <-0.26442462f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.60416466f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[4 /* X18 */] <-0.5168655f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.90018225f ? 
                        0.0f : 
                        1.0f))) : 
             (data[0 /* X5 */] <0.13227893f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.10260391f ? 
             (data[11 /* X34 */] <-0.3762032f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.3974026f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.0607793f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18921234f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.034633562f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23562253f ? 
                     (data[9 /* X27 */] <0.074770495f ? 
                         (data[4 /* X18 */] <-0.29458117f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.064796194f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[0 /* X5 */] <0.14981267f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9661884f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[4 /* X18 */] <-0.24172103f ? 
            0.0f : 
             (data[2 /* X15 */] <0.15342605f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26967347f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <-0.14797576f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2932707f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[11 /* X34 */] <-0.97656256f ? 
             (data[12 /* X35 */] <0.3984375f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.5244444f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03330935f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[4 /* X18 */] <-0.61021405f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0554924f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13169411f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.26442462f ? 
                         (data[3 /* X17 */] <-0.04636233f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.15133952f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.005351653f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12839451f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.13848834f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
         (data[5 /* X19 */] <0.19237816f ? 
             (data[4 /* X18 */] <-0.20061989f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.18068913f ? 
                 (data[1 /* X12 */] <-0.4621208f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1113312f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625176f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1702687f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.18797186f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[10 /* X28 */] <0.13366455f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.09631078f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_148_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (data[10 /* X28 */] <-0.30355644f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0546875f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19627105f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.11237351f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (data[7 /* X21 */] <0.06842266f ? 
             (data[9 /* X27 */] <0.25575182f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.61075366f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16797404f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.18268985f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X27 */] <0.12942381f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.09078242f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2216277f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82744604f ? 
             (data[8 /* X23 */] <0.08616715f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.9031081f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.2573111f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5144199f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16832237f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.042256072f ? 
                                1.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3805027f ? 
                                    0.0f : 
                                     (data[11 /* X34 */] <-0.28065056f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (data[11 /* X34 */] <0.61808556f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12294285f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.099862665f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.0904905f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.074545726f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.1256601f ? 
         (data[5 /* X19 */] <-0.08510645f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08567082f ? 
                 (data[11 /* X34 */] <-0.94230783f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0968755f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1085972f ? 
             (data[9 /* X27 */] <0.11653542f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20070702f ? 
                     (data[9 /* X27 */] <-0.16347313f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.0987147f ? 
                             (data[10 /* X28 */] <-0.17908923f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.038474545f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2796285f ? 
                 (data[12 /* X35 */] <-0.234375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (data[8 /* X23 */] <0.11728276f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.52092534f ? 
                 (data[11 /* X34 */] <0.10336309f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.39141607f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23152179f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.3026641f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.1423165f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3984375f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.16131508f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.20808753f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23557852f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5056967f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.174431f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.031373568f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[11 /* X34 */] <-0.60584515f ? 
                             (data[12 /* X35 */] <0.45f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[5 /* X19 */] <-0.05220879f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049267955f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.12686442f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.3093986f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.075899184f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[8 /* X23 */] <0.086662136f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_149_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1765746f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.006692321f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0808659f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.067591965f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.1506983f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.40950125f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03349675f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[7 /* X21 */] <0.08497653f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14348307f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.1506983f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.40950125f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2359866f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12288726f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25186282f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12594898f ? 
             (data[6 /* X20 */] <0.055086922f ? 
                 (data[10 /* X28 */] <0.4243684f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03330935f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.001798531f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10693003f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06476584f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.16545802f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.15521514f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.086890675f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[11 /* X34 */] <-0.7610611f ? 
             (data[4 /* X18 */] <-0.21195814f ? 
                 (data[8 /* X23 */] <0.12652391f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01024579f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.082695566f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5074266f ? 
                            1.0f : 
                            0.0f) : 
                         (data[7 /* X21 */] <0.16298385f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.558974f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23016988f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27286264f ? 
                 (data[4 /* X18 */] <-0.07023006f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.5457612f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24554273f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28496128f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2901974f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.47241423f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_150_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.37109375f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19050649f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08786856f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.31395647f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.57368773f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14536366f ? 
                 (data[1 /* X12 */] <-0.23762651f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.12941547f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.1938085f ? 
                             (data[1 /* X12 */] <-0.19581512f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (data[4 /* X18 */] <-0.06035338f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.54742587f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.11433259f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.066174366f ? 
             (data[6 /* X20 */] <-0.43369856f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.060009796f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1480593f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06001946f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[11 /* X34 */] <-0.33473697f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3651767f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[11 /* X34 */] <-0.56911147f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17679076f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16855413f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.30385557f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.6664671f ? 
             (data[5 /* X19 */] <0.21097249f ? 
                 (data[3 /* X17 */] <-0.0421008f ? 
                     (data[3 /* X17 */] <-0.3025463f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.029573848f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19832267f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16981658f ? 
                         (data[4 /* X18 */] <-0.47349474f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.715556f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13184603f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.2825095f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.38125f ? 
                 (data[1 /* X12 */] <-0.5759671f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.12710448f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15252335f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.19014934f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[1 /* X12 */] <-0.4918168f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27286264f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24459292f ? 
             (data[1 /* X12 */] <-0.56959194f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.40308043f ? 
                     (data[0 /* X5 */] <0.13116555f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[5 /* X19 */] <-0.083676115f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_151_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1343236f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.26442462f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.12962161f ? 
                             (data[11 /* X34 */] <0.06874777f ? 
                                1.0f : 
                                0.0f) : 
                             (data[6 /* X20 */] <-0.2964951f ? 
                                 (data[10 /* X28 */] <-0.07547101f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)))) : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.24313831f ? 
             (data[7 /* X21 */] <0.13463813f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12078504f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.26938698f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.15102004f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.0915971f ? 
                 (data[0 /* X5 */] <0.13286339f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[6 /* X20 */] <-0.31634164f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47501767f ? 
                 (data[2 /* X15 */] <0.17161104f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.19581105f ? 
                         (data[11 /* X34 */] <-0.33653983f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.041884445f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.621875f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.0149525395f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.18164062f ? 
             (data[9 /* X27 */] <-0.36911947f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16186006f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.1882311f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[9 /* X27 */] <0.11970738f ? 
             (data[0 /* X5 */] <0.11766748f ? 
                 (data[3 /* X17 */] <-0.6095251f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12839451f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.2667372f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10106179f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.6250008f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.032560293f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15135582f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.052667193f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08654341f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16241547f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.03432274f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20713915f ? 
                 (data[7 /* X21 */] <0.09711603f ? 
                     (data[1 /* X12 */] <-0.1849583f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20061989f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.28698918f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.14392866f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03150532f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.4602029f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33253086f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.027655957f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07023006f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11558017f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33634886f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.37689114f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.15155987f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (data[6 /* X20 */] <-0.055010796f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17260653f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.19142297f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[3 /* X17 */] <-0.08391101f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
                 (data[10 /* X28 */] <-0.2530911f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27487493f ? 
                         (data[2 /* X15 */] <0.0988711f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_152_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[12 /* X35 */] <-0.32617188f ? 
             (data[6 /* X20 */] <-0.45789585f ? 
                 (data[2 /* X15 */] <0.0897786f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.112655096f ? 
                     (data[8 /* X23 */] <0.10931307f ? 
                        0.0f : 
                        1.0f) : 
                     (data[4 /* X18 */] <-0.18928164f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16840123f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35456866f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.10402132f ? 
                     (data[10 /* X28 */] <-0.13148293f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.013951511f ? 
            0.0f : 
             (data[6 /* X20 */] <0.09736077f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (data[12 /* X35 */] <-0.19140625f ? 
             (data[6 /* X20 */] <-0.32965016f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2540008f ? 
                     (data[0 /* X5 */] <0.07928275f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.18537176f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3821023f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.31997123f ? 
             (data[11 /* X34 */] <-0.52403945f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.27645102f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (data[5 /* X19 */] <0.009295533f ? 
             (data[6 /* X20 */] <0.013951511f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.19242677f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21426068f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16559303f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10551275f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.22023572f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[10 /* X28 */] <-0.061202873f ? 
                     (data[10 /* X28 */] <-0.23880415f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32536003f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.0087141935f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05387706f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16310908f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.37109375f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10219553f ? 
                 (data[5 /* X19 */] <0.21290408f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.47512817f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09527561f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5074266f ? 
                     (data[8 /* X23 */] <0.10086169f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.32392332f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.068700954f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[12 /* X35 */] <-0.123046875f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.04654174f ? 
                 (data[6 /* X20 */] <-0.20140271f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.103804484f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.22014593f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3677097f ? 
             (data[1 /* X12 */] <-0.5922175f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4307575f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_153_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[10 /* X28 */] <-0.14266384f ? 
             (data[8 /* X23 */] <0.11785787f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11914704f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.37078556f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5656951f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23028272f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19007896f ? 
                 (data[6 /* X20 */] <-0.34416854f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.035546735f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2624645f ? 
                             (data[2 /* X15 */] <0.11011311f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.026729854f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X18 */] <-0.1093193f ? 
                     (data[12 /* X35 */] <-0.79758435f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[10 /* X28 */] <-0.35829583f ? 
            1.0f : 
             (data[8 /* X23 */] <0.08560801f ? 
                 (data[4 /* X18 */] <-0.013662678f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17024717f ? 
             (data[6 /* X20 */] <-0.32239097f ? 
                 (data[3 /* X17 */] <-0.16753143f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.0024070218f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4375f ? 
                 (data[6 /* X20 */] <-0.29093447f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.4064469f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.2827599f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[4 /* X18 */] <-0.33526155f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2273398f ? 
                 (data[6 /* X20 */] <0.057506654f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1828283f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.052658387f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
        0.048275862f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13286339f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10219553f ? 
                     (data[1 /* X12 */] <-0.57664f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X17 */] <-0.4064469f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22807553f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12681617f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25575182f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3141565f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.12751245f ? 
             (data[8 /* X23 */] <0.10110583f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.078125f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48187026f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_154_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.091382876f ? 
             (data[10 /* X28 */] <-0.3035975f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04169098f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14637373f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30981693f ? 
             (data[12 /* X35 */] <-0.6171875f ? 
                 (data[9 /* X27 */] <0.11653542f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.49903128f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[5 /* X19 */] <0.29679248f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.43611827f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029984051f ? 
                 (data[8 /* X23 */] <0.0242654f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6744004f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.90625f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[0 /* X5 */] <0.11299182f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2210177f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12041964f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13332002f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.055539794f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17494436f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48559645f ? 
                     (data[12 /* X35 */] <-0.0656268f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.09404947f ? 
                            0.0f : 
                            1.0f) : 
                         (data[2 /* X15 */] <0.13220137f ? 
                             (data[8 /* X23 */] <0.11367503f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21556817f ? 
            0.0f : 
             (data[8 /* X23 */] <0.15194762f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07495168f ? 
             (data[12 /* X35 */] <0.0546875f ? 
                 (data[1 /* X12 */] <-0.43553287f ? 
                     (data[6 /* X20 */] <-0.23770042f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.20006526f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0054063294f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44618118f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2477698f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3880074f ? 
                 (data[3 /* X17 */] <-0.029606732f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.043669727f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.12187455f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0295173f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.38900968f ? 
             (data[8 /* X23 */] <0.06528548f ? 
                 (data[0 /* X5 */] <0.13052556f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
        0.9583333f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_155_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.052203577f ? 
             (data[10 /* X28 */] <-0.33124596f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24071398f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2388391f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19874518f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17903396f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <-0.036498f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[2 /* X15 */] <0.20106255f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[5 /* X19 */] <0.34256312f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.019232813f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[2 /* X15 */] <0.0879601f ? 
             (data[5 /* X19 */] <0.04505386f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.1309595f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.023602128f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.221701f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.052203577f ? 
             (data[10 /* X28 */] <-0.33124596f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19990067f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2388391f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07438938f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.015302932f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1824787f ? 
                                    0.0f : 
                                     (data[8 /* X23 */] <0.1558347f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        1.0f) : 
                     (data[9 /* X27 */] <0.24789707f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
            0.0f : 
             (data[5 /* X19 */] <0.5885804f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[1 /* X12 */] <-0.62332755f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.06599235f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15303132f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12559833f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.13342257f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.42483696f ? 
             (data[11 /* X34 */] <-0.76201975f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.024182135f ? 
                     (data[8 /* X23 */] <0.0995516f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18897134f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X34 */] <-0.529589f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09417451f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[9 /* X27 */] <0.2157271f ? 
             (data[9 /* X27 */] <-0.27291024f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.32518396f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.09123021f ? 
                     (data[8 /* X23 */] <0.11092754f ? 
                        0.0f : 
                        1.0f) : 
                     (data[4 /* X18 */] <-0.33667883f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14689037f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.3538475f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
             (data[11 /* X34 */] <-0.23197275f ? 
                 (data[5 /* X19 */] <0.19532205f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02363043f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25162497f ? 
                             (data[5 /* X19 */] <0.49115732f ? 
                                1.0f : 
                                 (data[2 /* X15 */] <0.14535213f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.25830078f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (data[9 /* X27 */] <0.085211724f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18834625f ? 
                 (data[5 /* X19 */] <0.10226718f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.10727999f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_12_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24640936f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4178115f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21188954f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.21551062f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[8 /* X23 */] <0.26107422f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_156_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
             (data[3 /* X17 */] <-0.41540626f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19861192f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.17948565f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X5 */] <0.11229729f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.25659335f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18298063f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16951162f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
            1.0f) : 
         (data[3 /* X17 */] <-0.7021048f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.33984375f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                     (data[9 /* X27 */] <0.1317138f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06863803f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[10 /* X28 */] <-0.3231558f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17161104f ? 
                 (data[12 /* X35 */] <-0.7578125f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.54206485f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.059887845f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.91040534f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10011263f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25998643f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.0046184375f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.06008575f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.75248533f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.021855371f ? 
            0.0f : 
             (data[0 /* X5 */] <0.09019796f ? 
                 (data[12 /* X35 */] <-0.296875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.31386715f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.56959194f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27296972f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.11323853f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[3 /* X17 */] <-0.56472844f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13169447f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.530169f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.5000006f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.03041873f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23664542f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1685573f ? 
                                     (data[11 /* X34 */] <-0.68354934f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[1 /* X12 */] <-0.51868457f ? 
             (data[0 /* X5 */] <0.13052556f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.11657377f ? 
             (data[12 /* X35 */] <0.0234375f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_157_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.033233225f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1714376f ? 
                 (data[10 /* X28 */] <-0.10592654f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16505335f ? 
                         (data[11 /* X34 */] <-0.30769375f ? 
                             (data[2 /* X15 */] <0.12505747f ? 
                                 (data[2 /* X15 */] <0.08766255f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1219572f ? 
                                1.0f : 
                                 (data[6 /* X20 */] <-0.32991952f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.39423203f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                             (data[6 /* X20 */] <-0.46280578f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.25504348f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.22513035f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10131453f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43689606f ? 
            0.0f : 
             (data[9 /* X27 */] <0.12697664f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (data[6 /* X20 */] <-0.46515504f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.22172453f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97763103f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20278758f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19075826f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.2932707f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0755785f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[6 /* X20 */] <0.041778408f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12877218f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.25186282f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.15526691f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.8215148f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4849148f ? 
                 (data[3 /* X17 */] <-0.13766699f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[6 /* X20 */] <-0.07073904f ? 
             (data[5 /* X19 */] <0.082810886f ? 
                 (data[3 /* X17 */] <-0.5139589f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.056640625f ? 
             (data[9 /* X27 */] <0.14785911f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01508525f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24314891f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (data[1 /* X12 */] <-0.57100606f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13052556f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19310445f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3157538f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24554273f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14630592f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.14923733f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09839347f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.25f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[10 /* X28 */] <0.4243684f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_158_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[3 /* X17 */] <-0.743915f ? 
            1.0f : 
             (data[0 /* X5 */] <0.046948075f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.1875f ? 
                     (data[6 /* X20 */] <-0.12155338f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.11445362f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.32617188f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19007896f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19805475f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.2848212f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[7 /* X21 */] <0.12574649f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14676245f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16695026f ? 
             (data[3 /* X17 */] <-0.22515349f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21926203f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X21 */] <0.011771641f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029984051f ? 
                 (data[12 /* X35 */] <-0.625f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22878805f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.07693431f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[9 /* X27 */] <-0.16711801f ? 
             (data[3 /* X17 */] <-0.0653651f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20968235f ? 
             (data[2 /* X15 */] <0.1006896f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.6827195f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.024182135f ? 
             (data[12 /* X35 */] <0.37109375f ? 
                 (data[9 /* X27 */] <0.073599406f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15127523f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16508292f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                         (data[12 /* X35 */] <-0.59658873f ? 
                            0.0f : 
                            1.0f) : 
                         (data[7 /* X21 */] <0.10853013f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[8 /* X23 */] <0.100528084f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.6609802f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                            1.0f : 
                             (data[12 /* X35 */] <0.45566007f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32187963f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.09167607f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25640103f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27962983f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2123501f ? 
                     (data[9 /* X27 */] <-0.022680992f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.06422678f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.21682248f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15913531f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_159_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[10 /* X28 */] <-0.14905293f ? 
             (data[3 /* X17 */] <-0.33775872f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.046948075f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2765366f ? 
             (data[9 /* X27 */] <0.10957459f ? 
                 (data[8 /* X23 */] <0.1432814f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19007896f ? 
                 (data[6 /* X20 */] <-0.39256313f ? 
                     (data[6 /* X20 */] <-0.46492818f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15509713f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.030546198f ? 
                         (data[5 /* X19 */] <0.07938185f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[11 /* X34 */] <-0.123799905f ? 
             (data[5 /* X19 */] <0.20239049f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.09078242f ? 
                 (data[8 /* X23 */] <0.22371015f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.25f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27435622f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4228115f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1710133f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[11 /* X34 */] <-0.97656256f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.089613505f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.08746745f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40144354f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12567818f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.014641631f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16670749f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07315877f ? 
                         (data[10 /* X28 */] <-0.14900383f ? 
                             (data[0 /* X5 */] <0.11673191f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[4 /* X18 */] <-0.26864937f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[5 /* X19 */] <0.2624645f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40192905f ? 
                    0.0f : 
                     (data[3 /* X17 */] <0.15679507f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28248915f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25759012f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
             (data[2 /* X15 */] <0.12275464f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2075838f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15055306f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_160_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[6 /* X20 */] <-0.31755152f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25960383f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3379468f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05380085f ? 
                     (data[9 /* X27 */] <0.26952797f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.1820758f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09527561f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.041884445f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1767598f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.15065022f ? 
             (data[2 /* X15 */] <0.14342432f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.5972561f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[6 /* X20 */] <-0.31755152f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25960383f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3379468f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20158935f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19874518f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1588019f ? 
                             (data[0 /* X5 */] <0.09363499f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.18486892f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.25857908f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27344695f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.09474563f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23162149f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[6 /* X20 */] <0.05387706f ? 
            0.0f : 
             (data[2 /* X15 */] <0.13433182f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47716397f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.16316572f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1511815f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17544489f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14337923f ? 
                        0.0f : 
                        1.0f))) : 
             (data[2 /* X15 */] <0.13069482f ? 
                 (data[4 /* X18 */] <-0.030546198f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.124852926f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1938085f ? 
                 (data[5 /* X19 */] <-0.22687711f ? 
                     (data[4 /* X18 */] <-0.42738482f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X17 */] <-0.43033847f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5046333f ? 
                         (data[12 /* X35 */] <-0.53333545f ? 
                            0.0f : 
                            1.0f) : 
                         (data[12 /* X35 */] <0.17777953f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[0 /* X5 */] <0.14274082f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.03381144f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13193418f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14005364f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.08691333f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.10192757f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08170395f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15478057f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26783556f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22807553f ? 
                     (data[10 /* X28 */] <-0.25191578f ? 
                        1.0f : 
                         (data[12 /* X35 */] <0.0035507032f ? 
                             (data[9 /* X27 */] <0.11653542f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[4 /* X18 */] <0.10551275f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X35 */] <0.04566574f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40540946f ? 
                 (data[4 /* X18 */] <-0.18361253f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.27772057f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16998585f ? 
                             (data[12 /* X35 */] <0.27499875f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_12_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_161_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (data[11 /* X34 */] <-0.3780061f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4576156f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11092754f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03621532f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.61075366f ? 
             (data[6 /* X20 */] <-0.23044123f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19990067f ? 
                     (data[5 /* X19 */] <0.21165209f ? 
                         (data[9 /* X27 */] <0.13230813f ? 
                             (data[3 /* X17 */] <-0.11749109f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3846125f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.37275f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.59375f ? 
                     (data[5 /* X19 */] <0.58938485f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9225632f ? 
         (data[6 /* X20 */] <-0.31755152f ? 
             (data[0 /* X5 */] <0.09078242f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.25f ? 
                     (data[8 /* X23 */] <0.10168358f ? 
                         (data[2 /* X15 */] <0.13750048f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.714778f ? 
                 (data[7 /* X21 */] <0.011771641f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09290655f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[6 /* X20 */] <0.027260026f ? 
             (data[9 /* X27 */] <-0.17581904f ? 
                 (data[8 /* X23 */] <0.13981491f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26783556f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45935583f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07928422f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[6 /* X20 */] <-0.16389865f ? 
             (data[9 /* X27 */] <-0.20018192f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13865942f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.12948805f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15565725f ? 
             (data[12 /* X35 */] <0.0f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4367208f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21889655f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.34885803f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (data[5 /* X19 */] <0.17716971f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1848064f ? 
                         (data[12 /* X35 */] <0.34374845f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.15876533f ? 
         (data[1 /* X12 */] <-0.57100606f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2692861f ? 
                 (data[7 /* X21 */] <0.09123021f ? 
                     (data[2 /* X15 */] <0.109782085f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.11323853f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16442412f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_162_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22702603f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.059438284f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17833929f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.32638884f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[3 /* X17 */] <0.13507295f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.04078227f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.09023323f ? 
             (data[4 /* X18 */] <-0.20765229f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.019779205f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.15065022f ? 
                 (data[1 /* X12 */] <-0.17364554f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.19791368f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (data[9 /* X27 */] <-0.067926325f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14324819f ? 
                     (data[1 /* X12 */] <-0.42252615f ? 
                         (data[3 /* X17 */] <0.11911631f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.004883876f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17887472f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5276925f ? 
                                    0.0f : 
                                     (data[10 /* X28 */] <-0.0475267f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (data[3 /* X17 */] <-0.09734457f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.039998267f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.0046379464f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[2 /* X15 */] <0.16115467f ? 
            0.0f : 
             (data[2 /* X15 */] <0.17440777f ? 
                 (data[10 /* X28 */] <-0.042035587f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.01970247f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12283937f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <-0.29220662f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1962489f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14922822f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25000155f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.077998236f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16627866f ? 
                 (data[11 /* X34 */] <-0.2572131f ? 
                     (data[10 /* X28 */] <-0.14978598f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13405089f ? 
                     (data[11 /* X34 */] <-0.35096288f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07023006f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1673464f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2723819f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3885879f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17647372f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (data[2 /* X15 */] <0.12160233f ? 
             (data[4 /* X18 */] <-0.31116778f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.096627f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.047411755f ? 
                         (data[1 /* X12 */] <-0.5356537f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1736317f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3659624f ? 
                     (data[4 /* X18 */] <-0.30194306f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X35 */] <0.41552734f ? 
                         (data[10 /* X28 */] <0.25186282f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_163_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
             (data[11 /* X34 */] <-0.2572131f ? 
                 (data[12 /* X35 */] <-0.171875f ? 
                     (data[0 /* X5 */] <0.13825542f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.39140055f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25238606f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25623915f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.00907718f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.28125f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2581735f ? 
             (data[8 /* X23 */] <0.08417885f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19525152f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25150836f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.30393207f ? 
                 (data[10 /* X28 */] <-0.25926483f ? 
                     (data[12 /* X35 */] <-0.625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.2867731f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.3139586f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[5 /* X19 */] <-0.16377477f ? 
            1.0f : 
             (data[8 /* X23 */] <0.12602535f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.026863042f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.52403945f ? 
             (data[2 /* X15 */] <0.119783826f ? 
                 (data[3 /* X17 */] <-2.905869E-4f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[3 /* X17 */] <0.059438284f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3157538f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[5 /* X19 */] <0.1938085f ? 
             (data[11 /* X34 */] <-0.3581744f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4033028f ? 
                     (data[10 /* X28 */] <0.047411755f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.0546875f ? 
                 (data[4 /* X18 */] <-0.6101358f ? 
                     (data[1 /* X12 */] <-0.34333685f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4387207f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.1580567f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1231685f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17260653f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.5130282f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24236512f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.55078125f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23269553f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.15264599f ? 
                 (data[10 /* X28 */] <0.46909207f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12994109f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11592483f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.05793012f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16720507f ? 
                 (data[1 /* X12 */] <-0.3829315f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19329771f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_12_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_164_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14367586f ? 
             (data[11 /* X34 */] <-0.61478084f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23396136f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.11624495f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.20192742f ? 
                     (data[1 /* X12 */] <-0.29070652f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[7 /* X21 */] <0.07062984f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.15703931f ? 
                 (data[12 /* X35 */] <-0.17507553f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029984051f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24432622f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.048078906f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.058268227f ? 
                             (data[8 /* X23 */] <0.110494256f ? 
                                 (data[5 /* X19 */] <0.30823514f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[5 /* X19 */] <-0.05793012f ? 
                                     (data[1 /* X12 */] <-0.26769754f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (data[4 /* X18 */] <0.107780404f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[12 /* X35 */] <-0.578125f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1421259f ? 
                     (data[12 /* X35 */] <-0.578125f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09475654f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[11 /* X34 */] <-0.6917074f ? 
             (data[10 /* X28 */] <0.09852452f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22172475f ? 
             (data[9 /* X27 */] <-0.18974069f ? 
                 (data[11 /* X34 */] <-0.8413465f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <0.055252075f ? 
                     (data[1 /* X12 */] <-0.712921f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.15526691f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.83762145f ? 
                         (data[5 /* X19 */] <0.07938185f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.45203868f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[0 /* X5 */] <0.10242047f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32539913f ? 
                 (data[6 /* X20 */] <-0.12155338f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23269553f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1938085f ? 
                     (data[6 /* X20 */] <-0.11187445f ? 
                         (data[12 /* X35 */] <-0.3142675f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15076543f ? 
                         (data[11 /* X34 */] <-0.93269217f ? 
                            0.0f : 
                            1.0f) : 
                         (data[4 /* X18 */] <-0.31400236f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.405557f ? 
            0.0f : 
             (data[9 /* X27 */] <0.12001582f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19468036f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.09930171f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[2 /* X15 */] <0.07159362f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13341497f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.14816077f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.4621208f ? 
            1.0f : 
             (data[7 /* X21 */] <0.16346578f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_165_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (data[12 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.77452374f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24720445f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21723309f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.43872306f ? 
             (data[1 /* X12 */] <-0.2867731f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.26818582f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.46745083f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9032537f ? 
                     (data[8 /* X23 */] <0.06701872f ? 
                         (data[10 /* X28 */] <-0.07518813f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.226166f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.35652077f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.45791778f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.2750434f ? 
                     (data[5 /* X19 */] <0.12015238f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.03444309f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2495294f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.81488365f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.39496824f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[9 /* X27 */] <0.050407622f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13607176f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.111052945f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40144354f ? 
             (data[4 /* X18 */] <-0.5974585f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.12251158f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.7998802f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055086922f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23984717f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09622233f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.03612791f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X34 */] <-0.58036655f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
         (data[12 /* X35 */] <0.0234375f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5428098f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.103001855f ? 
                     (data[6 /* X20 */] <-0.13123229f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
                 (data[2 /* X15 */] <0.12433007f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20040068f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.242654f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.02631579f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (data[10 /* X28 */] <0.20713915f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16220398f ? 
             (data[5 /* X19 */] <0.18808717f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6875f ? 
                     (data[2 /* X15 */] <0.08432311f ? 
                        1.0f : 
                        0.0f) : 
                     (data[5 /* X19 */] <0.06852026f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0755785f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.4721487f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_166_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
                 (data[5 /* X19 */] <0.15375917f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5144199f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20011789f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[11 /* X34 */] <-0.26442462f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5312477f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.33114216f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.33690935f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39641f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08513423f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.21131134f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.033650193f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.039049882f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.33753127f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.211618f ? 
                 (data[5 /* X19 */] <0.22241516f ? 
                     (data[6 /* X20 */] <-0.32494816f ? 
                         (data[10 /* X28 */] <-0.20975399f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.118137464f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.18379267f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1835442f ? 
             (data[10 /* X28 */] <-0.17940114f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.21758397f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0596056f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.004272591f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.375f ? 
                     (data[1 /* X12 */] <-0.54696643f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17223145f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.32493782f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.50688815f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.23557852f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.109157436f ? 
                     (data[9 /* X27 */] <0.04692721f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.24495961f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10592654f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.29679248f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.39424425f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44021356f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.41318747f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1322451f ? 
                 (data[2 /* X15 */] <0.08068611f ? 
                     (data[6 /* X20 */] <-0.2885739f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.15375917f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_167_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (data[3 /* X17 */] <-0.32879937f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6075938f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14221472f ? 
                         (data[9 /* X27 */] <0.13821392f ? 
                             (data[8 /* X23 */] <0.11692393f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05763431f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[9 /* X27 */] <0.30387738f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.599998f ? 
                                 (data[7 /* X21 */] <0.16951162f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2170735f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.03928255f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.19060516f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15136987f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11231564f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (data[5 /* X19 */] <0.22576585f ? 
                 (data[0 /* X5 */] <0.10948507f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.45672607f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X15 */] <0.113419086f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.06730547f ? 
                             (data[8 /* X23 */] <0.12694609f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.27457982f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.3040106f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2170735f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.03928255f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9661884f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[5 /* X19 */] <-0.08667856f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0630059f ? 
                 (data[6 /* X20 */] <-0.02476417f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.15491697f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17888503f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.67708635f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.03853318f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16500857f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.16702479f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <0.068295486f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2152635f ? 
             (data[5 /* X19 */] <-0.22554448f ? 
                 (data[6 /* X20 */] <0.038148813f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0554924f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4391986f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.14922822f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16208628f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.10989005f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1673464f ? 
                 (data[1 /* X12 */] <-0.64878124f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11130271f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X27 */] <0.14437869f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.77734375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17260653f ? 
             (data[5 /* X19 */] <0.15661983f ? 
                 (data[2 /* X15 */] <0.12433007f ? 
                     (data[3 /* X17 */] <-0.6572421f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3043191f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                 (data[0 /* X5 */] <0.17640153f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_168_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[2 /* X15 */] <0.09205172f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.36313418f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <-0.48974517f ? 
                 (data[12 /* X35 */] <-0.546875f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.14426112f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.47849807f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04900903f ? 
             (data[10 /* X28 */] <-0.35735056f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03621532f ? 
                     (data[6 /* X20 */] <-0.39256313f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2624645f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26967347f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3534609f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2126419f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029984051f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.25575182f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.37109375f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14811298f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25767544f ? 
                     (data[6 /* X20 */] <-0.43127882f ? 
                         (data[9 /* X27 */] <0.06093778f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.1789833f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.20006526f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11258167f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.09084387f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1900669f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15342605f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.024877075f ? 
                 (data[9 /* X27 */] <-0.106210835f ? 
                     (data[11 /* X34 */] <-0.83702236f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11666796f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.1410941f ? 
                 (data[4 /* X18 */] <-0.17122029f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2086075f ? 
                 (data[9 /* X27 */] <-0.001798531f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[2 /* X15 */] <0.115237586f ? 
             (data[10 /* X28 */] <0.08574633f ? 
                 (data[4 /* X18 */] <-0.15526691f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3029756f ? 
                     (data[10 /* X28 */] <-0.14616126f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02363043f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.1381622f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.027819967f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2398405f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45791888f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[0 /* X5 */] <0.13052556f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15667641f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.015720172f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.46494898f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12041964f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49464846f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13383925f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23590259f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_169_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[10 /* X28 */] <-0.15065022f ? 
             (data[3 /* X17 */] <-0.39450115f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.34613687f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.36089283f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.37267128f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.32421875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.024182135f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8232303f ? 
                         (data[6 /* X20 */] <-0.47967342f ? 
                            0.0f : 
                             (data[12 /* X35 */] <-0.8310547f ? 
                                 (data[8 /* X23 */] <0.11058679f ? 
                                     (data[1 /* X12 */] <-0.28131825f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.14550446f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[4 /* X18 */] <-0.5832857f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3491233f ? 
                 (data[11 /* X34 */] <-0.105771095f ? 
                     (data[3 /* X17 */] <-0.21486662f ? 
                        0.0f : 
                        1.0f) : 
                     (data[8 /* X23 */] <0.12823619f ? 
                         (data[5 /* X19 */] <0.21669383f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.034579195f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2852672f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.2572131f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10551275f ? 
            0.0f : 
             (data[8 /* X23 */] <0.14848113f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13366455f ? 
             (data[2 /* X15 */] <0.08068611f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.5673086f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18406883f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[4 /* X18 */] <-0.14392866f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17260653f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.035546735f ? 
                     (data[10 /* X28 */] <-0.11784613f ? 
                         (data[12 /* X35 */] <0.21733062f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.3445183f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.47812155f ? 
                 (data[11 /* X34 */] <-0.80826783f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.120659314f ? 
                         (data[5 /* X19 */] <0.3124364f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61146575f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30860224f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12839451f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42756295f ? 
             (data[8 /* X23 */] <0.06644098f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.12251158f ? 
                     (data[12 /* X35 */] <-0.125f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.6256425f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_170_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (data[6 /* X20 */] <-0.31392193f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34765625f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.7331736f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23646691f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.234375f ? 
                         (data[7 /* X21 */] <0.10594477f ? 
                             (data[11 /* X34 */] <-0.18041034f ? 
                                 (data[2 /* X15 */] <0.16588414f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.42313296f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19938216f ? 
                 (data[3 /* X17 */] <-0.59160644f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.11323853f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[12 /* X35 */] <-0.32421875f ? 
                 (data[5 /* X19 */] <0.21835172f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.1919888f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27943882f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.39377302f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.57713777f ? 
                 (data[8 /* X23 */] <0.10168358f ? 
                     (data[2 /* X15 */] <0.13668497f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2520928f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17354223f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04719925f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.625f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.59430176f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[2 /* X15 */] <0.17524804f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.094581395f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X19 */] <0.09654585f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19140625f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.005418814f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.020730436f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X35 */] <0.29513383f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5587362f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X34 */] <-0.9531251f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.017628074f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12326321f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.15602408f ? 
                         (data[2 /* X15 */] <0.15145981f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
        0.04347826f : 
         (data[5 /* X19 */] <0.1938085f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.159164f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.22491342f ? 
                     (data[10 /* X28 */] <-0.1292118f ? 
                        1.0f : 
                         (data[5 /* X19 */] <-0.15509976f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23666401f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.035546735f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02363043f ? 
                             (data[5 /* X19 */] <0.27848423f ? 
                                 (data[11 /* X34 */] <-0.8328729f ? 
                                     (data[7 /* X21 */] <0.15123583f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.023554305f ? 
            0.0f : 
             (data[8 /* X23 */] <0.11728276f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11386237f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.101010434f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_171_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.091382876f ? 
             (data[5 /* X19 */] <0.1508985f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.10496813f ? 
                     (data[0 /* X5 */] <0.10013375f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.19627105f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.32480565f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5175287f ? 
                     (data[2 /* X15 */] <0.09380777f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22220236f ? 
                             (data[11 /* X34 */] <-0.26154f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17690878f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (data[9 /* X27 */] <0.10609418f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.45080805f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1846885f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22447126f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.39377302f ? 
             (data[11 /* X34 */] <0.2151417f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.57008386f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.2818886f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95188504f ? 
                 (data[5 /* X19 */] <0.011273422f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.005733172f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07081517f ? 
             (data[5 /* X19 */] <-0.1351681f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.52403945f ? 
                 (data[5 /* X19 */] <-0.14947143f ? 
                     (data[1 /* X12 */] <-0.70534503f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[9 /* X27 */] <-0.17530751f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.11518982f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07444476f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (data[2 /* X15 */] <0.09796184f ? 
             (data[7 /* X21 */] <0.16333151f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.012236361f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029984051f ? 
                         (data[5 /* X19 */] <0.19115591f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16401608f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.34333685f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.38900968f ? 
             (data[2 /* X15 */] <0.060682625f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X19 */] <-0.11657377f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16251855f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_172_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[1 /* X12 */] <-0.43808118f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09314835f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8277727f ? 
                     (data[6 /* X20 */] <-0.4799381f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.091658f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.108870745f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19404426f ? 
                                 (data[9 /* X27 */] <0.20867391f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16085483f ? 
                                        1.0f : 
                                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17680143f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f) : 
                                 (data[11 /* X34 */] <-0.076925f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4423047f ? 
                     (data[1 /* X12 */] <-0.39101484f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[1 /* X12 */] <-0.04779114f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.91040534f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.825124f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.06971347f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[5 /* X19 */] <-0.015020129f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.0209629f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26783556f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42307812f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X17 */] <-0.11377544f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.026579723f ? 
             (data[10 /* X28 */] <-0.09314835f ? 
                 (data[5 /* X19 */] <0.2317358f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.37060958f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2903935f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0153825f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046875f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21820651f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3122755f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.33605358f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (data[1 /* X12 */] <-0.58938926f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49464846f ? 
             (data[10 /* X28 */] <-0.24842064f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3581744f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.25195733f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_173_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[11 /* X34 */] <-0.25901598f ? 
             (data[12 /* X35 */] <-0.546875f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.14745566f ? 
             (data[7 /* X21 */] <0.120659314f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19990067f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                         (data[9 /* X27 */] <0.14496523f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19207962f ? 
                                 (data[8 /* X23 */] <0.117131874f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.32421875f ? 
                 (data[9 /* X27 */] <0.13045706f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.48935235f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.14585724f ? 
                             (data[8 /* X23 */] <0.12571788f ? 
                                1.0f : 
                                 (data[7 /* X21 */] <0.122425064f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[11 /* X34 */] <-0.123799905f ? 
            0.0f : 
             (data[8 /* X23 */] <0.12883772f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.4398442f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.5889432f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.003965401f ? 
            0.0f : 
             (data[5 /* X19 */] <0.04505386f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48346755f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42307812f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_12_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46909207f ? 
                 (data[12 /* X35 */] <-0.0546875f ? 
                     (data[11 /* X34 */] <-0.7673157f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5191999f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15667138f ? 
                                 (data[9 /* X27 */] <0.15256786f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.25975677f ? 
             (data[5 /* X19 */] <-0.06079079f ? 
                 (data[8 /* X23 */] <0.13248673f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5521503f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13366455f ? 
             (data[2 /* X15 */] <0.060682625f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <-0.3672416f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_174_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43030366f ? 
        0.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1015625f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.010090107f ? 
                 (data[5 /* X19 */] <0.15948051f ? 
                     (data[0 /* X5 */] <0.09545808f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.38255537f ? 
                             (data[10 /* X28 */] <-0.42649943f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.041884445f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.55078125f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.1244472f ? 
                                1.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1922744f ? 
                                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.16063634f ? 
                                        1.0f : 
                                         (data[6 /* X20 */] <-0.1544617f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f))) : 
                         (data[6 /* X20 */] <-0.2280215f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[12 /* X35 */] <-0.8666382f ? 
                     (data[1 /* X12 */] <-0.14517032f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
            0.0f : 
             (data[5 /* X19 */] <0.1683534f ? 
                 (data[0 /* X5 */] <0.09545808f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15490326f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.25926483f ? 
                     (data[8 /* X23 */] <0.18256824f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.390625f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[0 /* X5 */] <0.1118229f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.90658855f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19140625f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13705957f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.09312025f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.76021683f ? 
             (data[12 /* X35 */] <0.16015625f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16922595f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.057506654f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.050407622f ? 
         (data[5 /* X19 */] <-0.25531608f ? 
             (data[7 /* X21 */] <0.15008841f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.09853755f ? 
                 (data[12 /* X35 */] <0.052775625f ? 
                     (data[6 /* X20 */] <-0.13123229f ? 
                         (data[1 /* X12 */] <-0.32249403f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.011655187f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.26864937f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (data[11 /* X34 */] <-0.9224761f ? 
             (data[2 /* X15 */] <0.12887633f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5106212f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049969885f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.1698578f ? 
                     (data[10 /* X28 */] <0.055704318f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3914294f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_175_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (data[11 /* X34 */] <-0.5564913f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20122637f ? 
                 (data[6 /* X20 */] <-0.3248107f ? 
                     (data[6 /* X20 */] <-0.4172154f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26253596f ? 
                         (data[2 /* X15 */] <0.074662335f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.09541666f ? 
                                 (data[0 /* X5 */] <0.15323687f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.61075366f ? 
             (data[12 /* X35 */] <-0.4765625f ? 
                 (data[6 /* X20 */] <-0.46658033f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.13537386f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[11 /* X34 */] <-0.2932707f ? 
             (data[5 /* X19 */] <0.35686648f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.4281825f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23806581f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.46901438f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.07240688f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03621532f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27526546f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6972857f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[9 /* X27 */] <-0.020940786f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.11328125f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13403231f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.39848655f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26968673f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[11 /* X34 */] <-0.42848676f ? 
             (data[1 /* X12 */] <-0.58938926f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.546875f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.18024442f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.20421222f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.171875f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15857954f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.8195783f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19496779f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07183074f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.10013375f ? 
                         (data[2 /* X15 */] <0.14978905f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25108507f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.9583333f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_176_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[1 /* X12 */] <-0.34050867f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15117642f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20703125f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.1015625f ? 
             (data[7 /* X21 */] <0.11624495f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13787203f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.13169411f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14338364f ? 
                     (data[3 /* X17 */] <-0.35866383f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4455471f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[2 /* X15 */] <0.13159378f ? 
                         (data[0 /* X5 */] <0.2240585f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9225632f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19252378f ? 
             (data[12 /* X35 */] <-0.796875f ? 
                 (data[5 /* X19 */] <0.14928658f ? 
                     (data[4 /* X18 */] <-0.42846283f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.71634257f ? 
                     (data[10 /* X28 */] <-0.39982495f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20894662f ? 
                 (data[6 /* X20 */] <-0.47483397f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.36437678f ? 
                         (data[7 /* X21 */] <0.15018038f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.031746533f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.38161582f ? 
                                0.0f : 
                                1.0f)))) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[2 /* X15 */] <0.14524281f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16396381f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.19140625f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.054813776f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.118836395f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.1896937f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.16796875f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.83413494f ? 
                 (data[3 /* X17 */] <-2.905869E-4f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08654341f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.22287239f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[4 /* X18 */] <-0.39762193f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17510316f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.10668049f ? 
                 (data[9 /* X27 */] <0.04692721f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.08167725f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27306288f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11974833f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21834257f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18186823f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
                 (data[1 /* X12 */] <-0.5922175f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[1 /* X12 */] <-0.59363157f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <0.0234375f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17170551f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.17977667f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4159505f ? 
                 (data[10 /* X28 */] <0.11130271f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_177_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[12 /* X35 */] <-0.17578125f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.009137663f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27379355f ? 
                 (data[6 /* X20 */] <-0.31812808f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17962003f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.37343392f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.40666562f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.42738482f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.34358585f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[6 /* X20 */] <-0.1746362f ? 
                         (data[4 /* X18 */] <-0.18867329f ? 
                             (data[0 /* X5 */] <0.15851782f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38794708f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.25f ? 
                 (data[4 /* X18 */] <-0.55777466f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.22315703f ? 
                         (data[4 /* X18 */] <-0.21019782f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9533154f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.17908408f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16559303f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.515625f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05255335f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.045322843f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.14569743f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_12_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[12 /* X35 */] <-0.01171875f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.009237868f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19969532f ? 
                             (data[10 /* X28 */] <0.3029756f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2522889f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (data[2 /* X15 */] <0.08386848f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4453125f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21188954f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.12642387f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.5041969f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_178_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[1 /* X12 */] <-0.41686976f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1015625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19083561f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24741714f ? 
                         (data[6 /* X20 */] <-0.4723351f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.10608005f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13311304f ? 
                                    1.0f : 
                                     (data[3 /* X17 */] <-0.18720435f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18256824f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15891714f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.51831764f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3382518f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[6 /* X20 */] <-0.6014232f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.36259606f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.09933141f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.17829452f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.13865942f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23101844f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.23307061f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.13637014f ? 
                 (data[11 /* X34 */] <-0.50961643f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010071439f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.1305737f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27281302f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22520775f ? 
                 (data[8 /* X23 */] <0.070485204f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[6 /* X20 */] <-0.22599699f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13671875f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.530169f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19162323f ? 
                         (data[7 /* X21 */] <0.15573458f ? 
                             (data[4 /* X18 */] <-0.2743185f ? 
                                1.0f : 
                                 (data[2 /* X15 */] <0.16340958f ? 
                                    1.0f : 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26154f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1954469f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.25831932f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <5.551115E-17f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17520858f ? 
                                        1.0f : 
                                         (data[7 /* X21 */] <0.17787592f ? 
                                            0.0f : 
                                            1.0f))) : 
                                1.0f)) : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.19356184f ? 
                         (data[11 /* X34 */] <-0.16346328f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27286264f ? 
             (data[1 /* X12 */] <-0.43076766f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16093603f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.0823087f ? 
                     (data[2 /* X15 */] <0.072283074f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_179_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19061467f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.26025814f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.11649857f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.13677314f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18948235f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.036074035f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[2 /* X15 */] <0.11796533f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14644454f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.16886963f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[7 /* X21 */] <0.1309595f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12916903f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.024036327f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2559736f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.13820404f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3581744f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.0879601f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19061467f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.58910656f ? 
                 (data[9 /* X27 */] <0.06780967f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.30212224f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24741714f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.215255f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.21308564f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                1.0f) : 
             (data[2 /* X15 */] <0.11796533f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19506328f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.20015234f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
            0.0f : 
             (data[1 /* X12 */] <0.024327675f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
        0.012987013f : 
         (data[9 /* X27 */] <-0.022680992f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3762032f ? 
                 (data[1 /* X12 */] <-0.6996887f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.2075838f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18566862f ? 
                 (data[10 /* X28 */] <-0.042035587f ? 
                     (data[11 /* X34 */] <-0.97475964f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17195836f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22009283f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.17377543f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.2307833f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[11 /* X34 */] <-0.2842563f ? 
             (data[4 /* X18 */] <-0.14676322f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.006263474f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14689037f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14251506f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13342041f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3093986f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.796874f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15116625f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45849448f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
            0.0f) : 
         (data[9 /* X27 */] <0.03300557f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07023006f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21460181f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19717498f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2732746f ? 
                 (data[7 /* X21 */] <0.0939662f ? 
                     (data[2 /* X15 */] <0.09300271f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1269213f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10585739f ? 
                     (data[0 /* X5 */] <0.102471575f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_180_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[3 /* X17 */] <-0.2825095f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2587031f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3088915f ? 
                 (data[11 /* X34 */] <-0.49873516f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.8906256f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.36149037f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1824787f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <-0.327182f ? 
                                    1.0f : 
                                     (data[11 /* X34 */] <-0.050411448f ? 
                                        0.0f : 
                                        1.0f)))))) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.2944553f ? 
             (data[12 /* X35 */] <-0.045661926f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[8 /* X23 */] <0.08608439f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.084561065f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.8117124f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.2825095f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25883093f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16268879f ? 
                 (data[0 /* X5 */] <0.08934687f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.3706936f ? 
                         (data[10 /* X28 */] <-0.09845922f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[8 /* X23 */] <0.12537123f ? 
             (data[3 /* X17 */] <-0.30118373f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.14273115f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <-0.19524209f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.093867235f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04838066f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12041964f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.047411755f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.056052208f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2570977f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5428098f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.20673242f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30957368f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.26904306f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20085362f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                     (data[5 /* X19 */] <0.056496523f ? 
                         (data[9 /* X27 */] <-0.26452678f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16559303f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <4.0102273E-4f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[7 /* X21 */] <0.09531792f ? 
                         (data[2 /* X15 */] <0.2021013f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16763863f ? 
             (data[8 /* X23 */] <0.099950336f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5265939f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.09911335f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.050478954f ? 
             (data[5 /* X19 */] <0.1423165f ? 
                 (data[2 /* X15 */] <0.12433007f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17045844f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45631388f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17918515f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[5 /* X19 */] <0.3668788f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20061989f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20075005f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.25571445f ? 
                 (data[11 /* X34 */] <-0.7331736f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_12_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_181_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[2 /* X15 */] <0.09978034f ? 
            0.0f : 
             (data[0 /* X5 */] <0.11065399f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.5278678f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1346172f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1412539f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[10 /* X28 */] <-0.10592654f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19202489f ? 
                 (data[11 /* X34 */] <-0.76923126f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2010904f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1766423f ? 
                             (data[11 /* X34 */] <-0.228378f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13746509f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (data[4 /* X18 */] <-0.18928164f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23197275f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30981693f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.06506627f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25102183f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_12_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (data[6 /* X20 */] <-0.46515504f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.5130142f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.18268985f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.68584305f ? 
                         (data[2 /* X15 */] <0.13408777f ? 
                             (data[6 /* X20 */] <-0.35807356f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[4 /* X18 */] <-0.10991392f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14068154f ? 
             (data[8 /* X23 */] <0.08409685f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.041884445f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28707403f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.039358675f ? 
            0.0f : 
            1.0f) : 
         (data[8 /* X23 */] <0.11988263f ? 
             (data[3 /* X17 */] <0.0056823003f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14935274f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.39977646f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.4252916f ? 
                 (data[5 /* X19 */] <0.12515251f ? 
                     (data[2 /* X15 */] <0.14351566f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4375f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5384591f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (data[6 /* X20 */] <-0.259478f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.014641631f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20066418f ? 
                    0.0f : 
                    1.0f))) : 
         (data[8 /* X23 */] <0.1444369f ? 
            0.0f : 
             (data[8 /* X23 */] <0.14727247f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25000155f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.50240487f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.30823514f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32187963f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26623827f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4178115f ? 
                 (data[2 /* X15 */] <0.0823087f ? 
                     (data[11 /* X34 */] <0.038459376f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.29826295f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.019232813f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_182_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[10 /* X28 */] <-0.20495753f ? 
             (data[0 /* X5 */] <0.12818773f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.46999452f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24071398f ? 
                     (data[7 /* X21 */] <0.09556077f ? 
                         (data[11 /* X34 */] <-0.23797968f ? 
                             (data[5 /* X19 */] <0.5405321f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.113843255f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[4 /* X18 */] <-0.24313831f ? 
             (data[12 /* X35 */] <-0.08966255f ? 
                 (data[6 /* X20 */] <-0.5329075f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.43631136f ? 
                 (data[2 /* X15 */] <0.095234096f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
             (data[8 /* X23 */] <0.025420895f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9661884f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.09729689f ? 
                             (data[7 /* X21 */] <0.17020595f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.32879937f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26617298f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43611827f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3141565f ? 
             (data[3 /* X17 */] <-0.06001946f ? 
                 (data[2 /* X15 */] <0.15342605f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.091382876f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[6 /* X20 */] <-0.03928255f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[8 /* X23 */] <0.14501464f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06476584f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23837572f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.14854884f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28391573f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26378196f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (data[3 /* X17 */] <-0.07495168f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08283769f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24798799f ? 
                         (data[11 /* X34 */] <-0.6746789f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1360862f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.073572755f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08654341f ? 
                 (data[1 /* X12 */] <-0.46777716f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23028272f ? 
                 (data[6 /* X20 */] <-0.053800933f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15525392f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[9 /* X27 */] <-0.04356345f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3004822f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.075899184f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.9583333f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_183_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.02960363f ? 
             (data[2 /* X15 */] <0.0879601f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.14426112f ? 
                     (data[12 /* X35 */] <-0.1875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23472641f ? 
             (data[6 /* X20 */] <-0.3248107f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26617298f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.35935533f ? 
                 (data[5 /* X19 */] <0.1423165f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.12941547f ? 
                     (data[8 /* X23 */] <0.12188024f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[6 /* X20 */] <-0.4603156f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23472641f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26617298f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22172877f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13148293f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11670479f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.15543994f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.43369856f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.12584989f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.15045789f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17725056f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (data[6 /* X20 */] <0.018790971f ? 
            0.0f : 
             (data[2 /* X15 */] <0.11614683f ? 
                 (data[10 /* X28 */] <0.4179793f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.6676625f ? 
             (data[11 /* X34 */] <-0.71615523f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16454498f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08574633f ? 
                     (data[5 /* X19 */] <-0.08081545f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[6 /* X20 */] <-0.0513812f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.041519623f ? 
                 (data[6 /* X20 */] <-0.5294104f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16372041f ? 
                         (data[10 /* X28 */] <-0.10592654f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.30178532f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.18740845f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (data[10 /* X28 */] <0.32853198f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.5020131f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[6 /* X20 */] <-0.02960363f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1794772f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.8305292f ? 
                 (data[10 /* X28 */] <0.4179793f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3969064f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.030546198f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4371466f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3883338f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15502663f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21889655f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_184_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27802983f ? 
         (data[10 /* X28 */] <-0.11551019f ? 
             (data[11 /* X34 */] <-0.35456866f ? 
                 (data[12 /* X35 */] <-0.25f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35937217f ? 
                 (data[4 /* X18 */] <-0.574782f ? 
                     (data[12 /* X35 */] <-0.390625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25901598f ? 
             (data[12 /* X35 */] <-0.5078125f ? 
                 (data[5 /* X19 */] <0.34256312f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <0.25674316f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.890625f ? 
                     (data[4 /* X18 */] <0.00346854f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.2867731f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.27459276f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (data[8 /* X23 */] <0.023687651f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.06971347f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05775462f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19230542f ? 
                         (data[0 /* X5 */] <0.118951134f ? 
                             (data[6 /* X20 */] <-0.40224206f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12070383f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17449713f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04508724f ? 
            1.0f : 
             (data[1 /* X12 */] <0.006966352f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04842468f ? 
            0.0f : 
             (data[0 /* X5 */] <0.09473347f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.22957009f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.03015586f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13977748f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[11 /* X34 */] <-0.47716454f ? 
             (data[1 /* X12 */] <-0.6204994f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.578125f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09984363f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.12742645f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
         (data[10 /* X28 */] <-0.104329266f ? 
             (data[11 /* X34 */] <-0.379809f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20399824f ? 
                     (data[10 /* X28 */] <-0.14896277f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1503867f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.3809564f ? 
                         (data[3 /* X17 */] <-0.19907574f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3762032f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
                     (data[12 /* X35 */] <0.28125f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17822297f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.03444309f ? 
                         (data[5 /* X19 */] <0.39977646f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2554003f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6015625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (data[0 /* X5 */] <0.12497321f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.43235478f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19570352f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13987689f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.070380725f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_12_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_185_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.056640625f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26854056f ? 
                 (data[1 /* X12 */] <-0.39808804f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.03202336f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08984375f ? 
                 (data[2 /* X15 */] <0.13160408f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25443062f ? 
                         (data[5 /* X19 */] <0.2342747f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1423279f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.30633342f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.03282382f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <-0.223418f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.61328125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21410304f ? 
         (data[6 /* X20 */] <-0.31755152f ? 
             (data[7 /* X21 */] <0.15155987f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.45913574f ? 
                    0.0f : 
                    1.0f)) : 
             (data[12 /* X35 */] <-0.88716245f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.37252578f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13486189f ? 
             (data[7 /* X21 */] <0.09490885f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07928422f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20821089f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5074266f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <0.027260026f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.37109375f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3870205f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15060261f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.31125933f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14615206f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5384625f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (data[12 /* X35 */] <-0.033203125f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27663356f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.34190637f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.06432926f ? 
                 (data[2 /* X15 */] <0.109782085f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17260653f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.22929576f ? 
                        1.0f : 
                         (data[10 /* X28 */] <0.17519367f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.42266178f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.12109375f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20979951f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[1 /* X12 */] <-0.5285832f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23798624f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2774192f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13483723f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3969158f ? 
             (data[12 /* X35 */] <-0.07421875f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.25675935f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.27169016f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1385184f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18834625f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_186_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[11 /* X34 */] <-0.38161185f ? 
             (data[10 /* X28 */] <-0.15065022f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X17 */] <-0.4064469f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18834572f ? 
                     (data[11 /* X34 */] <-0.22814162f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22366117f ? 
                             (data[3 /* X17 */] <-0.23314317f ? 
                                1.0f : 
                                 (data[9 /* X27 */] <0.25018317f ? 
                                     (data[10 /* X28 */] <-0.18770696f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[2 /* X15 */] <0.16479167f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25960383f ? 
                 (data[2 /* X15 */] <0.089953765f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.16580798f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.3581744f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[0 /* X5 */] <0.08990573f ? 
             (data[5 /* X19 */] <-0.10370078f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13366455f ? 
             (data[8 /* X23 */] <0.06528548f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <-0.18644708f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                 (data[3 /* X17 */] <-0.77676594f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.1201715f ? 
                         (data[4 /* X18 */] <-0.16774803f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25000492f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17319098f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1706888f ? 
                 (data[0 /* X5 */] <0.17633016f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1272922f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.3156753f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13366455f ? 
             (data[8 /* X23 */] <0.06528548f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.0010749175f ? 
                     (data[2 /* X15 */] <0.08359845f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.18644708f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_187_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[11 /* X34 */] <-0.47716454f ? 
            0.0f : 
             (data[9 /* X27 */] <0.074770495f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.3885879f ? 
                     (data[11 /* X34 */] <0.20516953f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.2765366f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17377543f ? 
                 (data[5 /* X19 */] <0.34256312f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.15830034f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.125f ? 
                             (data[6 /* X20 */] <-0.37126952f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.11092754f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17135212f ? 
                             (data[11 /* X34 */] <-0.26154f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45364678f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23197275f ? 
                 (data[12 /* X35 */] <-0.5078125f ? 
                     (data[0 /* X5 */] <0.069741935f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X34 */] <0.21443745f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.034633562f ? 
                         (data[11 /* X34 */] <-9.91622E-4f ? 
                             (data[8 /* X23 */] <0.15529856f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18930581f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_12_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.27579f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18020448f ? 
             (data[9 /* X27 */] <0.10957459f ? 
                 (data[0 /* X5 */] <0.123263046f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20574574f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17024717f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2439878f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.9296875f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.22318204f ? 
                 (data[11 /* X34 */] <-0.22836699f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.094449714f ? 
                         (data[0 /* X5 */] <0.09086642f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.43028966f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.044057507f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41045797f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12941547f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.13230744f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.01970247f ? 
            0.0f : 
             (data[7 /* X21 */] <0.1258094f ? 
                 (data[6 /* X20 */] <-0.01508525f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.25102183f ? 
                     (data[12 /* X35 */] <-0.15625f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5961547f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25901598f ? 
             (data[9 /* X27 */] <0.06432926f ? 
                 (data[5 /* X19 */] <-0.21812743f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08283769f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.45005092f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.6677607f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23616853f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.094456255f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.077133596f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18049671f ? 
             (data[9 /* X27 */] <-0.04356345f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.09225811f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.55288553f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1702496f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.0703125f ? 
                    0.0f : 
                    1.0f))) : 
         (data[2 /* X15 */] <0.15706305f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5342278f ? 
                 (data[0 /* X5 */] <0.12509733f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.44232348f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_188_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[11 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                 (data[2 /* X15 */] <0.12530781f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29170293f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.13052556f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13882764f ? 
                         (data[2 /* X15 */] <0.1061764f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2750434f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2358994f ? 
                     (data[6 /* X20 */] <-0.32300007f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3586646f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18834572f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.029257394f ? 
                         (data[9 /* X27 */] <0.17222197f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16951162f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.19174595f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4357993f ? 
            1.0f : 
             (data[0 /* X5 */] <0.13870797f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.1929677f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33928168f ? 
                         (data[0 /* X5 */] <0.17073983f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.039049882f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.215255f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39055455f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.44486335f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.15599185f ? 
                     (data[6 /* X20 */] <0.005728202f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.010071439f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.09585678f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.034648716f ? 
             (data[2 /* X15 */] <0.12342083f ? 
                 (data[2 /* X15 */] <0.1063724f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.1813285f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[8 /* X23 */] <0.097639345f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (data[11 /* X34 */] <-0.25901598f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.087237425f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.041519623f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16176933f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.16842546f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19061467f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.40275592f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (data[11 /* X34 */] <-0.38161185f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.041519623f ? 
                 (data[9 /* X27 */] <0.18614362f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49464846f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08156831f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.074481905f ? 
             (data[2 /* X15 */] <0.12342083f ? 
                 (data[9 /* X27 */] <0.059483875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.12760326f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.17868726f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_189_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
             (data[12 /* X35 */] <-0.32421875f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23583347f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.24312982f ? 
                         (data[10 /* X28 */] <-0.20008667f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[10 /* X28 */] <-0.23849364f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.3027789f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17313242f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.027027028f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (data[6 /* X20 */] <-0.31755152f ? 
             (data[12 /* X35 */] <-0.75390625f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.23514552f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.30393207f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.81597763f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06753074f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.0600773f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.06250195f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01024579f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.34078136f ? 
                 (data[2 /* X15 */] <0.11887458f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.12872835f ? 
         (data[6 /* X20 */] <0.05387706f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49464846f ? 
                 (data[10 /* X28 */] <-0.23468836f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07081517f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.26959434f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[6 /* X20 */] <-0.092516616f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0078125f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.57966065f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.24979907f ? 
             (data[9 /* X27 */] <0.14785911f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.09314835f ? 
                 (data[5 /* X19 */] <0.25441116f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3810466f ? 
                        1.0f : 
                        0.0f) : 
                     (data[11 /* X34 */] <-0.50961643f ? 
                         (data[1 /* X12 */] <-0.28602126f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45418483f ? 
                     (data[12 /* X35 */] <-0.1875f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.059301194f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3539236f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.34545454f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5106212f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_12_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_190_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08347152f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.38613436f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.25000665f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.6796875f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.034633562f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.020898357f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1410458f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11723234f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.12223506f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[7 /* X21 */] <0.14714551f ? 
                         (data[6 /* X20 */] <-0.4371687f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10592654f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2788872f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2725377f ? 
         (data[6 /* X20 */] <-0.32723042f ? 
             (data[1 /* X12 */] <-0.3659624f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.32684368f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.07735695f ? 
                    0.0f : 
                    1.0f))) : 
        0.6666667f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[6 /* X20 */] <0.004272591f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.5102f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.80889463f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3625878f ? 
                 (data[3 /* X17 */] <-0.07793812f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.39990065f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13735774f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.59554905f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.050407622f ? 
        0.028571429f : 
         (data[12 /* X35 */] <-0.056640625f ? 
             (data[1 /* X12 */] <-0.4338389f ? 
                 (data[12 /* X35 */] <-0.2372055f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46567535f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20967896f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.16052842f ? 
                             (data[4 /* X18 */] <-0.21876109f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (data[5 /* X19 */] <0.17092317f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.062346112f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12137502f ? 
         (data[4 /* X18 */] <-0.17369156f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1085972f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <0.0234375f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5265939f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6171875f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.056057252f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.5582792f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16442412f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_191_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[3 /* X17 */] <-0.32581294f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18020448f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.3231558f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.22241516f ? 
                     (data[9 /* X27 */] <0.03300557f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18540333f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.20006521f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07607303f ? 
             (data[4 /* X18 */] <-0.2570528f ? 
                 (data[10 /* X28 */] <-0.24009755f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18246043f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.19277404f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (data[12 /* X35 */] <-0.75390625f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.3551013f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.2046588f ? 
                     (data[6 /* X20 */] <-0.4192369f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.01967375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.055539794f ? 
            0.0f : 
             (data[0 /* X5 */] <0.09545808f ? 
                 (data[6 /* X20 */] <-0.20821941f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.42676842f ? 
             (data[8 /* X23 */] <0.097639345f ? 
                 (data[2 /* X15 */] <0.08166797f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10698652f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
             (data[4 /* X18 */] <-0.14676322f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.029272884f ? 
                     (data[10 /* X28 */] <-0.13263744f ? 
                         (data[9 /* X27 */] <0.06084885f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.077998236f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4506548f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25889897f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.3885879f ? 
            0.0f : 
             (data[8 /* X23 */] <0.100528084f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.0064381305f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053195998f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0743705f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.29978102f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28700283f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.42676842f ? 
             (data[0 /* X5 */] <0.12760326f ? 
                 (data[1 /* X12 */] <-0.61755514f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28445795f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_192_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[5 /* X19 */] <0.23099716f ? 
             (data[10 /* X28 */] <-0.14426112f ? 
                 (data[0 /* X5 */] <0.10364049f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.18097205f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.12360223f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[4 /* X18 */] <-0.50371546f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.111600585f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2572131f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3088677f ? 
                         (data[12 /* X35 */] <-0.46875f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.060189947f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.013951511f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.2734375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97906137f ? 
             (data[6 /* X20 */] <-0.38288423f ? 
                 (data[0 /* X5 */] <0.09779591f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.10005894f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20278758f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.091348045f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.121899284f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10294082f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16208628f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2704429f ? 
                 (data[12 /* X35 */] <-0.1875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12283937f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.39707246f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_12_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.050407622f ? 
        0.028571429f : 
         (data[10 /* X28 */] <-0.14745566f ? 
             (data[8 /* X23 */] <0.1201715f ? 
                 (data[12 /* X35 */] <0.265625f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.39337006f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.014641631f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17794625f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26442462f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05375006f ? 
                             (data[1 /* X12 */] <-0.60170877f ? 
                                0.0f : 
                                 (data[7 /* X21 */] <0.08769587f ? 
                                     (data[12 /* X35 */] <0.006514775f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.017457288f ? 
                         (data[0 /* X5 */] <0.08710597f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.04605711f ? 
         (data[4 /* X18 */] <-0.007869706f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.22311188f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.5582792f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11141988f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3572829f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3908364f ? 
                 (data[5 /* X19 */] <0.12515251f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6217381f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_12_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_193_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
         (data[9 /* X27 */] <0.06954988f ? 
             (data[2 /* X15 */] <0.0897786f ? 
                 (data[1 /* X12 */] <-0.26980397f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18448325f ? 
                 (data[10 /* X28 */] <-0.09314835f ? 
                     (data[8 /* X23 */] <0.10923488f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1706187f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21188954f ? 
                             (data[1 /* X12 */] <-0.24558713f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <-0.14338559f ? 
                                    1.0f : 
                                     (data[11 /* X34 */] <-0.076925f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.60366285f ? 
                         (data[3 /* X17 */] <-0.35616255f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30769375f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.020000836f ? 
            0.0f : 
             (data[6 /* X20 */] <0.09693284f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_12_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21232224f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19075826f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029984051f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13685909f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.066579044f ? 
                     (data[8 /* X23 */] <0.11154397f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.032945935f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.13351792f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.19462684f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.102731995f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3421133f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.023551095f ? 
         (data[8 /* X23 */] <0.11843826f ? 
            0.0f : 
             (data[2 /* X15 */] <0.1579723f ? 
                 (data[7 /* X21 */] <0.15008841f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19084181f ? 
                 (data[1 /* X12 */] <-0.37161875f ? 
                     (data[10 /* X28 */] <0.31595942f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.050407622f ? 
         (data[4 /* X18 */] <-0.5691129f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.15065022f ? 
             (data[2 /* X15 */] <0.095234096f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0026958566f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0011505727f ? 
                     (data[10 /* X28 */] <-0.10462325f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5155342f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.25504348f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.24079186f ? 
                                    1.0f : 
                                     (data[6 /* X20 */] <-0.1405487f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                         (data[0 /* X5 */] <0.09081768f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.19528694f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26154f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46513644f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.09504165f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14630592f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11416576f ? 
            0.0f : 
             (data[2 /* X15 */] <0.12705782f ? 
                 (data[7 /* X21 */] <0.19128916f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.5356537f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3924229f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32853198f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3969064f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_194_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (data[6 /* X20 */] <-0.37562504f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.56850636f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0421008f ? 
                 (data[11 /* X34 */] <-0.3004822f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15483636f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5046132f ? 
                            0.0f : 
                            1.0f) : 
                         (data[7 /* X21 */] <0.16030383f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[1 /* X12 */] <-0.34275952f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.66264063f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.32528126f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1582043f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.61075366f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.10336309f ? 
                 (data[0 /* X5 */] <0.052208196f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.34876224f ? 
                         (data[4 /* X18 */] <-0.38203183f ? 
                            0.0f : 
                             (data[10 /* X28 */] <0.110723704f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16208628f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15102004f ? 
                         (data[8 /* X23 */] <0.13868482f ? 
                             (data[8 /* X23 */] <0.11747228f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_12_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (data[6 /* X20 */] <-0.43611827f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47136605f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.085103184f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
                 (data[8 /* X23 */] <0.0242654f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26611978f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.108141035f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13403231f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5673059f ? 
                         (data[12 /* X35 */] <-0.9318184f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12041964f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.27884766f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17679076f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0030627258f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.061732568f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.7331736f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_12_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14905293f ? 
         (data[2 /* X15 */] <0.08750548f ? 
             (data[11 /* X34 */] <-0.379809f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0126655195f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.066174366f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23557852f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.075899184f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19607118f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.84375f ? 
                             (data[8 /* X23 */] <0.13928038f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[2 /* X15 */] <0.08204998f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3462425f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.40574673f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X27 */] <-0.3411385f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_12_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_195_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (data[0 /* X5 */] <0.051623736f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.6171875f ? 
                 (data[5 /* X19 */] <0.25674316f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.2765366f ? 
             (data[5 /* X19 */] <0.07938185f ? 
                 (data[4 /* X18 */] <-0.2289655f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.43839929f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.013284654f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17161104f ? 
                     (data[3 /* X17 */] <-0.2444089f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X27 */] <0.17222197f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.12818773f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.48632404f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_12_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07151636f ? 
         (data[8 /* X23 */] <0.08608439f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.2765366f ? 
             (data[10 /* X28 */] <-0.4030195f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32665098f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.3732053f ? 
                        1.0f : 
                        0.0f))) : 
             (data[2 /* X15 */] <0.17161104f ? 
                 (data[6 /* X20 */] <-0.39256313f ? 
                     (data[2 /* X15 */] <0.0962883f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.31997123f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.2749244f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.76021683f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14567405f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.30859375f ? 
                 (data[6 /* X20 */] <-0.04412201f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.021195693f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.23656668f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1660382f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.14509226f ? 
                 (data[6 /* X20 */] <-5.668693E-4f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X19 */] <-0.09225811f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.17853561f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.10805361f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27915394f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25631166f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16413188f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06897879f ? 
                 (data[5 /* X19 */] <0.14803784f ? 
                     (data[6 /* X20 */] <-0.07315877f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.092516616f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4506548f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.114156745f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[0 /* X5 */] <0.1115398f ? 
                            1.0f : 
                             (data[8 /* X23 */] <0.14279138f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.03564649f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.30823514f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4278836f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[10 /* X28 */] <0.32853198f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.018790971f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3532033f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_12_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14630592f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19758968f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26464102f ? 
                 (data[9 /* X27 */] <-0.03660263f ? 
                     (data[2 /* X15 */] <0.113419086f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.32071134f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.12229185f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.39424425f ? 
             (data[10 /* X28 */] <0.32853198f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3430348f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_12_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_196_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.3251953f ? 
         (data[9 /* X27 */] <0.085211724f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.041884445f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14221472f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13898332f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18945043f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.5421184f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.18113893f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.10857866f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2554102f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.10912109f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.01600277f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[9 /* X27 */] <0.085211724f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.041884445f ? 
                 (data[6 /* X20 */] <-0.31997123f ? 
                     (data[11 /* X34 */] <-0.105771095f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.44455937f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.16909978f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11341562f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.19140625f ? 
         (data[5 /* X19 */] <0.097976185f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13825953f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.76021683f ? 
             (data[6 /* X20 */] <0.018790971f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18372373f ? 
                     (data[2 /* X15 */] <0.119942494f ? 
                         (data[1 /* X12 */] <-0.6597895f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[4 /* X18 */] <-0.053219315f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4368744f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11118188f ? 
                     (data[5 /* X19 */] <-0.08081545f ? 
                         (data[2 /* X15 */] <0.13993603f ? 
                            0.0f : 
                            1.0f) : 
                         (data[10 /* X28 */] <-0.15185663f ? 
                             (data[0 /* X5 */] <0.12551059f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48339844f ? 
         (data[5 /* X19 */] <0.2195545f ? 
             (data[4 /* X18 */] <-0.7136755f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.10443257f ? 
                     (data[6 /* X20 */] <-0.08283769f ? 
                         (data[4 /* X18 */] <-0.417712f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10592654f ? 
                 (data[1 /* X12 */] <-0.39990065f ? 
                     (data[2 /* X15 */] <0.14978905f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12488322f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14363988f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.13940932f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[11 /* X34 */] <-0.49519336f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12839451f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.14731598f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.38734934f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[1 /* X12 */] <-0.4112134f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.8647957f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13825953f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20336875f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <0.1766445f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_12_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.16894531f ? 
        0.0f : 
         (data[5 /* X19 */] <0.19237816f ? 
             (data[1 /* X12 */] <-0.43101072f ? 
                 (data[10 /* X28 */] <0.23269553f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <3.8146973E-6f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3605769f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.2639552f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17070767f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_12_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_197_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[0 /* X5 */] <0.09575031f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.26081884f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.07479427f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.1015625f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (data[11 /* X34 */] <-0.40384457f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.24152207f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15303132f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15064208f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.171383f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.31755152f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1355926f ? 
             (data[8 /* X23 */] <0.10226133f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.5208294f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18130113f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.003701011f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.056640625f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (data[11 /* X34 */] <-0.30769375f ? 
                     (data[7 /* X21 */] <0.10594477f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.069605306f ? 
         (data[0 /* X5 */] <0.089613505f ? 
             (data[9 /* X27 */] <-0.0052789412f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28844437f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.379809f ? 
                 (data[3 /* X17 */] <-0.09766632f ? 
                     (data[1 /* X12 */] <-0.62615573f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.7079333f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_12_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012060587f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1723143f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046875f ? 
                 (data[11 /* X34 */] <-0.6322123f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20372413f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.17261821f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[3 /* X17 */] <-0.6039969f ? 
                     (data[7 /* X21 */] <0.1706888f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.44831845f ? 
                 (data[11 /* X34 */] <-0.7564843f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45631388f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073773265f ? 
         (data[1 /* X12 */] <-0.5285832f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27269685f ? 
                 (data[8 /* X23 */] <0.11691606f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08671544f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.45411113f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.021484375f ? 
             (data[11 /* X34 */] <-0.40144354f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15597424f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <-0.1967015f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.11130271f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_12_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_198_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3905355f ? 
         (data[1 /* X12 */] <-0.3871738f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.30769375f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08767715f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053800933f ? 
             (data[10 /* X28 */] <-0.09953745f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20616251f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                         (data[10 /* X28 */] <-0.38667336f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.26154f ? 
                                 (data[0 /* X5 */] <0.13940932f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40144354f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.47029698f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28359511f ? 
                             (data[6 /* X20 */] <-0.41773885f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.242654f ? 
                 (data[3 /* X17 */] <-0.43033847f ? 
                     (data[4 /* X18 */] <-0.21758296f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.068214856f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_12_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.02728677f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26865262f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.087742284f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.45547614f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.37256795f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19309407f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.1054134f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4243684f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13486189f ? 
             (data[8 /* X23 */] <0.12421573f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_12_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
         (data[4 /* X18 */] <-0.367859f ? 
            0.0f : 
             (data[5 /* X19 */] <0.08796385f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.21991734f ? 
                     (data[6 /* X20 */] <0.004272591f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53418463f ? 
                     (data[2 /* X15 */] <0.13462085f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21531452f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.050167948f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.08400664f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05387706f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17274652f ? 
             (data[11 /* X34 */] <-0.26081884f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08283769f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.22630644f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <0.16806251f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2139869f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.28474548f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[6 /* X20 */] <-0.0792081f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30447757f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.3149053f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_12_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.51868457f ? 
        0.94736844f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27286264f ? 
             (data[2 /* X15 */] <0.08159536f ? 
                 (data[5 /* X19 */] <-0.03033867f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24727598f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.21483244f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24501413f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_12_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_12_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_12_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_12_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_12_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_12_Tree_199_class_4.score0(fdata);
  }
}
class h2o_rf_12_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.10353063f ? 
         (data[11 /* X34 */] <-0.7331736f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23616774f ? 
                 (data[6 /* X20 */] <-0.3248107f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15558565f ? 
                        0.0f : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.38248384f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12923676f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1618525f ? 
                                    0.0f : 
                                    1.0f))))) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.10042597f ? 
             (data[11 /* X34 */] <-0.46995303f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.453125f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2972339f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.104223885f ? 
                 (data[4 /* X18 */] <-0.14392866f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_12_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.3574972f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2151417f ? 
             (data[8 /* X23 */] <0.025420895f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5133022f ? 
                     (data[6 /* X20 */] <-0.3732053f ? 
                         (data[6 /* X20 */] <-0.43611574f ? 
                             (data[2 /* X15 */] <0.12505747f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.064560935f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06981727f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.35935533f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.3248107f ? 
                             (data[10 /* X28 */] <-0.1897668f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_12_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05180674f ? 
         (data[11 /* X34 */] <-0.76021683f ? 
             (data[5 /* X19 */] <0.12229185f ? 
                 (data[1 /* X12 */] <-0.6122616f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <-0.1967015f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.12818925f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.14978905f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1673464f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1775586f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5673086f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.110740714f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.001798531f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_12_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14392866f ? 
         (data[11 /* X34 */] <-0.25901598f ? 
             (data[5 /* X19 */] <0.053635858f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0056823003f ? 
                     (data[1 /* X12 */] <-0.5096149f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.26459083f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30099717f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.030048516f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44393793f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_12_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28300965f ? 
         (data[1 /* X12 */] <-0.43101072f ? 
             (data[7 /* X21 */] <0.23322563f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.17704675f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <-0.04356345f ? 
                 (data[6 /* X20 */] <0.052667193f ? 
                     (data[4 /* X18 */] <-0.41604656f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.101010434f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}



