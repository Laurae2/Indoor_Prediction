/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:42:47.544+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_09

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_09 > h2o_rf_09.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_09.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_09", algorithm="drf")
public class h2o_rf_09 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 13; }
  public int nclasses() { return 6; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_09.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X5 */ null,
    /* X12 */ null,
    /* X15 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X23 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* Label */ h2o_rf_09_ColInfo_13.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.25961538461538464,0.11538461538461539,0.11538461538461539,0.125,0.25961538461538464,0.125};

  public h2o_rf_09() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-3413464306228844668L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_09_Forest_0.score0(data,preds);
    h2o_rf_09_Forest_1.score0(data,preds);
    h2o_rf_09_Forest_2.score0(data,preds);
    h2o_rf_09_Forest_3.score0(data,preds);
    h2o_rf_09_Forest_4.score0(data,preds);
    h2o_rf_09_Forest_5.score0(data,preds);
    h2o_rf_09_Forest_6.score0(data,preds);
    h2o_rf_09_Forest_7.score0(data,preds);
    h2o_rf_09_Forest_8.score0(data,preds);
    h2o_rf_09_Forest_9.score0(data,preds);
    h2o_rf_09_Forest_10.score0(data,preds);
    h2o_rf_09_Forest_11.score0(data,preds);
    h2o_rf_09_Forest_12.score0(data,preds);
    h2o_rf_09_Forest_13.score0(data,preds);
    h2o_rf_09_Forest_14.score0(data,preds);
    h2o_rf_09_Forest_15.score0(data,preds);
    h2o_rf_09_Forest_16.score0(data,preds);
    h2o_rf_09_Forest_17.score0(data,preds);
    h2o_rf_09_Forest_18.score0(data,preds);
    h2o_rf_09_Forest_19.score0(data,preds);
    h2o_rf_09_Forest_20.score0(data,preds);
    h2o_rf_09_Forest_21.score0(data,preds);
    h2o_rf_09_Forest_22.score0(data,preds);
    h2o_rf_09_Forest_23.score0(data,preds);
    h2o_rf_09_Forest_24.score0(data,preds);
    h2o_rf_09_Forest_25.score0(data,preds);
    h2o_rf_09_Forest_26.score0(data,preds);
    h2o_rf_09_Forest_27.score0(data,preds);
    h2o_rf_09_Forest_28.score0(data,preds);
    h2o_rf_09_Forest_29.score0(data,preds);
    h2o_rf_09_Forest_30.score0(data,preds);
    h2o_rf_09_Forest_31.score0(data,preds);
    h2o_rf_09_Forest_32.score0(data,preds);
    h2o_rf_09_Forest_33.score0(data,preds);
    h2o_rf_09_Forest_34.score0(data,preds);
    h2o_rf_09_Forest_35.score0(data,preds);
    h2o_rf_09_Forest_36.score0(data,preds);
    h2o_rf_09_Forest_37.score0(data,preds);
    h2o_rf_09_Forest_38.score0(data,preds);
    h2o_rf_09_Forest_39.score0(data,preds);
    h2o_rf_09_Forest_40.score0(data,preds);
    h2o_rf_09_Forest_41.score0(data,preds);
    h2o_rf_09_Forest_42.score0(data,preds);
    h2o_rf_09_Forest_43.score0(data,preds);
    h2o_rf_09_Forest_44.score0(data,preds);
    h2o_rf_09_Forest_45.score0(data,preds);
    h2o_rf_09_Forest_46.score0(data,preds);
    h2o_rf_09_Forest_47.score0(data,preds);
    h2o_rf_09_Forest_48.score0(data,preds);
    h2o_rf_09_Forest_49.score0(data,preds);
    h2o_rf_09_Forest_50.score0(data,preds);
    h2o_rf_09_Forest_51.score0(data,preds);
    h2o_rf_09_Forest_52.score0(data,preds);
    h2o_rf_09_Forest_53.score0(data,preds);
    h2o_rf_09_Forest_54.score0(data,preds);
    h2o_rf_09_Forest_55.score0(data,preds);
    h2o_rf_09_Forest_56.score0(data,preds);
    h2o_rf_09_Forest_57.score0(data,preds);
    h2o_rf_09_Forest_58.score0(data,preds);
    h2o_rf_09_Forest_59.score0(data,preds);
    h2o_rf_09_Forest_60.score0(data,preds);
    h2o_rf_09_Forest_61.score0(data,preds);
    h2o_rf_09_Forest_62.score0(data,preds);
    h2o_rf_09_Forest_63.score0(data,preds);
    h2o_rf_09_Forest_64.score0(data,preds);
    h2o_rf_09_Forest_65.score0(data,preds);
    h2o_rf_09_Forest_66.score0(data,preds);
    h2o_rf_09_Forest_67.score0(data,preds);
    h2o_rf_09_Forest_68.score0(data,preds);
    h2o_rf_09_Forest_69.score0(data,preds);
    h2o_rf_09_Forest_70.score0(data,preds);
    h2o_rf_09_Forest_71.score0(data,preds);
    h2o_rf_09_Forest_72.score0(data,preds);
    h2o_rf_09_Forest_73.score0(data,preds);
    h2o_rf_09_Forest_74.score0(data,preds);
    h2o_rf_09_Forest_75.score0(data,preds);
    h2o_rf_09_Forest_76.score0(data,preds);
    h2o_rf_09_Forest_77.score0(data,preds);
    h2o_rf_09_Forest_78.score0(data,preds);
    h2o_rf_09_Forest_79.score0(data,preds);
    h2o_rf_09_Forest_80.score0(data,preds);
    h2o_rf_09_Forest_81.score0(data,preds);
    h2o_rf_09_Forest_82.score0(data,preds);
    h2o_rf_09_Forest_83.score0(data,preds);
    h2o_rf_09_Forest_84.score0(data,preds);
    h2o_rf_09_Forest_85.score0(data,preds);
    h2o_rf_09_Forest_86.score0(data,preds);
    h2o_rf_09_Forest_87.score0(data,preds);
    h2o_rf_09_Forest_88.score0(data,preds);
    h2o_rf_09_Forest_89.score0(data,preds);
    h2o_rf_09_Forest_90.score0(data,preds);
    h2o_rf_09_Forest_91.score0(data,preds);
    h2o_rf_09_Forest_92.score0(data,preds);
    h2o_rf_09_Forest_93.score0(data,preds);
    h2o_rf_09_Forest_94.score0(data,preds);
    h2o_rf_09_Forest_95.score0(data,preds);
    h2o_rf_09_Forest_96.score0(data,preds);
    h2o_rf_09_Forest_97.score0(data,preds);
    h2o_rf_09_Forest_98.score0(data,preds);
    h2o_rf_09_Forest_99.score0(data,preds);
    h2o_rf_09_Forest_100.score0(data,preds);
    h2o_rf_09_Forest_101.score0(data,preds);
    h2o_rf_09_Forest_102.score0(data,preds);
    h2o_rf_09_Forest_103.score0(data,preds);
    h2o_rf_09_Forest_104.score0(data,preds);
    h2o_rf_09_Forest_105.score0(data,preds);
    h2o_rf_09_Forest_106.score0(data,preds);
    h2o_rf_09_Forest_107.score0(data,preds);
    h2o_rf_09_Forest_108.score0(data,preds);
    h2o_rf_09_Forest_109.score0(data,preds);
    h2o_rf_09_Forest_110.score0(data,preds);
    h2o_rf_09_Forest_111.score0(data,preds);
    h2o_rf_09_Forest_112.score0(data,preds);
    h2o_rf_09_Forest_113.score0(data,preds);
    h2o_rf_09_Forest_114.score0(data,preds);
    h2o_rf_09_Forest_115.score0(data,preds);
    h2o_rf_09_Forest_116.score0(data,preds);
    h2o_rf_09_Forest_117.score0(data,preds);
    h2o_rf_09_Forest_118.score0(data,preds);
    h2o_rf_09_Forest_119.score0(data,preds);
    h2o_rf_09_Forest_120.score0(data,preds);
    h2o_rf_09_Forest_121.score0(data,preds);
    h2o_rf_09_Forest_122.score0(data,preds);
    h2o_rf_09_Forest_123.score0(data,preds);
    h2o_rf_09_Forest_124.score0(data,preds);
    h2o_rf_09_Forest_125.score0(data,preds);
    h2o_rf_09_Forest_126.score0(data,preds);
    h2o_rf_09_Forest_127.score0(data,preds);
    h2o_rf_09_Forest_128.score0(data,preds);
    h2o_rf_09_Forest_129.score0(data,preds);
    h2o_rf_09_Forest_130.score0(data,preds);
    h2o_rf_09_Forest_131.score0(data,preds);
    h2o_rf_09_Forest_132.score0(data,preds);
    h2o_rf_09_Forest_133.score0(data,preds);
    h2o_rf_09_Forest_134.score0(data,preds);
    h2o_rf_09_Forest_135.score0(data,preds);
    h2o_rf_09_Forest_136.score0(data,preds);
    h2o_rf_09_Forest_137.score0(data,preds);
    h2o_rf_09_Forest_138.score0(data,preds);
    h2o_rf_09_Forest_139.score0(data,preds);
    h2o_rf_09_Forest_140.score0(data,preds);
    h2o_rf_09_Forest_141.score0(data,preds);
    h2o_rf_09_Forest_142.score0(data,preds);
    h2o_rf_09_Forest_143.score0(data,preds);
    h2o_rf_09_Forest_144.score0(data,preds);
    h2o_rf_09_Forest_145.score0(data,preds);
    h2o_rf_09_Forest_146.score0(data,preds);
    h2o_rf_09_Forest_147.score0(data,preds);
    h2o_rf_09_Forest_148.score0(data,preds);
    h2o_rf_09_Forest_149.score0(data,preds);
    h2o_rf_09_Forest_150.score0(data,preds);
    h2o_rf_09_Forest_151.score0(data,preds);
    h2o_rf_09_Forest_152.score0(data,preds);
    h2o_rf_09_Forest_153.score0(data,preds);
    h2o_rf_09_Forest_154.score0(data,preds);
    h2o_rf_09_Forest_155.score0(data,preds);
    h2o_rf_09_Forest_156.score0(data,preds);
    h2o_rf_09_Forest_157.score0(data,preds);
    h2o_rf_09_Forest_158.score0(data,preds);
    h2o_rf_09_Forest_159.score0(data,preds);
    h2o_rf_09_Forest_160.score0(data,preds);
    h2o_rf_09_Forest_161.score0(data,preds);
    h2o_rf_09_Forest_162.score0(data,preds);
    h2o_rf_09_Forest_163.score0(data,preds);
    h2o_rf_09_Forest_164.score0(data,preds);
    h2o_rf_09_Forest_165.score0(data,preds);
    h2o_rf_09_Forest_166.score0(data,preds);
    h2o_rf_09_Forest_167.score0(data,preds);
    h2o_rf_09_Forest_168.score0(data,preds);
    h2o_rf_09_Forest_169.score0(data,preds);
    h2o_rf_09_Forest_170.score0(data,preds);
    h2o_rf_09_Forest_171.score0(data,preds);
    h2o_rf_09_Forest_172.score0(data,preds);
    h2o_rf_09_Forest_173.score0(data,preds);
    h2o_rf_09_Forest_174.score0(data,preds);
    h2o_rf_09_Forest_175.score0(data,preds);
    h2o_rf_09_Forest_176.score0(data,preds);
    h2o_rf_09_Forest_177.score0(data,preds);
    h2o_rf_09_Forest_178.score0(data,preds);
    h2o_rf_09_Forest_179.score0(data,preds);
    h2o_rf_09_Forest_180.score0(data,preds);
    h2o_rf_09_Forest_181.score0(data,preds);
    h2o_rf_09_Forest_182.score0(data,preds);
    h2o_rf_09_Forest_183.score0(data,preds);
    h2o_rf_09_Forest_184.score0(data,preds);
    h2o_rf_09_Forest_185.score0(data,preds);
    h2o_rf_09_Forest_186.score0(data,preds);
    h2o_rf_09_Forest_187.score0(data,preds);
    h2o_rf_09_Forest_188.score0(data,preds);
    h2o_rf_09_Forest_189.score0(data,preds);
    h2o_rf_09_Forest_190.score0(data,preds);
    h2o_rf_09_Forest_191.score0(data,preds);
    h2o_rf_09_Forest_192.score0(data,preds);
    h2o_rf_09_Forest_193.score0(data,preds);
    h2o_rf_09_Forest_194.score0(data,preds);
    h2o_rf_09_Forest_195.score0(data,preds);
    h2o_rf_09_Forest_196.score0(data,preds);
    h2o_rf_09_Forest_197.score0(data,preds);
    h2o_rf_09_Forest_198.score0(data,preds);
    h2o_rf_09_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_09 implements java.io.Serializable {
  public static final String[] VALUES = new String[13];
  static {
    NamesHolder_h2o_rf_09_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_09_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X5";
      sa[1] = "X12";
      sa[2] = "X15";
      sa[3] = "X17";
      sa[4] = "X18";
      sa[5] = "X19";
      sa[6] = "X20";
      sa[7] = "X21";
      sa[8] = "X23";
      sa[9] = "X27";
      sa[10] = "X28";
      sa[11] = "X34";
      sa[12] = "X35";
    }
  }
}
// The class representing column Label
class h2o_rf_09_ColInfo_13 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_rf_09_ColInfo_13_0.fill(VALUES);
  }
  static final class h2o_rf_09_ColInfo_13_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}

class h2o_rf_09_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_0_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_0_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2481654f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21022746f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.046652727f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.13978732f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18315381f ? 
                 (data[7 /* X21 */] <0.12973306f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14740527f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36906677f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.4375f ? 
                     (data[11 /* X34 */] <-0.140625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (data[9 /* X27 */] <0.18343711f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21075831f ? 
                 (data[1 /* X12 */] <-0.4432684f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.38580108f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22025588f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19907948f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.53494793f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1328125f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.35887748f ? 
             (data[11 /* X34 */] <-0.2421875f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.10087112f ? 
                 (data[6 /* X20 */] <-0.17894696f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.092510656f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.84375f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.6015625f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[12 /* X35 */] <-0.1328125f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16661632f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.15342587f ? 
                     (data[10 /* X28 */] <-0.26286578f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.66796875f ? 
                 (data[6 /* X20 */] <-0.10637335f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.53372455f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_0_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1735984f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11729245f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.29899815f ? 
             (data[0 /* X5 */] <0.14015447f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29714683f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_1_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_1_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[4 /* X18 */] <-0.47540003f ? 
             (data[10 /* X28 */] <-0.11841681f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.09250635f ? 
                 (data[9 /* X27 */] <0.25425735f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.092992f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.11460646f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17024717f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16618621f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16451958f ? 
                     (data[12 /* X35 */] <-0.890625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.17066431f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.05559988f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.044921875f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17094411f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.15160756f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18805842f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2181903f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13993049f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[9 /* X27 */] <-0.12087381f ? 
             (data[3 /* X17 */] <-0.22128741f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.007756696f ? 
             (data[7 /* X21 */] <0.13136834f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07548621f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.047713473f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20778199f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.15078475f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21207263f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.2898922f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
             (data[10 /* X28 */] <-0.14607725f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16748261f ? 
                     (data[5 /* X19 */] <0.09753139f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12821154f ? 
                         (data[1 /* X12 */] <-0.5893899f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.2223465f ? 
             (data[7 /* X21 */] <0.09375666f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_1_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[10 /* X28 */] <0.11208688f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3491233f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_2_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_2_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[4 /* X18 */] <-0.47540003f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.31266108f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.5390625f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1759826f ? 
             (data[7 /* X21 */] <0.14881144f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20070702f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.35546875f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19172858f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.06806157f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.102711245f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31167603f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15276481f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.058829524f ? 
            0.0f : 
             (data[7 /* X21 */] <0.14663106f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.14468311f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22060695f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.035574913f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10381927f ? 
            0.0f : 
             (data[6 /* X20 */] <0.28893209f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06560243f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23502217f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17359002f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.37716576f ? 
             (data[5 /* X19 */] <0.30087316f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.09866253f ? 
                 (data[0 /* X5 */] <0.16616641f ? 
                     (data[3 /* X17 */] <-0.048073683f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_2_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[1 /* X12 */] <-0.5285059f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11055019f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_3_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_3_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[2 /* X15 */] <0.092960976f ? 
             (data[1 /* X12 */] <-0.42239386f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.52189684f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.174431f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.090756364f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[10 /* X28 */] <-0.31511328f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25428852f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.35546875f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25720823f ? 
             (data[10 /* X28 */] <-0.39194787f ? 
                 (data[4 /* X18 */] <-0.13775276f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05127558f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <0.009121928f ? 
                     (data[0 /* X5 */] <0.12764902f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (data[2 /* X15 */] <0.1893414f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X28 */] <-0.2982097f ? 
             (data[3 /* X17 */] <-0.2750434f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.43667606f ? 
                 (data[4 /* X18 */] <0.28401017f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[2 /* X15 */] <0.13978732f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22060695f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.46590415f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14896747f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.2657033f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14891359f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.015222805f ? 
                 (data[7 /* X21 */] <0.1384546f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.17126468f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30279523f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.37447122f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.12821154f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6640625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.20072556f ? 
             (data[4 /* X18 */] <-0.15196948f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_3_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[11 /* X34 */] <-0.8886719f ? 
             (data[1 /* X12 */] <-0.40847751f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61030626f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18424274f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
             (data[4 /* X18 */] <-0.069647156f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_4_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_4_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14754619f ? 
             (data[9 /* X27 */] <0.17195806f ? 
                 (data[2 /* X15 */] <0.19707002f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19160144f ? 
                 (data[1 /* X12 */] <-0.111470945f ? 
                     (data[8 /* X23 */] <0.15945743f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12864286f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.008458334f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14058802f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.021649474f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.16797404f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12866114f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24286206f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.058829524f ? 
            0.0f : 
             (data[9 /* X27 */] <0.059140794f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.7109375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[9 /* X27 */] <0.07035619f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13018094f ? 
                 (data[9 /* X27 */] <-0.19237973f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25292495f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25395685f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.035435483f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (data[9 /* X27 */] <0.13779047f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.40062988f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_4_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[7 /* X21 */] <0.17742904f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_5_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_5_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (data[1 /* X12 */] <-0.13015077f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16705064f ? 
            1.0f : 
             (data[2 /* X15 */] <0.13494295f ? 
                1.0f : 
                 (data[3 /* X17 */] <-1.0097085f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[12 /* X35 */] <-0.8886719f ? 
             (data[11 /* X34 */] <0.33203125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2925412f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.2670279f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15660843f ? 
             (data[10 /* X28 */] <-0.38580108f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (data[6 /* X20 */] <-0.1964559f ? 
             (data[1 /* X12 */] <-0.10927625f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13766699f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19870982f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[7 /* X21 */] <0.13927224f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2921762f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.2677723f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[6 /* X20 */] <0.035574913f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23984262f ? 
             (data[1 /* X12 */] <-0.4119566f ? 
                 (data[5 /* X19 */] <-0.07339357f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.24238689f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.083170265f ? 
             (data[1 /* X12 */] <-0.5232873f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48939514f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.14933315f ? 
                    1.0f : 
                    0.0f))) : 
         (data[2 /* X15 */] <0.0897786f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12405423f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_5_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0081014745f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2531975f ? 
             (data[1 /* X12 */] <-0.42587295f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1929231f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_6_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_6_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21531452f ? 
             (data[5 /* X19 */] <0.15647103f ? 
                 (data[1 /* X12 */] <-0.22756512f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25162497f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21925202f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15837078f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.66335195f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38020524f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[0 /* X5 */] <0.14785188f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.011321876f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6780869f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.04303207f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.039114352f ? 
             (data[9 /* X27 */] <-0.011321876f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.24375105f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.77734375f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07796449f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.6660156f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29497918f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16494161f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X27 */] <8.505609E-4f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.37875196f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (data[11 /* X34 */] <-0.24414062f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13993049f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.31204987f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[5 /* X19 */] <0.14173612f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.5232873f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5607827f ? 
                     (data[10 /* X28 */] <-0.21430795f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_6_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[4 /* X18 */] <-0.2645186f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_7_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_7_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[1 /* X12 */] <-0.2675746f ? 
             (data[12 /* X35 */] <-0.2421875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24253249f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.14118008f ? 
             (data[8 /* X23 */] <0.17627706f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[7 /* X21 */] <0.0872155f ? 
             (data[2 /* X15 */] <0.2207105f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19943091f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.2005519f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71492416f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1353833f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.9765625f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[1 /* X12 */] <-0.25365826f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.10087112f ? 
             (data[12 /* X35 */] <-0.22265625f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.08391101f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.80078125f ? 
                 (data[7 /* X21 */] <0.12678765f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.14363988f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14232756f ? 
             (data[12 /* X35 */] <0.1328125f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.117858514f ? 
             (data[7 /* X21 */] <0.1404812f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.08391101f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[9 /* X27 */] <0.069320515f ? 
            0.0f : 
             (data[0 /* X5 */] <0.12369793f ? 
                 (data[12 /* X35 */] <-0.140625f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.46875f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.5861813f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17644915f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.41012746f ? 
                                0.0f : 
                                1.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_7_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[1 /* X12 */] <-0.5285059f ? 
            1.0f : 
            0.0f) : 
         (data[0 /* X5 */] <0.12767935f ? 
            0.0f : 
             (data[12 /* X35 */] <0.0f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.17657328f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_8_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_8_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (data[0 /* X5 */] <0.081494875f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.1761296f ? 
                 (data[11 /* X34 */] <-0.3125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.106123276f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17612982f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.009012626f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1305525f ? 
                             (data[11 /* X34 */] <-0.15f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14122555f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.115237586f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[12 /* X35 */] <-0.9765625f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.24749887f ? 
                 (data[0 /* X5 */] <0.14816147f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.14978905f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.104581304f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16454498f ? 
             (data[8 /* X23 */] <0.22336696f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.23924336f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.8723321f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.80078125f ? 
                 (data[4 /* X18 */] <-0.24331486f ? 
                     (data[0 /* X5 */] <0.1470556f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.84436035f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03273639f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36410424f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025094183f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.20754491f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14174704f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
        0.028571429f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11168875f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12452225f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.11872328f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X34 */] <-0.84375f ? 
                     (data[2 /* X15 */] <0.13160408f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_8_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14572845f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.35795748f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.08088584f ? 
            0.0f : 
             (data[10 /* X28 */] <0.08749982f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_9_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_9_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.12714384f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.011006946f ? 
             (data[10 /* X28 */] <-0.14915064f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13766699f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.07614166f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.3132014f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.203125f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.24667218f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.08984375f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2088133f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06892276f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2757201f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2654365f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.30663174f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.5413126f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0012026349f ? 
             (data[0 /* X5 */] <0.13750018f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (data[6 /* X20 */] <-0.19509101f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.81260324f ? 
             (data[0 /* X5 */] <0.08122945f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08840174f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.12973306f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.070082694f ? 
                         (data[4 /* X18 */] <-0.14170694f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.07138406f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.11838937f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[2 /* X15 */] <0.14115119f ? 
             (data[10 /* X28 */] <-0.17681108f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21559672f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1614473f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21191938f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5101089f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.098711744f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21265619f ? 
                         (data[7 /* X21 */] <0.0872155f ? 
                             (data[7 /* X21 */] <0.07958404f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_9_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0038785639f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39791146f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_10_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_10_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19172858f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.053471766f ? 
                 (data[0 /* X5 */] <0.1120191f ? 
                     (data[3 /* X17 */] <-1.0031698f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2439319f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.009802201f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.123192586f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.05213061f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20495643f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[0 /* X5 */] <0.17041326f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[8 /* X23 */] <0.14300548f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.578125f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24791823f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067527235f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.42302716f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[12 /* X35 */] <0.13476562f ? 
            0.0f : 
             (data[0 /* X5 */] <0.12369793f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.028080627f ? 
            0.0f : 
             (data[3 /* X17 */] <0.19223094f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.007175522f ? 
             (data[9 /* X27 */] <0.0464972f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.51980823f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_10_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.078850165f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.009153437f ? 
                 (data[1 /* X12 */] <-0.51980823f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[0 /* X5 */] <0.13803105f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.005063291f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_11_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_11_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
             (data[5 /* X19 */] <0.32150203f ? 
                 (data[2 /* X15 */] <0.0879601f ? 
                     (data[4 /* X18 */] <-0.10458039f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.67522687f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.203125f ? 
                         (data[12 /* X35 */] <-0.59375f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.3137444f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6957688f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.14797056f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31054688f ? 
             (data[5 /* X19 */] <-0.06455263f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25720823f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82838297f ? 
                 (data[5 /* X19 */] <0.040691502f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.203125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23889549f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.17524804f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31054688f ? 
             (data[5 /* X19 */] <-0.06455263f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.3371552f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[0 /* X5 */] <0.09396999f ? 
             (data[3 /* X17 */] <-0.33665004f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.265625f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.22496112f ? 
                     (data[4 /* X18 */] <-0.34308514f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[11 /* X34 */] <-0.6894531f ? 
             (data[4 /* X18 */] <-0.35337314f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5631546f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25346246f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[5 /* X19 */] <-0.061605643f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.10449804f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[1 /* X12 */] <-0.39630073f ? 
             (data[5 /* X19 */] <0.17415293f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.14978905f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.114058204f ? 
             (data[3 /* X17 */] <-0.23918784f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.4840551f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17244367f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.09375f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_11_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[1 /* X12 */] <-0.51285005f ? 
            1.0f : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_12_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_12_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[12 /* X35 */] <-0.13476562f ? 
             (data[8 /* X23 */] <0.02562894f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.1796875f ? 
                     (data[3 /* X17 */] <-0.20336875f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[5 /* X19 */] <0.16825897f ? 
            0.0f : 
             (data[0 /* X5 */] <0.07857517f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1328125f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17763667f ? 
                         (data[6 /* X20 */] <-0.22281714f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[10 /* X28 */] <-0.40731478f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.009979889f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26755992f ? 
                 (data[5 /* X19 */] <0.0032279643f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08840174f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.08391101f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.1122663f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.2421875f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.27992004f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.32279673f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.016066106f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (data[6 /* X20 */] <-0.19418064f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11974833f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3984375f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.78871167f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[10 /* X28 */] <0.11055019f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
             (data[8 /* X23 */] <0.15376252f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15075934f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.38255537f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2503891f ? 
                1.0f : 
                0.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_12_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2519258f ? 
             (data[8 /* X23 */] <0.049355872f ? 
                 (data[6 /* X20 */] <-0.04199302f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X19 */] <-0.17801143f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_13_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_13_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.12714384f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11526866f ? 
             (data[0 /* X5 */] <0.13750018f ? 
                 (data[7 /* X21 */] <0.09386792f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.18195862f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.40625f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.111832894f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.265625f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.45274496f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.17773438f ? 
             (data[2 /* X15 */] <0.13525721f ? 
                 (data[10 /* X28 */] <-0.21511756f ? 
                     (data[11 /* X34 */] <0.140625f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-1.0097085f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.1619885f ? 
                         (data[2 /* X15 */] <0.21840587f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_09_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (data[9 /* X27 */] <0.18191555f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21075831f ? 
                 (data[12 /* X35 */] <-0.9296875f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.14245996f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.6894531f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21872115f ? 
                 (data[7 /* X21 */] <0.051239107f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.13232227f ? 
        0.025f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.215255f ? 
             (data[4 /* X18 */] <-0.5310822f ? 
                 (data[0 /* X5 */] <0.14886817f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.5770826f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.25924072f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.17794569f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[9 /* X27 */] <-0.16499889f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2460989f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.19888853f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (data[5 /* X19 */] <0.04153873f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.1384546f ? 
                     (data[6 /* X20 */] <0.027604632f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18508631f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13793942f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[5 /* X19 */] <0.10931932f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1981546f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10248045f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.4869421f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_13_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.51285005f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <0.05369261f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.2657033f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_14_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_14_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[10 /* X28 */] <-0.10458659f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.0879601f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.85292023f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.13159828f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.1651047f ? 
                     (data[1 /* X12 */] <-0.12093046f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[10 /* X28 */] <-0.40731478f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.009979889f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <0.003220809f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36073488f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.33398438f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.53494793f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.25057226f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40039062f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09598974f ? 
                 (data[10 /* X28 */] <-0.2063807f ? 
                     (data[11 /* X34 */] <0.13402672f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.26308396f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[5 /* X19 */] <0.10784583f ? 
             (data[11 /* X34 */] <-0.48828125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45885634f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.8203125f ? 
                     (data[6 /* X20 */] <0.035574913f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[4 /* X18 */] <-0.3142771f ? 
             (data[9 /* X27 */] <-0.025440833f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17773438f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13157736f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08453515f ? 
                     (data[6 /* X20 */] <-0.34994587f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.469109f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.11815433f ? 
                                 (data[1 /* X12 */] <-0.24273099f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                     (data[1 /* X12 */] <-0.2553978f ? 
                         (data[10 /* X28 */] <-0.13041794f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_14_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[10 /* X28 */] <-0.00931173f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36564094f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_15_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_15_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21116339f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1657851f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16898003f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.26286578f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17568699f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2598082f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21197714f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.22343467f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.45032492f ? 
                0.0f : 
                1.0f)) : 
         (data[8 /* X23 */] <0.025627088f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.4165349f ? 
                 (data[1 /* X12 */] <0.4135785f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.75176144f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3089077f ? 
            0.0f : 
            1.0f) : 
         (data[8 /* X23 */] <0.15344614f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13736442f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15011151f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.088690445f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.059438284f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.20806989f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44818762f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.18844227f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (data[6 /* X20 */] <-0.031304557f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_15_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.30581987f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_16_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_16_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.52189684f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.6015625f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X23 */] <0.16610149f ? 
            1.0f : 
             (data[2 /* X15 */] <0.13528036f ? 
                 (data[7 /* X21 */] <0.18206236f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (data[1 /* X12 */] <-0.345854f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19362688f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.14223519f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[1 /* X12 */] <-0.2101697f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X17 */] <-0.8723321f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27924186f ? 
                 (data[10 /* X28 */] <-0.21369167f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19623487f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33328995f ? 
            1.0f : 
             (data[12 /* X35 */] <0.19921875f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17844045f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.1891046f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.3945612f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.104587115f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33328995f ? 
             (data[4 /* X18 */] <-0.3604815f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.10140198f ? 
                     (data[9 /* X27 */] <0.170397f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.11227004f ? 
                 (data[8 /* X23 */] <0.11263263f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[8 /* X23 */] <0.15344614f ? 
             (data[12 /* X35 */] <-0.51171875f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.30739594f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_16_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
        0.028169014f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023600962f ? 
             (data[4 /* X18 */] <-0.04528386f ? 
                 (data[7 /* X21 */] <0.1210115f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.035435483f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_17_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_17_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[2 /* X15 */] <0.0879601f ? 
             (data[7 /* X21 */] <0.14172518f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.019280018f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.009012626f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.06363039f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.08335287f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X21 */] <0.11610563f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[8 /* X23 */] <0.023728784f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22948578f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.2354925f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.28745285f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[8 /* X23 */] <0.14490378f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.22265625f ? 
             (data[6 /* X20 */] <-0.19918567f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.216719f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.12755267f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21302322f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.3220255f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[2 /* X15 */] <0.14115119f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14881144f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16189377f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13657656f ? 
            0.0f : 
             (data[10 /* X28 */] <0.36410424f ? 
                 (data[1 /* X12 */] <-0.42239386f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19995455f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06815651f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22667913f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.121574506f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
             (data[7 /* X21 */] <0.09593705f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.09218951f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.13962361f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_17_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[11 /* X34 */] <-0.35546875f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10927882f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.29626837f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2429f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.41327837f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_18_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_18_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13458048f ? 
             (data[2 /* X15 */] <0.095234096f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12701166f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0625f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.19782078f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07786762f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24704501f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22774571f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2654365f ? 
             (data[6 /* X20 */] <-0.19918567f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18315254f ? 
                     (data[0 /* X5 */] <0.13995126f ? 
                         (data[6 /* X20 */] <-0.3918041f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.5569056f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[4 /* X18 */] <-0.23016149f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19888853f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.2906331f ? 
             (data[9 /* X27 */] <0.12866114f ? 
                 (data[6 /* X20 */] <-0.47582412f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[5 /* X19 */] <0.25519493f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10381927f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14524281f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.009802201f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (data[5 /* X19 */] <0.1608915f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18914862f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08453515f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12699127f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.21875f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7049152f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06640625f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.15907784f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_18_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15156788f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.095512025f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30172792f ? 
             (data[9 /* X27 */] <0.24125619f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24298275f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.066307314f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.03125f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.52189684f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_09_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_19_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_19_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[10 /* X28 */] <-0.14364919f ? 
                 (data[12 /* X35 */] <-0.0234375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2425681f ? 
             (data[12 /* X35 */] <-0.93359375f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.18295784f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.22648342f ? 
                     (data[7 /* X21 */] <0.12709686f ? 
                         (data[0 /* X5 */] <0.120100565f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.039420385f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06002254f ? 
                 (data[12 /* X35 */] <-0.625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1474487f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09598974f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (data[10 /* X28 */] <-0.2982097f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.35786453f ? 
                 (data[6 /* X20 */] <-0.5049204f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07100632f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.22761795f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.657458f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[11 /* X34 */] <-0.734375f ? 
             (data[10 /* X28 */] <-0.17352551f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <0.10047837f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08471085f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (data[10 /* X28 */] <-0.1368571f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.33477226f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.10432659f ? 
                     (data[11 /* X34 */] <-0.050001875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.33889583f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.46631765f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.11560862f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[7 /* X21 */] <0.07849395f ? 
             (data[6 /* X20 */] <-0.29745755f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.5546875f ? 
                 (data[0 /* X5 */] <0.18173727f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.5893899f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_19_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.00931173f ? 
             (data[10 /* X28 */] <-0.28277528f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15807809f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.3910821f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_20_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_20_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33254945f ? 
             (data[7 /* X21 */] <0.12973306f ? 
                 (data[11 /* X34 */] <0.0859375f ? 
                     (data[2 /* X15 */] <0.14615206f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.3125f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.20139813f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.18871738f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.047713473f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8180685f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20438392f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.25671902f ? 
                     (data[3 /* X17 */] <-0.11974833f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <0.22265625f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (data[11 /* X34 */] <-0.04296875f ? 
                 (data[12 /* X35 */] <-0.5078125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.21719193f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.59262437f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[5 /* X19 */] <-0.4461868f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.12973306f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16451958f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.011522892f ? 
                1.0f : 
                 (data[11 /* X34 */] <0.13402672f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.076902516f ? 
             (data[1 /* X12 */] <-0.49545464f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X23 */] <0.098711744f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.796875f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22756512f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.44433594f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1347795f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3125f ? 
                    0.0f : 
                    1.0f))) : 
         (data[9 /* X27 */] <0.069320515f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07851639f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16487794f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.41327837f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.64513725f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_20_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19296429f ? 
            0.0f : 
             (data[8 /* X23 */] <0.14870039f ? 
                 (data[11 /* X34 */] <-0.3125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_21_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_21_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.083345965f ? 
             (data[6 /* X20 */] <-0.15821373f ? 
                 (data[10 /* X28 */] <-0.17681108f ? 
                     (data[4 /* X18 */] <-0.33204803f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15513882f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1875f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14249167f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[8 /* X23 */] <0.19076954f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2425681f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16028996f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.2271986f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
             (data[6 /* X20 */] <-0.4641749f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.49911153f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12866114f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22137544f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.16088964f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06002254f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (data[6 /* X20 */] <-0.19509101f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5885213f ? 
             (data[6 /* X20 */] <-0.1555093f ? 
                 (data[10 /* X28 */] <-0.21369167f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21770601f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24048625f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.14442855f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09442509f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13627422f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12827493f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[2 /* X15 */] <0.14115119f ? 
             (data[5 /* X19 */] <0.0798495f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.21983843f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
                 (data[8 /* X23 */] <0.15370138f ? 
                     (data[7 /* X21 */] <0.09279983f ? 
                         (data[4 /* X18 */] <-0.31764296f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.234375f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.14605983f ? 
                     (data[5 /* X19 */] <0.6751399f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_21_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33254945f ? 
             (data[6 /* X20 */] <0.20482092f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_22_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_22_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[6 /* X20 */] <-0.28926823f ? 
             (data[0 /* X5 */] <0.087599725f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.734375f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.067798965f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1794772f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22779633f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09953482f ? 
                                1.0f : 
                                 (data[0 /* X5 */] <0.099972464f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060569067f ? 
                             (data[8 /* X23 */] <0.14578965f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
        0.04347826f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[6 /* X20 */] <-0.53494793f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.80000126f ? 
                 (data[0 /* X5 */] <0.19596827f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97867906f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2925412f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[6 /* X20 */] <-0.53494793f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.10231808f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19623487f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20090371f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2798117f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.3173339f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X5 */] <0.17890696f ? 
                 (data[1 /* X12 */] <-0.35977036f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2564387f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.17653795f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13656802f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15501843f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0901704f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5313671f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.37396055f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.21194445f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X12 */] <-0.57664f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_22_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[4 /* X18 */] <-0.2645186f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_23_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_23_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[12 /* X35 */] <-0.35546875f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14797056f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <0.15205055f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19172858f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0022481298f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.036024693f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26766068f ? 
             (data[1 /* X12 */] <-0.34634683f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.36635756f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61767375f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21324268f ? 
                 (data[5 /* X19 */] <0.15250371f ? 
                     (data[3 /* X17 */] <-0.20933193f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.26807678f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23910215f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25816917f ? 
            0.0f : 
             (data[7 /* X21 */] <0.15426241f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21324268f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.20649555f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <-0.029580532f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15882467f ? 
             (data[7 /* X21 */] <0.101933114f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X19 */] <0.076902516f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18233703f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.09302552f ? 
                     (data[3 /* X17 */] <-0.09585678f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
             (data[2 /* X15 */] <0.13433182f ? 
                 (data[11 /* X34 */] <-0.5994797f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2808166f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14468311f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.18680914f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27627233f ? 
                 (data[3 /* X17 */] <-0.043112017f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_23_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[12 /* X35 */] <-0.46484375f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_24_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_24_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.026408048f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12763695f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.075f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2694179f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.06627741f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18581611f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4663714f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31897017f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[12 /* X35 */] <-0.7109375f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2556381f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.5595159f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <0.016066106f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06232025f ? 
                 (data[0 /* X5 */] <0.10034027f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6875f ? 
            0.0f : 
             (data[8 /* X23 */] <0.098711744f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09972461f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36410424f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
             (data[6 /* X20 */] <-0.09545425f ? 
                 (data[10 /* X28 */] <-0.12866272f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.113654256f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.46821994f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08471085f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_24_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[12 /* X35 */] <-0.5761719f ? 
            0.0f : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_25_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_25_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[8 /* X23 */] <0.16546872f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36164415f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.1440671f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16155854f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[7 /* X21 */] <0.03652149f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
                 (data[12 /* X35 */] <-0.671875f ? 
                     (data[10 /* X28 */] <-0.32433343f ? 
                         (data[4 /* X18 */] <-0.36339694f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.1796875f ? 
                    1.0f : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.1353833f ? 
            0.0f : 
             (data[9 /* X27 */] <0.06475586f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (data[5 /* X19 */] <-0.07781404f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.18449308f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.022928964f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <0.17126468f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.10784583f ? 
             (data[2 /* X15 */] <0.111600585f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.35210976f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.28323048f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4904067f ? 
                     (data[11 /* X34 */] <-0.8125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09510257f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18589608f ? 
                 (data[9 /* X27 */] <0.067798965f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.2625624f ? 
                         (data[11 /* X34 */] <-0.65625f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_25_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19183482f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.30410498f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17329457f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3984375f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.62340856f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.484375f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_26_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_26_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.044921875f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2810789f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3503549f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16115467f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06309593f ? 
                 (data[11 /* X34 */] <-0.734375f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03542886f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19587962f ? 
                     (data[10 /* X28 */] <-0.1030499f ? 
                         (data[6 /* X20 */] <-0.15404318f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.090756364f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_09_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
                 (data[10 /* X28 */] <-0.41038814f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <8.505609E-4f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.2421875f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.011321876f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31049806f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.23921135f ? 
                            0.0f : 
                            1.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[11 /* X34 */] <-0.24414062f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <-0.1964559f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060569067f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.09823006f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19870982f ? 
                        1.0f : 
                        0.0f))) : 
             (data[10 /* X28 */] <-0.296673f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[11 /* X34 */] <-0.578125f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.24863018f ? 
                 (data[9 /* X27 */] <-0.07827028f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1529552f ? 
            0.0f : 
             (data[7 /* X21 */] <0.19677997f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (data[11 /* X34 */] <-0.5546875f ? 
             (data[6 /* X20 */] <-0.09272448f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.114058204f ? 
             (data[10 /* X28 */] <-0.106123276f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5060067f ? 
                     (data[11 /* X34 */] <-0.5f ? 
                         (data[0 /* X5 */] <0.13140501f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.2890625f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.51980823f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_26_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (data[1 /* X12 */] <-0.5024128f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16915816f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.387603f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_27_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_27_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[10 /* X28 */] <-0.09843982f ? 
             (data[11 /* X34 */] <-0.5546875f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.8529211f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16788983f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.13618886f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18161277f ? 
            0.0f : 
             (data[0 /* X5 */] <0.079106025f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14767207f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.19372612f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[6 /* X20 */] <-0.19918567f ? 
             (data[2 /* X15 */] <0.14797056f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20169577f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.40499845f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.09510257f ? 
                 (data[3 /* X17 */] <-0.44825712f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.401168f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.04839227f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21070875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[10 /* X28 */] <0.13360056f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09997652f ? 
             (data[11 /* X34 */] <-0.35546875f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.06640625f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.28244865f ? 
                    0.0f : 
                    1.0f))) : 
         (data[8 /* X23 */] <0.148384f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23563845f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_27_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.27036607f ? 
             (data[2 /* X15 */] <0.07795836f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_28_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_28_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[5 /* X19 */] <-0.07192008f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24071398f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1425765f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.09593705f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.055002533f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.17570835f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.048073683f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9668911f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.4016511f ? 
                 (data[6 /* X20 */] <-0.46161798f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.08044663f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28908524f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16915816f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (data[5 /* X19 */] <-0.049817715f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48651564f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.756897f ? 
                     (data[1 /* X12 */] <-0.10231808f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.10931932f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.9765625f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.40193176f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53957874f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.49023438f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.21925202f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.14173612f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.51980823f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0849131f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_28_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17343457f ? 
            0.0f : 
             (data[2 /* X15 */] <0.119783826f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15130244f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[5 /* X19 */] <0.15794453f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12561804f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_29_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_29_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.083345965f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
                 (data[3 /* X17 */] <-0.7510564f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.04225712f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.59375f ? 
                             (data[1 /* X12 */] <-0.084564395f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.111328125f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.2782327f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21288174f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
        0.035714287f : 
         (data[11 /* X34 */] <-0.33398438f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
        0.75f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07796449f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11974833f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3984375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30608916f ? 
             (data[1 /* X12 */] <-0.5545991f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.083170265f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25346246f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_29_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[8 /* X23 */] <0.049039487f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19382824f ? 
                 (data[5 /* X19 */] <0.36275977f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.12054961f ? 
                         (data[1 /* X12 */] <-0.45022655f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.38586348f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11208688f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_09_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_30_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_30_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14240856f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.203125f ? 
                     (data[5 /* X19 */] <0.045289505f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.47812155f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f) : 
             (data[0 /* X5 */] <0.08465651f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.113409445f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X21 */] <0.084490016f ? 
             (data[1 /* X12 */] <-0.16146252f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[9 /* X27 */] <-0.028058976f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X21 */] <0.03652149f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97763103f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[9 /* X27 */] <-0.028058976f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22130933f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2012201f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.26931414f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.23431797f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[8 /* X23 */] <0.09776259f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.092813835f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <0.10047837f ? 
             (data[11 /* X34 */] <-0.33203125f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.33203125f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.84375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[8 /* X23 */] <0.123706065f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1189174f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13656802f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26953125f ? 
                 (data[1 /* X12 */] <-0.51980823f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.08594305f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17161104f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.21500196f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_30_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X18 */] <-0.2645186f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_31_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_31_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[12 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24344173f ? 
                 (data[10 /* X28 */] <-0.29271647f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13169411f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18164834f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-1.0097085f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1328125f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18343711f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.22648342f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[8 /* X23 */] <0.050026644f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
                 (data[10 /* X28 */] <-0.4093837f ? 
                     (data[0 /* X5 */] <0.17253669f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2181903f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.21531452f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.33203125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16673426f ? 
         (data[12 /* X35 */] <-0.77734375f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23798624f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14717616f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.215255f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10927625f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.09823006f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19517241f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.124455854f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[5 /* X19 */] <-0.12791274f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26435447f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.953125f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.09821684f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.09420487f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16844347f ? 
            0.0f : 
             (data[10 /* X28 */] <0.12745379f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (data[12 /* X35 */] <0.0f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13071033f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13169411f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.3530175f ? 
                        1.0f : 
                        0.0f))) : 
             (data[5 /* X19 */] <0.16573194f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.5642546f ? 
             (data[8 /* X23 */] <0.17084725f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4116703f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.12821154f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_31_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (data[8 /* X23 */] <0.10250835f ? 
             (data[2 /* X15 */] <0.30799845f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.51980823f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19233502f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24116895f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_32_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_32_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06616931f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06640625f ? 
                 (data[4 /* X18 */] <-0.5310822f ? 
                     (data[12 /* X35 */] <-0.61676025f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X17 */] <-0.35866383f ? 
                         (data[12 /* X35 */] <-0.78338623f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-1.0097085f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51600283f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.5657508f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.6875f ? 
                         (data[0 /* X5 */] <0.15463799f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[7 /* X21 */] <0.03652149f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19299412f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.09510257f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.061712746f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[8 /* X23 */] <0.17021447f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07448541f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.40664852f ? 
                 (data[4 /* X18 */] <-0.2609644f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.09391784f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.091075465f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
        0.04347826f : 
         (data[8 /* X23 */] <0.12180776f ? 
             (data[6 /* X20 */] <-0.0053717f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <-0.26341262f ? 
                 (data[9 /* X27 */] <0.0799714f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1470556f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2136488f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08088584f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.036080148f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[8 /* X23 */] <0.12592074f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23723756f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.17334126f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_32_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0045184908f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22219945f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0081014745f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.005455091f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.26468804f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_33_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_33_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18805842f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2207105f ? 
                 (data[11 /* X34 */] <-0.625f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08840174f ? 
                         (data[1 /* X12 */] <-0.33791363f ? 
                            0.0f : 
                            1.0f) : 
                         (data[8 /* X23 */] <0.12149137f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.62468797f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[7 /* X21 */] <0.15998593f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.215255f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05772726f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.819542f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.14499576f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.59262437f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[7 /* X21 */] <0.15998593f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.215255f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.07859432f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.58817065f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0234375f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08840174f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.112760015f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.53125f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[1 /* X12 */] <-0.07448541f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[11 /* X34 */] <-0.734375f ? 
             (data[2 /* X15 */] <0.12251158f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.01422895f ? 
             (data[5 /* X19 */] <-0.24137156f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.31106317f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1755212f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.19742349f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13064438f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.164043f ? 
                     (data[5 /* X19 */] <0.07173401f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X21 */] <0.07971836f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_33_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[4 /* X18 */] <-0.2645186f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_34_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_34_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[6 /* X20 */] <-0.28790334f ? 
             (data[8 /* X23 */] <0.14680208f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.033141468f ? 
                 (data[1 /* X12 */] <-0.3317506f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.046068054f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18246141f ? 
                                1.0f : 
                                 (data[7 /* X21 */] <0.0973225f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.59121376f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.53494793f ? 
            0.0f : 
             (data[8 /* X23 */] <0.2012201f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X21 */] <0.011447034f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.106427f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.38352728f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.255262f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16894354f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1776329f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[2 /* X15 */] <0.1747934f ? 
             (data[8 /* X23 */] <0.2012201f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06467798f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.3220255f ? 
             (data[9 /* X27 */] <0.2138682f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25206947f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.17564978f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07361606f ? 
             (data[12 /* X35 */] <0.0f ? 
                 (data[9 /* X27 */] <0.35385123f ? 
                     (data[12 /* X35 */] <-0.37916812f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46948937f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_34_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[2 /* X15 */] <0.07341211f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <0.0023721154f ? 
             (data[8 /* X23 */] <0.13161565f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_35_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_35_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08402841f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10765997f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13941042f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22215158f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22273418f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14732581f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15681413f ? 
                                 (data[12 /* X35 */] <-0.466668f ? 
                                    1.0f : 
                                     (data[3 /* X17 */] <-0.25831932f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.14680208f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18783817f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.359375f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13884847f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20707177f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.859375f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5778895f ? 
                 (data[8 /* X23 */] <0.060745686f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.009802201f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14818239f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.5996094f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918615f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (data[0 /* X5 */] <0.15501843f ? 
             (data[1 /* X12 */] <0.516547f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.058829524f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25694278f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[1 /* X12 */] <-0.4328311f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10765997f ? 
             (data[0 /* X5 */] <0.14903134f ? 
                 (data[8 /* X23 */] <0.11136709f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4375f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12328062f ? 
                 (data[12 /* X35 */] <-0.2890625f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25176972f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_35_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[1 /* X12 */] <-0.5285059f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.39282164f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_36_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_36_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.12714384f ? 
         (data[10 /* X28 */] <-0.12610027f ? 
             (data[6 /* X20 */] <-0.6495984f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04962769f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.56290543f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18057598f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.048073683f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.125f ? 
                         (data[1 /* X12 */] <-0.36079916f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (data[9 /* X27 */] <-0.009800321f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.2421875f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.4092819f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22986913f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[10 /* X28 */] <-0.24749887f ? 
             (data[2 /* X15 */] <0.15706305f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36164415f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.016066106f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.022928964f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[1 /* X12 */] <-0.3667285f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[1 /* X12 */] <-0.3545517f ? 
             (data[11 /* X34 */] <-0.4453125f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.124563575f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16753143f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.1593637f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.24674767f ? 
                         (data[0 /* X5 */] <0.15656629f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_36_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.27036607f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X28 */] <-0.035435483f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_37_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_37_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[3 /* X17 */] <-0.743915f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1619885f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.28323048f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.46885115f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.52435344f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X28 */] <-0.09843982f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.054251935f ? 
                 (data[11 /* X34 */] <0.046875f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.24663848f ? 
                         (data[0 /* X5 */] <0.13431506f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[7 /* X21 */] <0.042245008f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.37350756f ? 
                 (data[9 /* X27 */] <-0.029580532f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19109581f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.651564f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[8 /* X23 */] <0.17021447f ? 
            0.0f : 
             (data[2 /* X15 */] <0.1561538f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (data[4 /* X18 */] <-0.06903857f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.058829524f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11974833f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1939709f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.5546875f ? 
            1.0f : 
             (data[10 /* X28 */] <0.11208688f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
         (data[11 /* X34 */] <-0.40039062f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1221536f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.27755058f ? 
                 (data[5 /* X19 */] <0.29382345f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15716672f ? 
                         (data[5 /* X19 */] <0.20241515f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_37_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[11 /* X34 */] <-0.33203125f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.34873733f ? 
                 (data[2 /* X15 */] <0.07341211f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <0.11055019f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_38_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_38_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[5 /* X19 */] <0.33476347f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                 (data[4 /* X18 */] <-0.34491318f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.19921875f ? 
                 (data[12 /* X35 */] <-0.5989576f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[5 /* X19 */] <0.16825897f ? 
            0.0f : 
             (data[9 /* X27 */] <0.253206f ? 
                 (data[8 /* X23 */] <0.19093452f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9050045f ? 
             (data[12 /* X35 */] <-0.66796875f ? 
                 (data[10 /* X28 */] <-0.3673608f ? 
                     (data[9 /* X27 */] <0.014233075f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X19 */] <0.11963376f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.33203125f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.27992004f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.049817715f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.076224945f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46484375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[3 /* X17 */] <0.014641631f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.31106317f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14173612f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.08984375f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11208688f ? 
                     (data[10 /* X28 */] <-0.14146027f ? 
                         (data[9 /* X27 */] <0.2963508f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_38_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[5 /* X19 */] <0.3598128f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35172588f ? 
                 (data[11 /* X34 */] <-0.8671875f ? 
                     (data[9 /* X27 */] <0.18343711f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.35181072f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.17801143f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_39_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_39_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[10 /* X28 */] <-0.30281976f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
                 (data[6 /* X20 */] <-0.43394625f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17794217f ? 
                        1.0f : 
                         (data[11 /* X34 */] <0.03125f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (data[10 /* X28 */] <-0.4165349f ? 
             (data[6 /* X20 */] <-0.49946085f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.62109375f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40862718f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (data[10 /* X28 */] <-0.2935996f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.39175576f ? 
                 (data[9 /* X27 */] <-0.029580532f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07100632f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3984375f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.098843224f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.84375f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.18494976f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.10389577f ? 
                 (data[11 /* X34 */] <-0.578125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11526866f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.16096884f ? 
                 (data[11 /* X34 */] <-0.15625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1259171f ? 
             (data[9 /* X27 */] <0.067798965f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09510257f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_39_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2519258f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
             (data[1 /* X12 */] <-0.4571847f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_40_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_40_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13750018f ? 
             (data[12 /* X35 */] <-0.0234375f ? 
                 (data[6 /* X20 */] <-0.28009173f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.34123704f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                 (data[5 /* X19 */] <0.2271986f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.8875f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16705064f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[2 /* X15 */] <0.2207105f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[6 /* X20 */] <-0.5363128f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.06749961f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.22707021f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[6 /* X20 */] <-0.5363128f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.06749961f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.19918567f ? 
             (data[4 /* X18 */] <-0.042974565f ? 
                 (data[10 /* X28 */] <-0.23349978f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.041034464f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12975213f ? 
            0.0f : 
             (data[5 /* X19 */] <0.017962875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08726493f ? 
             (data[12 /* X35 */] <-0.4453125f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1954246f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-2.905869E-4f ? 
                        1.0f : 
                        0.0f))) : 
             (data[6 /* X20 */] <0.009462041f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3359375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15429688f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13140695f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14806761f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.15663174f ? 
                        1.0f : 
                        0.0f))) : 
             (data[4 /* X18 */] <-0.27755058f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_40_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
            1.0f : 
             (data[5 /* X19 */] <0.28908524f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_41_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_41_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15141462f ? 
             (data[2 /* X15 */] <0.10523584f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.2136488f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19870982f ? 
                         (data[7 /* X21 */] <0.11742863f ? 
                             (data[3 /* X17 */] <-0.22009283f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25253424f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
        0.050632913f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0031649654f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18122822f ? 
                 (data[10 /* X28 */] <-0.35862234f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.24233037f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15141462f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.2935996f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19729681f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.40154836f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0020544566f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.14062305f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13794145f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14887981f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (data[7 /* X21 */] <0.09593705f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.089753605f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012770384f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_41_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
        0.028169014f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
             (data[2 /* X15 */] <0.060682625f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_42_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_42_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06616931f ? 
             (data[11 /* X34 */] <-0.35546875f ? 
                 (data[10 /* X28 */] <-0.13712575f ? 
                     (data[7 /* X21 */] <0.15044674f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-1.0097085f ? 
            1.0f : 
             (data[7 /* X21 */] <0.13255683f ? 
                 (data[10 /* X28 */] <-0.1030499f ? 
                     (data[11 /* X34 */] <0.046875f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19870982f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (data[10 /* X28 */] <-0.41346154f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.30859375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.025845008f ? 
             (data[8 /* X23 */] <0.1816043f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.2259852f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06989661f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.375f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15153693f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.291998f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
        0.04347826f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1010895f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[10 /* X28 */] <-0.12610027f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0421008f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.49389195f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.12700121f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47598857f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6904157f ? 
                         (data[12 /* X35 */] <-0.46875f ? 
                            0.0f : 
                            1.0f) : 
                         (data[8 /* X23 */] <0.1619885f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_42_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[10 /* X28 */] <0.0045184908f ? 
             (data[11 /* X34 */] <-0.35546875f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.29763326f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053782534f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47474602f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39483806f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_43_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_43_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.042223655f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
                 (data[12 /* X35 */] <-0.890625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.036319938f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.3832252f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.053875778f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
        0.075f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24314053f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
                 (data[6 /* X20 */] <-0.46124402f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.073955536f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X21 */] <0.053419493f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23751305f ? 
             (data[3 /* X17 */] <-0.45124358f ? 
                 (data[1 /* X12 */] <-0.0049037123f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[6 /* X20 */] <-0.63594955f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.2951363f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.35546875f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17661138f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.11892023f ? 
             (data[11 /* X34 */] <-0.578125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.049223788f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.14249167f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09545425f ? 
             (data[10 /* X28 */] <-0.14915064f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.1328125f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.44696492f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46948937f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.7359683f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_43_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13052717f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_44_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_44_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15342605f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.30281976f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14864816f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.41571125f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.13736442f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[12 /* X35 */] <-0.62109375f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18603367f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.30742982f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09946883f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[12 /* X35 */] <-0.1328125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5332031f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2798117f ? 
                 (data[2 /* X15 */] <0.12168143f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.46437258f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.15130244f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.15262713f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0055335416f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[12 /* X35 */] <0.31054688f ? 
             (data[2 /* X15 */] <0.12433007f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.117858514f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <-0.035082802f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.02573962f ? 
                 (data[12 /* X35 */] <-0.203125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16615555f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.174431f ? 
                     (data[12 /* X35 */] <-0.4444461f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.002817623f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22005962f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.009153437f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1411879f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.24448776f ? 
             (data[4 /* X18 */] <-0.15196948f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_44_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24414062f ? 
         (data[1 /* X12 */] <-0.42587295f ? 
             (data[10 /* X28 */] <0.11208688f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.10432659f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15236415f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_45_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_45_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[2 /* X15 */] <0.092960976f ? 
             (data[9 /* X27 */] <0.25342864f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.6015625f ? 
                 (data[5 /* X19 */] <0.38044167f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[9 /* X27 */] <0.18343711f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14345984f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.112755336f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22906186f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.106427f ? 
             (data[9 /* X27 */] <0.17430778f ? 
                 (data[6 /* X20 */] <-0.36297214f ? 
                     (data[8 /* X23 */] <0.1736774f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.265625f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12866114f ? 
             (data[5 /* X19 */] <0.06511459f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.021816406f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.095359914f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.04706471f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <0.13322581f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[6 /* X20 */] <0.026020704f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X27 */] <0.069320515f ? 
             (data[4 /* X18 */] <-0.2098309f ? 
                 (data[12 /* X35 */] <-0.203125f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X19 */] <-0.23842457f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (data[6 /* X20 */] <-0.08726493f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.77734375f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.1614473f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1705491f ? 
                 (data[1 /* X12 */] <-0.22756512f ? 
                     (data[5 /* X19 */] <0.23153804f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_45_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[6 /* X20 */] <0.03830469f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.26031563f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.049782515f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3828125f ? 
                     (data[4 /* X18 */] <-0.04335608f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_46_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_46_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[8 /* X23 */] <0.16610149f ? 
             (data[10 /* X28 */] <-0.29404077f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.20660678f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.26770785f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[10 /* X28 */] <-0.40731478f ? 
             (data[1 /* X12 */] <-0.10231808f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.27625194f ? 
             (data[11 /* X34 */] <-0.15234375f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.05571168f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.39123353f ? 
             (data[10 /* X28 */] <-0.5393454f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.06749961f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.2131124f ? 
             (data[11 /* X34 */] <0.1328125f ? 
                 (data[6 /* X20 */] <-0.12821154f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[10 /* X28 */] <-0.16298085f ? 
             (data[3 /* X17 */] <-0.28400272f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20669062f ? 
                 (data[9 /* X27 */] <-0.0052356576f ? 
                     (data[5 /* X19 */] <-0.07928754f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.27435032f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13052717f ? 
             (data[10 /* X28 */] <-0.16334991f ? 
                 (data[3 /* X17 */] <-0.28021982f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.073955536f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_46_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[9 /* X27 */] <8.505609E-4f ? 
             (data[1 /* X12 */] <-0.387603f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_47_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_47_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[7 /* X21 */] <0.13300364f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.048073683f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.14069657f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3996524f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14607725f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1986878f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.039426047f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22526526f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.2421875f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.026661284f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.16454498f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31054688f ? 
             (data[0 /* X5 */] <0.11573509f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.029580532f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.2271986f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.2935996f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[11 /* X34 */] <-0.93308926f ? 
            1.0f : 
             (data[2 /* X15 */] <0.119783826f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.66568756f ? 
             (data[9 /* X27 */] <0.26864418f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05061923f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.07827028f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025094183f ? 
             (data[5 /* X19 */] <0.1299482f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0044145277f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_47_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09865675f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20876047f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
                 (data[11 /* X34 */] <-0.8194447f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_48_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_48_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[5 /* X19 */] <0.15205055f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19932179f ? 
                 (data[10 /* X28 */] <-0.20423141f ? 
                     (data[4 /* X18 */] <-0.24542367f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34722063f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.37401652f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.26757812f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[5 /* X19 */] <-0.05865866f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.040605113f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18474637f ? 
                 (data[8 /* X23 */] <0.056380972f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[5 /* X19 */] <-0.05865866f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2410171f ? 
                 (data[4 /* X18 */] <-0.3727994f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (data[10 /* X28 */] <-0.2120049f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.84436035f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.12864286f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[11 /* X34 */] <-0.48828125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4588385f ? 
            0.0f : 
             (data[0 /* X5 */] <0.121574506f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[4 /* X18 */] <-0.52041966f ? 
             (data[0 /* X5 */] <0.15024073f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1270902f ? 
             (data[9 /* X27 */] <0.022185216f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.1328125f ? 
                     (data[0 /* X5 */] <0.14068532f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.45116925f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1896937f ? 
                        1.0f : 
                         (data[10 /* X28 */] <0.3907209f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_48_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[4 /* X18 */] <-0.2645186f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_49_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_49_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14580664f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25253424f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18564004f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46681213f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.63043016f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.16072297f ? 
                     (data[10 /* X28 */] <-0.16451755f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8003866f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042974565f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16537012f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43491f ? 
                 (data[6 /* X20 */] <-0.4830822f ? 
                     (data[3 /* X17 */] <-0.29893494f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.117641054f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <0.13170426f ? 
                 (data[10 /* X28 */] <-0.33662698f ? 
                     (data[4 /* X18 */] <-0.047713473f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[5 /* X19 */] <-0.4461868f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X34 */] <-0.24414062f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.07614693f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.091075465f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[5 /* X19 */] <0.10784583f ? 
             (data[11 /* X34 */] <-0.48828125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16695026f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.15888155f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (data[7 /* X21 */] <0.09539195f ? 
             (data[3 /* X17 */] <-0.09287034f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.1252905f ? 
             (data[5 /* X19 */] <0.16531198f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <0.1299482f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.02448012f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16740777f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_49_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
        0.011111111f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_50_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_50_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (data[1 /* X12 */] <-0.2919282f ? 
            0.0f : 
             (data[0 /* X5 */] <0.12741393f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16570945f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.17681108f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[3 /* X17 */] <-0.40794015f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.106123276f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.046652727f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.48828125f ? 
                 (data[7 /* X21 */] <0.13234484f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.3225702f ? 
                         (data[11 /* X34 */] <0.18194312f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (data[6 /* X20 */] <-0.291998f ? 
             (data[0 /* X5 */] <0.17041326f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.24749887f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.265625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22812304f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19921875f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.75176144f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <-0.05571168f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[6 /* X20 */] <-0.56361055f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.09348411f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1939709f ? 
                 (data[6 /* X20 */] <-0.52129906f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.012866058f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X17 */] <-0.14831932f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.9765625f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0683322f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.59375f ? 
                         (data[0 /* X5 */] <0.11759003f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.62183595f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.083170265f ? 
             (data[8 /* X23 */] <0.15566082f ? 
                 (data[10 /* X28 */] <-0.17681108f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.4437094f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0859375f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3886913f ? 
                        1.0f : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.11520424f ? 
                 (data[7 /* X21 */] <0.14390558f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_50_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[6 /* X20 */] <-0.24695672f ? 
            0.0f : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_51_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_51_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16271141f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1892952f ? 
                 (data[11 /* X34 */] <-0.3828125f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13442095f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13089478f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10458039f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16164944f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[7 /* X21 */] <0.13245854f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48358604f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060569067f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.111565426f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.046652727f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.74586743f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1607786f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_09_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (data[1 /* X12 */] <-0.2797514f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21499442f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23730111f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25708047f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22918147f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0875f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.08689745f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (data[2 /* X15 */] <0.18615903f ? 
             (data[1 /* X12 */] <-0.001424628f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31054688f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2798117f ? 
                 (data[6 /* X20 */] <-0.19217196f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.022928964f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.074688606f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.46295717f ? 
                 (data[11 /* X34 */] <0.40100098f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.060569067f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.14733094f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1817898f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[2 /* X15 */] <0.14115119f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12700121f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.10281828f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.008277171f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.53704834f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12617645f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.5448576f ? 
                                0.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35206532f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_51_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15344477f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.5302455f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.16243887f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_52_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_52_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[6 /* X20 */] <-0.1964559f ? 
             (data[7 /* X21 */] <0.14390558f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1174493f ? 
                     (data[2 /* X15 */] <0.109782085f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.08903157f ? 
                 (data[1 /* X12 */] <-0.35911518f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.35546875f ? 
        0.0f : 
         (data[6 /* X20 */] <-0.28926823f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18805842f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.029136768f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.113080814f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.019885404f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15823907f ? 
             (data[4 /* X18 */] <-0.23253094f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.046652727f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.10124281f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14754619f ? 
                            1.0f : 
                             (data[1 /* X12 */] <0.06541777f ? 
                                0.0f : 
                                1.0f))))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[6 /* X20 */] <0.017831381f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X27 */] <0.067798965f ? 
             (data[11 /* X34 */] <-0.4219284f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (data[9 /* X27 */] <0.25190708f ? 
             (data[4 /* X18 */] <-0.32254326f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.11414252f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15945743f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18702294f ? 
                 (data[1 /* X12 */] <-0.4641429f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_52_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25668663f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1738859f ? 
                 (data[1 /* X12 */] <-0.4850174f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.09582612f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.11265792f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_53_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_53_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10927625f ? 
                 (data[7 /* X21 */] <0.09567079f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13477054f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-1.0097085f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1328125f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.13705957f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.25057226f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.1693829f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[7 /* X21 */] <0.044152845f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.4639738f ? 
                 (data[8 /* X23 */] <0.17594276f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.40499845f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19270921f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09510257f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.26757812f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.4721631f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.19739586f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2012201f ? 
                 (data[8 /* X23 */] <0.06130925f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[11 /* X34 */] <-0.734375f ? 
             (data[6 /* X20 */] <0.030115366f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.4893921f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23538955f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.57667243f ? 
                             (data[10 /* X28 */] <0.044472463f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)) : 
        0.029411765f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (data[12 /* X35 */] <-0.04296875f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20565778f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.15896133f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0026419256f ? 
                 (data[1 /* X12 */] <-0.5172053f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_53_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[12 /* X35 */] <0.111328125f ? 
             (data[1 /* X12 */] <-0.5269431f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_54_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_54_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09690313f ? 
             (data[0 /* X5 */] <0.10405626f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.132199f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12296887f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.375f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.19921875f ? 
             (data[9 /* X27 */] <0.21995442f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1748371f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.090756364f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16641787f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.16133094f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35413045f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (data[10 /* X28 */] <-0.4165349f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4284867f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6753183f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2126099f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.047713473f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[10 /* X28 */] <-0.17175587f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.25057226f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31054688f ? 
             (data[6 /* X20 */] <-0.3575126f ? 
                 (data[9 /* X27 */] <0.09823006f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.14719021f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <-0.21369167f ? 
                     (data[12 /* X35 */] <-0.734375f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.24150203f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.1134456f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1569958f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[6 /* X20 */] <0.04239935f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30157772f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.9550781f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (data[6 /* X20 */] <-0.18144214f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2245214f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.40039062f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
                 (data[11 /* X34 */] <-0.86683977f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.15312976f ? 
                 (data[11 /* X34 */] <-0.19718628f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1062596f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_54_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.51285005f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.19787017f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5454727f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_55_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_55_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[3 /* X17 */] <-0.24219252f ? 
             (data[10 /* X28 */] <-0.25280827f ? 
                 (data[6 /* X20 */] <-0.22648342f ? 
                     (data[2 /* X15 */] <0.14376082f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.18280703f ? 
                     (data[3 /* X17 */] <-0.35373005f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.12901695f ? 
                 (data[12 /* X35 */] <-0.484375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.92139107f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[7 /* X21 */] <0.18587804f ? 
             (data[3 /* X17 */] <-0.20039064f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
             (data[7 /* X21 */] <0.08503511f ? 
                 (data[3 /* X17 */] <-0.1794772f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.265625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22880742f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.7558594f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1328125f ? 
                 (data[11 /* X34 */] <-0.22220884f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.107802555f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0286618f ? 
             (data[9 /* X27 */] <0.12066556f ? 
                 (data[11 /* X34 */] <-0.6171875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.017022254f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.6484375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
             (data[3 /* X17 */] <-0.561742f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.15004973f ? 
                     (data[12 /* X35 */] <-0.46853638f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.28583023f ? 
                             (data[1 /* X12 */] <-0.41126078f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3109436f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.06451484f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[7 /* X21 */] <0.14990164f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.2657033f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2808166f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_55_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_56_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_56_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[3 /* X17 */] <-0.4064469f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.04296875f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.122932665f ? 
                     (data[6 /* X20 */] <-0.291998f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24435098f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (data[7 /* X21 */] <0.047695976f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[10 /* X28 */] <-0.40731478f ? 
             (data[10 /* X28 */] <-0.58397424f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11338516f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26712263f ? 
             (data[6 /* X20 */] <-0.33021483f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19161452f ? 
                     (data[3 /* X17 */] <-0.2750434f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[9 /* X27 */] <0.0023721154f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.33825052f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.77734375f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07796449f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[9 /* X27 */] <0.07540674f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.421875f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23969583f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.31454223f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26712263f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.39804026f ? 
                 (data[11 /* X34 */] <-0.33194655f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5332031f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.08689745f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0020823437f ? 
                     (data[4 /* X18 */] <-0.10458039f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18747868f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.13414672f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4798709f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0026419256f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_56_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.15937974f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.16734473f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_57_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_57_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.12714384f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.058526237f ? 
             (data[7 /* X21 */] <0.09535789f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14682223f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.11491594f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.16809599f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[3 /* X17 */] <-0.6765982f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.28125f ? 
                         (data[8 /* X23 */] <0.12640344f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.28728628f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.092960976f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1428207f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13071033f ? 
                 (data[5 /* X19 */] <0.15732567f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15122153f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24332131f ? 
                             (data[8 /* X23 */] <0.12384104f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <-0.29378295f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_09_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26251677f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19841526f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.34113395f ? 
                     (data[4 /* X18 */] <-0.17758921f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.13362984f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18161277f ? 
             (data[10 /* X28 */] <-0.37350756f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.5087364f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (data[8 /* X23 */] <0.14490378f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.27673534f ? 
                 (data[10 /* X28 */] <-0.23827873f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.044913184f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21606688f ? 
                 (data[10 /* X28 */] <-0.37350756f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.010161966f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08471085f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <0.088690445f ? 
                 (data[1 /* X12 */] <-0.4363102f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.796875f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09545425f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08425988f ? 
                     (data[3 /* X17 */] <-0.95379156f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.3875081f ? 
                             (data[5 /* X19 */] <0.42047542f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.11552773f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.09321156f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13517947f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_57_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23285846f ? 
            0.0f : 
             (data[5 /* X19 */] <0.076902516f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.41021708f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31925887f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_58_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_58_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16615555f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
             (data[6 /* X20 */] <-0.19918567f ? 
                 (data[2 /* X15 */] <0.34254992f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.28926823f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.35546875f ? 
        0.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14580664f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.04572296f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.15524456f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.22265625f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.015340966f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.73407954f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18666643f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[3 /* X17 */] <-0.06001946f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3951766f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.48963928f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0901704f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.18983398f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (data[1 /* X12 */] <-0.40151936f ? 
            0.0f : 
             (data[5 /* X19 */] <0.10931932f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08453515f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12054393f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.44752282f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15882444f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[11 /* X34 */] <-0.20072556f ? 
             (data[4 /* X18 */] <-0.15196948f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_58_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.48849648f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X34 */] <-0.64453125f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7576554f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_59_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_59_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.3336772f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[2 /* X15 */] <0.09614335f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.56771487f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.52189684f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17122501f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.18896909f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[10 /* X28 */] <-0.30281976f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.019280018f ? 
                     (data[9 /* X27 */] <0.1469198f ? 
                         (data[4 /* X18 */] <-0.24511866f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[0 /* X5 */] <0.113080814f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (data[11 /* X34 */] <-0.17773438f ? 
            0.0f : 
             (data[2 /* X15 */] <0.17433879f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20277603f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2448056f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[6 /* X20 */] <-0.63594955f ? 
            1.0f : 
            0.0f) : 
         (data[1 /* X12 */] <-0.055650275f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.27233762f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21149759f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3017199f ? 
             (data[1 /* X12 */] <-0.5545991f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[9 /* X27 */] <0.048011187f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20428835f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                         (data[10 /* X28 */] <-0.14465646f ? 
                             (data[5 /* X19 */] <0.38156128f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_59_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
            1.0f : 
            0.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_60_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_60_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (data[4 /* X18 */] <-0.56662405f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15781933f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.06875f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1469198f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09545425f ? 
             (data[7 /* X21 */] <0.08012924f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.12350965f ? 
                     (data[12 /* X35 */] <-0.46875f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12424003f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.25799143f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.05f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (data[6 /* X20 */] <-0.5351319f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.06749961f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.44375f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2598082f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2273054f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25647172f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2425681f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X15 */] <0.113419086f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.33203125f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25206947f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
        0.028571429f : 
         (data[3 /* X17 */] <-0.43033847f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.19921875f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918615f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_60_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3856179f ? 
                0.0f : 
                1.0f)) : 
        0.7777778f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_61_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_61_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (data[6 /* X20 */] <-0.12548177f ? 
             (data[3 /* X17 */] <-0.37201643f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.5026488f ? 
                     (data[5 /* X19 */] <0.31667912f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14173993f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.31560808f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.84375f ? 
             (data[4 /* X18 */] <-0.1614473f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.14971866f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3984375f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10011298f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.17606191f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.33596906f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_09_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (data[10 /* X28 */] <-0.25057226f ? 
             (data[5 /* X19 */] <0.18004689f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2845827f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.9550781f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21134438f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.15625f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[6 /* X20 */] <-0.56361055f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.05571168f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.24414062f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48358604f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19732507f ? 
                     (data[1 /* X12 */] <-0.49197555f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1569879f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.52198267f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_61_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[6 /* X20 */] <-0.12684666f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.095667f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_62_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_62_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.12714384f ? 
         (data[10 /* X28 */] <-0.14146718f ? 
             (data[1 /* X12 */] <-0.3945612f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <-0.42919567f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.8955247f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
             (data[3 /* X17 */] <-0.24517897f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14917903f ? 
                     (data[6 /* X20 */] <-0.18280703f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.51853466f ? 
                             (data[8 /* X23 */] <0.14578965f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3756248f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.74586743f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (data[10 /* X28 */] <-0.25057226f ? 
             (data[11 /* X34 */] <-0.19921875f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01454111f ? 
             (data[1 /* X12 */] <-0.1310579f ? 
                 (data[9 /* X27 */] <0.4275315f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.6875f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.35525733f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01454111f ? 
             (data[2 /* X15 */] <0.10887284f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-5.038968E-4f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28762075f ? 
        0.0f : 
         (data[10 /* X28 */] <-0.24596219f ? 
            0.0f : 
             (data[9 /* X27 */] <0.122574925f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3984375f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.24364114f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1430587f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X28 */] <-0.20867531f ? 
                         (data[12 /* X35 */] <-0.34375f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16634355f ? 
                 (data[1 /* X12 */] <-0.37368667f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.024655817f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[3 /* X17 */] <-0.2750434f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.8671875f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17147498f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14390558f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.23096038f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_62_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[10 /* X28 */] <0.11208688f ? 
             (data[1 /* X12 */] <-0.5133665f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_63_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_63_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18417192f ? 
             (data[7 /* X21 */] <0.12700757f ? 
                 (data[11 /* X34 */] <0.0625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26755992f ? 
             (data[5 /* X19 */] <0.1476301f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.013022997f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.03125f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[5 /* X19 */] <0.6928218f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25619552f ? 
             (data[9 /* X27 */] <-0.011321876f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12684666f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17988196f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35546875f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.44129956f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.23420078f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[6 /* X20 */] <0.04239935f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48828125f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.009007754f ? 
                    1.0f : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.11892023f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.026587406f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22681217f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (data[0 /* X5 */] <0.11573509f ? 
             (data[5 /* X19 */] <0.17415293f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37160072f ? 
                 (data[4 /* X18 */] <-0.3225702f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_63_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09510257f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16778336f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19772878f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.66796875f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.17564978f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42260256f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.21281421f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_09_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_64_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_64_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[6 /* X20 */] <-0.28653845f ? 
             (data[8 /* X23 */] <0.10187558f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18252203f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.20139813f ? 
                     (data[2 /* X15 */] <0.24858467f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23116687f ? 
         (data[6 /* X20 */] <-0.28926823f ? 
             (data[0 /* X5 */] <0.16201167f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.19525138f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.3220255f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (data[6 /* X20 */] <-0.3220255f ? 
             (data[5 /* X19 */] <-0.049817715f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16979255f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2568359f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13318732f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18252203f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.25122717f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.008277171f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2503891f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_64_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05314275f ? 
             (data[2 /* X15 */] <0.119783826f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25077447f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.5f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.37947115f ? 
                 (data[6 /* X20 */] <0.120761365f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[6 /* X20 */] <0.25668663f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22915323f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_09_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_65_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_65_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08984375f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.53125f ? 
                1.0f : 
                 (data[1 /* X12 */] <0.009012626f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-1.0097085f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3984375f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3781961f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.1030499f ? 
                         (data[1 /* X12 */] <-0.18172535f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[10 /* X28 */] <-0.31818667f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[12 /* X35 */] <-0.62109375f ? 
             (data[6 /* X20 */] <-0.24013229f ? 
                 (data[6 /* X20 */] <-0.5771667f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.117107205f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.23827873f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[8 /* X23 */] <0.14490378f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.2421875f ? 
                 (data[6 /* X20 */] <-0.23724853f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (data[12 /* X35 */] <-0.8886719f ? 
             (data[11 /* X34 */] <-0.2421875f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.043803472f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.375f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.22102387f ? 
                    0.0f : 
                    1.0f))) : 
         (data[6 /* X20 */] <-0.36979657f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.84375f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.625f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.020561157f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30212465f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (data[12 /* X35 */] <-0.49023438f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06815651f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11299566f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.104098745f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[8 /* X23 */] <0.14870039f ? 
             (data[11 /* X34 */] <-0.421875f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5120929f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_65_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05450764f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.5058919f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20832883f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23271422f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_66_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_66_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[12 /* X35 */] <-0.5332031f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45731694f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15617025f ? 
             (data[7 /* X21 */] <0.011590761f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.34277374f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.21061829f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.34671804f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.3200645f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[10 /* X28 */] <-0.40731478f ? 
             (data[9 /* X27 */] <0.009979889f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.011447034f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23889549f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.018631255f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[11 /* X34 */] <-0.26757812f ? 
            0.0f : 
             (data[5 /* X19 */] <0.20362274f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.22265625f ? 
         (data[6 /* X20 */] <-0.38208055f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.13430023f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.886979f ? 
                 (data[2 /* X15 */] <0.14615206f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16407415f ? 
             (data[5 /* X19 */] <0.020909857f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[6 /* X20 */] <0.049223788f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.48963928f ? 
             (data[9 /* X27 */] <0.089100726f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08726493f ? 
             (data[11 /* X34 */] <-0.80091095f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45790732f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.779951f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.04706471f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.20072556f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23162149f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1093193f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_66_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25499916f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X21 */] <0.19487213f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36298054f ? 
                 (data[7 /* X21 */] <0.23369111f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.19199482f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_67_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_67_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[6 /* X20 */] <-0.28653845f ? 
             (data[7 /* X21 */] <0.0872155f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042974565f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.088511676f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.18983027f ? 
                     (data[7 /* X21 */] <0.051544074f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[6 /* X20 */] <-0.45714936f ? 
             (data[4 /* X18 */] <-0.054821838f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.011447034f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26712263f ? 
             (data[10 /* X28 */] <-0.33662698f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22277443f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[9 /* X27 */] <-0.06153318f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.2935996f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19143935f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13657656f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18151726f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.15740885f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09510257f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13974732f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23149511f ? 
                     (data[8 /* X23 */] <0.10124281f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.08789864f ? 
                             (data[1 /* X12 */] <-0.3148156f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_67_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[6 /* X20 */] <-0.12684666f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19514468f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05369261f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_68_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_68_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[3 /* X17 */] <-0.4064469f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17885794f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.10931932f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.045581188f ? 
                        1.0f : 
                        0.0f))) : 
             (data[11 /* X34 */] <-0.19921875f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.12864286f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.1470556f ? 
                         (data[11 /* X34 */] <0.10058594f ? 
                            0.0f : 
                            1.0f) : 
                         (data[2 /* X15 */] <0.1345894f ? 
                             (data[9 /* X27 */] <0.22657767f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
        0.04347826f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[9 /* X27 */] <-0.009800321f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2279845f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13710892f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.57494247f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5790413f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15004973f ? 
             (data[7 /* X21 */] <0.13027816f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22273418f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.41874906f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25206947f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1470613f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09545425f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.203125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46948937f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.11556054f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_68_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_69_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_69_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
             (data[8 /* X23 */] <0.17654215f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.26931414f ? 
                     (data[4 /* X18 */] <-0.1614473f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.03066233f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.08984375f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6751399f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[5 /* X19 */] <-0.03066233f ? 
            1.0f : 
             (data[7 /* X21 */] <0.16080357f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.19918567f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.052452385f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[11 /* X34 */] <-0.734375f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22841828f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16615555f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.33889583f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.062872656f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16844347f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.2751811f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.087890625f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21419975f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012770384f ? 
             (data[12 /* X35 */] <-0.04296875f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23916693f ? 
                     (data[2 /* X15 */] <0.12069308f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.112332486f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.111909084f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_69_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_70_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_70_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (data[5 /* X19 */] <0.31855506f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.120343335f ? 
                 (data[9 /* X27 */] <0.07388518f ? 
                     (data[8 /* X23 */] <0.108836025f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[4 /* X18 */] <-0.53263247f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.6171875f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.08984375f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.112755336f ? 
                 (data[4 /* X18 */] <-0.18040293f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1746601f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23116687f ? 
         (data[6 /* X20 */] <-0.17871237f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.14083359f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.17007022f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.6875f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2063552f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (data[6 /* X20 */] <-0.1650635f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.93359375f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.043173645f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X17 */] <-0.85441345f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0901704f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.6015625f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.2437202f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[4 /* X18 */] <-0.3604815f ? 
             (data[1 /* X12 */] <-0.14754619f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.04296875f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13169411f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.37630448f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08198108f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_70_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05314275f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.54068273f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.5996094f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39036855f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_71_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_71_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[10 /* X28 */] <-0.30263066f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17578125f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07075926f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16753143f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.09375f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[2 /* X15 */] <0.16978064f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
             (data[12 /* X35 */] <-0.66796875f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1907839f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.53494793f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.17773438f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.53511685f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[5 /* X19 */] <-0.03066233f ? 
            1.0f : 
             (data[2 /* X15 */] <0.1512565f ? 
                 (data[6 /* X20 */] <-0.3575126f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.033707865f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.35027403f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.066967316f ? 
             (data[12 /* X35 */] <0.0f ? 
                 (data[6 /* X20 */] <-0.14530511f ? 
                     (data[2 /* X15 */] <0.15883662f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.18818066f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918615f ? 
                     (data[11 /* X34 */] <-0.85f ? 
                         (data[5 /* X19 */] <0.35686582f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_71_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[2 /* X15 */] <0.07159362f ? 
            1.0f : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_72_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_72_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[5 /* X19 */] <0.15205055f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.033141468f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.011861882f ? 
                     (data[7 /* X21 */] <0.09593705f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17161104f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.28125f ? 
                            1.0f : 
                             (data[11 /* X34 */] <0.40078124f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.009800321f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2279845f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19681469f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.17543481f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.734375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[9 /* X27 */] <-0.009800321f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.35260615f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.35068816f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.047282558f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.16654189f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16961698f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30608916f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X17 */] <0.029573848f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07361606f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16775899f ? 
                 (data[12 /* X35 */] <-0.0625f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16574733f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.6404972f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_72_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_73_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_73_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23621963f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22343825f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.009012626f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.31818667f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.534375f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19160154f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21667601f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.3528661f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24791823f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[3 /* X17 */] <0.035546735f ? 
            1.0f : 
             (data[6 /* X20 */] <0.23062049f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (data[7 /* X21 */] <0.09539195f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.09241095f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.031304557f ? 
             (data[1 /* X12 */] <-0.54068273f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_73_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.34873733f ? 
                 (data[1 /* X12 */] <-0.4641429f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_74_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_74_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[8 /* X23 */] <0.16483596f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08198108f ? 
                 (data[10 /* X28 */] <-0.20423141f ? 
                     (data[5 /* X19 */] <0.37410662f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.13342257f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.11665073f ? 
                     (data[1 /* X12 */] <0.3986701f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.62468797f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9668911f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26712263f ? 
             (data[6 /* X20 */] <-0.38208055f ? 
                 (data[9 /* X27 */] <-0.056315716f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[5 /* X19 */] <-0.03066233f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.38208055f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.076224945f ? 
            0.0f : 
             (data[0 /* X5 */] <0.23411599f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[5 /* X19 */] <0.1122663f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.043764237f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.07236363f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26812246f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2594661f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.11841681f ? 
                 (data[1 /* X12 */] <-0.11396529f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[4 /* X18 */] <-0.52041966f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17297491f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.008277171f ? 
                 (data[10 /* X28 */] <-0.08808817f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12864286f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.055584677f ? 
                         (data[12 /* X35 */] <-0.28125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[0 /* X5 */] <0.08919229f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_74_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[8 /* X23 */] <0.049039487f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.26235598f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_75_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_75_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[4 /* X18 */] <-0.44104296f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48653305f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.087440625f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1328125f ? 
                     (data[7 /* X21 */] <0.012401769f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21727513f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17855471f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.13296795f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4570632f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0625f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[7 /* X21 */] <0.08530766f ? 
             (data[4 /* X18 */] <-0.10221093f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.4639738f ? 
                 (data[12 /* X35 */] <-0.6484375f ? 
                     (data[7 /* X21 */] <0.19195217f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.1725203f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19199482f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.953125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25816917f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.19224556f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.13027816f ? 
             (data[6 /* X20 */] <-0.7205726f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20014119f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21767205f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.8430547f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16626652f ? 
             (data[5 /* X19 */] <0.12405423f ? 
                 (data[10 /* X28 */] <-0.24442549f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.04649401f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0683322f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23969583f ? 
            0.0f : 
             (data[2 /* X15 */] <0.15968055f ? 
                 (data[11 /* X34 */] <-0.578125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11168875f ? 
             (data[3 /* X17 */] <-0.49902666f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.43348736f ? 
                     (data[6 /* X20 */] <-0.10637335f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0625f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[10 /* X28 */] <-0.12763695f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.625f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_75_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27462113f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.30581987f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_76_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_76_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[8 /* X23 */] <0.16515234f ? 
             (data[11 /* X34 */] <-0.19921875f ? 
                 (data[2 /* X15 */] <0.1649983f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X21 */] <0.11774092f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (data[9 /* X27 */] <0.023673879f ? 
            0.0f : 
             (data[7 /* X21 */] <0.15480751f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10927625f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3781961f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.01588654f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.058829524f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18527722f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[2 /* X15 */] <0.14569743f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48828125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18570441f ? 
            0.0f : 
             (data[7 /* X21 */] <0.09866253f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.4119566f ? 
            0.0f : 
             (data[9 /* X27 */] <0.11953182f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.55225027f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_76_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26882938f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.7324219f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_77_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_77_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.12714384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18233703f ? 
             (data[7 /* X21 */] <0.08616976f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.35866383f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11534343f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.17773438f ? 
             (data[6 /* X20 */] <-0.16642839f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16332643f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26291493f ? 
             (data[7 /* X21 */] <0.042517554f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.25057226f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12110725f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.34375f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (data[8 /* X23 */] <0.14490378f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.054240726f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.29296204f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.13232227f ? 
        0.025f : 
         (data[12 /* X35 */] <-0.5546875f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2510514f ? 
                 (data[1 /* X12 */] <-0.11623442f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.018631255f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28762075f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13657656f ? 
            0.0f : 
             (data[0 /* X5 */] <0.11892023f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.23264116f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15502806f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.50421494f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.63623726f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04871785f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2061541f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.15807809f ? 
                 (data[1 /* X12 */] <-0.3105858f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_77_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[1 /* X12 */] <-0.5180687f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05450764f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.22887541f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.28323048f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_78_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_78_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
             (data[0 /* X5 */] <0.097685985f ? 
                 (data[9 /* X27 */] <0.3141169f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[8 /* X23 */] <0.19138624f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17734748f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18250208f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23116687f ? 
         (data[10 /* X28 */] <-0.40731478f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71639764f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13015077f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22456057f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (data[8 /* X23 */] <0.16610149f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5486102f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.625607f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <-0.011321876f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18070354f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3125f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03273639f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[10 /* X28 */] <-0.12610027f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.7109375f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <0.088690445f ? 
                 (data[1 /* X12 */] <-0.4571847f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (data[9 /* X27 */] <0.089100726f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53073776f ? 
                 (data[1 /* X12 */] <-0.37368667f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.035574913f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_78_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0045184908f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.62164485f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.35546875f ? 
             (data[1 /* X12 */] <-0.40151936f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14437884f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_79_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_79_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[6 /* X20 */] <-0.28790334f ? 
             (data[2 /* X15 */] <0.14069657f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.033141468f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82838297f ? 
                     (data[10 /* X28 */] <-0.32433343f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4625f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.1621358f ? 
                                 (data[9 /* X27 */] <0.25647172f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
             (data[10 /* X28 */] <-0.4349752f ? 
                 (data[5 /* X19 */] <-0.06749961f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.62109375f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14607725f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (data[6 /* X20 */] <-0.43667606f ? 
             (data[2 /* X15 */] <0.10432659f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18161277f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.43348736f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15941557f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11271889f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3355659f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (data[11 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18070354f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.13777971f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.056765992f ? 
             (data[5 /* X19 */] <0.1299482f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.114062816f ? 
                     (data[6 /* X20 */] <0.01373672f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_79_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05314275f ? 
            0.0f : 
             (data[2 /* X15 */] <0.10614509f ? 
                 (data[3 /* X17 */] <-0.3940605f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.37639776f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X28 */] <0.04139908f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_80_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_80_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.3336772f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
             (data[10 /* X28 */] <-0.14607725f ? 
                 (data[1 /* X12 */] <-0.26923898f ? 
                     (data[10 /* X28 */] <-0.20193733f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.08612531f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625f ? 
                        0.0f : 
                        1.0f))) : 
             (data[1 /* X12 */] <-0.29715553f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5546875f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15262322f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.20767254f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26766068f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24685653f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.191329f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.222481f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25816917f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29911214f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.14065343f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.7132775f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23899055f ? 
             (data[11 /* X34 */] <-0.734375f ? 
                 (data[12 /* X35 */] <0.4453125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.15687643f ? 
             (data[1 /* X12 */] <-0.26931414f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.10178481f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.15909223f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.088690445f ? 
                 (data[11 /* X34 */] <-0.21875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19451383f ? 
             (data[10 /* X28 */] <-0.12763695f ? 
                 (data[1 /* X12 */] <-0.37693962f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.09157627f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X12 */] <-0.5161098f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.53125f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16757886f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.65f ? 
                                0.0f : 
                                1.0f))))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_80_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5133665f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.46220127f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3491233f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_81_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_81_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[12 /* X35 */] <-0.17578125f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2750434f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16872661f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.34152585f ? 
                    0.0f : 
                    1.0f))) : 
         (data[0 /* X5 */] <0.0788406f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073777474f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.28745285f ? 
                     (data[7 /* X21 */] <0.17661138f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[7 /* X21 */] <0.08639786f ? 
             (data[12 /* X35 */] <-0.37890625f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12866114f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.019280018f ? 
                     (data[3 /* X17 */] <-0.44862738f ? 
                         (data[4 /* X18 */] <-0.18750104f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.22265625f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.022928964f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.12717877f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.20336875f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.6660156f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
        0.04347826f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (data[12 /* X35 */] <0.44442058f ? 
                 (data[9 /* X27 */] <0.13474737f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.024182135f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15024073f ? 
                 (data[1 /* X12 */] <-0.27674088f ? 
                     (data[9 /* X27 */] <0.14140251f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.15706305f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_81_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[7 /* X21 */] <0.18996626f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X12 */] <-0.5841713f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.4107779f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2808166f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_82_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_82_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2481654f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
             (data[10 /* X28 */] <-0.21061829f ? 
                 (data[4 /* X18 */] <-0.16548829f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.390625f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19959298f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.735553f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22827657f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5932261f ? 
                     (data[3 /* X17 */] <-0.2110915f ? 
                         (data[8 /* X23 */] <0.14173993f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26766068f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.094453804f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1440671f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18717255f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.15625f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19011536f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X27 */] <0.049540307f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.1506983f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1469036f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X28 */] <-0.17373769f ? 
             (data[4 /* X18 */] <-0.27044222f ? 
                 (data[0 /* X5 */] <0.13643847f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (data[5 /* X19 */] <0.09458441f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.057191294f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.044319153f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45784584f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.099004164f ? 
                             (data[0 /* X5 */] <0.124967046f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.3130924f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2421875f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.10124281f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.57895267f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.59333736f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40625f ? 
                        1.0f : 
                         (data[10 /* X28 */] <0.04163919f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_82_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[8 /* X23 */] <0.06897166f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33029702f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <0.05369261f ? 
            0.0f : 
             (data[9 /* X27 */] <8.505609E-4f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_83_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_83_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[5 /* X19 */] <0.28171778f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14663647f ? 
                 (data[12 /* X35 */] <-0.2421875f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5223779f ? 
                     (data[11 /* X34 */] <-0.2f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16663627f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.62906f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.111328125f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.28926823f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.28347242f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97867906f ? 
             (data[6 /* X20 */] <-0.4639738f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.49892768f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[9 /* X27 */] <0.06627741f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.18603122f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[5 /* X19 */] <-0.38430017f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.0021925482f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21118766f ? 
                 (data[1 /* X12 */] <-0.05460978f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14808096f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.0464972f ? 
             (data[6 /* X20 */] <-0.19372612f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.24886581f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.17650376f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.84375f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10919666f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (data[7 /* X21 */] <0.09157627f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08198108f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03969456f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21883416f ? 
                         (data[12 /* X35 */] <-0.53125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_83_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.39222962f ? 
            1.0f : 
             (data[3 /* X17 */] <0.09527561f ? 
                0.0f : 
                1.0f)) : 
        0.011111111f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_84_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_84_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[2 /* X15 */] <0.14069657f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.1638868f ? 
                 (data[7 /* X21 */] <0.047968525f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.34103748f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.23213196f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.24583289f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29208657f ? 
             (data[12 /* X35 */] <-0.66796875f ? 
                 (data[11 /* X34 */] <0.171875f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.28894043f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.53494793f ? 
                0.0f : 
                1.0f)) : 
         (data[8 /* X23 */] <0.14490378f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.33662698f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.30902454f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17433879f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17211278f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.38326114f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.7091446f ? 
                        1.0f : 
                        0.0f))) : 
             (data[8 /* X23 */] <0.17907323f ? 
                1.0f : 
                 (data[11 /* X34 */] <0.265625f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20694947f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[9 /* X27 */] <0.015854372f ? 
             (data[6 /* X20 */] <0.043764237f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.84375f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13930634f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.019885404f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.045129124f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23903963f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10681612f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20428835f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_84_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[2 /* X15 */] <0.08568698f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30036303f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24255021f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1569879f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.265756f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_85_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_85_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[2 /* X15 */] <0.14069657f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24925092f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.046652727f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21767205f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.14680208f ? 
                     (data[7 /* X21 */] <0.1395448f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2654365f ? 
             (data[6 /* X20 */] <-0.38208055f ? 
                 (data[7 /* X21 */] <0.17007022f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17758921f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35993746f ? 
             (data[12 /* X35 */] <-0.62109375f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.19973245f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21116339f ? 
             (data[3 /* X17 */] <-0.78566694f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22273418f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.046652727f ? 
                        0.0f : 
                        1.0f))) : 
             (data[1 /* X12 */] <-0.3006259f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[0 /* X5 */] <0.1186548f ? 
             (data[9 /* X27 */] <0.18343711f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.13378373f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13657656f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.38807073f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17879178f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18570441f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.15234375f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13887726f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.013148409f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05061923f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09510257f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.28323048f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.22305313f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_85_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17094411f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.45370564f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.1470613f ? 
             (data[12 /* X35 */] <-0.11328125f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.5267664f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_86_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_86_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
             (data[9 /* X27 */] <0.1134456f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.09593705f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14014813f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.11610563f ? 
                 (data[0 /* X5 */] <0.15236415f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (data[10 /* X28 */] <-0.26286578f ? 
             (data[9 /* X27 */] <-0.056968514f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06467798f ? 
                     (data[0 /* X5 */] <0.12582135f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.011447034f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[6 /* X20 */] <-0.22102387f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.8886719f ? 
             (data[10 /* X28 */] <-0.33662698f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.10231808f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.050131813f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.099192716f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.17188793f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[6 /* X20 */] <0.017831381f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X27 */] <-0.19999465f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10381927f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.42239386f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.12069308f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.124563575f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.11994385f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <0.069320515f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.57895267f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.164043f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10393162f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X20 */] <0.01373672f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_86_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13052717f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_87_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_87_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.3336772f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19172858f ? 
                 (data[11 /* X34 */] <-0.5390625f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15045448f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14233634f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.22286758f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <-0.07734375f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13082325f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3243292f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[10 /* X28 */] <-0.39194787f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.215255f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.24860339f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5631546f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.40074188f ? 
                    0.0f : 
                    1.0f))) : 
         (data[8 /* X23 */] <0.14490378f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[2 /* X15 */] <0.17433879f ? 
            0.0f : 
             (data[2 /* X15 */] <0.23117398f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22456057f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.40085492f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28762075f ? 
        0.0f : 
         (data[8 /* X23 */] <0.12022584f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1181125f ? 
                 (data[11 /* X34 */] <-0.8203125f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.48828125f ? 
                 (data[5 /* X19 */] <0.162365f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[10 /* X28 */] <-0.124563575f ? 
             (data[8 /* X23 */] <0.113688245f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15047961f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
                 (data[5 /* X19 */] <0.12700121f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.51555604f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_87_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[10 /* X28 */] <0.23348549f ? 
             (data[2 /* X15 */] <0.10194728f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[2 /* X15 */] <0.10023497f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1518333f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_88_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_88_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[7 /* X21 */] <0.13245854f ? 
             (data[11 /* X34 */] <-0.19921875f ? 
                 (data[10 /* X28 */] <-0.15222402f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.025953358f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X27 */] <0.037367873f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33530328f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.119225755f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.4375f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[2 /* X15 */] <0.13296795f ? 
            1.0f : 
             (data[0 /* X5 */] <0.07857517f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1328125f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.46295717f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.31088072f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_09_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[7 /* X21 */] <0.011447034f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26968333f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.3138439f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.18603122f ? 
             (data[9 /* X27 */] <0.016066106f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23199256f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22393546f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (data[3 /* X17 */] <-0.8723321f ? 
             (data[9 /* X27 */] <0.20473887f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07100632f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.047713473f ? 
                     (data[8 /* X23 */] <0.103773884f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.32126006f ? 
            1.0f : 
             (data[0 /* X5 */] <0.10936482f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[0 /* X5 */] <0.120778225f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35993746f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.15523279f ? 
             (data[5 /* X19 */] <0.17120595f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.16191956f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1010895f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2445978f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.15502806f ? 
         (data[3 /* X17 */] <-0.6677607f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0026419256f ? 
                     (data[8 /* X23 */] <0.11869336f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.03381653f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.5642546f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5425257f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.113080814f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.64758104f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_88_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[7 /* X21 */] <0.18996626f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30859375f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_89_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_89_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[10 /* X28 */] <-0.30281976f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19932179f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24253249f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0049037123f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.2562255f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (data[10 /* X28 */] <-0.35814065f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.75390625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.106427f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2925412f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6753183f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.037586894f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[11 /* X34 */] <-0.40039062f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (data[4 /* X18 */] <-0.24674767f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06616931f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24048625f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060569067f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3984375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[10 /* X28 */] <-0.11073335f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.052452385f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20916575f ? 
                 (data[5 /* X19 */] <0.020909857f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (data[12 /* X35 */] <0.5107422f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1093193f ? 
                 (data[10 /* X28 */] <-0.11534343f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21075831f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.5302455f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08471085f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_89_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
             (data[8 /* X23 */] <0.07086997f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.2657033f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_90_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_90_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[12 /* X35 */] <-0.46679688f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24175046f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.15625f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.8203125f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16722812f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.33662698f ? 
                 (data[8 /* X23 */] <0.17594276f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02329093f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
                 (data[9 /* X27 */] <0.12866114f ? 
                     (data[9 /* X27 */] <-0.02858215f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.164043f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16673426f ? 
        0.030303031f : 
         (data[6 /* X20 */] <-0.18963146f ? 
             (data[1 /* X12 */] <-0.29714683f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2426129f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[9 /* X27 */] <0.07540674f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2421875f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.9765625f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15568498f ? 
                    0.0f : 
                    1.0f))) : 
        0.029411765f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (data[12 /* X35 */] <-0.4453125f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.20754491f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06815651f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30614316f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[6 /* X20 */] <-0.14868484f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22265625f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_90_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
             (data[1 /* X12 */] <-0.51980823f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11473837f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_91_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_91_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (data[4 /* X18 */] <-0.56662405f ? 
            1.0f : 
             (data[2 /* X15 */] <0.0879601f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.08597082f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16160929f ? 
             (data[11 /* X34 */] <-0.734375f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16533501f ? 
                     (data[10 /* X28 */] <-0.27515933f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X19 */] <0.34677026f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X21 */] <0.1384546f ? 
                 (data[6 /* X20 */] <-0.20894583f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.09375f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.049540307f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3941246f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24753335f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06903857f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.04839227f ? 
            0.0f : 
             (data[7 /* X21 */] <0.11610563f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0038785639f ? 
             (data[2 /* X15 */] <0.10614509f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.17715648f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
        0.028571429f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16842069f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15566629f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.203125f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3338623f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08453515f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17282069f ? 
                                1.0f : 
                                 (data[0 /* X5 */] <0.11647829f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.26470026f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.53125f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_91_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17329457f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15807809f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.15880024f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.40625f ? 
                         (data[12 /* X35 */] <-0.008331562f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.38586348f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.30432665f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_09_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_92_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_92_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[4 /* X18 */] <-0.44815132f ? 
             (data[12 /* X35 */] <-0.35546875f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.17578125f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2750434f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.12864286f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.3391564f ? 
                 (data[4 /* X18 */] <-0.5423854f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15837078f ? 
                     (data[1 /* X12 */] <-0.24148147f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24079406f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (data[11 /* X34 */] <-0.24414062f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.16072297f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.17733517f ? 
                         (data[4 /* X18 */] <-0.1614473f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[11 /* X34 */] <-0.19921875f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16516435f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.265625f ? 
                 (data[2 /* X15 */] <0.12355204f ? 
                     (data[4 /* X18 */] <-0.18988076f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[4 /* X18 */] <-0.19817385f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06640625f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14644715f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (data[5 /* X19 */] <0.19920227f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.35546875f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X21 */] <0.09593705f ? 
             (data[7 /* X21 */] <0.08630377f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.3699593f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_92_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
        0.028169014f : 
         (data[2 /* X15 */] <0.14842518f ? 
             (data[12 /* X35 */] <-0.265625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17578125f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.037189767f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_93_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_93_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (data[0 /* X5 */] <0.081494875f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.55951566f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.12290762f ? 
                     (data[3 /* X17 */] <-0.4199283f ? 
                         (data[0 /* X5 */] <0.10938758f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[2 /* X15 */] <0.16115467f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08984375f ? 
                 (data[5 /* X19 */] <0.33575922f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03273639f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.41329458f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[7 /* X21 */] <0.12046641f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.043401405f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22948578f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20185286f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19947205f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.3465935f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.651564f ? 
                    0.0f : 
                    1.0f)) : 
             (data[12 /* X35 */] <-0.88671875f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.043803472f ? 
                    0.0f : 
                    1.0f))) : 
         (data[2 /* X15 */] <0.15660843f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14717616f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.039114352f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26435447f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15004973f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21995442f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18600748f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19183482f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15103702f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19979776f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.13425967f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19921875f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1529552f ? 
            0.0f : 
             (data[7 /* X21 */] <0.18424274f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (data[7 /* X21 */] <0.09539195f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.1368571f ? 
             (data[2 /* X15 */] <0.09730011f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <0.0f ? 
                 (data[11 /* X34 */] <-0.20086898f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13169411f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.47110105f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_93_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23302892f ? 
            1.0f : 
            0.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_94_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_94_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
             (data[10 /* X28 */] <-0.24782602f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.018209249f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.2752794f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13169411f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.24414062f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20836946f ? 
             (data[1 /* X12 */] <-0.11623442f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25708047f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13710892f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[0 /* X5 */] <0.16165413f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.10231808f ? 
                0.0f : 
                1.0f)) : 
        0.033707865f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28762075f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.6660156f ? 
             (data[6 /* X20 */] <0.01373672f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.33889583f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3555302f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23538955f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.15532145f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012770384f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14546303f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.03407059f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.203125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_94_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_95_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_95_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[2 /* X15 */] <0.14115119f ? 
             (data[12 /* X35 */] <-0.86670303f ? 
                 (data[7 /* X21 */] <0.17225061f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19918567f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.4124198f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.17377406f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26766068f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26757812f ? 
             (data[0 /* X5 */] <0.1651047f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18751332f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3089077f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.40039062f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20014119f ? 
                 (data[7 /* X21 */] <0.13736442f ? 
                     (data[12 /* X35 */] <-0.5362396f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.2272603f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[9 /* X27 */] <8.505609E-4f ? 
             (data[12 /* X35 */] <0.1788063f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1529552f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.18206236f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18570441f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17461771f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1794772f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1259171f ? 
             (data[10 /* X28 */] <-0.21567036f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.112008594f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_95_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
            0.0f : 
             (data[0 /* X5 */] <0.15077159f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_96_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_96_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[5 /* X19 */] <0.33476347f ? 
             (data[0 /* X5 */] <0.104363695f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07128981f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.34671804f ? 
                     (data[10 /* X28 */] <-0.091232315f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19921875f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46510315f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18988076f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073777474f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2890625f ? 
                 (data[3 /* X17 */] <-0.34671804f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.15333392f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97867906f ? 
             (data[10 /* X28 */] <-0.38887447f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19159022f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.009802201f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.04228667f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.070223294f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.4189148f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[7 /* X21 */] <0.1469036f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.19999465f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.19099635f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.046652727f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.08441459f ? 
                    0.0f : 
                    1.0f)) : 
             (data[12 /* X35 */] <-0.88671875f ? 
                 (data[5 /* X19 */] <0.34156397f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15862319f ? 
             (data[10 /* X28 */] <-0.24442549f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.12546156f ? 
                     (data[7 /* X21 */] <0.07187613f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.29366773f ? 
                 (data[5 /* X19 */] <0.08569841f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10654905f ? 
            0.0f : 
             (data[7 /* X21 */] <0.18151726f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18793151f ? 
            0.0f : 
             (data[0 /* X5 */] <0.20067692f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11168875f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4647827f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5116975f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <-0.21369167f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.0872155f ? 
                         (data[3 /* X17 */] <0.023600962f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_96_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20958975f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16126099f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.14569743f ? 
             (data[8 /* X23 */] <0.08162702f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_97_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_97_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[2 /* X15 */] <0.092960976f ? 
             (data[12 /* X35 */] <-0.0234375f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.890625f ? 
                 (data[9 /* X27 */] <0.29298905f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15823907f ? 
             (data[1 /* X12 */] <-0.22756512f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.16072297f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1824265f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.36324942f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.49946085f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6766134f ? 
            0.0f : 
             (data[0 /* X5 */] <0.16191956f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0034734374f ? 
                     (data[1 /* X12 */] <-0.19973245f ? 
                         (data[5 /* X19 */] <0.801722f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19160154f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.557097f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.3220255f ? 
             (data[7 /* X21 */] <0.13736442f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.018820051f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.07253101f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[6 /* X20 */] <0.035574913f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13657656f ? 
            0.0f : 
             (data[6 /* X20 */] <0.2882728f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012770384f ? 
             (data[12 /* X35 */] <-0.04296875f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.58243173f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17773438f ? 
             (data[7 /* X21 */] <0.09757234f ? 
                 (data[9 /* X27 */] <0.43297207f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.16709101f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_97_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_98_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_98_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[3 /* X17 */] <-0.4064469f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16705064f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.009802201f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.14118008f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18252203f ? 
                     (data[5 /* X19 */] <0.28244865f ? 
                         (data[12 /* X35 */] <-0.24166812f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11704219f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.26757812f ? 
             (data[1 /* X12 */] <0.09598974f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[5 /* X19 */] <0.004701455f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X21 */] <0.011447034f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6780869f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.16494161f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[5 /* X19 */] <0.004701455f ? 
            1.0f : 
             (data[8 /* X23 */] <0.19299412f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.77734375f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07796449f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.30581987f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.089994706f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2890625f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.35281217f ? 
                    1.0f : 
                    0.0f))) : 
         (data[3 /* X17 */] <-0.45572323f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5333325f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1093193f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.030168025f ? 
                         (data[5 /* X19 */] <0.19183482f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.08655135f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.23545115f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.46330482f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.073955536f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_98_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_99_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_99_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (data[0 /* X5 */] <0.081494875f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1939709f ? 
                 (data[2 /* X15 */] <0.0879601f ? 
                     (data[2 /* X15 */] <0.085554324f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[12 /* X35 */] <0.1328125f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.19921875f ? 
             (data[10 /* X28 */] <-0.14349347f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13710892f ? 
                 (data[6 /* X20 */] <-0.291998f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5313171f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.006415626f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (data[10 /* X28 */] <-0.3673608f ? 
             (data[6 /* X20 */] <-0.5567861f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.19685845f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.215255f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.515625f ? 
                        0.0f : 
                        1.0f))) : 
             (data[0 /* X5 */] <0.13059907f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[10 /* X28 */] <-0.5379335f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.132186f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01454111f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.35749418f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[10 /* X28 */] <-0.24442549f ? 
            0.0f : 
             (data[12 /* X35 */] <0.1328125f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.9550781f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.13219163f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
        0.028571429f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07873787f ? 
                     (data[1 /* X12 */] <-0.51980823f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.093127124f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_99_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[10 /* X28 */] <0.11208688f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_100_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_100_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26757812f ? 
             (data[5 /* X19 */] <0.15057707f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.20423141f ? 
                     (data[7 /* X21 */] <0.15262713f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.0021925482f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14058802f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.0f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10723224f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[9 /* X27 */] <-0.0021925482f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.57368773f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2629906f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.15137441f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[9 /* X27 */] <0.121053375f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14058802f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.05588354f ? 
                     (data[12 /* X35 */] <-0.265625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.026587406f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.2421875f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.5996094f ? 
             (data[10 /* X28 */] <-0.13875037f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[4 /* X18 */] <-0.4860626f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12553592f ? 
             (data[3 /* X17 */] <-0.17051788f ? 
                 (data[10 /* X28 */] <-0.10869099f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3130924f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X27 */] <-0.12087381f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.425f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.08605762f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_100_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.13766699f ? 
                1.0f : 
                0.0f)) : 
        0.9230769f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_101_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_101_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[2 /* X15 */] <0.092960976f ? 
             (data[12 /* X35 */] <-0.0234375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4786187f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.118960306f ? 
                     (data[11 /* X34 */] <-0.7756195f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.28790334f ? 
             (data[8 /* X23 */] <0.14700887f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.88671875f ? 
                 (data[3 /* X17 */] <-0.07793812f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.24559183f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[2 /* X15 */] <0.1893414f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.09423542f ? 
             (data[12 /* X35 */] <-0.7109375f ? 
                 (data[12 /* X35 */] <-0.8441618f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.113419086f ? 
                 (data[12 /* X35 */] <-0.8671875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16925257f ? 
             (data[4 /* X18 */] <-0.3540218f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13657656f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14615206f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (data[4 /* X18 */] <-0.31546184f ? 
            1.0f : 
             (data[7 /* X21 */] <0.13753812f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18938445f ? 
                     (data[8 /* X23 */] <0.111218f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33951718f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (data[8 /* X23 */] <0.12054222f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13524106f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_101_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.047713473f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16234197f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.46701327f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.33857986f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20338778f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_102_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_102_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.45224145f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2425681f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17888503f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[3 /* X17 */] <-0.5154521f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18413536f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.203125f ? 
                     (data[11 /* X34 */] <-0.203125f ? 
                         (data[5 /* X19 */] <0.54464906f ? 
                            1.0f : 
                            0.0f) : 
                         (data[12 /* X35 */] <-0.88793945f ? 
                             (data[3 /* X17 */] <-0.1781942f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16842069f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
                     (data[12 /* X35 */] <-0.65625f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3560626f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.15971339f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.328125f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.06001162f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1328125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.04839227f ? 
            0.0f : 
             (data[7 /* X21 */] <0.13136834f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19652635f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[12 /* X35 */] <0.13476562f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.4328311f ? 
                0.0f : 
                1.0f)) : 
        0.037037037f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (data[4 /* X18 */] <-0.3604815f ? 
             (data[1 /* X12 */] <-0.14754619f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19625336f ? 
             (data[8 /* X23 */] <0.12465522f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.203125f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.15625f ? 
                     (data[11 /* X34 */] <-0.1875f ? 
                         (data[6 /* X20 */] <-0.10637335f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.3036146f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.34315646f ? 
                            1.0f : 
                             (data[10 /* X28 */] <0.16249035f ? 
                                1.0f : 
                                0.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_102_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (data[8 /* X23 */] <0.10029366f ? 
             (data[1 /* X12 */] <-0.29366773f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.119783826f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11766262f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.004189078f ? 
            0.0f : 
             (data[6 /* X20 */] <0.20482092f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22020312f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_09_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_103_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_103_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2481654f ? 
         (data[11 /* X34 */] <-0.17773438f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.2346836f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16570945f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22343825f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22254062f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18161277f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15004973f ? 
                     (data[7 /* X21 */] <0.14323841f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13884847f ? 
             (data[10 /* X28 */] <-0.25057226f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2670279f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19270714f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.002817623f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1474487f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2671875f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.008503307f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.05598027f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.5049204f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[9 /* X27 */] <-0.16195579f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (data[6 /* X20 */] <0.035574913f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17041326f ? 
                    1.0f : 
                     (data[12 /* X35 */] <0.2854158f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[8 /* X23 */] <0.10187558f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08453515f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_103_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.51285005f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <0.22265625f ? 
            0.0f : 
             (data[6 /* X20 */] <0.26214617f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_104_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_104_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[10 /* X28 */] <-0.14761394f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18514185f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.20017421f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.64453125f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.113080814f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16705064f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.12973306f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.35546875f ? 
        0.0f : 
         (data[10 /* X28 */] <-0.4165349f ? 
             (data[9 /* X27 */] <-0.05378917f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.052452385f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.625f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.050621405f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07448541f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1939709f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.01588654f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[9 /* X27 */] <0.20778199f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.24437821f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.113898166f ? 
                     (data[6 /* X20 */] <0.035574913f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.1984731f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23984262f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20226462f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13750203f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X21 */] <0.25118744f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047545847f ? 
             (data[10 /* X28 */] <-0.14687942f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.047849447f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.0872155f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25342864f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.32927704f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_104_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25499916f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <0.22392935f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_105_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_105_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.12714384f ? 
         (data[1 /* X12 */] <-0.23974192f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0234375f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.22265625f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16753143f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21556433f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (data[6 /* X20 */] <-0.5521663f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.44140625f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.039420385f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35546875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[6 /* X20 */] <-0.56361055f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X18 */] <-0.3770677f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.7205726f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3017199f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.083170265f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                 (data[11 /* X34 */] <-0.203125f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.114673376f ? 
                 (data[6 /* X20 */] <0.108563386f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_105_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[6 /* X20 */] <-0.24695672f ? 
            0.0f : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_106_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_106_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[10 /* X28 */] <-0.14300387f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.40107056f ? 
                 (data[3 /* X17 */] <-0.39450115f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.32279673f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20060724f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.7349557f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (data[10 /* X28 */] <-0.37811762f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.74586743f ? 
                 (data[7 /* X21 */] <0.011617377f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[5 /* X19 */] <-0.09991641f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.24280824f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[7 /* X21 */] <0.1316409f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2012201f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.06253934f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.17219473f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.017831381f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.056765992f ? 
             (data[5 /* X19 */] <0.09753139f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23736651f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <0.029750803f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42919505f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012770384f ? 
             (data[1 /* X12 */] <-0.51980823f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.1413247f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[7 /* X21 */] <0.09866253f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.08632971f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.24517897f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19801874f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.4220873f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_106_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[6 /* X20 */] <-0.12684666f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13052717f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.26135474f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_107_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_107_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.12162009f ? 
             (data[1 /* X12 */] <-0.35977036f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17147498f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.4064469f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27441895f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.19921875f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15430138f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10765997f ? 
             (data[8 /* X23 */] <0.1657851f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14754619f ? 
                 (data[6 /* X20 */] <-0.291998f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18751332f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.29893494f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10120837f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1561538f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14459018f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13775276f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.1796875f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.69485295f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45123073f ? 
            0.0f : 
             (data[9 /* X27 */] <0.4755756f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09972461f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48828125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (data[7 /* X21 */] <0.09539195f ? 
             (data[1 /* X12 */] <-0.24941814f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <-0.23016149f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.203125f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17432453f ? 
                         (data[10 /* X28 */] <-0.17681108f ? 
                            0.0f : 
                            1.0f) : 
                         (data[3 /* X17 */] <-0.28698918f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.17188793f ? 
                     (data[3 /* X17 */] <-0.5497962f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_107_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19252378f ? 
             (data[4 /* X18 */] <-0.4220873f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_108_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_108_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[2 /* X15 */] <0.092960976f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.04358854f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12353603f ? 
                     (data[10 /* X28 */] <-0.1030499f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15898523f ? 
                             (data[4 /* X18 */] <-0.5619199f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5091987f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1875f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.111328125f ? 
            0.0f : 
             (data[11 /* X34 */] <0.22241211f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6123183f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16461597f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.24414062f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.023294875f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.20409748f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[2 /* X15 */] <0.1893414f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1555093f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.019280018f ? 
                     (data[10 /* X28 */] <-0.41038814f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.10034027f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19070527f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19679071f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.46875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.037037037f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (data[7 /* X21 */] <0.09157627f ? 
             (data[8 /* X23 */] <0.07150274f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.38412392f ? 
                 (data[4 /* X18 */] <-0.4220873f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_108_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.119783826f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0081014745f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17135528f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.37943712f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.58243173f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.16615555f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27852482f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_09_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_109_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_109_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2481654f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.1296893f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.62468797f ? 
             (data[10 /* X28 */] <-0.1030499f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.73407954f ? 
                     (data[4 /* X18 */] <-0.47421533f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (data[12 /* X35 */] <-0.46679688f ? 
             (data[6 /* X20 */] <-0.32475528f ? 
                 (data[7 /* X21 */] <0.16036834f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0031649654f ? 
             (data[6 /* X20 */] <-0.22102387f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.059438284f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08039999f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (data[2 /* X15 */] <0.24389637f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2798117f ? 
             (data[6 /* X20 */] <-0.19918567f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1640012f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11974833f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23726985f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.022928964f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[12 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (data[9 /* X27 */] <0.12066556f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18856473f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23454455f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <-0.17566155f ? 
                    1.0f : 
                     (data[12 /* X35 */] <0.10784495f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07289421f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[12 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18174878f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.24585436f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.049223788f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23893827f ? 
                     (data[5 /* X19 */] <0.26014727f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23030137f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.45579308f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_109_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0488982f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.103643574f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4000025f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.09811054f ? 
                        1.0f : 
                        0.0f))) : 
             (data[1 /* X12 */] <-0.5267664f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05369261f ? 
            0.0f : 
             (data[7 /* X21 */] <0.17770158f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_09_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_110_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_110_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[0 /* X5 */] <0.13458048f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.52189684f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.121490195f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[2 /* X15 */] <0.14069657f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1896937f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.28653845f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.04589919f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20014119f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.0120689105f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2279845f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19589435f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.20344245f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23898654f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.1723844f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X27 */] <-0.056968514f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.8886719f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03273639f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[11 /* X34 */] <-0.97760963f ? 
            1.0f : 
             (data[5 /* X19 */] <0.18004689f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.030155024f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23984262f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20858812f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12289311f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (data[0 /* X5 */] <0.11520424f ? 
             (data[5 /* X19 */] <0.18594086f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1462882f ? 
                 (data[11 /* X34 */] <-0.97743046f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.265625f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.47110105f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.484375f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13476562f ? 
            0.0f : 
             (data[6 /* X20 */] <0.16660409f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_110_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_111_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_111_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[5 /* X19 */] <0.15205055f ? 
             (data[8 /* X23 */] <0.10124281f ? 
                 (data[4 /* X18 */] <0.2697188f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19172858f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2934047f ? 
                     (data[11 /* X34 */] <0.09375f ? 
                         (data[0 /* X5 */] <0.14218326f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16134867f ? 
                            1.0f : 
                             (data[11 /* X34 */] <0.33421874f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.08893155f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[5 /* X19 */] <-0.03066233f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X21 */] <0.03652149f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24707873f ? 
                 (data[12 /* X35 */] <-0.88333315f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.009153437f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[5 /* X19 */] <-0.03066233f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.88671875f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.375f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22130933f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.018820051f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28762075f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13657656f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.59375f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[4 /* X18 */] <-0.4860626f ? 
             (data[8 /* X23 */] <0.13731056f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12553592f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.66796875f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08562475f ? 
                     (data[9 /* X27 */] <0.13474737f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.17361094f ? 
                             (data[11 /* X34 */] <-0.22f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_111_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.083345965f ? 
            0.0f : 
             (data[8 /* X23 */] <0.0721355f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.16734473f ? 
             (data[8 /* X23 */] <0.13161565f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_112_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_112_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[12 /* X35 */] <-0.46679688f ? 
             (data[9 /* X27 */] <0.20473887f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.32279673f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20058732f ? 
                 (data[12 /* X35 */] <-0.890625f ? 
                     (data[3 /* X17 */] <-0.35866383f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.17773438f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15450434f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13684478f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16563556f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4453125f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24414062f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.044913184f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43382046f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14130694f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.019196268f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[9 /* X27 */] <-0.19999465f ? 
            1.0f : 
             (data[5 /* X19 */] <0.088690445f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.045831513f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.049223788f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25346246f ? 
                     (data[2 /* X15 */] <0.12796707f ? 
                         (data[4 /* X18 */] <-0.43466693f ? 
                             (data[10 /* X28 */] <-0.09999806f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.39630073f ? 
             (data[4 /* X18 */] <-0.29887566f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06640625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_112_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[11 /* X34 */] <-0.8886719f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.41021708f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_113_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_113_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[10 /* X28 */] <-0.30281976f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19932179f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36073488f ? 
                     (data[11 /* X34 */] <-0.203125f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53278023f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (data[10 /* X28 */] <-0.24596219f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.36865374f ? 
                 (data[5 /* X19 */] <-0.11193457f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.28203455f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.05865866f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2890625f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20169577f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.14173993f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.15046035f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[10 /* X28 */] <-0.5379335f ? 
            1.0f : 
            0.0f) : 
         (data[5 /* X19 */] <-0.05865866f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32037702f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2890625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (data[5 /* X19 */] <0.09458441f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.07684649f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.9765625f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.124563575f ? 
            0.0f : 
             (data[9 /* X27 */] <0.3812392f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34956503f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[5 /* X19 */] <0.18888783f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.4189148f ? 
                 (data[12 /* X35 */] <0.265625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15437816f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_113_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[10 /* X28 */] <0.11208688f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17067869f ? 
            0.0f : 
             (data[2 /* X15 */] <0.0970526f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_114_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_114_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07225117f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.17578125f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X23 */] <0.1717964f ? 
             (data[12 /* X35 */] <-0.8890625f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.024018928f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.060569067f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.242023f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.10883396f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[6 /* X20 */] <-0.53494793f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.06749961f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
             (data[5 /* X19 */] <0.0032279643f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.203125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.27473038f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5546875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.734375f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.77734375f ? 
             (data[7 /* X21 */] <0.17988196f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.25378117f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.031480253f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.11945108f ? 
             (data[5 /* X19 */] <0.11816027f ? 
                 (data[12 /* X35 */] <-0.13021035f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.008277171f ? 
             (data[1 /* X12 */] <-0.51980823f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (data[6 /* X20 */] <0.16660409f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_114_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_115_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_115_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[2 /* X15 */] <0.13615032f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.8442192f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.11992131f ? 
                     (data[11 /* X34 */] <0.09375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23116687f ? 
         (data[9 /* X27 */] <0.18191555f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.10931932f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.33021483f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.657458f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (data[9 /* X27 */] <-0.034145195f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17430122f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.46571547f ? 
                     (data[0 /* X5 */] <0.079106025f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[9 /* X27 */] <0.069320515f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44563675f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13318732f ? 
            0.0f : 
             (data[7 /* X21 */] <0.09866253f ? 
                 (data[3 /* X17 */] <-0.09266124f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[5 /* X19 */] <0.14173612f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08198108f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918615f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_115_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20931719f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.22669727f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.076902516f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2702142f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_116_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_116_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[1 /* X12 */] <-0.2884491f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.14607725f ? 
                 (data[8 /* X23 */] <0.11394173f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.38044167f ? 
                         (data[3 /* X17 */] <-0.39007294f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.12864286f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.009153437f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.09044272f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.21712787f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20779622f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.24298275f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27936688f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.32666036f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.24580486f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.25859493f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25816917f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.5363968f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.1316409f ? 
             (data[11 /* X34 */] <0.0234375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23728044f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12528798f ? 
             (data[4 /* X18 */] <-0.35337314f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.061930202f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13657656f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14615206f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17415845f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22005962f ? 
                     (data[9 /* X27 */] <-0.06001162f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.88757324f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[11 /* X34 */] <-0.97657776f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.35686582f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X21 */] <0.09593705f ? 
             (data[7 /* X21 */] <0.08038662f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_116_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20659861f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3364438f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.34130964f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_117_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_117_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16537012f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1657851f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.21369167f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.13524106f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16722812f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14797056f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.23827873f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.24414062f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.05865866f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1891046f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (data[5 /* X19 */] <-0.049817715f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.2421875f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14797056f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.12433007f ? 
                     (data[3 /* X17 */] <-0.35866383f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.28329206f ? 
                         (data[5 /* X19 */] <0.26953086f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.10784583f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.008507748f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.103037275f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.09997728f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.9765625f ? 
                     (data[10 /* X28 */] <-0.09262997f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08444002f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.014641631f ? 
                 (data[5 /* X19 */] <0.11521328f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25346246f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.25166875f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_117_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17333297f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15500449f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23502217f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.24414062f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
                 (data[10 /* X28 */] <0.13052717f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_118_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_118_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14580664f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2031184f ? 
                 (data[7 /* X21 */] <0.09590005f ? 
                     (data[9 /* X27 */] <0.40520588f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.16072297f ? 
                 (data[11 /* X34 */] <0.003818789f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25694278f ? 
                 (data[7 /* X21 */] <0.03703039f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.3641162f ? 
                         (data[5 /* X19 */] <0.52189684f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.88559866f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.13059907f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10927625f ? 
             (data[9 /* X27 */] <-0.08131339f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17433879f ? 
                 (data[12 /* X35 */] <-0.8003082f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19636126f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[11 /* X34 */] <-0.6660156f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4756261f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.17700353f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17888503f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.49030304f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19213177f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (data[7 /* X21 */] <0.09539195f ? 
             (data[0 /* X5 */] <0.16616641f ? 
                 (data[9 /* X27 */] <0.17126468f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.20321733f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.56155723f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46295312f ? 
                     (data[1 /* X12 */] <-0.41867074f ? 
                         (data[4 /* X18 */] <-0.12353603f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.2430538f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_118_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.5719945f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35993746f ? 
             (data[0 /* X5 */] <0.13766533f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_119_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_119_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[3 /* X17 */] <-0.7528744f ? 
             (data[7 /* X21 */] <0.16516435f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.20447151f ? 
             (data[7 /* X21 */] <0.14935654f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1407482f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.033397317f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (data[10 /* X28 */] <-0.24596219f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.054821838f ? 
                 (data[7 /* X21 */] <0.16025849f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.13643847f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.20248562f ? 
                             (data[5 /* X19 */] <-0.041934535f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (data[5 /* X19 */] <-0.02972125f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.011447034f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16079853f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.18595602f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14146718f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.022928964f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[3 /* X17 */] <-0.11377544f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1553526f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18976964f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17773438f ? 
            0.0f : 
             (data[12 /* X35 */] <0.37848282f ? 
                 (data[8 /* X23 */] <0.14806761f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031648245f ? 
             (data[1 /* X12 */] <-0.51980823f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24513622f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07549816f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.3225702f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17773438f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_119_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25499916f ? 
             (data[1 /* X12 */] <-0.5024128f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20428835f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_120_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_120_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10765997f ? 
             (data[11 /* X34 */] <-0.51171875f ? 
                 (data[12 /* X35 */] <-0.5546875f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12512356f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X21 */] <0.053419493f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.111328125f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.2136488f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6044123f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97867906f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.24414062f ? 
            0.0f : 
             (data[2 /* X15 */] <0.19525152f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.32475528f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16673426f ? 
         (data[0 /* X5 */] <0.09396999f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.08939056f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.009800321f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13913064f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06815706f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28762075f ? 
        0.0f : 
         (data[5 /* X19 */] <0.11521328f ? 
             (data[11 /* X34 */] <-0.3984375f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3030928f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.91015625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10765997f ? 
             (data[11 /* X34 */] <-0.19921875f ? 
                 (data[6 /* X20 */] <-0.07361606f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17200583f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.45022655f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_120_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
        0.028169014f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (data[0 /* X5 */] <0.15979613f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3030928f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_121_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_121_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (data[3 /* X17 */] <-0.93206096f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.5567861f ? 
                 (data[3 /* X17 */] <-0.023727583f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.5642546f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.1368571f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16732895f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.22648342f ? 
                     (data[8 /* X23 */] <0.19348456f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.46875f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11806761f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (data[2 /* X15 */] <0.14115119f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.20139813f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18533294f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26596734f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[9 /* X27 */] <-0.2152102f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X28 */] <-0.30281976f ? 
             (data[6 /* X20 */] <-0.38208055f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5546875f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2798117f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.014544552f ? 
             (data[6 /* X20 */] <-0.19372612f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.1328125f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4588385f ? 
            0.0f : 
             (data[0 /* X5 */] <0.11998194f ? 
                 (data[0 /* X5 */] <0.114782274f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.24674767f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.035574913f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.10888094f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.12821154f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.1368571f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
                 (data[12 /* X35 */] <-0.46875f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08497599f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X5 */] <0.17895153f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15004973f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23923919f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_121_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[3 /* X17 */] <-0.35717058f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.27561936f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11208688f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1769662f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_122_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_122_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21531452f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.046652727f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.3225702f ? 
                 (data[2 /* X15 */] <0.12069308f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.38481033f ? 
                     (data[10 /* X28 */] <-0.33662698f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.076390624f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.164043f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12493213f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3984375f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18070354f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.3069853f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17067869f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.28926823f ? 
             (data[12 /* X35 */] <-0.7578125f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1660382f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.17752318f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.9765625f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.09214383f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.29763326f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (data[7 /* X21 */] <0.09593705f ? 
             (data[11 /* X34 */] <-0.19921875f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.01373672f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_122_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[3 /* X17 */] <-0.33925194f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.099841475f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.07341211f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.15670839f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_123_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_123_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[10 /* X28 */] <-0.14915064f ? 
                 (data[5 /* X19 */] <0.2889403f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.011447034f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.2931711f ? 
                    0.0f : 
                    1.0f))) : 
         (data[0 /* X5 */] <0.078309745f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19118205f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06128144f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.30143854f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[8 /* X23 */] <0.023597473f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.9765625f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.013892346f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.2311511f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2649617f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5454727f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[8 /* X23 */] <0.17401108f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (data[7 /* X21 */] <0.124282084f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.2421875f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.13492991f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08840174f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.114316165f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[10 /* X28 */] <-0.31818667f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32352522f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[11 /* X34 */] <-0.48828125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.22779202f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (data[11 /* X34 */] <-0.62109375f ? 
             (data[4 /* X18 */] <-0.3604815f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11208688f ? 
                 (data[11 /* X34 */] <-0.9765625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_123_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[8 /* X23 */] <0.06897166f ? 
             (data[10 /* X28 */] <-0.18603122f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25346246f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.10114422f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15656045f ? 
                 (data[1 /* X12 */] <-0.3667285f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_124_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_124_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[1 /* X12 */] <-0.33019814f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.30263066f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18751332f ? 
                     (data[11 /* X34 */] <-0.546875f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5212123f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24213663f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5942569f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.106427f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.17578125f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.14499576f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25630412f ? 
                 (data[11 /* X34 */] <-0.3984375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[1 /* X12 */] <-0.12667167f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35546875f ? 
                 (data[7 /* X21 */] <0.17116041f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.033707865f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.17752318f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X27 */] <0.014544552f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2421875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48358604f ? 
                 (data[11 /* X34 */] <-0.671875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[1 /* X12 */] <-0.39630073f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.24675304f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.067798965f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17427191f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3828125f ? 
                     (data[7 /* X21 */] <0.08696584f ? 
                         (data[5 /* X19 */] <0.5440161f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.09883291f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51958823f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_124_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[1 /* X12 */] <-0.51285005f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <8.505609E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_125_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_125_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08402841f ? 
         (data[2 /* X15 */] <0.109327465f ? 
             (data[6 /* X20 */] <-0.11176759f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.0234375f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2890625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.046652727f ? 
                     (data[6 /* X20 */] <-0.29637524f ? 
                         (data[7 /* X21 */] <0.10495151f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17678353f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26766068f ? 
             (data[7 /* X21 */] <0.044152845f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1440671f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19098832f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[3 /* X17 */] <-0.35866383f ? 
            1.0f : 
             (data[8 /* X23 */] <0.17211278f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22363174f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.034145195f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.8723321f ? 
             (data[7 /* X21 */] <0.21367797f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.88671875f ? 
                 (data[1 /* X12 */] <0.029887134f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
             (data[3 /* X17 */] <0.04749251f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[9 /* X27 */] <0.1971311f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12847564f ? 
                 (data[12 /* X35 */] <-0.1796875f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.02272308f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.1554669f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[11 /* X34 */] <-0.203125f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12512201f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.09207809f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_125_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15807809f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.40625f ? 
                     (data[1 /* X12 */] <-0.4363102f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.7777778f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_126_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_126_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[5 /* X19 */] <0.28171778f ? 
             (data[4 /* X18 */] <-0.55951566f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.01604715f ? 
                     (data[12 /* X35 */] <-0.0625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0055335416f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16352907f ? 
                     (data[9 /* X27 */] <0.31653577f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1875f ? 
                             (data[3 /* X17 */] <-0.56413114f ? 
                                 (data[10 /* X28 */] <-0.073545426f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48653305f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.21010478f ? 
                 (data[7 /* X21 */] <0.14717616f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_09_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.058911983f ? 
                 (data[6 /* X20 */] <-0.46124402f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1896937f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.09266647f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.19371468f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.009012626f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.242023f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[5 /* X19 */] <-0.05865866f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.021649474f ? 
                 (data[1 /* X12 */] <-0.06709575f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20935577f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.13300364f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28762075f ? 
        0.0f : 
         (data[9 /* X27 */] <-0.168042f ? 
             (data[10 /* X28 */] <-0.47492918f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.80078125f ? 
                 (data[6 /* X20 */] <0.05195356f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <-0.04001975f ? 
                     (data[7 /* X21 */] <0.13082325f ? 
                         (data[5 /* X19 */] <-0.07504572f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48653305f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11227004f ? 
                 (data[1 /* X12 */] <-0.37368667f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.111832894f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17578125f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.174431f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_126_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.39222962f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09527561f ? 
                0.0f : 
                1.0f)) : 
        0.011111111f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_127_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_127_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (data[0 /* X5 */] <0.081494875f ? 
            1.0f : 
             (data[2 /* X15 */] <0.09068785f ? 
                 (data[12 /* X35 */] <-0.0234375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2890625f ? 
             (data[0 /* X5 */] <0.10087112f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17694817f ? 
                     (data[6 /* X20 */] <-0.15004973f ? 
                         (data[4 /* X18 */] <-0.14631376f ? 
                             (data[4 /* X18 */] <-0.3397075f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19172858f ? 
             (data[8 /* X23 */] <0.023591602f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16757886f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14978905f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.14552364f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.17373769f ? 
                 (data[3 /* X17 */] <-0.2750434f ? 
                     (data[1 /* X12 */] <-0.06291329f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[8 /* X23 */] <0.16483596f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06616931f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24048625f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.022928964f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[8 /* X23 */] <0.089852996f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.28745285f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.11857747f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21861312f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.10555168f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[11 /* X34 */] <-0.9765625f ? 
             (data[9 /* X27 */] <0.3812392f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.026587406f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45123073f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
        0.028571429f : 
         (data[12 /* X35 */] <-0.04296875f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13766699f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.099192716f ? 
                     (data[8 /* X23 */] <0.10072226f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.51980823f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.011655187f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_127_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (data[8 /* X23 */] <0.064858675f ? 
             (data[4 /* X18 */] <-0.03602386f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.88671875f ? 
                 (data[2 /* X15 */] <0.13160408f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.24414062f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.31106317f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_128_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_128_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[7 /* X21 */] <0.09784489f ? 
             (data[10 /* X28 */] <-0.14300387f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24843964f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.52189684f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.53125f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16546872f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26666656f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.2136488f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
        0.039473683f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (data[8 /* X23 */] <0.025943471f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19999975f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.003985662f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20252551f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[6 /* X20 */] <-0.63594955f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.12973306f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16451958f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.17433879f ? 
                 (data[11 /* X34 */] <-0.2421875f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.03913428f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[6 /* X20 */] <0.017831381f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23984262f ? 
             (data[1 /* X12 */] <-0.33889583f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23538955f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.36091748f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.1597908f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.083170265f ? 
             (data[10 /* X28 */] <-0.14607725f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.5175796f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17773438f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.492427f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.026290894f ? 
                         (data[10 /* X28 */] <-0.1030499f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[11 /* X34 */] <-0.31013107f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_128_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[6 /* X20 */] <-0.12684666f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19296429f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05369261f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_129_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_129_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[12 /* X35 */] <-0.6015625f ? 
             (data[2 /* X15 */] <0.14797056f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16537012f ? 
             (data[10 /* X28 */] <-0.31511328f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18772809f ? 
                 (data[7 /* X21 */] <0.14935654f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.35506725f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2694179f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16537109f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16576827f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14668457f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.24414062f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23330146f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19589435f ? 
             (data[8 /* X23 */] <0.16768341f ? 
                 (data[4 /* X18 */] <-0.37123924f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X21 */] <0.14717616f ? 
                1.0f : 
                0.0f)) : 
        0.033707865f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[6 /* X20 */] <0.026020704f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1585721f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16262127f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.17770158f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.14184378f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012770384f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
                 (data[1 /* X12 */] <-0.58243173f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.174431f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.053875778f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.24448776f ? 
             (data[4 /* X18 */] <-0.1353833f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_129_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.083345965f ? 
            0.0f : 
             (data[2 /* X15 */] <0.087050855f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.12927192f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_130_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_130_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[3 /* X17 */] <-0.43481812f ? 
             (data[12 /* X35 */] <-0.0234375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.2935996f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
        0.035714287f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14300387f ? 
             (data[12 /* X35 */] <-0.953125f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.08903157f ? 
            0.0f : 
            1.0f) : 
        0.5555556f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.007175522f ? 
             (data[12 /* X35 */] <0.30859375f ? 
                 (data[1 /* X12 */] <-0.30731574f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23984262f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.056765992f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.1470556f ? 
                     (data[9 /* X27 */] <-0.03566675f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.31454223f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.013148409f ? 
             (data[1 /* X12 */] <-0.5174009f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.29430836f ? 
                     (data[9 /* X27 */] <-0.056499075f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.77734375f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.20321153f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20573275f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.33477226f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.39839277f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_130_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[1 /* X12 */] <-0.4641429f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11208688f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_131_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_131_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17773438f ? 
             (data[0 /* X5 */] <0.1422779f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1657851f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.26845637f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16433704f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.26757812f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4421356f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67219293f ? 
             (data[9 /* X27 */] <0.028238544f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1796875f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.09709278f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[8 /* X23 */] <0.1619885f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.15966053f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[6 /* X20 */] <-0.56361055f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.31511328f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.1585721f ? 
                 (data[8 /* X23 */] <0.18603367f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.083345965f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19377093f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <0.076902516f ? 
             (data[8 /* X23 */] <0.2031184f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2890625f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.14363988f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.10741603f ? 
             (data[8 /* X23 */] <0.10124281f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0859375f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.112008594f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2532268f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_131_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
            1.0f : 
             (data[3 /* X17 */] <0.25953f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_132_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_132_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[10 /* X28 */] <-0.106123276f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2920322f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.046652727f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.2609644f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.46679688f ? 
             (data[8 /* X23 */] <0.1657851f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.28653845f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03612791f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18805842f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3429581f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.171875f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.5555556f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[9 /* X27 */] <-0.16956356f ? 
             (data[10 /* X28 */] <-0.3489205f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06903857f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14459018f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[11 /* X34 */] <-0.77734375f ? 
             (data[10 /* X28 */] <-0.1552974f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.1984731f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1010895f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10221093f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1428207f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08453515f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.78611064f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_132_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[11 /* X34 */] <-0.5332031f ? 
             (data[10 /* X28 */] <0.2319488f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_133_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_133_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1328125f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17021447f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.53125f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.2086349f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.46590415f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.06640625f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.26931414f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.27279323f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14579351f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (data[10 /* X28 */] <-0.39194787f ? 
             (data[9 /* X27 */] <-0.053925406f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11103999f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39036855f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (data[11 /* X34 */] <0.2890625f ? 
             (data[1 /* X12 */] <-0.001424628f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2629906f ? 
             (data[10 /* X28 */] <-0.21369167f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15667413f ? 
                     (data[1 /* X12 */] <-0.0049037123f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.46340317f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48828125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.51980823f ? 
                0.0f : 
                1.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_133_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.27036607f ? 
             (data[1 /* X12 */] <-0.51285005f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40710562f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_134_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_134_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16124362f ? 
                 (data[12 /* X35 */] <-0.171875f ? 
                     (data[9 /* X27 */] <0.13474737f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.00865846f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.34802487f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20651712f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.22648342f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.17430778f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.2868797f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16184245f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4451445f ? 
                     (data[9 /* X27 */] <0.17550775f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15554929f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.65303755f ? 
             (data[7 /* X21 */] <0.17770158f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24613127f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
        0.75f : 
         (data[6 /* X20 */] <-0.19116762f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.18449308f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.49383426f ? 
                     (data[4 /* X18 */] <-0.24194896f ? 
                         (data[1 /* X12 */] <-0.1440671f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22185507f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.240343f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16775899f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.78125f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.5996094f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.07339357f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
         (data[11 /* X34 */] <-0.24414062f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11642766f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19907948f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7561819f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_134_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[11 /* X34 */] <-0.40039062f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08562475f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20876047f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.22841807f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14289449f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.17801143f ? 
            0.0f : 
             (data[0 /* X5 */] <0.11838937f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_09_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_135_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_135_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.3336772f ? 
        0.0f : 
         (data[4 /* X18 */] <-0.44104296f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19921875f ? 
                 (data[10 /* X28 */] <-0.31818667f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1328125f ? 
                 (data[8 /* X23 */] <0.118960306f ? 
                     (data[12 /* X35 */] <-0.546875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18033706f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15945743f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.16149908f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[7 /* X21 */] <0.042245008f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26766068f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16658944f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08497599f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20013762f ? 
                            0.0f : 
                             (data[12 /* X35 */] <-0.1f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08453515f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[3 /* X17 */] <-0.5020131f ? 
                    0.0f : 
                    1.0f))) : 
         (data[0 /* X5 */] <0.23607817f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06616931f ? 
                 (data[12 /* X35 */] <-0.73333323f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20807682f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25162497f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.40039062f ? 
             (data[7 /* X21 */] <0.12973306f ? 
                 (data[11 /* X34 */] <0.0859375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11974833f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24491417f ? 
             (data[11 /* X34 */] <-0.734375f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1300682f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2995632f ? 
                 (data[4 /* X18 */] <-0.35574257f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14616075f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22798926f ? 
                            1.0f : 
                             (data[10 /* X28 */] <0.050309137f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13656802f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                 (data[11 /* X34 */] <-0.203125f ? 
                     (data[11 /* X34 */] <-0.3760764f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12438041f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19707002f ? 
                         (data[4 /* X18 */] <-0.2672906f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2765243f ? 
                                1.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08535715f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_135_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[4 /* X18 */] <-0.08207057f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30859375f ? 
                 (data[10 /* X28 */] <0.4563057f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_136_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_136_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[12 /* X35 */] <-0.5332031f ? 
             (data[4 /* X18 */] <-0.047713473f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X21 */] <0.1458134f ? 
             (data[5 /* X19 */] <0.091637425f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.14546303f ? 
                 (data[10 /* X28 */] <-0.27515933f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31054688f ? 
             (data[9 /* X27 */] <-0.026537422f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.14428024f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[7 /* X21 */] <0.011447034f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82838297f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.23344f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25816917f ? 
            0.0f : 
             (data[9 /* X27 */] <0.061712746f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.11038212f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23014559f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.016548375f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48828125f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.05106013f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.62109375f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.36865374f ? 
                 (data[2 /* X15 */] <0.111600585f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.6456584f ? 
                     (data[9 /* X27 */] <0.51105475f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.29497918f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.75626326f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[0 /* X5 */] <0.14917903f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14067703f ? 
                 (data[2 /* X15 */] <0.10796359f ? 
                     (data[6 /* X20 */] <-0.07361606f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_136_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[12 /* X35 */] <0.111328125f ? 
             (data[9 /* X27 */] <0.17430778f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3491233f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_137_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_137_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17210984f ? 
             (data[4 /* X18 */] <-0.3216354f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1017794f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3450779f ? 
                         (data[9 /* X27 */] <0.26554492f ? 
                             (data[1 /* X12 */] <-0.2657125f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.047968525f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.46875f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.13210216f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2553978f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1911599f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.28926823f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.18740065f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_09_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17461771f ? 
             (data[6 /* X20 */] <-0.4648867f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.19485827f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2648091f ? 
            0.0f : 
            1.0f) : 
         (data[8 /* X23 */] <0.118960306f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[9 /* X27 */] <-0.113266036f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.21983843f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.25192046f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12565747f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14604585f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15629359f ? 
                 (data[10 /* X28 */] <-0.1030499f ? 
                     (data[7 /* X21 */] <0.09593705f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.36194476f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.21875f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.30826095f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.28613824f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.46392423f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[6 /* X20 */] <-0.079075605f ? 
                 (data[2 /* X15 */] <0.14104034f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_137_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[4 /* X18 */] <-0.09510257f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4563057f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.33857986f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_138_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_138_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[10 /* X28 */] <-0.14915064f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1712004f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.16546872f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
                 (data[10 /* X28 */] <-0.29438508f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4453125f ? 
                 (data[3 /* X17 */] <-1.0097085f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (data[10 /* X28 */] <-0.4165349f ? 
             (data[10 /* X28 */] <-0.5391552f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17988196f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.061605643f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26755992f ? 
             (data[8 /* X23 */] <0.023935318f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.6274296f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06903857f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31054688f ? 
             (data[10 /* X28 */] <-0.21369167f ? 
                 (data[12 /* X35 */] <-0.890625f ? 
                     (data[3 /* X17 */] <-0.2272603f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.025927205f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.046652727f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16189377f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (data[4 /* X18 */] <-0.31546184f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13937798f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.01373672f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23615228f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.24448776f ? 
             (data[7 /* X21 */] <0.10629389f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7930192f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_138_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25499916f ? 
             (data[8 /* X23 */] <0.065175064f ? 
                 (data[10 /* X28 */] <-0.18751857f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.11812394f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_139_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_139_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[0 /* X5 */] <0.14254332f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.087440625f ? 
                 (data[10 /* X28 */] <-0.34373417f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.48774803f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35689434f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17794088f ? 
                     (data[2 /* X15 */] <0.17682333f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5942569f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.215255f ? 
             (data[6 /* X20 */] <-0.50219065f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.039420385f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5454727f ? 
                 (data[4 /* X18 */] <0.022000322f ? 
                     (data[5 /* X19 */] <0.0682634f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3089077f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X21 */] <0.12973306f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11974833f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.2259852f ? 
        0.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18706828f ? 
             (data[9 /* X27 */] <-0.16956356f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <0.035574913f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.114058204f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06560243f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5973f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42689848f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7061157f ? 
                             (data[6 /* X20 */] <-0.14155246f ? 
                                 (data[2 /* X15 */] <0.14833425f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.4768734f ? 
                                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f) : 
                                    1.0f) : 
                                1.0f) : 
                             (data[6 /* X20 */] <-0.077268526f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_139_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_140_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_140_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.12714384f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26757812f ? 
             (data[11 /* X34 */] <-0.19921875f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.2890625f ? 
             (data[5 /* X19 */] <0.15647103f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.24442549f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.8833618f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.3029171f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (data[12 /* X35 */] <-0.9765625f ? 
            1.0f : 
             (data[8 /* X23 */] <0.2012201f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.096969426f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.35323462f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[7 /* X21 */] <0.011447034f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6957688f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06903857f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.578125f ? 
             (data[11 /* X34 */] <-0.2421875f ? 
                 (data[4 /* X18 */] <-0.077852644f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.4661758f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <-0.21369167f ? 
                     (data[6 /* X20 */] <-0.22029343f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.08840174f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[10 /* X28 */] <0.13360056f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.59913325f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[4 /* X18 */] <-0.31546184f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.109375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.04296875f ? 
             (data[11 /* X34 */] <-0.19921875f ? 
                 (data[3 /* X17 */] <-0.1406533f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.08848107f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13052717f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04649401f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_140_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.27036607f ? 
             (data[8 /* X23 */] <0.049355872f ? 
                 (data[4 /* X18 */] <-0.03349675f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.04296875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_141_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_141_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.13476562f ? 
             (data[10 /* X28 */] <-0.2935996f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.011992131f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12469015f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.45922852f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.05905262f ? 
                                1.0f : 
                                0.0f))))) : 
            0.0f) : 
         (data[0 /* X5 */] <0.078309745f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[8 /* X23 */] <0.025485272f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26968333f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.09946883f ? 
                    0.0f : 
                    1.0f))) : 
         (data[8 /* X23 */] <0.21832089f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.061712746f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2890625f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19921875f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.8723321f ? 
             (data[0 /* X5 */] <0.08122945f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.2935996f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.07859432f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[9 /* X27 */] <-0.009300313f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02716858f ? 
                 (data[1 /* X12 */] <-0.29714683f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X27 */] <-0.09841755f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.49023438f ? 
            0.0f : 
             (data[0 /* X5 */] <0.14493217f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X5 */] <0.13245706f ? 
             (data[10 /* X28 */] <-0.11227004f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046875f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <0.22331849f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.105748795f ? 
                     (data[0 /* X5 */] <0.18754373f ? 
                         (data[2 /* X15 */] <0.13524106f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_141_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.029573848f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2319488f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23548184f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_142_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_142_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16515234f ? 
             (data[8 /* X23 */] <0.02548249f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.229803f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.55514145f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.2832821f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
             (data[8 /* X23 */] <0.02567405f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.46124402f ? 
                     (data[10 /* X28 */] <-0.40008333f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.84375f ? 
                1.0f : 
                 (data[11 /* X34 */] <0.1796875f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.21297275f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[1 /* X12 */] <-0.19625336f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16768341f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2798117f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.022928964f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.18826658f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17537886f ? 
             (data[2 /* X15 */] <0.14524281f ? 
                 (data[6 /* X20 */] <0.19390182f ? 
                     (data[1 /* X12 */] <-0.2906824f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.037037037f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073777474f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2481654f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05195356f ? 
                     (data[1 /* X12 */] <-0.42239386f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_142_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[1 /* X12 */] <-0.5285059f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_143_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_143_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[3 /* X17 */] <-0.40047404f ? 
             (data[10 /* X28 */] <-0.32060897f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <-0.3391564f ? 
                 (data[0 /* X5 */] <0.13219163f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17352585f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.2877229f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7335762f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06313343f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.14978905f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.2957316f ? 
                                0.0f : 
                                 (data[12 /* X35 */] <-0.69666725f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f))) : 
         (data[10 /* X28 */] <-0.06803014f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18740065f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_09_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[5 /* X19 */] <-0.015927419f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36937276f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13710399f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[5 /* X19 */] <-0.015927419f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.35273775f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.2131124f ? 
             (data[4 /* X18 */] <-0.2870284f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[5 /* X19 */] <0.10784583f ? 
             (data[7 /* X21 */] <0.15480751f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06560243f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08088584f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[5 /* X19 */] <0.23161907f ? 
             (data[4 /* X18 */] <-0.40550113f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012770384f ? 
             (data[3 /* X17 */] <-0.23920608f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.11945108f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.13161565f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.42759338f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.098800994f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.10794013f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_143_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[10 /* X28 */] <-0.2825689f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.2913608f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1747934f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_144_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_144_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18315381f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.30087316f ? 
                 (data[12 /* X35 */] <-0.0234375f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20277603f ? 
                     (data[11 /* X34 */] <-0.5f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[0 /* X5 */] <0.06530377f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.046875f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.16705064f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.35286343f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18888783f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20386623f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.192178f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23862825f ? 
             (data[7 /* X21 */] <0.03652149f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10927625f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22792289f ? 
                        0.0f : 
                        1.0f))) : 
             (data[7 /* X21 */] <0.053419493f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (data[0 /* X5 */] <0.16112328f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.1006057f ? 
             (data[6 /* X20 */] <-0.18212858f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.5078125f ? 
                     (data[7 /* X21 */] <0.18031067f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.1858597f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25127506f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
         (data[6 /* X20 */] <-0.1819593f ? 
             (data[2 /* X15 */] <0.1634278f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.18295784f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23916693f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.87553465f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.109404765f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.47119305f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.11493881f ? 
             (data[0 /* X5 */] <0.104258955f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_144_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05346398f ? 
             (data[6 /* X20 */] <-0.16795605f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16722812f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.33854297f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.34873733f ? 
                 (data[10 /* X28 */] <-0.25430438f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.7777778f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_145_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_145_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.48828125f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2810789f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26065877f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.33398438f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19430178f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.10680284f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[12 /* X35 */] <-0.7109375f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2556381f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.33398438f ? 
             (data[1 /* X12 */] <-0.05460978f ? 
                 (data[4 /* X18 */] <-0.19461967f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.013148409f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19616076f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.35281217f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.1395448f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
             (data[6 /* X20 */] <-0.14731996f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15312976f ? 
                     (data[2 /* X15 */] <0.1349181f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_145_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
        0.011111111f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_146_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_146_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1110158f ? 
             (data[6 /* X20 */] <-0.28926823f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.12864286f ? 
                 (data[5 /* X19 */] <0.005011553f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (data[1 /* X12 */] <-0.34191626f ? 
             (data[6 /* X20 */] <-0.24286206f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25720823f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2278505f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3515625f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.3534609f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <0.1328125f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14214666f ? 
             (data[7 /* X21 */] <0.13136834f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24260236f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.013148409f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.23211867f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6792779f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012770384f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_146_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[4 /* X18 */] <-0.09510257f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3153768f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_147_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_147_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19932179f ? 
             (data[5 /* X19 */] <-0.049817715f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.32433343f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4652797f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.05555625f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2107116f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.2421875f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.215255f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09442509f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[8 /* X23 */] <0.16483596f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13993049f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31054688f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2410171f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.38580108f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16189377f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2031184f ? 
             (data[10 /* X28 */] <-0.24442549f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.84375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (data[7 /* X21 */] <0.09539195f ? 
             (data[10 /* X28 */] <-0.18603122f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <0.13142169f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04534402f ? 
                 (data[11 /* X34 */] <-0.8444447f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_147_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (data[8 /* X23 */] <0.064858675f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39483806f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33203125f ? 
             (data[0 /* X5 */] <0.11892023f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_148_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_148_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19932179f ? 
             (data[10 /* X28 */] <-0.34124303f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.114599966f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0625f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[8 /* X23 */] <0.10187558f ? 
             (data[9 /* X27 */] <0.32646325f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[8 /* X23 */] <0.025485272f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25619552f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07140802f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.14083359f ? 
                     (data[9 /* X27 */] <-0.010379735f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.03125f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.16943447f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[5 /* X19 */] <-0.30325818f ? 
            1.0f : 
            0.0f) : 
         (data[8 /* X23 */] <0.10187558f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01454111f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.06001162f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.2259852f ? 
        0.0f : 
         (data[5 /* X19 */] <-0.035082802f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1588002f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.10777225f ? 
                     (data[9 /* X27 */] <0.10540223f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X19 */] <0.092763446f ? 
                         (data[11 /* X34 */] <-0.625f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (data[1 /* X12 */] <-0.41369617f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
                 (data[9 /* X27 */] <0.067798965f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.44119105f ? 
                         (data[11 /* X34 */] <-0.53125f ? 
                            1.0f : 
                            0.0f) : 
                         (data[2 /* X15 */] <0.113419086f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_148_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.26235598f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_149_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_149_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[7 /* X21 */] <0.09784489f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13640086f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.16070005f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[8 /* X23 */] <0.16515234f ? 
            1.0f : 
             (data[8 /* X23 */] <0.1766299f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17176427f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24709573f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19318722f ? 
                 (data[6 /* X20 */] <-0.46124402f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.51434153f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.14501081f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.2259852f ? 
                         (data[9 /* X27 */] <0.13474737f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[6 /* X20 */] <-0.4639738f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[11 /* X34 */] <-0.19921875f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17570266f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17679064f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.13193616f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.18826658f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2521859f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16107613f ? 
             (data[6 /* X20 */] <0.0055473973f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07379176f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22485246f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06815651f ? 
                 (data[5 /* X19 */] <0.52189684f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.13993049f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.571497f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.15376252f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15167902f ? 
                 (data[6 /* X20 */] <-0.251389f ? 
                     (data[9 /* X27 */] <0.29298905f ? 
                         (data[11 /* X34 */] <-0.05029297f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_149_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24414062f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17415845f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06602035f ? 
                 (data[8 /* X23 */] <0.072674334f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.10637335f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6044123f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_150_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_150_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[12 /* X35 */] <-0.24414062f ? 
             (data[6 /* X20 */] <-0.16096884f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5277908f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.13476562f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.11971351f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
        0.035714287f : 
         (data[11 /* X34 */] <-0.17773438f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.1353833f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (data[1 /* X12 */] <-0.15276481f ? 
            0.0f : 
            1.0f) : 
         (data[3 /* X17 */] <-0.8723321f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.19918567f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.011861882f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.18004689f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[11 /* X34 */] <-0.734375f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02716858f ? 
                 (data[12 /* X35 */] <0.671875f ? 
                     (data[1 /* X12 */] <-0.42503467f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23602231f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.26690674f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[11 /* X34 */] <-0.7325516f ? 
                 (data[6 /* X20 */] <0.019196268f ? 
                     (data[5 /* X19 */] <0.32150203f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.39426994f ? 
                     (data[12 /* X35 */] <0.12222359f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_150_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[1 /* X12 */] <-0.5285059f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17773438f ? 
             (data[4 /* X18 */] <-0.0034643742f ? 
                 (data[12 /* X35 */] <0.359375f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_151_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_151_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19172858f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33254945f ? 
                 (data[10 /* X28 */] <-0.29974636f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.09593705f ? 
                         (data[2 /* X15 */] <0.16429605f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19172858f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1907839f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.7739584f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[9 /* X27 */] <0.12561804f ? 
                 (data[2 /* X15 */] <0.16979255f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (data[6 /* X20 */] <-0.49946085f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.017408093f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.2935996f ? 
                 (data[7 /* X21 */] <0.18533294f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.112450324f ? 
                     (data[12 /* X35 */] <-0.84340245f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.08088584f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.13052717f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46679688f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.40036908f ? 
                 (data[3 /* X17 */] <-0.20336875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09510257f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
                 (data[10 /* X28 */] <-0.17066431f ? 
                     (data[6 /* X20 */] <0.01373672f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.107802555f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.12381088f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[7 /* X21 */] <0.104941346f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.01373672f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_151_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[8 /* X23 */] <0.064858675f ? 
             (data[9 /* X27 */] <0.5090498f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20931719f ? 
                 (data[2 /* X15 */] <0.12069308f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.117619224f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.14546765f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.22054091f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X27 */] <0.35993746f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_09_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_152_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_152_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (data[6 /* X20 */] <-0.15004973f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1580366f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20613144f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1555093f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.13671875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[8 /* X23 */] <0.023597473f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26968333f ? 
                 (data[6 /* X20 */] <-0.46298036f ? 
                     (data[3 /* X17 */] <-0.20425418f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17461771f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06815706f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17342953f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.875f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
         (data[12 /* X35 */] <-0.5546875f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1555093f ? 
                 (data[1 /* X12 */] <-0.07448541f ? 
                     (data[6 /* X20 */] <-0.51346236f ? 
                        1.0f : 
                        0.0f) : 
                     (data[5 /* X19 */] <0.15252405f ? 
                         (data[2 /* X15 */] <0.15288587f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3220255f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[5 /* X19 */] <-0.07044659f ? 
             (data[6 /* X20 */] <-0.19372612f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06560243f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.54416186f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.31054688f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.114562675f ? 
                 (data[8 /* X23 */] <0.15634905f ? 
                     (data[12 /* X35 */] <-0.62117004f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08562475f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09527561f ? 
                 (data[5 /* X19 */] <0.16796923f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X17 */] <0.2768887f ? 
                     (data[2 /* X15 */] <0.15766653f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.5642546f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_152_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[8 /* X23 */] <0.11484732f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13930634f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.29899815f ? 
             (data[1 /* X12 */] <-0.5302455f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_153_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_153_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[10 /* X28 */] <-0.14300387f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17443028f ? 
                 (data[12 /* X35 */] <-0.171875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17960942f ? 
             (data[10 /* X28 */] <-0.3304802f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82838297f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.07787012f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.35546875f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.41755864f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.19046304f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.328125f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.22265625f ? 
         (data[10 /* X28 */] <-0.21215497f ? 
             (data[11 /* X34 */] <0.13430023f ? 
                 (data[12 /* X35 */] <-0.9765625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X21 */] <0.124554634f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.53494793f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.28465894f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[10 /* X28 */] <-0.11380673f ? 
            1.0f : 
             (data[8 /* X23 */] <0.10028064f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.05318803f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23984262f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12838724f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.12110725f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.206915f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12284372f ? 
             (data[11 /* X34 */] <-0.9777489f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.515625f ? 
                     (data[5 /* X19 */] <0.20362274f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08453515f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f) : 
         (data[7 /* X21 */] <0.09729979f ? 
             (data[1 /* X12 */] <-0.17885794f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.63388216f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.08984375f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.21574003f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_153_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31339344f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X21 */] <0.19487213f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.08984375f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3667285f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_154_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_154_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[10 /* X28 */] <-0.20423141f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.24206531f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.45116925f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.38255537f ? 
                    1.0f : 
                    0.0f))) : 
        0.04347826f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.46436444f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.7109375f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24753335f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11145185f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3781961f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.657458f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[10 /* X28 */] <-0.5379335f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1368418f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2012201f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2362394f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04239935f ? 
            0.0f : 
            1.0f) : 
        0.029411765f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19378194f ? 
            0.0f : 
             (data[8 /* X23 */] <0.14300548f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.2810163f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.53125f ? 
                 (data[8 /* X23 */] <0.118960306f ? 
                     (data[9 /* X27 */] <0.34147918f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18281859f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.12821154f ? 
                             (data[2 /* X15 */] <0.23280813f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[1 /* X12 */] <-0.40493774f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.113898166f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04649401f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_154_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.26235598f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_155_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_155_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[10 /* X28 */] <-0.30281976f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16979255f ? 
                 (data[3 /* X17 */] <-0.35866383f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19841526f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.19181949f ? 
                     (data[3 /* X17 */] <-0.62147087f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07778047f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (data[10 /* X28 */] <-0.2428888f ? 
             (data[9 /* X27 */] <-0.0209002f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.14935654f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[8 /* X23 */] <0.15882467f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5778895f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1907839f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.3065048f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[10 /* X28 */] <-0.5363968f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.01588654f ? 
            1.0f : 
             (data[9 /* X27 */] <0.09363864f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7281856f ? 
                     (data[7 /* X21 */] <0.12646247f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[9 /* X27 */] <0.06895871f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24677935f ? 
                 (data[11 /* X34 */] <-0.484375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5566173f ? 
                 (data[1 /* X12 */] <-0.24564943f ? 
                     (data[9 /* X27 */] <0.12660527f ? 
                         (data[5 /* X19 */] <0.14468311f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.004887973f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.453125f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.124563575f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.11994385f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <0.069320515f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48358604f ? 
                 (data[1 /* X12 */] <-0.47110105f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14597608f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6555561f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_155_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[10 /* X28 */] <0.23348549f ? 
            0.0f : 
            1.0f) : 
        0.011111111f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_156_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_156_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[10 /* X28 */] <-0.28332448f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11377544f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20248562f ? 
                         (data[10 /* X28 */] <-0.20919475f ? 
                             (data[12 /* X35 */] <-0.8f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1807731f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6942953f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.050131813f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.08605639f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[11 /* X34 */] <-0.111328125f ? 
            1.0f : 
             (data[2 /* X15 */] <0.17706653f ? 
                 (data[12 /* X35 */] <-0.7578125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6780869f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.1440671f ? 
                 (data[1 /* X12 */] <-0.3248903f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31054688f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19589435f ? 
                 (data[1 /* X12 */] <-0.102792576f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.43667606f ? 
             (data[1 /* X12 */] <0.28386033f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.047282558f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.1151637f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
            1.0f : 
             (data[6 /* X20 */] <0.23062049f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[1 /* X12 */] <-0.39630073f ? 
             (data[0 /* X5 */] <0.13431506f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.032669444f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4647827f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.14571968f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_156_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[1 /* X12 */] <-0.4728406f ? 
            1.0f : 
            0.0f) : 
         (data[5 /* X19 */] <0.034171276f ? 
             (data[0 /* X5 */] <0.18474637f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_157_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_157_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.083345965f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19111665f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14249916f ? 
                     (data[10 /* X28 */] <-0.1030499f ? 
                         (data[1 /* X12 */] <-0.36896515f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.075f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[6 /* X20 */] <-0.4639738f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.013160689f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.24414062f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[6 /* X20 */] <-0.14595507f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.022928964f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[6 /* X20 */] <0.060142882f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.49795794f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.9765625f ? 
             (data[9 /* X27 */] <0.3812392f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14263403f ? 
            0.0f : 
             (data[5 /* X19 */] <0.14441228f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04296875f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.54220915f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.34666443f ? 
                     (data[11 /* X34 */] <0.025f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.164043f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.43630403f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_157_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37528446f ? 
         (data[1 /* X12 */] <-0.4728406f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.30947992f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3413204f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918615f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1964252f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_158_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_158_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[3 /* X17 */] <-0.7528744f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.43411818f ? 
                 (data[12 /* X35 */] <-0.0234375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.13300364f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1657851f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.2136488f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20248562f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15998593f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.026748804f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.18827608f ? 
                     (data[12 /* X35 */] <-0.66770756f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25243053f ? 
            0.0f : 
             (data[7 /* X21 */] <0.053916626f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[9 /* X27 */] <-0.19086532f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0421008f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.40039062f ? 
             (data[2 /* X15 */] <0.17433879f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.80091095f ? 
                     (data[12 /* X35 */] <-0.97666925f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1817898f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (data[9 /* X27 */] <0.121053375f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.024937863f ? 
                 (data[12 /* X35 */] <-0.4453125f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16479726f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06269696f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7734375f ? 
                    0.0f : 
                    1.0f))) : 
         (data[7 /* X21 */] <0.09593705f ? 
             (data[7 /* X21 */] <0.08637852f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.6232633f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_158_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18996626f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.17590958f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_159_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_159_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[10 /* X28 */] <-0.14761394f ? 
             (data[3 /* X17 */] <-0.19739586f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.30281976f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14058802f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.39979935f ? 
                     (data[8 /* X23 */] <0.13161565f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.28125f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[8 /* X23 */] <0.025485272f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.18603122f ? 
             (data[5 /* X19 */] <-0.005612982f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.34277374f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.30281976f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19517134f ? 
                 (data[9 /* X27 */] <0.2442993f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060569067f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2181903f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.71875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16160929f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1259171f ? 
             (data[5 /* X19 */] <0.10931932f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4451445f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.079251304f ? 
                         (data[3 /* X17 */] <-0.36508533f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12917365f ? 
            0.0f : 
             (data[0 /* X5 */] <0.14068532f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.15729116f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15857524f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_159_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.27036607f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X28 */] <0.11055019f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_160_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_160_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[6 /* X20 */] <-0.28790334f ? 
             (data[8 /* X23 */] <0.10187558f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20277603f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.5271457f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.08984375f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28799495f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18751332f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.57193744f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.17962646f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0017838087f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[11 /* X34 */] <-0.19921875f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2798117f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.40122846f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1783761f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2890625f ? 
                     (data[12 /* X35 */] <-0.8840267f ? 
                         (data[4 /* X18 */] <-0.09521237f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40039062f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.034053516f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                 (data[7 /* X21 */] <0.1384546f ? 
                     (data[2 /* X15 */] <0.12906146f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (data[11 /* X34 */] <-0.24414062f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5425257f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.23102042f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2519258f ? 
             (data[3 /* X17 */] <-0.41973555f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.33204803f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7277759f ? 
                         (data[6 /* X20 */] <-0.019020572f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_160_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[0 /* X5 */] <0.12847564f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2503891f ? 
                 (data[2 /* X15 */] <0.07341211f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_161_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_161_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35546875f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24792308f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.11883112f ? 
                    0.0f : 
                    1.0f))) : 
         (data[0 /* X5 */] <0.10485254f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22906186f ? 
                     (data[12 /* X35 */] <-0.88548845f ? 
                         (data[2 /* X15 */] <0.12754099f ? 
                            0.0f : 
                            1.0f) : 
                         (data[7 /* X21 */] <0.09593705f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16213787f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (data[6 /* X20 */] <-0.19918567f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2654365f ? 
                 (data[10 /* X28 */] <-0.37965432f ? 
                     (data[6 /* X20 */] <-0.65561247f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.80972624f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.40074188f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8279844f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.086987f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[1 /* X12 */] <-0.2101697f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X18 */] <-0.54174477f ? 
             (data[9 /* X27 */] <0.3533433f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.30281976f ? 
                 (data[6 /* X20 */] <-0.4284867f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.14615206f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[6 /* X20 */] <-0.43394625f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (data[11 /* X34 */] <-0.48828125f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.19999465f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5257869f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1328125f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.15568498f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (data[11 /* X34 */] <-0.62109375f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12761134f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
             (data[12 /* X35 */] <-0.13671875f ? 
                 (data[6 /* X20 */] <-0.1555093f ? 
                     (data[7 /* X21 */] <0.10247821f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[12 /* X35 */] <0.50712585f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29472595f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.07849395f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15342605f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_161_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.4728406f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X18 */] <-0.092733115f ? 
             (data[6 /* X20 */] <-0.15004973f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_162_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_162_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16454498f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39645475f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.09044272f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05654253f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22137544f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (data[6 /* X20 */] <-0.50219065f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.54056007f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.11648871f ? 
                     (data[7 /* X21 */] <0.17763653f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.087440625f ? 
            0.0f : 
             (data[3 /* X17 */] <0.014641631f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.38059732f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18570441f ? 
            0.0f : 
             (data[2 /* X15 */] <0.18897647f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08088584f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.049223788f ? 
                 (data[1 /* X12 */] <-0.51980823f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_162_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[2 /* X15 */] <0.10841821f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08088584f ? 
                 (data[2 /* X15 */] <0.122167684f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.26427302f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15371732f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_163_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_163_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (data[8 /* X23 */] <0.08858746f ? 
             (data[12 /* X35 */] <-0.3984375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18161277f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.8484406f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.22265625f ? 
             (data[3 /* X17 */] <-0.51097244f ? 
                 (data[10 /* X28 */] <-0.07846284f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16460843f ? 
                 (data[3 /* X17 */] <-0.67522687f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18476814f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14077978f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.16459993f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
             (data[8 /* X23 */] <0.04153155f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.265625f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.28891602f ? 
                     (data[6 /* X20 */] <-0.58186984f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6875f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[0 /* X5 */] <0.2570269f ? 
             (data[0 /* X5 */] <0.22790523f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.31394354f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.049817715f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31054688f ? 
             (data[12 /* X35 */] <-0.77734375f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23199256f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06616931f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.16003314f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2096966f ? 
                     (data[1 /* X12 */] <-0.08840174f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[5 /* X19 */] <-0.07486706f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.578125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1420081f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.22265625f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.4453125f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05195356f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.119292796f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.13993049f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.27992004f ? 
                 (data[11 /* X34 */] <-0.20031738f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_163_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[9 /* X27 */] <0.26255795f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.62109375f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.075736694f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32722366f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X5 */] <0.12900649f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[0 /* X5 */] <0.1470556f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30563864f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_09_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_164_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_164_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21116339f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1440671f ? 
                 (data[11 /* X34 */] <-0.20208515f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.45116925f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.1181194f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[2 /* X15 */] <0.19525152f ? 
             (data[10 /* X28 */] <-0.44743082f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2279845f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2107116f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1796875f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0561448f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[2 /* X15 */] <0.1747934f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.35260615f ? 
                 (data[5 /* X19 */] <-0.026241858f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.058829524f ? 
            0.0f : 
             (data[7 /* X21 */] <0.1389997f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.64453125f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16285577f ? 
                 (data[9 /* X27 */] <0.1773509f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16958171f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23475677f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17391083f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.40193176f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X35 */] <0.3145218f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (data[11 /* X34 */] <-0.19921875f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.31071937f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.19072111f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.29540727f ? 
             (data[7 /* X21 */] <0.16096812f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
                     (data[10 /* X28 */] <-0.20139813f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.1122663f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05195356f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_164_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[2 /* X15 */] <0.07159362f ? 
            1.0f : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_165_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_165_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.3336772f ? 
        0.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2890625f ? 
             (data[9 /* X27 */] <0.17430778f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.048695013f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.028305987f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.14390558f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (data[12 /* X35 */] <-0.9765625f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.26562184f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.4064469f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01454111f ? 
             (data[1 /* X12 */] <-0.13326292f ? 
                 (data[6 /* X20 */] <-0.31011206f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18805842f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.74586743f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01454111f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.69871575f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.36297214f ? 
                     (data[7 /* X21 */] <0.17661138f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[11 /* X34 */] <-0.6660156f ? 
             (data[9 /* X27 */] <0.17097493f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04649401f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <-0.07339357f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1328125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
             (data[4 /* X18 */] <-0.13064438f ? 
                 (data[6 /* X20 */] <-0.15004973f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.5975793f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.7317715f ? 
                 (data[4 /* X18 */] <-0.40272734f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_165_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15429688f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03231202f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.0068566757f ? 
                 (data[6 /* X20 */] <0.34130964f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_166_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_166_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07204778f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18252203f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.18904994f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19126791f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25110337f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.55514145f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.19918567f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26766068f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X28 */] <-0.39194787f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21007884f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.03625671f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2556381f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.5363968f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.23726985f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2284291f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.38044167f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.172189f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[8 /* X23 */] <0.13699418f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06598614f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.29714683f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1835026f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.10431627f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11526866f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5332031f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.45116925f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13656802f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06560243f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.47317675f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_166_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20659861f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4563057f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_167_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_167_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19172858f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20336875f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6679064f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0032770305f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3534609f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.27473038f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21308975f ? 
                     (data[12 /* X35 */] <-0.953125f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.27515933f ? 
                             (data[2 /* X15 */] <0.19488782f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1845525f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[8 /* X23 */] <0.18192068f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.1275102f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.84436035f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24048625f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.024182135f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17188793f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18192068f ? 
             (data[9 /* X27 */] <-0.16956356f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.359375f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19343302f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15004973f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.034053516f ? 
            0.0f : 
             (data[8 /* X23 */] <0.12781905f ? 
                 (data[10 /* X28 */] <0.15511423f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53957874f ? 
            0.0f : 
             (data[5 /* X19 */] <0.5669765f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <0.18741435f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2503891f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.07946767f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_167_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2935057f ? 
             (data[5 /* X19 */] <0.04207246f ? 
                 (data[2 /* X15 */] <0.111600585f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.11745476f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.17188793f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1490316f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.25213993f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_09_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_168_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_168_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[2 /* X15 */] <0.092960976f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.36324942f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.092733115f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.890625f ? 
                     (data[8 /* X23 */] <0.16705064f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.30281976f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.8890625f ? 
                 (data[8 /* X23 */] <0.16958171f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.32666036f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.26892853f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.35546875f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19615978f ? 
             (data[12 /* X35 */] <-0.75390625f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.047713473f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.15629359f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.9140625f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.97717285f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15398987f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15102527f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029887134f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16925257f ? 
             (data[4 /* X18 */] <-0.4268262f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6875f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.09906673f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20916575f ? 
                 (data[9 /* X27 */] <0.067798965f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11583129f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (data[0 /* X5 */] <0.11520424f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.31546184f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3112477f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0956456f ? 
                         (data[11 /* X34 */] <-0.82199097f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17773438f ? 
             (data[0 /* X5 */] <0.14917903f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13288274f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.35385123f ? 
                         (data[9 /* X27 */] <0.30353242f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <0.039224997f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_168_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[0 /* X5 */] <0.13458048f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.3344175f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11208688f ? 
            0.0f : 
             (data[0 /* X5 */] <0.13803105f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_169_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_169_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[10 /* X28 */] <-0.14761394f ? 
             (data[3 /* X17 */] <-0.39450115f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.30281976f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                     (data[12 /* X35 */] <-0.7762451f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.26571077f ? 
                             (data[10 /* X28 */] <-0.20794143f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (data[2 /* X15 */] <0.17433879f ? 
             (data[8 /* X23 */] <0.16958171f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.1796875f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[7 /* X21 */] <0.011447034f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24707873f ? 
                 (data[12 /* X35 */] <-0.890625f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.097689606f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (data[2 /* X15 */] <0.18615903f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X28 */] <-0.30281976f ? 
             (data[8 /* X23 */] <0.18603367f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.15154195f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.27755058f ? 
                 (data[12 /* X35 */] <-0.734375f ? 
                     (data[3 /* X17 */] <-0.35522607f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18223706f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13360056f ? 
            1.0f : 
             (data[0 /* X5 */] <0.13803105f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (data[4 /* X18 */] <-0.31546184f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.30490783f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.099944755f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.11520424f ? 
                    1.0f : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.14546303f ? 
             (data[4 /* X18 */] <-0.51923496f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14285852f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_169_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.35027403f ? 
             (data[8 /* X23 */] <0.049355872f ? 
                 (data[3 /* X17 */] <-0.17729491f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.035435483f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_170_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_170_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[10 /* X28 */] <-0.30263066f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17578125f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19050404f ? 
                     (data[7 /* X21 */] <0.09593705f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1645104f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.287467f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[10 /* X28 */] <-0.40731478f ? 
             (data[0 /* X5 */] <0.1723987f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.023786252f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71492416f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.015561729f ? 
                 (data[2 /* X15 */] <0.14433356f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.15160756f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[6 /* X20 */] <-0.53494793f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.80078125f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15706305f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.09396999f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23253074f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060569067f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.17161104f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.28875062f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.2259852f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.083345965f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.005063291f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16953747f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.15916829f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X34 */] <-0.640625f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
        0.022222223f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48800653f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
                 (data[7 /* X21 */] <0.09157627f ? 
                     (data[3 /* X17 */] <-0.012236361f ? 
                        1.0f : 
                        0.0f) : 
                     (data[3 /* X17 */] <-0.4661758f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0859375f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2389037f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_170_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.045129124f ? 
            0.0f : 
             (data[8 /* X23 */] <0.07086997f ? 
                1.0f : 
                0.0f)) : 
        0.9230769f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_171_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_171_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[9 /* X27 */] <-0.01588654f ? 
            0.0f : 
             (data[7 /* X21 */] <0.12264679f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.024182135f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.1120191f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.29993764f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.14348607f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.23994087f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71492416f ? 
            0.0f : 
             (data[2 /* X15 */] <0.20252551f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[2 /* X15 */] <0.18161277f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8269095f ? 
             (data[7 /* X21 */] <0.03652149f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16797404f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.678874f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4282091f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[2 /* X15 */] <0.18161277f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2802443f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.3220255f ? 
             (data[2 /* X15 */] <0.15888155f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X17 */] <-0.37060958f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0020544566f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[9 /* X27 */] <-0.168042f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09972461f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2594661f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[2 /* X15 */] <0.0897786f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17415293f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06815651f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.421875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                     (data[1 /* X12 */] <-0.51980823f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.322104f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20525116f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_171_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
         (data[5 /* X19 */] <0.017962875f ? 
             (data[5 /* X19 */] <-0.047936317f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_172_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_172_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.12714384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16842069f ? 
             (data[10 /* X28 */] <-0.12763695f ? 
                 (data[5 /* X19 */] <0.15282255f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <0.06640625f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
             (data[3 /* X17 */] <-0.40943336f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1440671f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.17885794f ? 
                     (data[1 /* X12 */] <-0.2645476f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.13161565f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24747398f ? 
             (data[10 /* X28 */] <-0.4165349f ? 
                 (data[3 /* X17 */] <-0.20336875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X19 */] <0.035644766f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.2421875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.049817715f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.30281976f ? 
             (data[10 /* X28 */] <-0.35791376f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.265625f ? 
                 (data[6 /* X20 */] <-0.34884876f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.26525158f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[1 /* X12 */] <-0.31106317f ? 
             (data[5 /* X19 */] <-0.07418644f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16842069f ? 
             (data[10 /* X28 */] <-0.106123276f ? 
                 (data[11 /* X34 */] <-0.15625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10337699f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.4193233f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7561819f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_172_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[1 /* X12 */] <-0.5024128f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.035435483f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_173_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_173_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.047713473f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[2 /* X15 */] <0.13296795f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1328125f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05772726f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7222916f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.2244485f ? 
             (data[7 /* X21 */] <0.15426241f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.019109216f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.35153964f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06926678f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46484375f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19623487f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.95401f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25206947f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[10 /* X28 */] <-0.12763695f ? 
                 (data[5 /* X19 */] <0.21541068f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.20208038f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19885635f ? 
                     (data[8 /* X23 */] <0.10124281f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_173_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
            0.0f : 
             (data[8 /* X23 */] <0.065175064f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.40625f ? 
                     (data[12 /* X35 */] <0.06458523f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.7777778f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_174_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_174_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.3336772f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.15625f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35565186f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.025195435f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.162365f ? 
                 (data[0 /* X5 */] <0.087599725f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.25671902f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.007947907f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19742349f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[12 /* X35 */] <-0.62109375f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18315254f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.03273639f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.061693415f ? 
                        0.0f : 
                        1.0f))) : 
             (data[9 /* X27 */] <0.028238544f ? 
                 (data[8 /* X23 */] <0.04176266f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.33816364f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.27230835f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[5 /* X19 */] <-0.38430017f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.2951363f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.191329f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.13124067f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.7578125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[11 /* X34 */] <-0.734375f ? 
             (data[10 /* X28 */] <-0.17373769f ? 
                1.0f : 
                 (data[12 /* X35 */] <0.66250294f ? 
                     (data[10 /* X28 */] <-0.13204922f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[5 /* X19 */] <-0.035082802f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4000025f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20052283f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26864418f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08562475f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[5 /* X19 */] <0.12471262f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16722812f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.079251304f ? 
                        1.0f : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.16206959f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_174_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
        0.011111111f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_09_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_175_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_175_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[7 /* X21 */] <0.13245854f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2136488f ? 
                 (data[3 /* X17 */] <-0.4124198f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.11694043f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18484937f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17304024f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.16835928f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)) : 
        0.04347826f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[7 /* X21 */] <0.18587804f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13884847f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82838297f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.164043f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.35546875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.07026429f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.58360595f ? 
             (data[12 /* X35 */] <-0.88671875f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.022069728f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5332031f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.05106013f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19596232f ? 
            0.0f : 
             (data[7 /* X21 */] <0.19947837f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.30640104f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07081046f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13775276f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15945743f ? 
                     (data[2 /* X15 */] <0.13472928f ? 
                         (data[4 /* X18 */] <-0.53310806f ? 
                            1.0f : 
                            0.0f) : 
                         (data[8 /* X23 */] <0.121718094f ? 
                             (data[1 /* X12 */] <-0.2209945f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[0 /* X5 */] <0.11108333f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_175_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[9 /* X27 */] <0.0023721154f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_176_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_176_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14421235f ? 
             (data[3 /* X17 */] <-0.35567737f ? 
                 (data[6 /* X20 */] <-0.16642839f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07868018f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1395448f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1328125f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17779158f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.057191294f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13169411f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.18535413f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.19589666f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[7 /* X21 */] <0.12454512f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
             (data[12 /* X35 */] <-0.9765625f ? 
                 (data[7 /* X21 */] <0.15460292f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.68642133f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.171875f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2617205f ? 
                             (data[10 /* X28 */] <-0.3489205f ? 
                                 (data[1 /* X12 */] <-0.09953482f ? 
                                     (data[7 /* X21 */] <0.1751667f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.16451755f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (data[1 /* X12 */] <-0.25365826f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.7558594f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1585721f ? 
                 (data[7 /* X21 */] <0.124082394f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.55695343f ? 
                 (data[10 /* X28 */] <-0.31818667f ? 
                     (data[4 /* X18 */] <0.0019279799f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12841122f ? 
             (data[2 /* X15 */] <0.11082604f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0625f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.24414062f ? 
            0.0f : 
             (data[12 /* X35 */] <0.11063385f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.21369167f ? 
                     (data[4 /* X18 */] <-0.16463701f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1979929f ? 
             (data[12 /* X35 */] <0.265625f ? 
                 (data[7 /* X21 */] <0.09595389f ? 
                     (data[7 /* X21 */] <0.08618139f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.21541068f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_176_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
        0.028169014f : 
         (data[2 /* X15 */] <0.1470613f ? 
             (data[2 /* X15 */] <0.07388095f ? 
                 (data[7 /* X21 */] <0.12609656f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5093777f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.37639776f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_177_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_177_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5328781f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.33203125f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.28653845f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (data[11 /* X34 */] <-0.24414062f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.026537422f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2598082f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13710399f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.14641738f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25816917f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0421008f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.64453125f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01454111f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.5996094f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.07339357f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4453125f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.36275977f ? 
                 (data[4 /* X18 */] <-0.3225702f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.24674767f ? 
                     (data[0 /* X5 */] <0.12582135f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.5121407f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17578125f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.1651047f ? 
                     (data[12 /* X35 */] <0.33612773f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_177_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15429688f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X15 */] <0.1006896f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.08646027f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_178_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_178_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.3336772f ? 
        0.0f : 
         (data[2 /* X15 */] <0.14797056f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19950545f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.088600725f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.117558025f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.3136063f ? 
                 (data[0 /* X5 */] <0.073797464f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1939709f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.015625f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.1754754f ? 
                             (data[5 /* X19 */] <0.02208865f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[4 /* X18 */] <0.24405408f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16320206f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.059762575f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20248562f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15660843f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14717616f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[6 /* X20 */] <-0.63594955f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (data[9 /* X27 */] <0.09823006f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25206947f ? 
            1.0f : 
             (data[12 /* X35 */] <0.0234375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012770384f ? 
             (data[12 /* X35 */] <-0.04296875f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2153374f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.104658596f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_178_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
        0.85714287f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.33857986f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_179_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_179_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1110158f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19434227f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.18194391f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.19657175f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[8 /* X23 */] <0.15312976f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.226166f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2694179f ? 
             (data[8 /* X23 */] <0.04153155f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19841526f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14978905f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.27625194f ? 
             (data[11 /* X34 */] <-0.2421875f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.055437993f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.24101342f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.26757812f ? 
            0.0f : 
             (data[11 /* X34 */] <0.40002745f ? 
                 (data[1 /* X12 */] <-0.29919288f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.1316409f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.011522892f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.025475843f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.9550781f ? 
             (data[2 /* X15 */] <0.13342257f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15755913f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.6680553f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.42787158f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.08605762f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
        0.018518519f : 
         (data[9 /* X27 */] <0.121053375f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.073777474f ? 
                 (data[11 /* X34 */] <-0.8888891f ? 
                     (data[3 /* X17 */] <-0.2272603f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.53372455f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_179_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15429688f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X15 */] <0.10023497f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12465522f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_180_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_180_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19932179f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20763478f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14715554f ? 
                     (data[11 /* X34 */] <0.0f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.35546875f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.211028f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0059208926f ? 
                0.0f : 
                 (data[11 /* X34 */] <-7.171631E-4f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06815706f ? 
                 (data[5 /* X19 */] <-0.096969426f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.040607575f ? 
             (data[5 /* X19 */] <-0.05865866f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06467798f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3125f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.23131344f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[3 /* X17 */] <-0.11377544f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.059941918f ? 
                 (data[12 /* X35 */] <0.66562206f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.27595544f ? 
             (data[11 /* X34 */] <-0.66568756f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20216134f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X19 */] <-0.2749173f ? 
                     (data[8 /* X23 */] <0.22020312f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.44433594f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20075816f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.05570468f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.2109902f ? 
             (data[7 /* X21 */] <0.09157627f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <0.62109375f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.42184663f ? 
                     (data[8 /* X23 */] <0.11998432f ? 
                         (data[4 /* X18 */] <-0.35100368f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_180_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48828125f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.4641429f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.14599389f ? 
            0.0f : 
             (data[7 /* X21 */] <0.14390558f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_181_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_181_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.3336772f ? 
        0.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16115467f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09997652f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16570945f ? 
                     (data[11 /* X34 */] <-0.734375f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X19 */] <0.35686582f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.20857921f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.203125f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.2690705f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1093193f ? 
                     (data[11 /* X34 */] <-0.15625f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15996315f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.46875f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.3097141f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_09_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17022358f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20386623f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.1378263f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14490378f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[6 /* X20 */] <-0.5567861f ? 
            1.0f : 
            0.0f) : 
         (data[8 /* X23 */] <0.15344614f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22525674f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.2265625f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.09321156f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08088584f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.109375f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.28762075f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.087440625f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11208688f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[9 /* X27 */] <0.069320515f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.09997652f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1728081f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.078125f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.1025917f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.57351536f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_181_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (data[6 /* X20 */] <-0.10227869f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09527561f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13052717f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_182_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_182_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[10 /* X28 */] <-0.2951363f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19172858f ? 
                 (data[11 /* X34 */] <0.089582734f ? 
                     (data[6 /* X20 */] <-0.18280703f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17161104f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[9 /* X27 */] <0.020630771f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19172858f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17578125f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.1614473f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31054688f ? 
             (data[11 /* X34 */] <-0.24440055f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.5049204f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[4 /* X18 */] <-0.2870284f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.33249694f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26344523f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.15299274f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[9 /* X27 */] <0.16822156f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.006263474f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17844045f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1010895f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25183475f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12610027f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.19921875f ? 
                 (data[2 /* X15 */] <0.23525849f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09510257f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.049223788f ? 
                 (data[1 /* X12 */] <-0.51980823f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_182_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.80879605f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.15625f ? 
                1.0f : 
                0.0f)) : 
        0.9230769f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_183_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_183_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (data[0 /* X5 */] <0.13458048f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1271692f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29018864f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14935654f ? 
             (data[6 /* X20 */] <-0.48854175f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.33662698f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9521562f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.3391564f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.16072297f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.95289296f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19299412f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19950545f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1328125f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20252551f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05654253f ? 
                     (data[10 /* X28 */] <-0.3489205f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.32433343f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <-0.11391457f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17871237f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.8723321f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24791823f ? 
                 (data[6 /* X20 */] <-0.19372612f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.022928964f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.24776526f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.25710782f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (data[6 /* X20 */] <0.01373672f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.66568756f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20153949f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012770384f ? 
             (data[0 /* X5 */] <0.12728126f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09967241f ? 
                     (data[10 /* X28 */] <-0.12763695f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14517887f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.19414912f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.3667285f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.24448776f ? 
             (data[11 /* X34 */] <-0.31094593f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.19907948f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_183_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.031304557f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25619552f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22182156f ? 
                 (data[11 /* X34 */] <-0.890625f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.15511423f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <0.2521616f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_184_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_184_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1907839f ? 
                 (data[8 /* X23 */] <0.11066171f ? 
                     (data[0 /* X5 */] <0.09750915f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07100632f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.044921875f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.23147368f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26766068f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2602818f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20014119f ? 
                 (data[10 /* X28 */] <-0.3805851f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.020347893f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.10757049f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.019280018f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (data[10 /* X28 */] <-0.5363968f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.29296204f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19589435f ? 
                 (data[11 /* X34 */] <0.088885f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.2562255f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07059622f ? 
            0.0f : 
             (data[7 /* X21 */] <0.15371732f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.5546875f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2136488f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.39222962f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23188558f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.35444337f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15882467f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07659573f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.203125f ? 
                     (data[5 /* X19 */] <0.12110725f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08562475f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.53125f ? 
                 (data[4 /* X18 */] <-0.3178313f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.38044167f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_184_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27462113f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_185_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_185_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2481654f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18315254f ? 
                 (data[10 /* X28 */] <-0.3304802f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25149342f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.3779859f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14223997f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.0859375f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[12 /* X35 */] <-0.9550781f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2925412f ? 
                 (data[10 /* X28 */] <-0.41038814f ? 
                     (data[9 /* X27 */] <8.505609E-4f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.69871575f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.16425979f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4473773f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17120595f ? 
             (data[9 /* X27 */] <-0.059227705f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.008503307f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10927625f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.43712857f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.14390558f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14476588f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.034210026f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14524281f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.306129f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[12 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53957874f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.33299467f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.164043f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22011375f ? 
                     (data[9 /* X27 */] <0.037367873f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.78125f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.19858001f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.1562962f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_185_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.5285059f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <0.22392935f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1868698f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_186_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_186_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (data[0 /* X5 */] <0.078309745f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23836283f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20349695f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.10187558f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17433879f ? 
             (data[7 /* X21 */] <0.14717616f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.094453804f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.1465518f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (data[2 /* X15 */] <0.24389637f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2798117f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18843654f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17717493f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.28660476f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.15699202f ? 
                             (data[3 /* X17 */] <-0.27952307f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5546875f ? 
            1.0f : 
             (data[10 /* X28 */] <0.11208688f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
        0.028571429f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.27205697f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15566082f ? 
                     (data[11 /* X34 */] <-0.421875f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.1332174f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.3465935f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_186_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[2 /* X15 */] <0.10296272f ? 
             (data[3 /* X17 */] <-0.56771487f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24298275f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06315219f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07211255f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.09489713f ? 
                             (data[7 /* X21 */] <0.15349928f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19296429f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X28 */] <0.11055019f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_09_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_187_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_187_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2481654f ? 
         (data[11 /* X34 */] <-0.40039062f ? 
             (data[10 /* X28 */] <-0.1368571f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22343825f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.046652727f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20987852f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0901704f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.14069657f ? 
             (data[5 /* X19 */] <0.28319126f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7193446f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.3984375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (data[10 /* X28 */] <-0.42575505f ? 
                 (data[6 /* X20 */] <-0.4284867f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.16191956f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.5893899f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18448095f ? 
             (data[4 /* X18 */] <0.0057450333f ? 
                 (data[12 /* X35 */] <-0.171875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (data[11 /* X34 */] <-0.24414062f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.10087112f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29749724f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22130933f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.43938133f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[11 /* X34 */] <-0.7109375f ? 
             (data[2 /* X15 */] <0.1470613f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16243887f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <-0.00790283f ? 
                 (data[11 /* X34 */] <-0.42355347f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
             (data[3 /* X17 */] <-0.25712472f ? 
                 (data[9 /* X27 */] <0.09214383f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.111997575f ? 
                     (data[5 /* X19 */] <0.2625624f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7576554f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_187_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[11 /* X34 */] <-0.35546875f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25346246f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40078735f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.035574913f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.11812394f ? 
            0.0f : 
             (data[7 /* X21 */] <0.19514468f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_09_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_188_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_188_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.044921875f ? 
             (data[3 /* X17 */] <-0.25115186f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14978905f ? 
                     (data[12 /* X35 */] <-0.03125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[7 /* X21 */] <0.11610563f ? 
             (data[1 /* X12 */] <0.40910736f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.07857517f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.13524106f ? 
                     (data[6 /* X20 */] <-0.22648342f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26968333f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.013892346f ? 
             (data[2 /* X15 */] <0.14524281f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.2474146f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.012250892f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (data[2 /* X15 */] <0.18615903f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.58360595f ? 
             (data[3 /* X17 */] <-0.8723321f ? 
                 (data[8 /* X23 */] <0.17844045f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21694855f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22273418f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.27653638f ? 
                             (data[0 /* X5 */] <0.24186261f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[6 /* X20 */] <-0.19618931f ? 
                         (data[6 /* X20 */] <-0.26152426f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.022299135f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25127506f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08180538f ? 
         (data[11 /* X34 */] <-0.421875f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09826205f ? 
                 (data[8 /* X23 */] <0.12149137f ? 
                     (data[12 /* X35 */] <-0.3125f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.39804026f ? 
                 (data[2 /* X15 */] <0.15003738f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.15312976f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17855471f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18340974f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
        0.032258064f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_188_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22369269f ? 
                 (data[1 /* X12 */] <-0.58243173f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.2050167f ? 
                    0.0f : 
                    1.0f))) : 
        0.7777778f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_189_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_189_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03284514f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.019209027f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18211938f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.55249023f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[0 /* X5 */] <0.08122945f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2425681f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042974565f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.17147498f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.09375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.09747202f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97867906f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43529335f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17960942f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3416788f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.039956346f ? 
                 (data[3 /* X17 */] <0.09527561f ? 
                     (data[0 /* X5 */] <0.14068532f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
        0.011904762f : 
         (data[7 /* X21 */] <0.1316409f ? 
             (data[10 /* X28 */] <-0.5087364f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.011522892f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10858258f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14232756f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36410424f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.116103254f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3781961f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17267944f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14138214f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3984375f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20321153f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11168875f ? 
                 (data[10 /* X28 */] <-0.12763695f ? 
                     (data[3 /* X17 */] <-0.33477226f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.10614509f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.05f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <0.49846756f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16828984f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13068457f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.265559f ? 
                                1.0f : 
                                 (data[9 /* X27 */] <0.3547121f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[1 /* X12 */] <-0.51719373f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.14861502f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_09_Tree_189_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.52807444f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.34130964f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_190_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_190_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (data[6 /* X20 */] <-0.2278483f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19921875f ? 
                 (data[12 /* X35 */] <-0.25f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.21369167f ? 
                     (data[0 /* X5 */] <0.14917903f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.08984375f ? 
             (data[12 /* X35 */] <-0.886979f ? 
                 (data[1 /* X12 */] <-0.17885794f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.3684317f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14499576f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.11795009f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23116687f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1440671f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.20336875f ? 
                     (data[10 /* X28 */] <-0.39809462f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.734375f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.6875f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.53494793f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1650635f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.80078125f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.022928964f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.032847982f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13657656f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5546875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
        0.05263158f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04296875f ? 
             (data[11 /* X34 */] <-0.2f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.59999084f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.64375f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[5 /* X19 */] <0.37160072f ? 
                 (data[0 /* X5 */] <0.13431506f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_190_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[6 /* X20 */] <0.02875048f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.51980823f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_09_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_191_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_191_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (data[11 /* X34 */] <-0.31054688f ? 
            1.0f : 
             (data[2 /* X15 */] <0.14160581f ? 
                 (data[10 /* X28 */] <-0.21369167f ? 
                     (data[3 /* X17 */] <-0.3330754f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.2935996f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.017089844f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.014420345f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35546875f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1030499f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.22141139f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.013892346f ? 
             (data[10 /* X28 */] <-0.45956227f ? 
                 (data[6 /* X20 */] <-0.5868136f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.01970247f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06903857f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.114849046f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.044913184f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.20447151f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.060931507f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.005063291f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_09_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11526866f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1422779f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.09307639f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09510257f ? 
             (data[1 /* X12 */] <-0.5173778f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.019196268f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_191_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19382824f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2319488f ? 
                 (data[1 /* X12 */] <-0.5058919f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[4 /* X18 */] <-0.0038785639f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_192_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_192_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (data[5 /* X19 */] <0.33476347f ? 
             (data[10 /* X28 */] <-0.10919666f ? 
                 (data[3 /* X17 */] <-0.35866383f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16070005f ? 
                 (data[4 /* X18 */] <-0.53159255f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.12710132f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.13448606f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.046875f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X28 */] <-0.1891046f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5546875f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.23009889f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9050045f ? 
             (data[8 /* X23 */] <0.023786252f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.2244485f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.009012626f ? 
                 (data[6 /* X20 */] <-0.63517684f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (data[4 /* X18 */] <-0.24911712f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.28745285f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.30281976f ? 
             (data[2 /* X15 */] <0.1561538f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.71450466f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.29051247f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (data[5 /* X19 */] <0.1122663f ? 
             (data[6 /* X20 */] <0.043764237f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.42935205f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1529552f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.28589308f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
        0.05263158f : 
         (data[10 /* X28 */] <-0.12610027f ? 
             (data[8 /* X23 */] <0.123389676f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2421875f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.33204803f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.041519623f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.09375f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.14799015f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_192_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.089178935f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.37947115f ? 
                 (data[2 /* X15 */] <0.07341211f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04139908f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_09_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_193_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_193_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610149f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14249167f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15234375f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                 (data[1 /* X12 */] <-0.29714683f ? 
                     (data[10 /* X28 */] <-0.1030499f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5131126f ? 
                         (data[4 /* X18 */] <-0.11879712f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.10255405f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.192178f ? 
             (data[1 /* X12 */] <-0.123192586f ? 
                 (data[10 /* X28 */] <-0.4049257f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17695299f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_09_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
         (data[8 /* X23 */] <0.041342773f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.09266647f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X27 */] <0.06627741f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.19739586f ? 
                 (data[9 /* X27 */] <0.21165252f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.04327452f ? 
         (data[8 /* X23 */] <0.16483596f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.265625f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.30281976f ? 
             (data[3 /* X17 */] <-0.26608407f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.29071635f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15888155f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.20075542f ? 
        1.0f : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.55947506f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10381927f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.484375f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[4 /* X18 */] <-0.32375494f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.109375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.12610027f ? 
             (data[8 /* X23 */] <0.123389676f ? 
                 (data[1 /* X12 */] <-0.3667285f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.108352356f ? 
                         (data[8 /* X23 */] <0.10107917f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25176838f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_193_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.13033363f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20976245f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2519258f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_194_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_194_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (data[6 /* X20 */] <-0.28790334f ? 
             (data[0 /* X5 */] <0.087599725f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.14680208f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05404657f ? 
                 (data[11 /* X34 */] <-0.5078125f ? 
                     (data[6 /* X20 */] <-0.118152216f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.296875f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20059565f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.08261844f ? 
                             (data[6 /* X20 */] <-0.08420199f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5942569f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[6 /* X20 */] <-0.5363128f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <-0.17871237f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3464446f ? 
                 (data[8 /* X23 */] <0.04176266f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.2637144f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9551032f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[6 /* X20 */] <-0.5363128f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.2421875f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.16072297f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.19918567f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060569067f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.12900649f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
        0.04761905f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06560243f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5546875f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.008559965f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_09_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[1 /* X12 */] <-0.36846805f ? 
             (data[11 /* X34 */] <-0.15234375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.27802983f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48358604f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3984375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_194_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
        0.010989011f : 
         (data[9 /* X27 */] <8.505609E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_195_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_195_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15527344f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13537677f ? 
             (data[12 /* X35 */] <-0.0234375f ? 
                 (data[6 /* X20 */] <-0.2810789f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14754619f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20707177f ? 
                 (data[6 /* X20 */] <-0.29745755f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.16072297f ? 
                 (data[6 /* X20 */] <-0.22102387f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.41580546f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1933105f ? 
             (data[10 /* X28 */] <-0.40731478f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.024163812f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.10931932f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.18988076f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16454498f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17211278f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.22265625f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22130933f ? 
             (data[12 /* X35 */] <-0.80078125f ? 
                 (data[6 /* X20 */] <-0.41210806f ? 
                     (data[5 /* X19 */] <0.2782119f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.21232808f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17734748f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07793812f ? 
             (data[8 /* X23 */] <0.16641787f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.22092153f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.13221788f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.39506206f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_09_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.73339844f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15755913f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.38044167f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.27595544f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23602231f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.062872656f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.017962875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.40039062f ? 
         (data[0 /* X5 */] <0.12688307f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.078279674f ? 
                 (data[5 /* X19 */] <0.20951672f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5366317f ? 
                 (data[6 /* X20 */] <-0.10637335f ? 
                     (data[7 /* X21 */] <0.100093246f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.58243173f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.24448776f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11227004f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3392451f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_195_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[8 /* X23 */] <0.064858675f ? 
             (data[3 /* X17 */] <-0.17485318f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <0.3598128f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25346246f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2919282f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_196_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_196_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14772125f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19979776f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12763695f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13161565f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X12 */] <-0.1737437f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.1006896f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.421875f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23851208f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.10053248f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_09_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[7 /* X21 */] <0.03652149f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                 (data[10 /* X28 */] <-0.41038814f ? 
                     (data[8 /* X23 */] <0.2126099f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.625f ? 
                    1.0f : 
                    0.0f))) : 
         (data[2 /* X15 */] <0.1247847f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_09_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.44433594f ? 
         (data[5 /* X19 */] <-0.049817715f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07796449f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.22257178f ? 
                     (data[4 /* X18 */] <-0.1309302f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.12405423f ? 
             (data[1 /* X12 */] <-0.4571847f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.55741805f ? 
                 (data[10 /* X28 */] <-0.17681108f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12369793f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
         (data[7 /* X21 */] <0.09593705f ? 
             (data[9 /* X27 */] <0.4361815f ? 
                 (data[0 /* X5 */] <0.13431506f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.5180687f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.049223788f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_196_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15528873f ? 
             (data[2 /* X15 */] <0.09796184f ? 
                 (data[0 /* X5 */] <0.15554929f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2319488f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.41717523f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_09_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_197_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_197_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28245452f ? 
         (data[3 /* X17 */] <-0.35717058f ? 
             (data[8 /* X23 */] <0.12022584f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.33333376f ? 
                    0.0f : 
                     (data[1 /* X12 */] <0.044806417f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05266527f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16613546f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12763695f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.20555624f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28926823f ? 
         (data[1 /* X12 */] <-0.105797164f ? 
             (data[9 /* X27 */] <-0.08131339f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15351126f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1328125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_09_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.5015082f ? 
        0.75f : 
         (data[3 /* X17 */] <-0.8723321f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.53125f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.022827148f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.08871007f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06419325f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12019792f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04749251f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_09_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                 (data[11 /* X34 */] <-0.203125f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18247513f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.09997728f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21864824f ? 
                         (data[1 /* X12 */] <-0.47906604f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_197_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25259197f ? 
         (data[1 /* X12 */] <-0.51285005f ? 
            1.0f : 
            0.0f) : 
        0.7777778f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_09_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_198_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_198_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (data[1 /* X12 */] <-0.2919282f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.04296875f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0016282742f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16243887f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13680337f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.3130434f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[1 /* X12 */] <-0.23880239f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16457385f ? 
             (data[7 /* X21 */] <0.124282084f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17700353f ? 
                     (data[10 /* X28 */] <-0.13993049f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1328125f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.734375f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_09_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15972298f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26766068f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2421875f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1569879f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20199919f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61914724f ? 
                 (data[1 /* X12 */] <-0.13388489f ? 
                     (data[8 /* X23 */] <0.12655352f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[7 /* X21 */] <0.07849395f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_09_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09622969f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2556381f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.026241858f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20014119f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.30742902f ? 
                 (data[7 /* X21 */] <0.12755267f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[8 /* X23 */] <0.1249716f ? 
             (data[11 /* X34 */] <-0.7109375f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5060067f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09972461f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.54366803f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17189978f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.011006946f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1796875f ? 
                     (data[1 /* X12 */] <-0.47971588f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.013022997f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_198_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.42587295f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27082452f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.34130964f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_09_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_09_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_09_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_09_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_09_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_09_Tree_199_class_4.score0(fdata);
    preds[6] += h2o_rf_09_Tree_199_class_5.score0(fdata);
  }
}
class h2o_rf_09_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10458659f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14580664f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19080709f ? 
                 (data[8 /* X23 */] <0.108836025f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.2941292f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.13339941f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.29785472f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5f ? 
                                    1.0f : 
                                    0.0f))))) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.2951573f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.5304335f ? 
                     (data[6 /* X20 */] <-0.3684317f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18793151f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.060718853f ? 
                 (data[4 /* X18 */] <-0.18988076f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_09_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.35814065f ? 
         (data[1 /* X12 */] <-0.11797396f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.0032279643f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25428852f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.08984375f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0011253695f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_09_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.30281976f ? 
         (data[1 /* X12 */] <-0.11797396f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19644958f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.40067577f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654215f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.13005005f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18826658f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.066669114f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[11 /* X34 */] <-0.734375f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.14831932f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.211618f ? 
                 (data[11 /* X34 */] <-0.9765625f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.0970616f ? 
                         (data[4 /* X18 */] <0.17975417f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.10399457f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_09_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.14530891f ? 
         (data[1 /* X12 */] <-0.37716576f ? 
             (data[7 /* X21 */] <0.16199483f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.21010478f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[0 /* X5 */] <0.11812394f ? 
             (data[9 /* X27 */] <-0.047839187f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0011253695f ? 
                 (data[12 /* X35 */] <0.0f ? 
                     (data[7 /* X21 */] <0.09593705f ? 
                         (data[9 /* X27 */] <0.4400582f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.040858764f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_09_Tree_199_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1343689f ? 
         (data[1 /* X12 */] <-0.51285005f ? 
            1.0f : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}



