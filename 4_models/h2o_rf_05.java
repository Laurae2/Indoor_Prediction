/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:41:50.786+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_05

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_05 > h2o_rf_05.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_05.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_05", algorithm="drf")
public class h2o_rf_05 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 13; }
  public int nclasses() { return 5; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_05.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 5;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X5 */ null,
    /* X12 */ null,
    /* X15 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X23 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* Label */ h2o_rf_05_ColInfo_13.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.29347826086956524,0.13043478260869565,0.14130434782608695,0.29347826086956524,0.14130434782608695};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.29347826086956524,0.13043478260869565,0.14130434782608695,0.29347826086956524,0.14130434782608695};

  public h2o_rf_05() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-6304490255837320304L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_05_Forest_0.score0(data,preds);
    h2o_rf_05_Forest_1.score0(data,preds);
    h2o_rf_05_Forest_2.score0(data,preds);
    h2o_rf_05_Forest_3.score0(data,preds);
    h2o_rf_05_Forest_4.score0(data,preds);
    h2o_rf_05_Forest_5.score0(data,preds);
    h2o_rf_05_Forest_6.score0(data,preds);
    h2o_rf_05_Forest_7.score0(data,preds);
    h2o_rf_05_Forest_8.score0(data,preds);
    h2o_rf_05_Forest_9.score0(data,preds);
    h2o_rf_05_Forest_10.score0(data,preds);
    h2o_rf_05_Forest_11.score0(data,preds);
    h2o_rf_05_Forest_12.score0(data,preds);
    h2o_rf_05_Forest_13.score0(data,preds);
    h2o_rf_05_Forest_14.score0(data,preds);
    h2o_rf_05_Forest_15.score0(data,preds);
    h2o_rf_05_Forest_16.score0(data,preds);
    h2o_rf_05_Forest_17.score0(data,preds);
    h2o_rf_05_Forest_18.score0(data,preds);
    h2o_rf_05_Forest_19.score0(data,preds);
    h2o_rf_05_Forest_20.score0(data,preds);
    h2o_rf_05_Forest_21.score0(data,preds);
    h2o_rf_05_Forest_22.score0(data,preds);
    h2o_rf_05_Forest_23.score0(data,preds);
    h2o_rf_05_Forest_24.score0(data,preds);
    h2o_rf_05_Forest_25.score0(data,preds);
    h2o_rf_05_Forest_26.score0(data,preds);
    h2o_rf_05_Forest_27.score0(data,preds);
    h2o_rf_05_Forest_28.score0(data,preds);
    h2o_rf_05_Forest_29.score0(data,preds);
    h2o_rf_05_Forest_30.score0(data,preds);
    h2o_rf_05_Forest_31.score0(data,preds);
    h2o_rf_05_Forest_32.score0(data,preds);
    h2o_rf_05_Forest_33.score0(data,preds);
    h2o_rf_05_Forest_34.score0(data,preds);
    h2o_rf_05_Forest_35.score0(data,preds);
    h2o_rf_05_Forest_36.score0(data,preds);
    h2o_rf_05_Forest_37.score0(data,preds);
    h2o_rf_05_Forest_38.score0(data,preds);
    h2o_rf_05_Forest_39.score0(data,preds);
    h2o_rf_05_Forest_40.score0(data,preds);
    h2o_rf_05_Forest_41.score0(data,preds);
    h2o_rf_05_Forest_42.score0(data,preds);
    h2o_rf_05_Forest_43.score0(data,preds);
    h2o_rf_05_Forest_44.score0(data,preds);
    h2o_rf_05_Forest_45.score0(data,preds);
    h2o_rf_05_Forest_46.score0(data,preds);
    h2o_rf_05_Forest_47.score0(data,preds);
    h2o_rf_05_Forest_48.score0(data,preds);
    h2o_rf_05_Forest_49.score0(data,preds);
    h2o_rf_05_Forest_50.score0(data,preds);
    h2o_rf_05_Forest_51.score0(data,preds);
    h2o_rf_05_Forest_52.score0(data,preds);
    h2o_rf_05_Forest_53.score0(data,preds);
    h2o_rf_05_Forest_54.score0(data,preds);
    h2o_rf_05_Forest_55.score0(data,preds);
    h2o_rf_05_Forest_56.score0(data,preds);
    h2o_rf_05_Forest_57.score0(data,preds);
    h2o_rf_05_Forest_58.score0(data,preds);
    h2o_rf_05_Forest_59.score0(data,preds);
    h2o_rf_05_Forest_60.score0(data,preds);
    h2o_rf_05_Forest_61.score0(data,preds);
    h2o_rf_05_Forest_62.score0(data,preds);
    h2o_rf_05_Forest_63.score0(data,preds);
    h2o_rf_05_Forest_64.score0(data,preds);
    h2o_rf_05_Forest_65.score0(data,preds);
    h2o_rf_05_Forest_66.score0(data,preds);
    h2o_rf_05_Forest_67.score0(data,preds);
    h2o_rf_05_Forest_68.score0(data,preds);
    h2o_rf_05_Forest_69.score0(data,preds);
    h2o_rf_05_Forest_70.score0(data,preds);
    h2o_rf_05_Forest_71.score0(data,preds);
    h2o_rf_05_Forest_72.score0(data,preds);
    h2o_rf_05_Forest_73.score0(data,preds);
    h2o_rf_05_Forest_74.score0(data,preds);
    h2o_rf_05_Forest_75.score0(data,preds);
    h2o_rf_05_Forest_76.score0(data,preds);
    h2o_rf_05_Forest_77.score0(data,preds);
    h2o_rf_05_Forest_78.score0(data,preds);
    h2o_rf_05_Forest_79.score0(data,preds);
    h2o_rf_05_Forest_80.score0(data,preds);
    h2o_rf_05_Forest_81.score0(data,preds);
    h2o_rf_05_Forest_82.score0(data,preds);
    h2o_rf_05_Forest_83.score0(data,preds);
    h2o_rf_05_Forest_84.score0(data,preds);
    h2o_rf_05_Forest_85.score0(data,preds);
    h2o_rf_05_Forest_86.score0(data,preds);
    h2o_rf_05_Forest_87.score0(data,preds);
    h2o_rf_05_Forest_88.score0(data,preds);
    h2o_rf_05_Forest_89.score0(data,preds);
    h2o_rf_05_Forest_90.score0(data,preds);
    h2o_rf_05_Forest_91.score0(data,preds);
    h2o_rf_05_Forest_92.score0(data,preds);
    h2o_rf_05_Forest_93.score0(data,preds);
    h2o_rf_05_Forest_94.score0(data,preds);
    h2o_rf_05_Forest_95.score0(data,preds);
    h2o_rf_05_Forest_96.score0(data,preds);
    h2o_rf_05_Forest_97.score0(data,preds);
    h2o_rf_05_Forest_98.score0(data,preds);
    h2o_rf_05_Forest_99.score0(data,preds);
    h2o_rf_05_Forest_100.score0(data,preds);
    h2o_rf_05_Forest_101.score0(data,preds);
    h2o_rf_05_Forest_102.score0(data,preds);
    h2o_rf_05_Forest_103.score0(data,preds);
    h2o_rf_05_Forest_104.score0(data,preds);
    h2o_rf_05_Forest_105.score0(data,preds);
    h2o_rf_05_Forest_106.score0(data,preds);
    h2o_rf_05_Forest_107.score0(data,preds);
    h2o_rf_05_Forest_108.score0(data,preds);
    h2o_rf_05_Forest_109.score0(data,preds);
    h2o_rf_05_Forest_110.score0(data,preds);
    h2o_rf_05_Forest_111.score0(data,preds);
    h2o_rf_05_Forest_112.score0(data,preds);
    h2o_rf_05_Forest_113.score0(data,preds);
    h2o_rf_05_Forest_114.score0(data,preds);
    h2o_rf_05_Forest_115.score0(data,preds);
    h2o_rf_05_Forest_116.score0(data,preds);
    h2o_rf_05_Forest_117.score0(data,preds);
    h2o_rf_05_Forest_118.score0(data,preds);
    h2o_rf_05_Forest_119.score0(data,preds);
    h2o_rf_05_Forest_120.score0(data,preds);
    h2o_rf_05_Forest_121.score0(data,preds);
    h2o_rf_05_Forest_122.score0(data,preds);
    h2o_rf_05_Forest_123.score0(data,preds);
    h2o_rf_05_Forest_124.score0(data,preds);
    h2o_rf_05_Forest_125.score0(data,preds);
    h2o_rf_05_Forest_126.score0(data,preds);
    h2o_rf_05_Forest_127.score0(data,preds);
    h2o_rf_05_Forest_128.score0(data,preds);
    h2o_rf_05_Forest_129.score0(data,preds);
    h2o_rf_05_Forest_130.score0(data,preds);
    h2o_rf_05_Forest_131.score0(data,preds);
    h2o_rf_05_Forest_132.score0(data,preds);
    h2o_rf_05_Forest_133.score0(data,preds);
    h2o_rf_05_Forest_134.score0(data,preds);
    h2o_rf_05_Forest_135.score0(data,preds);
    h2o_rf_05_Forest_136.score0(data,preds);
    h2o_rf_05_Forest_137.score0(data,preds);
    h2o_rf_05_Forest_138.score0(data,preds);
    h2o_rf_05_Forest_139.score0(data,preds);
    h2o_rf_05_Forest_140.score0(data,preds);
    h2o_rf_05_Forest_141.score0(data,preds);
    h2o_rf_05_Forest_142.score0(data,preds);
    h2o_rf_05_Forest_143.score0(data,preds);
    h2o_rf_05_Forest_144.score0(data,preds);
    h2o_rf_05_Forest_145.score0(data,preds);
    h2o_rf_05_Forest_146.score0(data,preds);
    h2o_rf_05_Forest_147.score0(data,preds);
    h2o_rf_05_Forest_148.score0(data,preds);
    h2o_rf_05_Forest_149.score0(data,preds);
    h2o_rf_05_Forest_150.score0(data,preds);
    h2o_rf_05_Forest_151.score0(data,preds);
    h2o_rf_05_Forest_152.score0(data,preds);
    h2o_rf_05_Forest_153.score0(data,preds);
    h2o_rf_05_Forest_154.score0(data,preds);
    h2o_rf_05_Forest_155.score0(data,preds);
    h2o_rf_05_Forest_156.score0(data,preds);
    h2o_rf_05_Forest_157.score0(data,preds);
    h2o_rf_05_Forest_158.score0(data,preds);
    h2o_rf_05_Forest_159.score0(data,preds);
    h2o_rf_05_Forest_160.score0(data,preds);
    h2o_rf_05_Forest_161.score0(data,preds);
    h2o_rf_05_Forest_162.score0(data,preds);
    h2o_rf_05_Forest_163.score0(data,preds);
    h2o_rf_05_Forest_164.score0(data,preds);
    h2o_rf_05_Forest_165.score0(data,preds);
    h2o_rf_05_Forest_166.score0(data,preds);
    h2o_rf_05_Forest_167.score0(data,preds);
    h2o_rf_05_Forest_168.score0(data,preds);
    h2o_rf_05_Forest_169.score0(data,preds);
    h2o_rf_05_Forest_170.score0(data,preds);
    h2o_rf_05_Forest_171.score0(data,preds);
    h2o_rf_05_Forest_172.score0(data,preds);
    h2o_rf_05_Forest_173.score0(data,preds);
    h2o_rf_05_Forest_174.score0(data,preds);
    h2o_rf_05_Forest_175.score0(data,preds);
    h2o_rf_05_Forest_176.score0(data,preds);
    h2o_rf_05_Forest_177.score0(data,preds);
    h2o_rf_05_Forest_178.score0(data,preds);
    h2o_rf_05_Forest_179.score0(data,preds);
    h2o_rf_05_Forest_180.score0(data,preds);
    h2o_rf_05_Forest_181.score0(data,preds);
    h2o_rf_05_Forest_182.score0(data,preds);
    h2o_rf_05_Forest_183.score0(data,preds);
    h2o_rf_05_Forest_184.score0(data,preds);
    h2o_rf_05_Forest_185.score0(data,preds);
    h2o_rf_05_Forest_186.score0(data,preds);
    h2o_rf_05_Forest_187.score0(data,preds);
    h2o_rf_05_Forest_188.score0(data,preds);
    h2o_rf_05_Forest_189.score0(data,preds);
    h2o_rf_05_Forest_190.score0(data,preds);
    h2o_rf_05_Forest_191.score0(data,preds);
    h2o_rf_05_Forest_192.score0(data,preds);
    h2o_rf_05_Forest_193.score0(data,preds);
    h2o_rf_05_Forest_194.score0(data,preds);
    h2o_rf_05_Forest_195.score0(data,preds);
    h2o_rf_05_Forest_196.score0(data,preds);
    h2o_rf_05_Forest_197.score0(data,preds);
    h2o_rf_05_Forest_198.score0(data,preds);
    h2o_rf_05_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_05 implements java.io.Serializable {
  public static final String[] VALUES = new String[13];
  static {
    NamesHolder_h2o_rf_05_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_05_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X5";
      sa[1] = "X12";
      sa[2] = "X15";
      sa[3] = "X17";
      sa[4] = "X18";
      sa[5] = "X19";
      sa[6] = "X20";
      sa[7] = "X21";
      sa[8] = "X23";
      sa[9] = "X27";
      sa[10] = "X28";
      sa[11] = "X34";
      sa[12] = "X35";
    }
  }
}
// The class representing column Label
class h2o_rf_05_ColInfo_13 implements java.io.Serializable {
  public static final String[] VALUES = new String[5];
  static {
    h2o_rf_05_ColInfo_13_0.fill(VALUES);
  }
  static final class h2o_rf_05_ColInfo_13_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "4";
      sa[3] = "5";
      sa[4] = "6";
    }
  }
}

class h2o_rf_05_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_0_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.049566906f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20332633f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14675799f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24898389f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[2 /* X15 */] <0.08068611f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.28720158f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (data[9 /* X27 */] <0.18191555f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24322233f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22025588f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19907948f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.2953338f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[12 /* X35 */] <0.13476562f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13755344f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.578125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[12 /* X35 */] <-0.1328125f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.13750018f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02716858f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.019233283f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2528616f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28331447f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13887806f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
             (data[11 /* X34 */] <-0.8875f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33004126f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.6232507f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2558736f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2160776f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_1_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[4 /* X18 */] <-0.44815132f ? 
             (data[3 /* X17 */] <-0.23621963f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.0934156f ? 
                 (data[9 /* X27 */] <0.25567278f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10285599f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.10654356f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17024717f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16245042f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.18343711f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.14249167f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2453125f ? 
             (data[10 /* X28 */] <-0.40440747f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.13627422f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.14569743f ? 
            0.0f : 
             (data[0 /* X5 */] <0.11361167f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.24076131f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4890625f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.028080627f ? 
            0.0f : 
             (data[3 /* X17 */] <0.0678806f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.79375f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1401222f ? 
             (data[3 /* X17 */] <-0.25712472f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.12572539f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.11119976f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.12236625f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.41657564f ? 
                                1.0f : 
                                0.0f))))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625f ? 
             (data[10 /* X28 */] <0.11352056f ? 
                 (data[7 /* X21 */] <0.14172518f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_2_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[4 /* X18 */] <-0.47540003f ? 
             (data[6 /* X20 */] <-0.09263304f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <0.33112046f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.5390625f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.17545715f ? 
             (data[7 /* X21 */] <0.15099183f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.22533984f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0021959757f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X28 */] <-0.33079332f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18478784f ? 
                 (data[5 /* X19 */] <0.010725866f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.22698279f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
        0.7777778f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15583928f ? 
            0.0f : 
             (data[6 /* X20 */] <0.24571384f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19720717f ? 
             (data[10 /* X28 */] <-0.14412892f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                     (data[5 /* X19 */] <0.04505386f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.4396403f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[1 /* X12 */] <-0.5276083f ? 
            1.0f : 
            0.0f) : 
         (data[1 /* X12 */] <-0.3860078f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_3_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[2 /* X15 */] <0.092960976f ? 
             (data[1 /* X12 */] <-0.50649244f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51420313f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.174431f ? 
                    0.0f : 
                    1.0f))) : 
         (data[10 /* X28 */] <-0.337366f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25428852f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
        0.01724138f : 
         (data[10 /* X28 */] <-0.337366f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9547457f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[2 /* X15 */] <0.111600585f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.6671875f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.015222805f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[2 /* X15 */] <0.12705782f ? 
             (data[11 /* X34 */] <-0.9541667f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08088584f ? 
                 (data[5 /* X19 */] <0.107988514f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[11 /* X34 */] <-0.8890625f ? 
             (data[1 /* X12 */] <-0.40712366f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11089148f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_4_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.049566906f ? 
             (data[6 /* X20 */] <-0.3701476f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <0.086175494f ? 
                1.0f : 
                0.0f)) : 
        0.017857144f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14007013f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12864286f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19589426f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.34254992f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[1 /* X12 */] <-0.49779764f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45905098f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10098175f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.032019194f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.4651001f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1569879f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18224238f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.044727113f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[3 /* X17 */] <-0.6871726f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.32027882f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3938242f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10469277f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.24838586f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[1 /* X12 */] <-0.5959243f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1424404f ? 
                 (data[8 /* X23 */] <0.09821709f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.31769177f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_5_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[12 /* X35 */] <-0.13476562f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3105194f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[6 /* X20 */] <-0.28624782f ? 
             (data[2 /* X15 */] <0.14102422f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11398583f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17602941f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.018157646f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23984262f ? 
             (data[11 /* X34 */] <-0.57662356f ? 
                 (data[5 /* X19 */] <0.090824515f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26017612f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.08081545f ? 
                        1.0f : 
                        0.0f))) : 
             (data[7 /* X21 */] <0.24238689f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23525849f ? 
                 (data[11 /* X34 */] <-0.8877441f ? 
                     (data[8 /* X23 */] <0.1293665f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.114673376f ? 
                 (data[5 /* X19 */] <0.23957916f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.038594764f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2531975f ? 
             (data[1 /* X12 */] <-0.4096079f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19047256f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_6_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16537012f ? 
             (data[10 /* X28 */] <-0.3123898f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.13524106f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.17878056f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18448095f ? 
             (data[12 /* X35 */] <-0.88671875f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17112286f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.18553686f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24435098f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.6671875f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33398113f ? 
                 (data[1 /* X12 */] <-0.42948163f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <8.505609E-4f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3790312f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[11 /* X34 */] <-0.4890625f ? 
             (data[9 /* X27 */] <0.13474737f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.14453071f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.32907298f ? 
                        0.0f : 
                        1.0f))) : 
             (data[4 /* X18 */] <-0.51923496f ? 
                 (data[0 /* X5 */] <0.15236415f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[5 /* X19 */] <0.12515251f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.026587406f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2528616f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.77778f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[3 /* X17 */] <-0.34522483f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.74641234f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.2645186f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_7_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05933301f ? 
             (data[12 /* X35 */] <-0.265625f ? 
                 (data[7 /* X21 */] <0.14835407f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16830514f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18669568f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17794625f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2265625f ? 
                     (data[7 /* X21 */] <0.09940196f ? 
                         (data[9 /* X27 */] <0.40254098f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14752278f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22161976f ? 
                 (data[4 /* X18 */] <-0.17566402f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
             (data[12 /* X35 */] <-0.46484375f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12640692f ? 
             (data[2 /* X15 */] <0.14524281f ? 
                 (data[3 /* X17 */] <-0.089883894f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.11812394f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.14365189f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[9 /* X27 */] <0.09062228f ? 
            0.0f : 
             (data[0 /* X5 */] <0.124759644f ? 
                 (data[5 /* X19 */] <0.211301f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14385225f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[12 /* X35 */] <-0.46875f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.12796707f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09527561f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[1 /* X12 */] <-0.5276083f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.15344477f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.3984375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_8_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (data[0 /* X5 */] <0.081494875f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.17604235f ? 
                 (data[0 /* X5 */] <0.14192906f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
             (data[10 /* X28 */] <-0.10732185f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.15625f ? 
                     (data[1 /* X12 */] <-0.41457632f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.111600585f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[12 /* X35 */] <-0.62109375f ? 
             (data[10 /* X28 */] <-0.2019686f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16454498f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3764282f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44818762f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.23019624f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.8875f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[7 /* X21 */] <0.09157627f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11168875f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.12452225f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (data[0 /* X5 */] <0.13670391f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.35802466f ? 
                 (data[0 /* X5 */] <0.13978536f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[3 /* X17 */] <0.004189078f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.023191407f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_9_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.049566906f ? 
         (data[5 /* X19 */] <0.2939318f ? 
             (data[0 /* X5 */] <0.10830311f ? 
                 (data[0 /* X5 */] <0.07853577f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.1914228f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22265625f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.039364137f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.07386674f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.27233762f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24753335f ? 
             (data[10 /* X28 */] <-0.3781167f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.012236361f ? 
             (data[1 /* X12 */] <-0.21335459f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
        0.7777778f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.007175522f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.0573694f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[2 /* X15 */] <0.14115119f ? 
             (data[0 /* X5 */] <0.14599389f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.16504546f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.23726985f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.114058204f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.5185266f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23445807f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.0038785639f ? 
             (data[1 /* X12 */] <-0.48910287f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_10_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
            1.0f : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2660629f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.1205128f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.35448006f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08930272f ? 
            0.0f : 
             (data[3 /* X17 */] <0.19240557f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04398346f ? 
            0.0f : 
             (data[9 /* X27 */] <0.13779047f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.066669114f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11468749f ? 
             (data[1 /* X12 */] <-0.46922913f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19233502f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09208435f ? 
                 (data[1 /* X12 */] <-0.48910287f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <8.505609E-4f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_11_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[1 /* X12 */] <-0.29036537f ? 
            0.0f : 
             (data[5 /* X19 */] <0.3196778f ? 
                 (data[2 /* X15 */] <0.10250809f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9511554f ? 
                     (data[11 /* X34 */] <-0.2f ? 
                         (data[3 /* X17 */] <-0.1838183f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.3137444f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.20252551f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.094112076f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18486312f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.31449458f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.88639534f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.421875f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.010161966f ? 
             (data[5 /* X19 */] <0.11084918f ? 
                 (data[2 /* X15 */] <0.15888155f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.31023914f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0573694f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (data[11 /* X34 */] <-0.24375f ? 
             (data[5 /* X19 */] <0.13087384f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.47421533f ? 
                         (data[0 /* X5 */] <0.1334997f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.25264508f ? 
             (data[5 /* X19 */] <0.13945584f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.44268644f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13516474f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[1 /* X12 */] <-0.51270294f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X18 */] <-0.15670839f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_12_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26757812f ? 
             (data[2 /* X15 */] <0.14069657f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20798914f ? 
                         (data[11 /* X34 */] <-0.08055641f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[9 /* X27 */] <-0.011321876f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[6 /* X20 */] <-0.55169296f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1929677f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.17466724f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25455004f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.1780781f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.04296875f ? 
             (data[8 /* X23 */] <0.15425861f ? 
                 (data[11 /* X34 */] <-0.18125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47527313f ? 
                1.0f : 
                0.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3501374f ? 
            0.0f : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_13_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.049566906f ? 
         (data[1 /* X12 */] <-0.32887077f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1328125f ? 
                     (data[6 /* X20 */] <-0.45404732f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.07386674f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2702142f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (data[9 /* X27 */] <0.18343711f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21203336f ? 
                 (data[12 /* X35 */] <-0.4453125f ? 
                     (data[9 /* X27 */] <0.12073991f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06640625f ? 
             (data[0 /* X5 */] <0.11361167f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.18197949f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.31704736f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[9 /* X27 */] <-0.113266036f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2460989f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.17898846f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17570266f ? 
             (data[0 /* X5 */] <0.11838937f ? 
                 (data[9 /* X27 */] <0.2442993f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.19052947f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.24530049f ? 
                     (data[9 /* X27 */] <0.037367873f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17112286f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.30316567f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.28534982f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19349454f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.51270294f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <0.13476562f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_14_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.26532516f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.621875f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.04375f ? 
             (data[12 /* X35 */] <-0.69140625f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3173339f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.3701476f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11647005f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1746601f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[10 /* X28 */] <-0.3570841f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.071754105f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.0f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.3328125f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.07509412f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.012840458f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.7328125f ? 
             (data[5 /* X19 */] <0.2538825f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05365369f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[4 /* X18 */] <-0.30598402f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.178125f ? 
             (data[1 /* X12 */] <-0.5040082f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.14247134f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3833343f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.079468995f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[10 /* X28 */] <-0.008731487f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6429466f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_15_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[1 /* X12 */] <-0.34129184f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.191329f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12572539f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.119116955f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.17798407f ? 
                    0.0f : 
                    1.0f))) : 
         (data[8 /* X23 */] <0.11872713f ? 
             (data[5 /* X19 */] <-0.012159463f ? 
                 (data[1 /* X12 */] <-0.42948163f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25708047f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20452265f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.25192103f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16090271f ? 
             (data[7 /* X21 */] <0.011447034f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.10941885f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2558736f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45731694f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.036443487f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[5 /* X19 */] <0.20382082f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15599185f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.015304178f ? 
                     (data[11 /* X34 */] <-0.2f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.54676235f ? 
                             (data[2 /* X15 */] <0.13292697f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.032397326f ? 
             (data[5 /* X19 */] <0.35114515f ? 
                 (data[8 /* X23 */] <0.124554f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
        0.85714287f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_16_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5127728f ? 
            0.0f : 
             (data[2 /* X15 */] <0.1470613f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1941232f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.874647f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1941232f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[1 /* X12 */] <-0.49779764f ? 
            0.0f : 
             (data[2 /* X15 */] <0.09614335f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025094183f ? 
            0.0f : 
             (data[10 /* X28 */] <0.0057284324f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53279746f ? 
             (data[3 /* X17 */] <-0.5975793f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.28067437f ? 
                     (data[12 /* X35 */] <0.140625f ? 
                        0.0f : 
                        1.0f) : 
                     (data[0 /* X5 */] <0.121574506f ? 
                         (data[6 /* X20 */] <-0.07542284f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[12 /* X35 */] <-0.64453125f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[1 /* X12 */] <-0.5176714f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.037039958f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17539084f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.37905726f ? 
                     (data[7 /* X21 */] <0.12646247f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_17_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[2 /* X15 */] <0.0879601f ? 
             (data[6 /* X20 */] <0.038594764f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (data[8 /* X23 */] <0.04127115f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16792768f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (data[11 /* X34 */] <-0.9775604f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.036443487f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.16336873f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.12116657f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[11 /* X34 */] <-0.84417117f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.128843f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06681774f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.024018928f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[11 /* X34 */] <-0.3546875f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24294287f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15807809f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.16024457f ? 
                     (data[0 /* X5 */] <0.15130244f ? 
                        0.0f : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.5040082f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_18_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[0 /* X5 */] <0.1271485f ? 
            0.0f : 
             (data[2 /* X15 */] <0.0934156f ? 
                 (data[6 /* X20 */] <0.040746037f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.13497183f ? 
                     (data[12 /* X35 */] <-0.0625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3125f ? 
             (data[9 /* X27 */] <0.20169577f ? 
                 (data[9 /* X27 */] <0.11871603f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26251677f ? 
             (data[6 /* X20 */] <-0.29055038f ? 
                 (data[2 /* X15 */] <0.14582884f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[4 /* X18 */] <-0.18632658f ? 
            1.0f : 
             (data[2 /* X15 */] <0.14797056f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.029853767f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12546325f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.04f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[5 /* X19 */] <0.16520184f ? 
            0.0f : 
             (data[12 /* X35 */] <0.0f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1896937f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13378419f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.095512025f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.29782346f ? 
             (data[9 /* X27 */] <0.24125619f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918751f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16881935f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.18333188f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.05191946f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[5 /* X19 */] <0.51420313f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_05_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_19_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (data[10 /* X28 */] <-0.10695437f ? 
                 (data[12 /* X35 */] <-0.0234375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.07353204f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.5546875f ? 
                 (data[3 /* X17 */] <-0.5497962f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[10 /* X28 */] <-0.32684973f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6715397f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.13791105f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[11 /* X34 */] <-0.7328125f ? 
             (data[10 /* X28 */] <-0.102298945f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <0.11657051f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1760913f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3075042f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14249167f ? 
             (data[10 /* X28 */] <-0.10835931f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2890625f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21669383f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.09374146f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[7 /* X21 */] <0.09484685f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2699506f ? 
             (data[10 /* X28 */] <-0.2833801f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10984325f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.11892023f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.41706052f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.031078635f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_20_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[5 /* X19 */] <0.15232883f ? 
             (data[8 /* X23 */] <0.12479348f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46874735f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.37882176f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.009800321f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.27389422f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[12 /* X35 */] <-0.46679688f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20278941f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15780555f ? 
             (data[11 /* X34 */] <0.0f ? 
                 (data[11 /* X34 */] <-0.6640625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.10941885f ? 
             (data[1 /* X12 */] <-0.43196586f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X23 */] <0.10399457f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.975f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4569898f ? 
            0.0f : 
             (data[9 /* X27 */] <0.23212686f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.2f ? 
                     (data[6 /* X20 */] <-0.12705345f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[1 /* X12 */] <-0.46798703f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.575f ? 
                 (data[12 /* X35 */] <0.71141434f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.02150289f ? 
                         (data[8 /* X23 */] <0.11305695f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6658184f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19296429f ? 
            0.0f : 
             (data[8 /* X23 */] <0.14905888f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_21_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.049566906f ? 
         (data[8 /* X23 */] <0.13201533f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5256458f ? 
                 (data[10 /* X28 */] <-0.14675799f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2953338f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.2971593f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14756228f ? 
                     (data[7 /* X21 */] <0.13241374f ? 
                         (data[7 /* X21 */] <0.09743144f ? 
                            0.0f : 
                            1.0f) : 
                         (data[2 /* X15 */] <0.115426965f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07735038f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1417561f ? 
                                    1.0f : 
                                     (data[3 /* X17 */] <-0.3159123f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f))) : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4676429f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_05_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36164415f ? 
             (data[6 /* X20 */] <-0.37229884f ? 
                 (data[6 /* X20 */] <-0.5294932f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[9 /* X27 */] <0.101273164f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22137544f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31070128f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[6 /* X20 */] <0.041821677f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45905098f ? 
             (data[5 /* X19 */] <0.107988514f ? 
                 (data[5 /* X19 */] <0.06411818f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.29459655f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15261236f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[2 /* X15 */] <0.14115119f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12801318f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.22037213f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.114058204f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15433195f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13799559f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16344914f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[11 /* X34 */] <-0.2875f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17429459f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.14600202f ? 
                     (data[5 /* X19 */] <0.6744004f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_05_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10295122f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25811976f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35993746f ? 
             (data[0 /* X5 */] <0.11892023f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_22_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.24414062f ? 
             (data[0 /* X5 */] <0.1422779f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.13524106f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.16699661f ? 
                         (data[3 /* X17 */] <-0.23920608f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.044444446f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6915644f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10653317f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.34254992f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30180037f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.26757812f ? 
            0.0f : 
             (data[0 /* X5 */] <0.121574506f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X19 */] <0.14374684f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.029620938f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18421552f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-2.905869E-4f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08484718f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.47419757f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <0.029320195f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_23_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[12 /* X35 */] <-0.5332031f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19623487f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <0.15232883f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2591198f ? 
             (data[1 /* X12 */] <-0.3442571f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.35887566f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X19 */] <0.15232883f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15888059f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.61032593f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[12 /* X35 */] <0.13476562f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.034053516f ? 
            0.0f : 
             (data[7 /* X21 */] <0.16461925f ? 
                 (data[8 /* X23 */] <0.080884665f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[1 /* X12 */] <-0.5276083f ? 
            0.0f : 
             (data[5 /* X19 */] <0.13945584f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15187934f ? 
                     (data[1 /* X12 */] <-0.3287554f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15583724f ? 
                             (data[5 /* X19 */] <0.27462232f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.50924516f ? 
                                     (data[8 /* X23 */] <0.1094308f ? 
                                        1.0f : 
                                         (data[8 /* X23 */] <0.133443f ? 
                                            0.0f : 
                                             (data[8 /* X23 */] <0.15838902f ? 
                                                1.0f : 
                                                0.0f))) : 
                                    0.0f)) : 
                            1.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.537419f ? 
            1.0f : 
            0.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_24_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[12 /* X35 */] <-0.13476562f ? 
             (data[6 /* X20 */] <-0.279794f ? 
                 (data[7 /* X21 */] <0.13103151f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2694179f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13492715f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[0 /* X5 */] <0.13643847f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22080724f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.088074096f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10205739f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3501374f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17174391f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
             (data[6 /* X20 */] <-0.07327156f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08876809f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.027496338f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.46813622f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04935114f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[12 /* X35 */] <-0.46484375f ? 
            0.0f : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_25_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18805842f ? 
             (data[7 /* X21 */] <0.09530737f ? 
                 (data[11 /* X34 */] <-0.2f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <0.08605762f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.0879601f ? 
             (data[4 /* X18 */] <-0.1072389f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[7 /* X21 */] <0.08530766f ? 
             (data[2 /* X15 */] <0.20252551f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.66796875f ? 
                 (data[11 /* X34 */] <0.18125f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.2682139f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05654253f ? 
             (data[12 /* X35 */] <-0.46484375f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.07938185f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23899055f ? 
                 (data[7 /* X21 */] <0.08686397f ? 
                     (data[4 /* X18 */] <-0.11305837f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.23212686f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[8 /* X23 */] <0.15570298f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16516435f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                     (data[5 /* X19 */] <0.17092317f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.42688584f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.111485936f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <2.7656555E-4f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.55f ? 
                     (data[1 /* X12 */] <-0.39470255f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08088584f ? 
             (data[4 /* X18 */] <-0.24766333f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.30252197f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_05_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20849955f ? 
             (data[7 /* X21 */] <0.12604308f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22387719f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22667913f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.060937025f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.40008986f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[12 /* X35 */] <0.3125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_05_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_26_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0453125f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.29055038f ? 
                 (data[9 /* X27 */] <0.025195435f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[2 /* X15 */] <0.16115467f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.03370771f ? 
                 (data[11 /* X34 */] <-0.78125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.1651047f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19587962f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14993352f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9533154f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36164415f ? 
                 (data[10 /* X28 */] <-0.36234224f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.353125f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.378125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.153688f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2928496f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
        0.035714287f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12116657f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2528616f ? 
                     (data[2 /* X15 */] <0.12747109f ? 
                         (data[9 /* X27 */] <0.26294115f ? 
                            1.0f : 
                            0.0f) : 
                         (data[11 /* X34 */] <-0.925f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (data[1 /* X12 */] <-0.47295547f ? 
            1.0f : 
            0.0f) : 
         (data[2 /* X15 */] <0.14569743f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.58847165f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_27_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09943462f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (data[11 /* X34 */] <-0.15625f ? 
                     (data[12 /* X35 */] <-0.21875f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X27 */] <0.18343711f ? 
                         (data[3 /* X17 */] <-0.6586452f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
        0.7777778f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13710399f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.7109375f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09943462f ? 
             (data[11 /* X34 */] <-0.178125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17566402f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.42436558f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2680074f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.38732544f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2554907f ? 
             (data[2 /* X15 */] <0.07250287f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_28_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[4 /* X18 */] <-0.2005433f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
                 (data[5 /* X19 */] <0.15169844f ? 
                     (data[4 /* X18 */] <0.20759526f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.19739586f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X19 */] <-0.013589796f ? 
             (data[6 /* X20 */] <0.042897314f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90611434f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3589164f ? 
                 (data[6 /* X20 */] <-0.45834985f ? 
                     (data[0 /* X5 */] <0.11732766f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2453125f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.07938185f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21182004f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15261236f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.3499866f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14249167f ? 
             (data[12 /* X35 */] <-0.4688797f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.019468633f ? 
                     (data[4 /* X18 */] <-0.46584395f ? 
                         (data[10 /* X28 */] <-0.1783069f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[5 /* X19 */] <0.40263712f ? 
             (data[6 /* X20 */] <-0.10984325f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17565027f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6186174f ? 
             (data[2 /* X15 */] <0.119783826f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23323318f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.074084416f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.50649244f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.178125f ? 
             (data[0 /* X5 */] <0.118040204f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.10029782f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17332427f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.13940853f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_05_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_29_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (data[2 /* X15 */] <0.0970526f ? 
                     (data[10 /* X28 */] <-0.19933952f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51420313f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.125348f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.5426798f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
        0.7777778f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.38589674f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[6 /* X20 */] <0.24621175f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2528616f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16695026f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.24602057f ? 
             (data[1 /* X12 */] <-0.5288504f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_30_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20307828f ? 
             (data[8 /* X23 */] <0.0647582f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.2f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22577567f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18751332f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.41379422f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2694179f ? 
             (data[7 /* X21 */] <0.03652149f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
        0.046511628f : 
         (data[5 /* X19 */] <0.07938185f ? 
             (data[8 /* X23 */] <0.049108546f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1760913f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.84375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.164043f ? 
             (data[5 /* X19 */] <0.08796385f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15367249f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0625f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X18 */] <-0.2645186f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_31_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
         (data[12 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24219252f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.3721099f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[8 /* X23 */] <0.02359089f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.45404732f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.033141468f ? 
             (data[11 /* X34 */] <-0.396875f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.14412892f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[5 /* X19 */] <0.11227951f ? 
             (data[2 /* X15 */] <0.12523933f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.015600341f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.023792226f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X34 */] <-0.778125f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.121574506f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.25977966f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17505752f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (data[12 /* X35 */] <0.0f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13696933f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.20767522f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.21715063f ? 
                    1.0f : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.35337314f ? 
             (data[8 /* X23 */] <0.12537123f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4116703f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.22065622f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (data[8 /* X23 */] <0.1025502f ? 
             (data[2 /* X15 */] <0.10705434f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.5735663f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X17 */] <0.004189078f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.023191407f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_32_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.059998475f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.561742f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7459171f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5082583f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X5 */] <0.164043f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[10 /* X28 */] <-0.33079332f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11103999f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.7578125f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[10 /* X28 */] <-0.20854129f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08984375f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.12594898f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.008496876f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <0.07938185f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22137544f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (data[10 /* X28 */] <-0.10337824f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
                 (data[9 /* X27 */] <0.019109216f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.09090909f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (data[1 /* X12 */] <-0.49779764f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.012236361f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.265625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_33_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18805842f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17734534f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17996867f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13169411f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14790338f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[7 /* X21 */] <0.11479263f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5942569f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2671875f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.058911983f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18103038f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20616251f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[11 /* X34 */] <-0.7328125f ? 
             (data[2 /* X15 */] <0.14160581f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.009800321f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.64375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.22265625f ? 
            0.0f : 
             (data[2 /* X15 */] <0.103417344f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.114058204f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18793151f ? 
                 (data[5 /* X19 */] <0.066485494f ? 
                    0.0f : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.14390558f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.240343f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (data[9 /* X27 */] <8.505609E-4f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_34_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.028914023f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20047842f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.048073683f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20922709f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.475f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.59121376f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
             (data[6 /* X20 */] <-0.29017922f ? 
                 (data[8 /* X23 */] <0.1698578f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[2 /* X15 */] <0.14569743f ? 
             (data[6 /* X20 */] <0.18862025f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1897895f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19921875f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.032397326f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5181791f ? 
                 (data[1 /* X12 */] <-0.5767291f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.0625f ? 
                         (data[1 /* X12 */] <-0.22247368f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.34424064f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[2 /* X15 */] <0.07341211f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.17742904f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_35_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10600731f ? 
             (data[9 /* X27 */] <0.20778199f ? 
                 (data[0 /* X5 */] <0.14126997f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18724085f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13794647f ? 
                            1.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14217319f ? 
                                1.0f : 
                                 (data[12 /* X35 */] <-0.355557f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17721735f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.359375f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10529106f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.009426355f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.110259496f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.59765625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.067885704f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19876954f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23182301f ? 
                     (data[2 /* X15 */] <0.094888195f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
        0.032258064f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (data[1 /* X12 */] <-0.53754514f ? 
            1.0f : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_36_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10337824f ? 
             (data[10 /* X28 */] <-0.25927937f ? 
                 (data[2 /* X15 */] <0.14615206f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.36635992f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.16275117f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20795062f ? 
                             (data[12 /* X35 */] <-0.5f ? 
                                 (data[5 /* X19 */] <0.59074724f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5937553f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.23821308f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.37521064f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.110259496f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2598082f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11089148f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.067885704f ? 
             (data[11 /* X34 */] <-0.24375f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12353603f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1221536f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.114673376f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35993746f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2804669f ? 
            0.0f : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_37_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (data[11 /* X34 */] <-0.1546875f ? 
             (data[10 /* X28 */] <-0.13624169f ? 
                 (data[5 /* X19 */] <0.29107115f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05404657f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.012132851f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.13887806f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[7 /* X21 */] <0.15998593f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.110259496f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.5169453f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.14615206f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5328125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (data[11 /* X34 */] <-0.24375f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23445807f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.13981491f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7544991f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0488982f ? 
             (data[1 /* X12 */] <-0.5288504f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33436295f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_38_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (data[5 /* X19 */] <0.06364819f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.3350813f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18533294f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.13594058f ? 
                             (data[4 /* X18 */] <-0.08353324f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[5 /* X19 */] <0.07795152f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82744604f ? 
             (data[12 /* X35 */] <-0.88671875f ? 
                 (data[10 /* X28 */] <-0.23614658f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.4f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[3 /* X17 */] <0.035546735f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3499866f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (data[0 /* X5 */] <0.15714186f ? 
             (data[12 /* X35 */] <-0.1796875f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.4f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23708715f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7544991f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08482306f ? 
             (data[1 /* X12 */] <-0.5288504f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.04296875f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17770158f ? 
                     (data[9 /* X27 */] <-0.09652893f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_39_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[10 /* X28 */] <-0.34525326f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.3599235f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.2f ? 
                     (data[12 /* X35 */] <-0.69059753f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.17878056f ? 
             (data[2 /* X15 */] <0.1652463f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20707177f ? 
             (data[10 /* X28 */] <-0.34521303f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[2 /* X15 */] <0.1302402f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07445839f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13755344f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[3 /* X17 */] <-0.6871726f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.1485662f ? 
                 (data[11 /* X34 */] <-0.15625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08591526f ? 
             (data[9 /* X27 */] <0.067798965f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.84375f ? 
                     (data[5 /* X19 */] <0.33112046f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4947366f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11089148f ? 
             (data[1 /* X12 */] <-0.45680803f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_40_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13458048f ? 
             (data[12 /* X35 */] <-0.0234375f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.34525326f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.22707021f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25428852f ? 
             (data[10 /* X28 */] <-0.264974f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6057444f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.19589426f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20505527f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.08146962f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (data[6 /* X20 */] <0.018157646f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.16336873f ? 
            0.0f : 
             (data[5 /* X19 */] <0.019307865f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[6 /* X20 */] <-0.0829523f ? 
             (data[12 /* X35 */] <0.0f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47358242f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7087284f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08484718f ? 
            0.0f : 
             (data[2 /* X15 */] <0.087050855f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
            1.0f : 
             (data[10 /* X28 */] <0.4944211f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_41_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18506038f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25253424f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.0879601f ? 
             (data[1 /* X12 */] <-0.40463945f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18506038f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13755344f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
             (data[2 /* X15 */] <0.1525168f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.031078635f ? 
                     (data[11 /* X34 */] <-0.2f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12666593f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20093349f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15807809f ? 
            0.0f : 
             (data[7 /* X21 */] <0.15872145f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.41586432f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
             (data[1 /* X12 */] <-0.45680803f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_42_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06657117f ? 
             (data[11 /* X34 */] <-0.509375f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.9604322f ? 
            1.0f : 
             (data[7 /* X21 */] <0.13315113f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10469277f ? 
                     (data[1 /* X12 */] <-0.21019866f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5625f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[10 /* X28 */] <-0.25980827f ? 
             (data[7 /* X21 */] <0.15099183f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67726105f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.23891976f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[9 /* X27 */] <-0.168042f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.821875f ? 
                 (data[10 /* X28 */] <-0.1841188f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10098175f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3055885f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[10 /* X28 */] <-0.12572539f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17649075f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.02267909f ? 
                     (data[10 /* X28 */] <-0.19564238f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (data[1 /* X12 */] <-0.40014365f ? 
                     (data[12 /* X35 */] <0.140625f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25154707f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <-0.018414037f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_43_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.042078067f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10732185f ? 
                 (data[2 /* X15 */] <0.14797056f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.22138509f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46875f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11699155f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[12 /* X35 */] <-0.265625f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[6 /* X20 */] <-0.19804554f ? 
             (data[2 /* X15 */] <0.10887284f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.08503511f ? 
                 (data[3 /* X17 */] <-0.15858695f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13492715f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51134247f ? 
             (data[11 /* X34 */] <-0.4875f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.26017612f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.01357656f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17174391f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.009552544f ? 
             (data[10 /* X28 */] <-0.12572539f ? 
                 (data[2 /* X15 */] <0.095234096f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.0390625f ? 
                     (data[9 /* X27 */] <0.35385123f ? 
                         (data[1 /* X12 */] <-0.43186882f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.46688563f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
        0.85714287f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13060956f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_44_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15342605f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.34525326f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.15524456f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[12 /* X35 */] <-0.62109375f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1796795f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.30844617f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10214122f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[12 /* X35 */] <0.0f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.8453125f ? 
             (data[12 /* X35 */] <0.19921875f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.11838937f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[12 /* X35 */] <0.0f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.31169435f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X23 */] <0.100528084f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.41168454f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.12515251f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5486102f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37474564f ? 
         (data[1 /* X12 */] <-0.4257553f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47633308f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_45_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[2 /* X15 */] <0.092960976f ? 
             (data[9 /* X27 */] <0.24734241f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.6015625f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.14069657f ? 
            1.0f : 
             (data[8 /* X23 */] <0.19007896f ? 
                 (data[5 /* X19 */] <0.15153532f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.03009887f ? 
             (data[9 /* X27 */] <0.17126468f ? 
                 (data[4 /* X18 */] <-0.16810232f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17595977f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[9 /* X27 */] <-0.009800321f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04296875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07624208f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X27 */] <0.069320515f ? 
             (data[2 /* X15 */] <0.14520429f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.3359375f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21954408f ? 
                     (data[1 /* X12 */] <-0.47577918f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46644628f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.13640167f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[6 /* X20 */] <-0.008733298f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.30533528f ? 
             (data[4 /* X18 */] <-0.26347455f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.24835129f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.2624645f ? 
                         (data[1 /* X12 */] <-0.39470255f ? 
                             (data[5 /* X19 */] <0.0044742837f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_05_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_46_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (data[10 /* X28 */] <-0.35159713f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.14281438f ? 
             (data[3 /* X17 */] <-0.40752605f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1929677f ? 
            0.0f : 
             (data[9 /* X27 */] <0.27473038f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[10 /* X28 */] <-0.116523616f ? 
            1.0f : 
             (data[9 /* X27 */] <0.067798965f ? 
                 (data[1 /* X12 */] <-0.49903977f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10600731f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.09022078f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.561742f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.19589426f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25154707f ? 
             (data[9 /* X27 */] <0.049609352f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_47_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19160154f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19585644f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0890625f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18161277f ? 
                 (data[9 /* X27 */] <0.17126468f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.16454498f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15508007f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3883338f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1660382f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.011321876f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[4 /* X18 */] <-0.16737093f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14154816f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                     (data[11 /* X34 */] <-0.7375f ? 
                         (data[0 /* X5 */] <0.1300682f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.1205128f ? 
             (data[9 /* X27 */] <0.19256644f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <0.1424404f ? 
                 (data[8 /* X23 */] <0.121327f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08562475f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16563556f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.1469198f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <-0.1780781f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.73055595f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_48_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[5 /* X19 */] <0.15232883f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.05106013f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20135483f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.26757812f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82744604f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.010072655f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.05084179f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.796875f ? 
                        1.0f : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.16351213f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[11 /* X34 */] <-0.4890625f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.07495168f ? 
                 (data[12 /* X35 */] <-0.265625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44970918f ? 
            0.0f : 
             (data[9 /* X27 */] <0.46495444f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.20051992f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (data[4 /* X18 */] <-0.41024002f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.19739586f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <0.51171875f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14063804f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (data[4 /* X18 */] <-0.2645186f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_49_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18805842f ? 
             (data[9 /* X27 */] <0.29907528f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4671402f ? 
                     (data[1 /* X12 */] <-0.32529533f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17797579f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.23088843f ? 
                    0.0f : 
                    1.0f))) : 
         (data[2 /* X15 */] <0.09205172f ? 
             (data[9 /* X27 */] <0.12866114f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8002697f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042974565f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16669726f ? 
             (data[5 /* X19 */] <0.1508985f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.07509412f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.20409748f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.6671875f ? 
             (data[5 /* X19 */] <0.22527583f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5563428f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[5 /* X19 */] <0.2939318f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11168875f ? 
                 (data[9 /* X27 */] <0.22516547f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15130244f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1759146f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16431053f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.10523584f ? 
            0.0f : 
             (data[5 /* X19 */] <0.40263712f ? 
                 (data[6 /* X20 */] <-0.10984325f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.54137945f ? 
            1.0f : 
            0.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_50_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.041821677f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17933688f ? 
                 (data[11 /* X34 */] <-0.18125f ? 
                     (data[12 /* X35 */] <-0.140625f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.32047594f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.161108f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.21325742f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[6 /* X20 */] <-0.28947476f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.26875f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.671875f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15888059f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.21740702f ? 
                 (data[7 /* X21 */] <0.17582607f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16925257f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.378125f ? 
                 (data[9 /* X27 */] <0.09214383f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.7570801f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.49131778f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[9 /* X27 */] <0.101273164f ? 
                 (data[7 /* X21 */] <0.25935325f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17174391f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
             (data[8 /* X23 */] <0.15425861f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20226462f ? 
                     (data[9 /* X27 */] <0.3781961f ? 
                         (data[11 /* X34 */] <-0.7923602f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.14149983f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7201711f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42087603f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[6 /* X20 */] <-0.24644923f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_51_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16610244f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (data[2 /* X15 */] <0.098349705f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19150668f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10458039f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.05684879f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36035275f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15373333f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.25115186f ? 
                     (data[7 /* X21 */] <0.11742863f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[8 /* X23 */] <0.14703676f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25243053f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11150161f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25889897f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.3228265f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.17524804f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1817898f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22615314f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.31023914f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15339199f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17112286f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0375f ? 
                         (data[12 /* X35 */] <-0.6875f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3125f ? 
                         (data[7 /* X21 */] <0.11742863f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[2 /* X15 */] <0.11884654f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.5199318f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.35495508f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23961191f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))) : 
        0.032258064f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_05_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1735984f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.5189135f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_52_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[6 /* X20 */] <-0.28624782f ? 
             (data[1 /* X12 */] <-0.10653317f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.3360515f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23052129f ? 
                 (data[6 /* X20 */] <-0.16209616f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31805116f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.009800321f ? 
             (data[6 /* X20 */] <0.042897314f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
        0.01724138f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18478784f ? 
             (data[1 /* X12 */] <-0.3599235f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.071715295f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.025420895f ? 
                        1.0f : 
                        0.0f))) : 
             (data[9 /* X27 */] <0.11949771f ? 
                 (data[1 /* X12 */] <-0.13137536f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[12 /* X35 */] <0.13476562f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4495591f ? 
             (data[11 /* X34 */] <-0.66875f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.036443487f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.4648073f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.18882321f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06225879f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[0 /* X5 */] <0.1271485f ? 
             (data[11 /* X34 */] <-0.265625f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.032140937f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.09593705f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13879061f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[9 /* X27 */] <0.26255795f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.4369343f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.17304875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14572845f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20986229f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.12231475f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.42699742f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.33045456f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_53_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14578941f ? 
                 (data[6 /* X20 */] <-0.32066825f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.175f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13397188f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[7 /* X21 */] <0.043062653f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.37229884f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.41581842f ? 
            0.0f : 
             (data[8 /* X23 */] <0.20996642f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[11 /* X34 */] <-0.7328125f ? 
             (data[6 /* X20 */] <0.0084769055f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.44386294f ? 
                 (data[8 /* X23 */] <0.15212224f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.17161104f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.30483204f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
        0.03448276f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17174391f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5332031f ? 
             (data[3 /* X17 */] <-0.65432173f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17202704f ? 
                    1.0f : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.09545516f ? 
                     (data[11 /* X34 */] <-0.6333325f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.14426365f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14710234f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.028094776f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19907948f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[11 /* X34 */] <-0.5546875f ? 
             (data[1 /* X12 */] <-0.57740664f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_54_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (data[6 /* X20 */] <-0.008733298f ? 
             (data[0 /* X5 */] <0.13750018f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20778199f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.37943712f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.2f ? 
             (data[9 /* X27 */] <0.2138682f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1748371f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.15625f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19007896f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9533154f ? 
         (data[6 /* X20 */] <-0.28624782f ? 
             (data[7 /* X21 */] <0.11719583f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7138826f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.1623531f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36591187f ? 
             (data[6 /* X20 */] <0.04204806f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.8453125f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.045048587f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[6 /* X20 */] <-0.18191098f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.22448476f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.421875f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23708715f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.15443115f ? 
                     (data[4 /* X18 */] <-0.048956737f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2554907f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X18 */] <-0.2645186f ? 
            0.0f : 
             (data[6 /* X20 */] <0.06225879f ? 
                 (data[9 /* X27 */] <0.30516148f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_55_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[3 /* X17 */] <-0.24219252f ? 
             (data[10 /* X28 */] <-0.25250643f ? 
                 (data[6 /* X20 */] <-0.1829866f ? 
                     (data[2 /* X15 */] <0.14376082f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.5216044f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2808166f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.44375f ? 
                 (data[2 /* X15 */] <0.09083307f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11814625f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.89096f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24753335f ? 
             (data[12 /* X35 */] <-0.80078125f ? 
                 (data[3 /* X17 */] <-0.0011253695f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
        0.7777778f : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45905098f ? 
             (data[0 /* X5 */] <0.09503171f ? 
                 (data[11 /* X34 */] <-0.75625f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10098175f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19707002f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X34 */] <-0.778125f ? 
                 (data[12 /* X35 */] <0.20312715f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.048073683f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (data[2 /* X15 */] <0.14115119f ? 
             (data[10 /* X28 */] <-0.20828967f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.18125f ? 
                     (data[12 /* X35 */] <-0.15625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <0.1667f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18914862f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.118797116f ? 
                     (data[2 /* X15 */] <0.13524106f ? 
                         (data[3 /* X17 */] <-0.49882236f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_56_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24667218f ? 
             (data[1 /* X12 */] <-0.33011287f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.33317247f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.222529f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.7109375f ? 
                 (data[0 /* X5 */] <0.15448758f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.047695976f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (data[10 /* X28 */] <-0.20596355f ? 
             (data[12 /* X35 */] <-0.62109375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05684879f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.265625f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[9 /* X27 */] <0.069320515f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.421875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.024248699f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.66875f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X27 */] <0.069320515f ? 
             (data[6 /* X20 */] <0.25157103f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14881197f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.13544157f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <0.20473887f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.38476568f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.048974376f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.375f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.119461514f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.15903263f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_57_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.12714384f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.058526237f ? 
             (data[7 /* X21 */] <0.09312294f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.078402005f ? 
                     (data[5 /* X19 */] <0.3419021f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0106281815f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.012709337f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.092960976f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.12835446f ? 
                 (data[3 /* X17 */] <-0.24517897f ? 
                     (data[9 /* X27 */] <0.30516148f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.7430564f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[7 /* X21 */] <0.13221788f ? 
                         (data[0 /* X5 */] <0.13355944f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_05_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26251677f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19841526f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.30976072f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.13385957f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.024867864f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[8 /* X23 */] <0.11872713f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13862906f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18151726f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[0 /* X5 */] <0.12767935f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.051502414f ? 
                 (data[3 /* X17 */] <-0.9586791f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5313671f ? 
                 (data[11 /* X34 */] <-0.4f ? 
                     (data[6 /* X20 */] <-0.10984325f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.6101554f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14385225f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15351126f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17094411f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17398931f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[1 /* X12 */] <-0.45680803f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31925887f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_58_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[12 /* X35 */] <-0.13476562f ? 
            1.0f : 
            0.0f) : 
         (data[8 /* X23 */] <0.04564206f ? 
            0.0f : 
             (data[5 /* X19 */] <0.15375917f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.032006603f ? 
            0.0f : 
            1.0f) : 
         (data[8 /* X23 */] <0.04564206f ? 
            1.0f : 
             (data[5 /* X19 */] <0.15375917f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (data[12 /* X35 */] <0.31054688f ? 
            1.0f : 
             (data[5 /* X19 */] <0.22527583f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2348544f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.16336873f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <0.013563812f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[1 /* X12 */] <-0.40091312f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.37816164f ? 
                 (data[5 /* X19 */] <0.050775193f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.13624169f ? 
                         (data[3 /* X17 */] <-0.1977124f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.123466775f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.47295547f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2558312f ? 
            1.0f : 
             (data[7 /* X21 */] <0.17770158f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_59_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (data[2 /* X15 */] <0.09614335f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.25115186f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12582135f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.26758763f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.12744446f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.34656778f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.019280018f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
        0.7777778f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2448056f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.44375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (data[9 /* X27 */] <0.09248637f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.14675799f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18751332f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4568615f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[6 /* X20 */] <-0.10231378f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45792955f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_60_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (data[7 /* X21 */] <0.13354874f ? 
             (data[3 /* X17 */] <-0.19739586f ? 
                 (data[7 /* X21 */] <0.09233643f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.328125f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.04375f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.20463821f ? 
                     (data[6 /* X20 */] <-0.24746026f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[7 /* X21 */] <0.11746837f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2598082f ? 
             (data[10 /* X28 */] <-0.24140474f ? 
                 (data[8 /* X23 */] <0.17216878f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3419036f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12353603f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.13887806f ? 
                 (data[10 /* X28 */] <-0.16253245f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.032258064f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053889077f ? 
            0.0f : 
             (data[6 /* X20 */] <0.0832262f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_61_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[10 /* X28 */] <-0.10863639f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19990067f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18035702f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.075f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6887037f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.048202552f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.2875f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[10 /* X28 */] <-0.24403381f ? 
             (data[5 /* X19 */] <0.36830914f ? 
                 (data[11 /* X34 */] <0.25f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.734375f ? 
             (data[8 /* X23 */] <0.15136987f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.32666036f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.088074096f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.16961698f ? 
             (data[5 /* X19 */] <0.019307865f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.09048608f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17174391f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.009552544f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53708845f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22176793f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918751f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[10 /* X28 */] <0.11220602f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.084600724f ? 
            0.0f : 
             (data[5 /* X19 */] <0.047914527f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_62_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10863639f ? 
             (data[4 /* X18 */] <-0.44104296f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.2309843f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.059438284f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X5 */] <0.14280875f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0625f ? 
                            1.0f : 
                            0.0f) : 
                         (data[11 /* X34 */] <0.075f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.11474287f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[10 /* X28 */] <-0.2506065f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.55469644f ? 
             (data[1 /* X12 */] <-0.14541702f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.12248249f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.31546184f ? 
        0.0f : 
         (data[0 /* X5 */] <0.1263522f ? 
             (data[4 /* X18 */] <-0.24453093f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13699783f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.07697907f ? 
                         (data[11 /* X34 */] <-0.725f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (data[11 /* X34 */] <-0.84375f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.35765284f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10863639f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16634355f ? 
                 (data[1 /* X12 */] <-0.37482882f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.515625f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.75f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[3 /* X17 */] <-0.38255537f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19596505f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4751264f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[10 /* X28 */] <0.26206338f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_63_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[6 /* X20 */] <-0.28624782f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.091142476f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35625f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[6 /* X20 */] <-0.36907193f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97763103f ? 
                 (data[8 /* X23 */] <0.024157071f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21102375f ? 
             (data[5 /* X19 */] <0.11943118f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.18988076f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[6 /* X20 */] <0.060107518f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.621875f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.08694295f ? 
             (data[5 /* X19 */] <0.40901077f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.14097041f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[0 /* X5 */] <0.09848227f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.44375f ? 
                 (data[4 /* X18 */] <-0.547549f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.65730816f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35393843f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.56890625f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.164043f ? 
             (data[5 /* X19 */] <0.1852265f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09865675f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16986448f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.16520184f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.41851345f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X34 */] <-0.64375f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42079964f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.21398172f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_05_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_64_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[6 /* X20 */] <-0.28624782f ? 
             (data[0 /* X5 */] <0.11847568f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.25192103f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18252203f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.09811743f ? 
                        0.0f : 
                        1.0f)))) : 
        0.017857144f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[6 /* X20 */] <-0.28624782f ? 
             (data[8 /* X23 */] <0.12479348f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
            0.0f : 
             (data[6 /* X20 */] <0.25237164f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[3 /* X17 */] <-0.61549795f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11123631f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1677906f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.067588806f ? 
                         (data[6 /* X20 */] <-0.15466905f ? 
                             (data[11 /* X34 */] <-0.2f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.032397326f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2528616f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.018414037f ? 
             (data[2 /* X15 */] <0.119783826f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11762373f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.10221093f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.15519276f ? 
                    0.0f : 
                    1.0f))) : 
         (data[6 /* X20 */] <0.23113391f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_65_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08984375f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.5960861f ? 
             (data[11 /* X34 */] <-0.26875f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.465625f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24564943f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3781961f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.1381962f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.106502995f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[12 /* X35 */] <-0.6660156f ? 
             (data[8 /* X23 */] <0.16465807f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.10883396f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.246875f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.20590192f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17773438f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07301517f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03536785f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.578125f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6660156f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10496926f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3929383f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1416475f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.75625f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07516644f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1485662f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15853757f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.17304875f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.15948051f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.12023845f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.279189f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.051880356f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[6 /* X20 */] <0.2849158f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22915323f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_66_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[12 /* X35 */] <-0.3984375f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15617025f ? 
             (data[9 /* X27 */] <0.07084207f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X17 */] <-0.44825712f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15727429f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[6 /* X20 */] <-0.37229884f ? 
            1.0f : 
             (data[8 /* X23 */] <0.023779618f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.08503511f ? 
                     (data[10 /* X28 */] <-0.08260757f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.2671875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (data[6 /* X20 */] <0.036443487f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.53237003f ? 
             (data[9 /* X27 */] <0.04345409f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[6 /* X20 */] <-0.081876665f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25057253f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15803498f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19239813f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46948937f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.089572616f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23314352f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24692889f ? 
             (data[7 /* X21 */] <0.12528428f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33173388f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_67_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[6 /* X20 */] <-0.28624782f ? 
             (data[7 /* X21 */] <0.11719583f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.3575487f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
                     (data[6 /* X20 */] <-0.16204269f ? 
                         (data[7 /* X21 */] <0.09902115f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (data[9 /* X27 */] <-0.009800321f ? 
             (data[10 /* X28 */] <-0.10206369f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[6 /* X20 */] <-0.45834985f ? 
            1.0f : 
             (data[7 /* X21 */] <0.011447034f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.21120584f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24579482f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20028007f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[9 /* X27 */] <0.09366539f ? 
             (data[4 /* X18 */] <-0.09036366f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.14599389f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.17567784f ? 
                 (data[10 /* X28 */] <-0.2484481f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[9 /* X27 */] <0.21538976f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.14412892f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18954861f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08088584f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15926528f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[6 /* X20 */] <-0.12705345f ? 
             (data[4 /* X18 */] <-0.4220873f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19514468f ? 
            0.0f : 
             (data[7 /* X21 */] <0.19870105f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_68_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[3 /* X17 */] <-0.4064469f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18633895f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.2f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.1651047f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20713681f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13634379f ? 
                         (data[7 /* X21 */] <0.15262713f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.044444446f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11618071f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15714186f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28830028f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (data[3 /* X17 */] <-0.34074515f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.22329146f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.18125f ? 
                     (data[11 /* X34 */] <-0.9296387f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06789337f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.11694468f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_69_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21087037f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.14249167f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67726105f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.0875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[5 /* X19 */] <0.11227951f ? 
             (data[8 /* X23 */] <0.12074925f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.12978557f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15373333f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.032140937f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.6671875f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.180835f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.26757812f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15310311f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012038336f ? 
             (data[1 /* X12 */] <-0.46922913f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.103354685f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[5 /* X19 */] <0.12229185f ? 
             (data[8 /* X23 */] <0.06470773f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.26102322f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.26055473f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_70_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (data[5 /* X19 */] <0.2896408f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29036537f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13474737f ? 
                    1.0f : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.53263247f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.5125f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.46679688f ? 
             (data[6 /* X20 */] <-0.3701476f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.052452385f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.18950121f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[6 /* X20 */] <-0.36907193f ? 
             (data[12 /* X35 */] <-0.64453125f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11398583f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.1430587f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.07509412f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23819678f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.6671875f ? 
             (data[9 /* X27 */] <0.20988898f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[4 /* X18 */] <-0.3225702f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X34 */] <-0.4f ? 
             (data[1 /* X12 */] <-0.5189135f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.087323874f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.14615206f ? 
                        0.0f : 
                        1.0f))) : 
             (data[4 /* X18 */] <-0.51923496f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.09717668f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18592405f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[5 /* X19 */] <0.25960383f ? 
             (data[1 /* X12 */] <-0.47419757f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1109375f ? 
             (data[4 /* X18 */] <-0.114058204f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_71_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[2 /* X15 */] <0.13387719f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.12537228f ? 
                 (data[3 /* X17 */] <-0.22128741f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14500746f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X21 */] <0.17621127f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12015864f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
             (data[6 /* X20 */] <-0.2883991f ? 
                 (data[9 /* X27 */] <0.347765f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14576182f ? 
            0.0f : 
             (data[9 /* X27 */] <0.25647172f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012038336f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08088584f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06477849f ? 
                     (data[2 /* X15 */] <0.13524106f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35385123f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1979415f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.108679995f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[2 /* X15 */] <0.07159362f ? 
            1.0f : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_72_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[5 /* X19 */] <0.15232883f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.006263474f ? 
                 (data[1 /* X12 */] <-0.3599235f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9533154f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2598082f ? 
                 (data[10 /* X28 */] <-0.24908656f ? 
                     (data[12 /* X35 */] <-0.765625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[0 /* X5 */] <0.11892023f ? 
            1.0f : 
             (data[2 /* X15 */] <0.1525168f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2445978f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48702678f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (data[12 /* X35 */] <0.2890625f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.03208926f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.10206369f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.5040082f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13887806f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_73_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19160154f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12835446f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.13386755f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.09624249f ? 
                        0.0f : 
                        1.0f))) : 
             (data[1 /* X12 */] <-0.23571256f ? 
                 (data[6 /* X20 */] <-0.24322233f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.091142476f ? 
             (data[9 /* X27 */] <0.12866114f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[7 /* X21 */] <0.13654676f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[3 /* X17 */] <0.035546735f ? 
            1.0f : 
             (data[6 /* X20 */] <0.20531441f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[7 /* X21 */] <0.09539195f ? 
             (data[7 /* X21 */] <0.08626264f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.31088072f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2138682f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22301057f ? 
                     (data[3 /* X17 */] <-0.6811997f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10743558f ? 
             (data[12 /* X35 */] <0.6223996f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17398931f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.05794506f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.107805416f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.48910287f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X28 */] <0.19502193f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_74_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[5 /* X19 */] <0.27676782f ? 
             (data[8 /* X23 */] <0.118355766f ? 
                 (data[6 /* X20 */] <0.038216468f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16498819f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046875f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.17868406f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <0.529674f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.59121376f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
            0.0f : 
             (data[2 /* X15 */] <0.17706653f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[5 /* X19 */] <-0.06937279f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <0.025195435f ? 
             (data[1 /* X12 */] <-0.49773252f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.11892023f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06656134f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (data[4 /* X18 */] <-0.35337314f ? 
             (data[6 /* X20 */] <-0.124902174f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081818305f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <0.20321733f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14599389f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.2751811f ? 
                     (data[5 /* X19 */] <0.6057444f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.36776605f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[8 /* X23 */] <0.048819672f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.31769177f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_75_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18069962f ? 
             (data[2 /* X15 */] <0.13524106f ? 
                 (data[5 /* X19 */] <0.3196778f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19157673f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.22601213f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.46875f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[7 /* X21 */] <0.08639786f ? 
             (data[4 /* X18 */] <-0.10221093f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.3701476f ? 
                 (data[8 /* X23 */] <0.12424619f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[7 /* X21 */] <0.15998593f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.18187654f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16544342f ? 
             (data[5 /* X19 */] <0.12515251f ? 
                 (data[2 /* X15 */] <0.111600585f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.12582135f ? 
                         (data[8 /* X23 */] <0.0824114f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
        0.03448276f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17174391f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11168875f ? 
             (data[3 /* X17 */] <-0.49902666f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.43410444f ? 
                     (data[6 /* X20 */] <-0.058212634f ? 
                         (data[12 /* X35 */] <0.03125f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.12576164f ? 
                                1.0f : 
                                 (data[12 /* X35 */] <0.49778f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                     (data[10 /* X28 */] <-0.13624169f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.625f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[4 /* X18 */] <-0.08207057f ? 
             (data[5 /* X19 */] <0.33398113f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_76_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.191329f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1776729f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.0375f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[2 /* X15 */] <0.14069657f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.110259496f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[9 /* X27 */] <0.025195435f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.665625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[9 /* X27 */] <0.21538976f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.081031084f ? 
                 (data[11 /* X34 */] <-0.2f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10958685f ? 
                    1.0f : 
                    0.0f))) : 
         (data[1 /* X12 */] <-0.46798703f ? 
            0.0f : 
             (data[9 /* X27 */] <0.0464972f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023600962f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
             (data[1 /* X12 */] <-0.5288504f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_77_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[7 /* X21 */] <0.12714384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1760913f ? 
             (data[6 /* X20 */] <-0.16838595f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.030155024f ? 
                     (data[11 /* X34 */] <-0.7375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.17773438f ? 
             (data[10 /* X28 */] <-0.23614658f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9547457f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14628068f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2598082f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.64453125f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15727429f ? 
                    0.0f : 
                    1.0f))) : 
         (data[8 /* X23 */] <0.14501464f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.31546184f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1052843f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18315381f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28381386f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.013855094f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.12251158f ? 
                     (data[1 /* X12 */] <-0.465375f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[1 /* X12 */] <-0.5176714f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (data[7 /* X21 */] <0.14881144f ? 
                 (data[1 /* X12 */] <-0.4394185f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_78_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[10 /* X28 */] <-0.35314047f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19144846f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.18898949f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3546875f ? 
            0.0f : 
             (data[9 /* X27 */] <0.11018142f ? 
                 (data[7 /* X21 */] <0.13736442f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[10 /* X28 */] <-0.35314047f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.178125f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18953364f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[10 /* X28 */] <-0.20854129f ? 
            1.0f : 
             (data[9 /* X27 */] <0.122574925f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24647278f ? 
                     (data[2 /* X15 */] <0.12433007f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.55404055f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15570298f ? 
             (data[5 /* X19 */] <0.20239049f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18846236f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0375f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15621755f ? 
                             (data[3 /* X17 */] <-0.4494517f ? 
                                 (data[4 /* X18 */] <-0.11216264f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.8453125f ? 
            0.0f : 
             (data[9 /* X27 */] <0.17260134f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2699506f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.3328125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_79_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[6 /* X20 */] <-0.28624782f ? 
             (data[2 /* X15 */] <0.14069657f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.07735695f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8263297f ? 
                     (data[7 /* X21 */] <0.09593705f ? 
                         (data[9 /* X27 */] <0.4755756f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.0879601f ? 
             (data[3 /* X17 */] <-0.39450115f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <0.0f ? 
         (data[6 /* X20 */] <-0.17438151f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15099183f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25253424f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21480039f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.17842767f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.005063291f ? 
                     (data[6 /* X20 */] <-0.006582022f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.011655187f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[11 /* X34 */] <-0.2f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02716858f ? 
                 (data[6 /* X20 */] <-0.07198968f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12666593f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
                 (data[5 /* X19 */] <0.07459944f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10231378f ? 
            0.0f : 
             (data[2 /* X15 */] <0.07159362f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.12515251f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14769855f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[10 /* X28 */] <0.20422369f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_80_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19094558f ? 
             (data[10 /* X28 */] <-0.14412892f ? 
                 (data[11 /* X34 */] <-0.7375f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1896937f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.3073976f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17073072f ? 
                     (data[12 /* X35 */] <-0.125f ? 
                         (data[11 /* X34 */] <-0.2f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26287517f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26065877f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
             (data[10 /* X28 */] <-0.32244176f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22240436f ? 
             (data[11 /* X34 */] <-0.734375f ? 
                 (data[9 /* X27 */] <0.019109216f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.15687643f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08403137f ? 
                 (data[7 /* X21 */] <0.09420737f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[5 /* X19 */] <0.08796385f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16739653f ? 
             (data[10 /* X28 */] <-0.14412892f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12280857f ? 
                         (data[5 /* X19 */] <0.10226718f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[4 /* X18 */] <-0.09510257f ? 
             (data[11 /* X34 */] <-0.753125f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3550962f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_81_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[12 /* X35 */] <-0.35546875f ? 
             (data[7 /* X21 */] <0.1389997f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.19935857f ? 
                     (data[1 /* X12 */] <-0.3397904f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[7 /* X21 */] <0.08530766f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.017677775f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[9 /* X27 */] <-0.168042f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (data[12 /* X35 */] <0.44442058f ? 
                 (data[7 /* X21 */] <0.08503511f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <0.17126468f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.35141498f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (data[0 /* X5 */] <0.11520424f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.13017112f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30191633f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.012236361f ? 
                         (data[1 /* X12 */] <-0.44056058f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14993435f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[11 /* X34 */] <-0.8890625f ? 
             (data[1 /* X12 */] <-0.37482882f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.45680803f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_82_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.049566906f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
             (data[10 /* X28 */] <-0.26243734f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.101564735f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20003957f ? 
                     (data[7 /* X21 */] <0.097400725f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.525f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[2 /* X15 */] <0.1247847f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.28720158f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
             (data[10 /* X28 */] <-0.35182595f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11041508f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1506983f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[8 /* X23 */] <0.120460376f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X19 */] <0.28248915f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2460989f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.38548887f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.55396986f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.10977204f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.3130924f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10074916f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19921875f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.54066247f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.175f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.38228148f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14634676f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18054612f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.29492682f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <0.053051807f ? 
            0.0f : 
             (data[0 /* X5 */] <0.13803105f ? 
                 (data[1 /* X12 */] <-0.43445006f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_83_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[5 /* X19 */] <0.15232883f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.4f ? 
                 (data[3 /* X17 */] <-0.4721487f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13283889f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.011026604f ? 
                     (data[6 /* X20 */] <-0.29055038f ? 
                         (data[9 /* X27 */] <0.3436615f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97906137f ? 
             (data[6 /* X20 */] <-0.45834985f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.2671875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21858385f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2558736f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.8453125f ? 
             (data[1 /* X12 */] <-0.23074412f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.040746037f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[7 /* X21 */] <0.09157627f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X34 */] <-0.4f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.026587406f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022946874f ? 
                     (data[12 /* X35 */] <-0.4375f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2633779f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.0897786f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3840428f ? 
            1.0f : 
             (data[3 /* X17 */] <0.09527561f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <0.23821308f ? 
             (data[2 /* X15 */] <0.10432659f ? 
                 (data[6 /* X20 */] <0.17842767f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_84_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[2 /* X15 */] <0.14069657f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (data[10 /* X28 */] <-0.35182595f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.46735907f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3546875f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06209068f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25708047f ? 
             (data[12 /* X35 */] <-0.66796875f ? 
                 (data[6 /* X20 */] <-0.17007896f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[8 /* X23 */] <0.14501464f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[2 /* X15 */] <0.1320587f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13755344f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14615206f ? 
                 (data[7 /* X21 */] <0.19732507f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14249167f ? 
             (data[12 /* X35 */] <-0.4688797f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625f ? 
                     (data[9 /* X27 */] <0.12835865f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.93333346f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.037775517f ? 
             (data[9 /* X27 */] <0.2442993f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.62158966f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09510257f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.242654f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1569879f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.27389422f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15983006f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_85_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[0 /* X5 */] <0.14254332f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.465625f ? 
                 (data[8 /* X23 */] <0.18950121f ? 
                     (data[3 /* X17 */] <-0.24114832f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.33204803f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)) : 
         (data[2 /* X15 */] <0.0934156f ? 
             (data[12 /* X35 */] <-0.021692276f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16537012f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14089337f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[2 /* X15 */] <0.11660146f ? 
            0.0f : 
             (data[9 /* X27 */] <0.11953182f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4875f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.18356507f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[3 /* X17 */] <-0.6871726f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.4875f ? 
                 (data[6 /* X20 */] <-0.1399611f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.24536134f ? 
                     (data[12 /* X35 */] <-0.31544495f ? 
                         (data[1 /* X12 */] <-0.20943101f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025094183f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07145534f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24316521f ? 
                 (data[9 /* X27 */] <0.35434595f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20876047f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.53125f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.14842518f ? 
             (data[12 /* X35 */] <-0.11328125f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.5263662f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_86_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[10 /* X28 */] <-0.2637519f ? 
            0.0f : 
             (data[7 /* X21 */] <0.09593705f ? 
                 (data[1 /* X12 */] <-0.14131224f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.017857144f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
        0.01724138f : 
         (data[9 /* X27 */] <0.20169577f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.26243734f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26875f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25479794f ? 
             (data[6 /* X20 */] <-0.039062206f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.9765625f ? 
             (data[1 /* X12 */] <-0.19099662f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15570298f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.072045214f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15621755f ? 
                     (data[4 /* X18 */] <-0.4647375f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10004294f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1964208f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.26560107f ? 
             (data[12 /* X35 */] <0.62240005f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7829296f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_87_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10337824f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1916796f ? 
                 (data[11 /* X34 */] <-0.5125f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14733842f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.12836319f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3243292f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20707177f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.246875f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.15536724f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[2 /* X15 */] <0.14569743f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.465625f ? 
                 (data[1 /* X12 */] <-0.14541702f ? 
                     (data[1 /* X12 */] <-0.15420249f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.31546184f ? 
        0.0f : 
         (data[8 /* X23 */] <0.09850597f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.08869385f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.909375f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.031078635f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.02216853f ? 
                         (data[1 /* X12 */] <-0.4487737f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[10 /* X28 */] <-0.10337824f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14081624f ? 
                 (data[11 /* X34 */] <-0.2f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-2.905869E-4f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (data[5 /* X19 */] <0.090824515f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.5749677f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[10 /* X28 */] <0.26206338f ? 
             (data[2 /* X15 */] <0.10194728f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[2 /* X15 */] <0.10023497f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15236415f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_88_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (data[7 /* X21 */] <0.14118008f ? 
             (data[11 /* X34 */] <-0.2f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <0.2808166f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13297653f ? 
                     (data[11 /* X34 */] <-0.5875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.10600731f ? 
             (data[0 /* X5 */] <0.1481173f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06541117f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11219173f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.21352343f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[7 /* X21 */] <0.011447034f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26968333f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.8833522f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12046723f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[0 /* X5 */] <0.13643847f ? 
             (data[9 /* X27 */] <-0.114787586f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.21511397f ? 
                     (data[0 /* X5 */] <0.09258718f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[2 /* X15 */] <0.15523279f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.49417844f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1138894f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.35210976f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15512523f ? 
         (data[3 /* X17 */] <-0.6677607f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.045048587f ? 
                     (data[3 /* X17 */] <-0.39374685f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17764127f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.54411423f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51992446f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.083769016f ? 
                     (data[5 /* X19 */] <0.6500848f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15528873f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.8194469f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.2344825f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.5189135f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.041220963f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_89_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[10 /* X28 */] <-0.33079332f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16979255f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.5256458f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10984325f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[12 /* X35 */] <-0.17878056f ? 
             (data[0 /* X5 */] <0.19589435f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
        0.01724138f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2007673f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4890625f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
                0.0f : 
                1.0f)) : 
         (data[8 /* X23 */] <0.09879484f ? 
             (data[0 /* X5 */] <0.1263522f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.2751811f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05365369f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
             (data[4 /* X18 */] <-0.14249167f ? 
                 (data[5 /* X19 */] <0.14803784f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05365369f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.10023921f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16775899f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09237665f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13060956f ? 
             (data[8 /* X23 */] <0.070485204f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.2657033f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_90_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
         (data[12 /* X35 */] <-0.46679688f ? 
             (data[6 /* X20 */] <-0.45834985f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[12 /* X35 */] <-0.6660156f ? 
             (data[10 /* X28 */] <-0.33868057f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.023535835f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[9 /* X27 */] <0.121053375f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.03448276f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (data[12 /* X35 */] <-0.46679688f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07934257f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.014930733f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.20234808f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046875f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
             (data[1 /* X12 */] <-0.48910287f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08377155f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_91_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20163392f ? 
                 (data[7 /* X21 */] <0.045788135f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.31481308f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24753335f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.011522892f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.36489195f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18424274f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.19886905f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1652463f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16695026f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
             (data[1 /* X12 */] <-0.53878725f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_92_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0488982f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.162185f ? 
            1.0f : 
             (data[7 /* X21 */] <0.11332925f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9661884f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.162185f ? 
            0.0f : 
             (data[8 /* X23 */] <0.14732563f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[11 /* X34 */] <-0.5328125f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.08694295f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.13859446f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13246661f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[4 /* X18 */] <-0.14723057f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1725203f ? 
                 (data[12 /* X35 */] <-0.3515625f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16081074f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
        0.032258064f : 
         (data[2 /* X15 */] <0.1470613f ? 
             (data[12 /* X35 */] <-0.265625f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.375f ? 
                 (data[4 /* X18 */] <-0.039887797f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.048635956f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.42436558f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_93_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.25115186f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10995092f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                     (data[5 /* X19 */] <0.10226718f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.13524106f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1384819f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26065877f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25883093f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.3229061f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.8671875f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22020993f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22111002f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.45224145f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.259483f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.153688f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.665625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[7 /* X21 */] <0.09157627f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.12572539f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.028757839f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1569879f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.5139451f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.017628074f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20683365f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3419246f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_94_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16568248f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13169411f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.20032805f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.15830284f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.24414062f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (data[12 /* X35 */] <-0.8886719f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15071748f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.25362584f ? 
                 (data[3 /* X17 */] <-0.37658247f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.31546184f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.6671875f ? 
             (data[6 /* X20 */] <0.036443487f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.34004974f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.4256063f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.063293464f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[12 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.2630976f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.4120921f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.011655187f ? 
                     (data[8 /* X23 */] <0.10169676f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[0 /* X5 */] <0.13935818f ? 
             (data[10 /* X28 */] <-0.28399372f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_95_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2007673f ? 
             (data[10 /* X28 */] <-0.36234224f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.2f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1794772f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26287517f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.55469644f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.21680169f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16352907f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[9 /* X27 */] <0.121053375f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36591187f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.11258f ? 
                 (data[11 /* X34 */] <-0.75625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[9 /* X27 */] <0.20473887f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12572539f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023600962f ? 
                     (data[12 /* X35 */] <-0.47082907f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.49316856f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12666593f ? 
             (data[10 /* X28 */] <-0.18257558f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23138791f ? 
            1.0f : 
             (data[10 /* X28 */] <0.33962113f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
            0.0f : 
             (data[7 /* X21 */] <0.17770158f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_96_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (data[0 /* X5 */] <0.081494875f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.10732185f ? 
                 (data[0 /* X5 */] <0.108788505f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.171875f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.28698918f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.14115119f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08984375f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.46875f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22878805f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97906137f ? 
             (data[10 /* X28 */] <-0.36234224f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.024157071f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[5 /* X19 */] <-0.074446f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.0464972f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15583928f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.3499866f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[7 /* X21 */] <0.09157627f ? 
             (data[0 /* X5 */] <0.15766971f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11168875f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4647827f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51237047f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6681203f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[5 /* X19 */] <0.35972714f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2554907f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13657983f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.14181757f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.0038785639f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2160776f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_97_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[2 /* X15 */] <0.09387022f ? 
             (data[12 /* X35 */] <-0.0234375f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.5546875f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.17438151f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0743705f ? 
                 (data[12 /* X35 */] <-0.6458316f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.3599235f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24753335f ? 
             (data[12 /* X35 */] <-0.88671875f ? 
                 (data[6 /* X20 */] <-0.16960323f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (data[6 /* X20 */] <0.018157646f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X19 */] <0.07795152f ? 
             (data[12 /* X35 */] <0.1328125f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[6 /* X20 */] <-0.072195925f ? 
             (data[12 /* X35 */] <0.0f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16722812f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.39470255f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.77734375f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.107486375f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_98_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[3 /* X17 */] <-0.4064469f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                 (data[7 /* X21 */] <0.14935654f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18252203f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.3130924f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.26757812f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6758307f ? 
             (data[7 /* X21 */] <0.011447034f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.16176933f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25216767f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.04296875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07327156f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5370674f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22577567f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <-0.479166f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
            1.0f : 
             (data[5 /* X19 */] <0.28821048f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_99_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10600731f ? 
             (data[11 /* X34 */] <-0.734375f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.32394472f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16592109f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.004396229f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15365265f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (data[12 /* X35 */] <-0.421875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[10 /* X28 */] <-0.39914933f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.12864286f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.35546875f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[10 /* X28 */] <-0.24534835f ? 
            0.0f : 
             (data[6 /* X20 */] <0.042897314f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.38973412f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.9765625f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15261236f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.10614509f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1868698f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.29915547f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (data[10 /* X28 */] <-0.14296159f ? 
                 (data[1 /* X12 */] <-0.3599235f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3761281f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[10 /* X28 */] <0.3291048f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.019489676f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13060956f ? 
            0.0f : 
             (data[10 /* X28 */] <0.14853063f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_100_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26757812f ? 
             (data[5 /* X19 */] <0.15375917f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.20452064f ? 
                     (data[7 /* X21 */] <0.15262713f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13033713f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5765686f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.38589674f ? 
             (data[10 /* X28 */] <-0.27632216f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14131224f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (data[9 /* X27 */] <0.121053375f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.03853318f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.026587406f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.13749644f ? 
                    1.0f : 
                    0.0f))) : 
        0.03448276f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.26757812f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.048073683f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.10797357f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16454498f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                     (data[9 /* X27 */] <-0.047839187f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.11208303f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.640625f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.21669383f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_101_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[2 /* X15 */] <0.09387022f ? 
             (data[12 /* X35 */] <-0.0234375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4755756f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.515625f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2007673f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18642312f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.17765439f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2448056f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2007673f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18642312f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.16797404f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1553526f ? 
             (data[12 /* X35 */] <0.1328125f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.153688f ? 
            0.0f : 
             (data[2 /* X15 */] <0.109782085f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.062515184f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.047713473f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16368091f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.45659837f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[6 /* X20 */] <0.2558736f ? 
             (data[2 /* X15 */] <0.11705608f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_102_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.45224145f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2425681f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17893448f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[1 /* X12 */] <-0.3350813f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16070005f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.29094753f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8155117f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09263304f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9533154f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1929677f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16863865f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.12978557f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32917613f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19844927f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[12 /* X35 */] <0.13476562f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.5437557f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16844347f ? 
            0.0f : 
             (data[7 /* X21 */] <0.16461925f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[4 /* X18 */] <-0.3604815f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.5005199f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1999285f ? 
                 (data[7 /* X21 */] <0.0971032f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.03125f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.2820281f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6636733f ? 
                                0.0f : 
                                1.0f) : 
                             (data[12 /* X35 */] <0.6377575f ? 
                                 (data[5 /* X19 */] <0.37533498f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07431344f ? 
             (data[1 /* X12 */] <-0.5189135f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.122175686f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.24375f ? 
                     (data[12 /* X35 */] <0.78125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[1 /* X12 */] <-0.56984f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_103_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.049566906f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1546875f ? 
             (data[10 /* X28 */] <-0.13624169f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29107115f ? 
                     (data[0 /* X5 */] <0.1300682f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22243714f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17985255f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.36487415f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[6 /* X20 */] <-0.4110218f ? 
                    1.0f : 
                    0.0f))) : 
         (data[8 /* X23 */] <0.09677272f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26684117f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13882801f ? 
             (data[10 /* X28 */] <-0.24403381f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.515625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.1652463f ? 
                0.0f : 
                1.0f)) : 
         (data[7 /* X21 */] <0.101660565f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[9 /* X27 */] <-0.113266036f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14615853f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14615206f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.11467238f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.43410444f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18372373f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08402794f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16616641f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.23982567f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.1788534f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7361108f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.5276083f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <0.0234375f ? 
            0.0f : 
             (data[6 /* X20 */] <0.20639424f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_104_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[10 /* X28 */] <-0.14675799f ? 
             (data[10 /* X28 */] <-0.2002782f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.20017421f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.64453125f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.113080814f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2293658f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[10 /* X28 */] <-0.3570841f ? 
            1.0f : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (data[9 /* X27 */] <0.16822156f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.10744241f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.17564978f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.03759154f ? 
                 (data[8 /* X23 */] <0.13172646f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[9 /* X27 */] <0.121053375f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.50260115f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.114058204f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.51650107f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.51270294f ? 
            1.0f : 
            0.0f) : 
         (data[1 /* X12 */] <-0.42078686f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_105_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[3 /* X17 */] <-0.7752727f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.265625f ? 
                 (data[6 /* X20 */] <-0.24360272f ? 
                     (data[9 /* X27 */] <0.05363533f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.736084f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[5 /* X19 */] <-0.012159463f ? 
                     (data[6 /* X20 */] <0.04059574f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[6 /* X20 */] <-0.55169296f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.44375f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042974565f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.378125f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.21473335f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[6 /* X20 */] <0.24621175f ? 
            1.0f : 
             (data[12 /* X35 */] <0.0234375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17112286f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11422018f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10310833f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15397109f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7558594f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.64375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[6 /* X20 */] <-0.12705345f ? 
             (data[0 /* X5 */] <0.19005494f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.22604065f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03231202f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.29429546f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_106_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[10 /* X28 */] <-0.14544345f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37689114f ? 
                 (data[3 /* X17 */] <-0.39450115f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.34525326f ? 
            0.0f : 
             (data[5 /* X19 */] <0.08224252f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1430587f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[10 /* X28 */] <-0.3781167f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12564483f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10118345f ? 
                 (data[5 /* X19 */] <0.081294194f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11872713f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23819678f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[1 /* X12 */] <-0.31023914f ? 
            0.0f : 
             (data[5 /* X19 */] <0.11657051f ? 
                 (data[0 /* X5 */] <0.1205128f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0077966945f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.825f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[6 /* X20 */] <-0.09585995f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.19579446f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.10749793f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7087284f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.11497602f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2744301f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_107_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[2 /* X15 */] <0.13978732f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.067885704f ? 
                 (data[11 /* X34 */] <-0.66875f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.08319566f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.25647172f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.121574506f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.28698918f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.40625f ? 
                             (data[12 /* X35 */] <-0.92578125f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20707177f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.46052468f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1969699f ? 
             (data[2 /* X15 */] <0.14615206f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15888059f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4451445f ? 
            0.0f : 
             (data[9 /* X27 */] <0.47581333f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04935114f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21896634f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.29326448f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (data[9 /* X27 */] <0.21995442f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14723057f ? 
                 (data[10 /* X28 */] <-0.09943462f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18751332f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.20234808f ? 
             (data[11 /* X34 */] <-0.35625f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19252378f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3419246f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_108_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15828484f ? 
             (data[0 /* X5 */] <0.08813058f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.010014945f ? 
                     (data[1 /* X12 */] <-0.1760913f ? 
                         (data[4 /* X18 */] <-0.08562475f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2890625f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                 (data[10 /* X28 */] <-0.40440747f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.57510376f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.3546875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[2 /* X15 */] <0.111600585f ? 
            0.0f : 
             (data[8 /* X23 */] <0.049108546f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.9546875f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
        0.035714287f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.02164095f ? 
                 (data[11 /* X34 */] <-0.8875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053910084f ? 
                 (data[11 /* X34 */] <-0.8875f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.067798965f ? 
                    0.0f : 
                    1.0f))) : 
         (data[2 /* X15 */] <0.14569743f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_109_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.049566906f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20163392f ? 
                 (data[10 /* X28 */] <-0.36234224f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.8955247f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (data[12 /* X35 */] <-0.46679688f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16639131f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.0021587962f ? 
             (data[6 /* X20 */] <-0.2195583f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19874518f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[2 /* X15 */] <0.111600585f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46854287f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14615853f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.17495549f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15261236f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[12 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1424404f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.019233283f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[2 /* X15 */] <0.07159362f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053910084f ? 
                 (data[5 /* X19 */] <0.2624645f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.111181416f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15554929f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23976603f ? 
                     (data[1 /* X12 */] <-0.49407133f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[10 /* X28 */] <0.053051807f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.26055473f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_05_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_110_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[7 /* X21 */] <0.09811743f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.095311575f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1745532f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.17944227f ? 
                    1.0f : 
                    0.0f))) : 
         (data[2 /* X15 */] <0.14069657f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18156123f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0024851656f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25428852f ? 
             (data[12 /* X35 */] <-0.9765625f ? 
                 (data[7 /* X21 */] <0.15460292f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <0.2f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.378125f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18706828f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.909375f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13458048f ? 
             (data[12 /* X35 */] <-0.35546875f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.14083359f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4884571f ? 
                 (data[6 /* X20 */] <-0.10984325f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17735904f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[7 /* X21 */] <0.12591738f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.123100296f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_111_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08484718f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                 (data[11 /* X34 */] <-0.18125f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.164043f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.46119022f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f) : 
         (data[7 /* X21 */] <0.084490016f ? 
             (data[8 /* X23 */] <0.05084179f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67726105f ? 
             (data[7 /* X21 */] <0.03652149f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18161277f ? 
                 (data[12 /* X35 */] <-0.86249995f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.31546184f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0743472f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08484718f ? 
            0.0f : 
             (data[8 /* X23 */] <0.07221845f ? 
                1.0f : 
                0.0f)) : 
        0.9230769f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_112_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[12 /* X35 */] <-0.6015625f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.36102772f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.28624782f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22994354f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.35526735f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4360152f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.36102772f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20047842f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4890625f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.55773956f ? 
            0.0f : 
             (data[9 /* X27 */] <0.7823531f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
             (data[9 /* X27 */] <0.067798965f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08833049f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.240343f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16806486f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24660651f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[11 /* X34 */] <-0.5765625f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17041326f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.22446913f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.4096079f ? 
            1.0f : 
             (data[8 /* X23 */] <0.13692617f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_113_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[10 /* X28 */] <-0.2637519f ? 
             (data[2 /* X15 */] <0.13524106f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X19 */] <-0.013589796f ? 
             (data[6 /* X20 */] <0.042897314f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[10 /* X28 */] <-0.3781167f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2598082f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X19 */] <0.21669383f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11199452f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[12 /* X35 */] <0.0f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X19 */] <0.08939418f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.039035045f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.93125f ? 
                 (data[5 /* X19 */] <0.36434218f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <2.7656555E-4f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18808717f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.21715063f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.12801318f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[10 /* X28 */] <-0.39914933f ? 
            0.0f : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_114_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15862319f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.17578125f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19673951f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2671875f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1929677f ? 
             (data[8 /* X23 */] <0.023744073f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.06640625f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (data[6 /* X20 */] <0.018157646f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.26757812f ? 
            0.0f : 
             (data[5 /* X19 */] <0.07938185f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07327156f ? 
             (data[12 /* X35 */] <-0.1328125f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.5785348f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[8 /* X23 */] <0.048819672f ? 
             (data[5 /* X19 */] <0.05935719f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
            1.0f : 
             (data[5 /* X19 */] <0.28821048f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_115_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[2 /* X15 */] <0.13615032f ? 
            1.0f : 
             (data[5 /* X19 */] <0.15948051f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.09874184f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20105617f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[2 /* X15 */] <0.091142476f ? 
             (data[0 /* X5 */] <0.14599389f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[9 /* X27 */] <0.194088f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.11943118f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.19935857f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2362394f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[9 /* X27 */] <0.026716989f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19973694f ? 
                 (data[5 /* X19 */] <0.20968062f ? 
                     (data[0 /* X5 */] <0.1385619f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[3 /* X17 */] <-0.60803187f ? 
             (data[7 /* X21 */] <0.18206236f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.2f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25647172f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.1938085f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[5 /* X19 */] <0.43124378f ? 
             (data[7 /* X21 */] <0.09539195f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2062559f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[9 /* X27 */] <0.25342864f ? 
            0.0f : 
             (data[5 /* X19 */] <0.36830914f ? 
                 (data[5 /* X19 */] <0.23710048f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17297491f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2702142f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_116_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[8 /* X23 */] <0.11872713f ? 
             (data[10 /* X28 */] <-0.14675799f ? 
                 (data[11 /* X34 */] <-0.84165037f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.47421533f ? 
                 (data[11 /* X34 */] <-0.5333341f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.38006938f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18260746f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22343825f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.10883396f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2744301f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X21 */] <0.12864286f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15508007f ? 
             (data[4 /* X18 */] <-0.35337314f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1052843f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.009802201f ? 
                 (data[2 /* X15 */] <0.12069308f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[1 /* X12 */] <-0.4120921f ? 
             (data[12 /* X35 */] <0.1328125f ? 
                 (data[7 /* X21 */] <0.13774972f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14249167f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16140279f ? 
                     (data[9 /* X27 */] <0.061712746f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13333566f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17090909f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2744301f ? 
             (data[10 /* X28 */] <0.11352056f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3419246f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_117_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16537012f ? 
            1.0f : 
             (data[2 /* X15 */] <0.13524106f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3546875f ? 
            0.0f : 
             (data[2 /* X15 */] <0.0879601f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16722812f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14069657f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.25223994f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.3328125f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.07938185f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06362898f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18434054f ? 
                 (data[8 /* X23 */] <0.100248665f ? 
                     (data[3 /* X17 */] <-0.14801718f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20790245f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.24515522f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[4 /* X18 */] <-0.14249167f ? 
             (data[2 /* X15 */] <0.10614509f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.2f ? 
                     (data[5 /* X19 */] <0.14944129f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.34653f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.031280424f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08088584f ? 
             (data[5 /* X19 */] <0.2195545f ? 
                 (data[4 /* X18 */] <-0.31209874f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
        0.032258064f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
             (data[3 /* X17 */] <-0.37658247f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.1780781f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_118_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20163392f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.24287453f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.01284343f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.0928142f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19990067f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0995728f ? 
                     (data[7 /* X21 */] <0.012875699f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[0 /* X5 */] <0.10883396f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <0.12090255f ? 
             (data[2 /* X15 */] <0.1579723f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.4875f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43724465f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.29679248f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[11 /* X34 */] <-0.24375f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22012183f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.23821308f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.011110391f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12353603f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.20778199f ? 
             (data[7 /* X21 */] <0.09539195f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43395823f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.29679248f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.5027661f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <0.35993746f ? 
             (data[0 /* X5 */] <0.13208269f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_119_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[3 /* X17 */] <-0.7752727f ? 
             (data[7 /* X21 */] <0.16516435f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.24140474f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2671875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.10945716f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
        0.01724138f : 
         (data[10 /* X28 */] <-0.24140474f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14131224f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.07636159f ? 
                     (data[3 /* X17 */] <0.03694495f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.35145196f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.265625f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.24437821f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16902465f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0832553f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2457467f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.2618891f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23571256f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48559645f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2554907f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.054366343f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_120_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10600731f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1125f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97906137f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.3328125f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.31546184f ? 
        0.0f : 
         (data[5 /* X19 */] <0.07938185f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.75625f ? 
                 (data[6 /* X20 */] <0.045048587f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48130545f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.014930733f ? 
                     (data[11 /* X34 */] <-0.8f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.178125f ? 
                 (data[1 /* X12 */] <-0.5785348f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23314352f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <-0.265625f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14797056f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16352907f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_121_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (data[3 /* X17 */] <-0.93206096f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.5508547f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.3556598f ? 
                     (data[0 /* X5 */] <0.16851525f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.17563526f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.10995092f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18428752f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
                     (data[7 /* X21 */] <0.09593705f ? 
                         (data[11 /* X34 */] <-0.475f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.10217576f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16092913f ? 
             (data[10 /* X28 */] <-0.3781167f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.25182742f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1758845f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17524804f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.20854552f ? 
                 (data[12 /* X35 */] <-0.203125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[8 /* X23 */] <0.097639345f ? 
             (data[0 /* X5 */] <0.1263522f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.10888094f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.12920472f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.12572539f ? 
             (data[2 /* X15 */] <0.09432485f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17350431f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.14581117f ? 
                         (data[8 /* X23 */] <0.10229976f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.64453125f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                     (data[8 /* X23 */] <0.11612365f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.8f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (data[2 /* X15 */] <0.09796184f ? 
             (data[6 /* X20 */] <-0.22816339f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.1216787f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12710257f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.5833309f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1730961f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07542284f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.10226718f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.054366343f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_05_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_122_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20740935f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.53303146f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.29485294f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.19861187f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.044229344f ? 
            0.0f : 
             (data[2 /* X15 */] <0.09068785f ? 
                 (data[10 /* X28 */] <0.1424404f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25428852f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12640692f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17027636f ? 
                     (data[2 /* X15 */] <0.16070005f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16870748f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.042897314f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[3 /* X17 */] <-0.6871726f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10221093f ? 
                1.0f : 
                0.0f) : 
             (data[9 /* X27 */] <0.20473887f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.2f ? 
                     (data[6 /* X20 */] <0.070863895f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.037775517f ? 
             (data[11 /* X34 */] <-0.84375f ? 
                 (data[11 /* X34 */] <-0.95544434f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21954408f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (data[4 /* X18 */] <-0.2645186f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_123_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0453125f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.3360515f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18805842f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25230512f ? 
                     (data[7 /* X21 */] <0.09515276f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16175939f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[8 /* X23 */] <0.02359089f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5328125f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.01454111f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.11812394f ? 
             (data[10 /* X28 */] <-0.20459767f ? 
                 (data[0 /* X5 */] <0.10893557f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
        0.035714287f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04296875f ? 
             (data[7 /* X21 */] <0.09593705f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16483812f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2528616f ? 
                 (data[5 /* X19 */] <0.20764251f ? 
                     (data[6 /* X20 */] <0.036443487f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[5 /* X19 */] <0.3668788f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23182899f ? 
                 (data[2 /* X15 */] <0.07341211f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.15103702f ? 
            0.0f : 
             (data[10 /* X28 */] <0.27915236f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_124_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[1 /* X12 */] <-0.33011287f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.778125f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18533294f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.80065745f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[7 /* X21 */] <0.084490016f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13882801f ? 
             (data[3 /* X17 */] <-0.38255537f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7773844f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6000231f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.17842767f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X27 */] <0.014544552f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.93125f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.07919301f ? 
                     (data[3 /* X17 */] <0.087841496f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (data[1 /* X12 */] <-0.39594468f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.24641642f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5126796f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.4798709f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.3153604f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.070863895f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17412446f ? 
                 (data[5 /* X19 */] <0.43410444f ? 
                     (data[2 /* X15 */] <0.15118426f ? 
                         (data[6 /* X20 */] <-0.17868406f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[1 /* X12 */] <-0.51270294f ? 
            1.0f : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_125_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (data[2 /* X15 */] <0.13387719f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13431506f ? 
                 (data[11 /* X34 */] <-0.4f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[12 /* X35 */] <-0.35546875f ? 
                 (data[1 /* X12 */] <-0.34004974f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.317164f ? 
                         (data[7 /* X21 */] <0.13109978f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[8 /* X23 */] <0.14703676f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18448095f ? 
             (data[7 /* X21 */] <0.03652149f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.24375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[2 /* X15 */] <0.11432833f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.30432665f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[9 /* X27 */] <0.20169577f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18633895f ? 
                 (data[12 /* X35 */] <-0.1328125f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (data[2 /* X15 */] <0.10250809f ? 
             (data[6 /* X20 */] <-0.008397164f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15262713f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.30625f ? 
                     (data[1 /* X12 */] <-0.5139451f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_126_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[5 /* X19 */] <0.28248915f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10732185f ? 
                 (data[1 /* X12 */] <-0.27745423f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05921084f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.178125f ? 
                 (data[6 /* X20 */] <-0.12705345f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.174431f ? 
                         (data[12 /* X35 */] <-0.53125f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18424274f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.178125f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.45834985f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14281438f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.31546184f ? 
        0.0f : 
         (data[5 /* X19 */] <0.07938185f ? 
             (data[5 /* X19 */] <-0.07500472f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.06225879f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.09177476f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X34 */] <-0.821875f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[5 /* X19 */] <0.11084918f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10732185f ? 
                 (data[11 /* X34 */] <-0.18125f ? 
                     (data[6 /* X20 */] <-0.10123814f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18751332f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.5785348f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3926248f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09527561f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11089148f ? 
            0.0f : 
             (data[6 /* X20 */] <0.3161093f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_127_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (data[0 /* X5 */] <0.08176031f ? 
            1.0f : 
             (data[2 /* X15 */] <0.0879601f ? 
                 (data[12 /* X35 */] <0.0f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.2890625f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1422779f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9533154f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
             (data[8 /* X23 */] <0.041519966f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.18125f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15621755f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.15049027f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[10 /* X28 */] <-0.17567784f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[4 /* X18 */] <-0.21120584f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16251855f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.0421008f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.8453125f ? 
             (data[9 /* X27 */] <0.42992896f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.35574257f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[4 /* X18 */] <-0.3604815f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.06640625f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24517897f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.164043f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.099192716f ? 
                     (data[8 /* X23 */] <0.09926049f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.058212634f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0488982f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.30018497f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3328125f ? 
             (data[0 /* X5 */] <0.1205128f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_128_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.051758807f ? 
             (data[10 /* X28 */] <-0.14412892f ? 
                 (data[11 /* X34 */] <-0.378125f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18260746f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36164415f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
        0.04f : 
         (data[8 /* X23 */] <0.15888059f ? 
             (data[8 /* X23 */] <0.02544572f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4890625f ? 
            1.0f : 
             (data[8 /* X23 */] <0.13923717f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.20451224f ? 
                    1.0f : 
                    0.0f))) : 
         (data[8 /* X23 */] <0.097639345f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11250983f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012038336f ? 
             (data[12 /* X35 */] <0.0f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2389037f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[6 /* X20 */] <-0.06681774f ? 
             (data[8 /* X23 */] <0.23918751f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19296429f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.290294f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_129_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[12 /* X35 */] <-0.6015625f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15342605f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16537012f ? 
            1.0f : 
             (data[7 /* X21 */] <0.14881144f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2694179f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.178125f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (data[6 /* X20 */] <0.036443487f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.6677338f ? 
             (data[4 /* X18 */] <-0.22305313f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012038336f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16778336f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.099841475f ? 
                     (data[4 /* X18 */] <-0.44627327f ? 
                         (data[2 /* X15 */] <0.13455579f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.34626475f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08484718f ? 
            0.0f : 
             (data[2 /* X15 */] <0.10250809f ? 
                1.0f : 
                0.0f)) : 
        0.9230769f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_130_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[3 /* X17 */] <-0.7752727f ? 
             (data[1 /* X12 */] <-0.26724654f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.17578125f ? 
                 (data[1 /* X12 */] <-0.24545434f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18288f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.06733551f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
        0.038961038f : 
         (data[10 /* X28 */] <-0.12835446f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (data[1 /* X12 */] <-0.3077549f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X12 */] <-0.34004974f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3547998f ? 
                 (data[10 /* X28 */] <-0.043922048f ? 
                     (data[11 /* X34 */] <-0.44125977f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[1 /* X12 */] <-0.4120921f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.14675799f ? 
                 (data[1 /* X12 */] <-0.36359367f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05705025f ? 
                     (data[11 /* X34 */] <-0.73413086f ? 
                         (data[3 /* X17 */] <-0.56722176f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[8 /* X23 */] <0.15252537f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.4642607f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_131_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0743705f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19527869f ? 
                     (data[11 /* X34 */] <-0.175f ? 
                         (data[6 /* X20 */] <-0.13504028f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.26757812f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (data[12 /* X35 */] <-0.8886719f ? 
             (data[5 /* X19 */] <0.6057444f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26968333f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24798799f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.13125f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19854863f ? 
                1.0f : 
                0.0f)) : 
        0.03448276f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.40039062f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X19 */] <0.18665683f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13484591f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.111872524f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.008331562f ? 
                         (data[6 /* X20 */] <-0.16147386f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08484718f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.55773956f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_132_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (data[12 /* X35 */] <-0.3984375f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.20459767f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.35625f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
        0.04f : 
         (data[12 /* X35 */] <-0.64453125f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.18619414f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[9 /* X27 */] <-0.168042f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <0.025195435f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.55738705f ? 
                 (data[11 /* X34 */] <-0.75625f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16639131f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (data[9 /* X27 */] <0.21995442f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15841094f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.118797116f ? 
                     (data[2 /* X15 */] <0.12796707f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5062228f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.5133113f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.53125f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5885804f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.17868406f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.14763464f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[6 /* X20 */] <-0.15286875f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_05_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[7 /* X21 */] <0.15807809f ? 
             (data[10 /* X28 */] <-0.09943462f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.16639131f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.040605113f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3419246f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_133_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15888155f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.1906567f ? 
                     (data[11 /* X34 */] <-0.092710316f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.734375f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11150161f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.03349675f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11089148f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (data[11 /* X34 */] <-0.2f ? 
             (data[1 /* X12 */] <-0.5189135f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.099841475f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.032258064f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25154707f ? 
            0.0f : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_134_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (data[11 /* X34 */] <-0.4f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08297121f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17661138f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19007896f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2400599f ? 
                     (data[6 /* X20 */] <-0.46128267f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18751332f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[2 /* X15 */] <0.14569743f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82744604f ? 
             (data[8 /* X23 */] <0.023935318f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20278758f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.008443773f ? 
                        1.0f : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.14970988f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.5546875f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.07509412f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (data[11 /* X34 */] <-0.24375f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.024018928f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16722812f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.12868777f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7544991f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (data[2 /* X15 */] <0.085232355f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053889077f ? 
                 (data[11 /* X34 */] <-0.8625f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3781961f ? 
                         (data[4 /* X18 */] <-0.3709583f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13750018f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.114058204f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_05_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_135_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[4 /* X18 */] <-0.44104296f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19921875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.13125f ? 
                 (data[10 /* X28 */] <-0.14675799f ? 
                     (data[3 /* X17 */] <-0.4064469f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1834301f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16336744f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.34656778f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[1 /* X12 */] <-0.3458964f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.84375f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15888059f ? 
                 (data[8 /* X23 */] <0.02544572f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0067839823f ? 
             (data[11 /* X34 */] <-0.734375f ? 
                 (data[2 /* X15 */] <0.12162739f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.14675799f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.062627554f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.091587245f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X27 */] <0.014544552f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.66875f ? 
                 (data[3 /* X17 */] <0.008505419f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.114058204f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (data[8 /* X23 */] <0.10002696f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.484375f ? 
                         (data[3 /* X17 */] <-0.28698918f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.1395448f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.031280424f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.1336126f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.43630403f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5132755f ? 
            1.0f : 
             (data[2 /* X15 */] <0.14524281f ? 
                1.0f : 
                0.0f)) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_136_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[12 /* X35 */] <-0.5332031f ? 
             (data[9 /* X27 */] <0.14996292f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15617025f ? 
             (data[5 /* X19 */] <0.09368519f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.14546303f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.44375f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.011447034f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8288764f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.621875f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.05106013f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
             (data[7 /* X21 */] <0.09048608f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18236583f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.1677906f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.10319104f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51954126f ? 
                                1.0f : 
                                 (data[5 /* X19 */] <0.5420196f ? 
                                    0.0f : 
                                    1.0f)))))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.021649474f ? 
                 (data[8 /* X23 */] <0.10427603f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
        0.85714287f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.30581987f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_137_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[2 /* X15 */] <0.109327465f ? 
            1.0f : 
             (data[8 /* X23 */] <0.1432814f ? 
                 (data[10 /* X28 */] <-0.10995092f ? 
                     (data[12 /* X35 */] <-0.328125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09943462f ? 
                     (data[10 /* X28 */] <-0.2454716f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.025f ? 
                             (data[4 /* X18 */] <-0.32283854f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36164415f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.027838385f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[9 /* X27 */] <-0.168042f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06871262f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17174391f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14249167f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10338942f ? 
                 (data[10 /* X28 */] <-0.10469277f ? 
                     (data[12 /* X35 */] <-0.46875f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.12052098f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.1120191f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19252378f ? 
            1.0f : 
            0.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_138_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[3 /* X17 */] <-0.42137912f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14572059f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10206369f ? 
                 (data[6 /* X20 */] <-0.45834985f ? 
                     (data[5 /* X19 */] <0.07938185f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.3229061f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.22851366f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26755992f ? 
             (data[10 /* X28 */] <-0.24929197f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.515625f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.04505386f ? 
                     (data[7 /* X21 */] <0.047968525f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36591187f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14249167f ? 
             (data[11 /* X34 */] <-0.7326538f ? 
                 (data[4 /* X18 */] <-0.35456637f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.122609764f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2699506f ? 
            0.0f : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_139_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[3 /* X17 */] <-0.41540626f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.3225702f ? 
                 (data[5 /* X19 */] <0.30823514f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3738273f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5599738f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.35385123f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.17377375f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5942569f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2598082f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13710399f ? 
                0.0f : 
                 (data[3 /* X17 */] <0.10308146f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.010161966f ? 
             (data[9 /* X27 */] <0.013022997f ? 
                 (data[3 /* X17 */] <-0.41888848f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23016149f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14115119f ? 
             (data[4 /* X18 */] <-0.33204803f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.44146222f ? 
                     (data[3 /* X17 */] <-0.3220879f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.114058204f ? 
             (data[3 /* X17 */] <-0.25712472f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.443981f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.16070005f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.021689637f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1921855f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[2 /* X15 */] <0.060228f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X18 */] <-0.2645186f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_140_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26757812f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20105617f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5256458f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.48958078f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.19935857f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.39892873f ? 
            1.0f : 
            0.0f) : 
         (data[7 /* X21 */] <0.011447034f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1929677f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09102285f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.054366343f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
             (data[11 /* X34 */] <-0.24375f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.84375f ? 
                 (data[5 /* X19 */] <0.3846713f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09527561f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.77734375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25154707f ? 
             (data[3 /* X17 */] <-0.3437316f ? 
                 (data[8 /* X23 */] <0.07510719f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_141_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.40794015f ? 
             (data[10 /* X28 */] <-0.10995092f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46340317f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.46733564f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[8 /* X23 */] <0.02359089f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26968333f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.10214122f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.033141468f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33254945f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[12 /* X35 */] <0.0f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.117858514f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.114810236f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07978343f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <0.0675107f ? 
                 (data[12 /* X35 */] <0.3125f ? 
                     (data[7 /* X21 */] <0.06105085f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5332031f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.160327f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15714186f ? 
             (data[10 /* X28 */] <-0.10995092f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12443887f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.10450608f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2307335f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22219945f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36065373f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4116703f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_142_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14887981f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.09375f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.34656778f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.14544345f ? 
             (data[6 /* X20 */] <0.038594764f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (data[8 /* X23 */] <0.02565504f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1896937f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1760913f ? 
             (data[2 /* X15 */] <0.12978557f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.48122326f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[8 /* X23 */] <0.097639345f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15261236f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[4 /* X18 */] <-0.14249167f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4688797f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.121327f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14112586f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08162027f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[1 /* X12 */] <-0.5276083f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.054366343f ? 
             (data[2 /* X15 */] <0.060682625f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_143_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[3 /* X17 */] <-0.24517897f ? 
             (data[4 /* X18 */] <-0.51923496f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.07159362f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16700608f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.56511945f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[4 /* X18 */] <-0.47421533f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7378082f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.39433792f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[10 /* X28 */] <-0.067849115f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15926528f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0017838087f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.17438151f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[5 /* X19 */] <-0.06937279f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02998966f ? 
            0.0f : 
             (data[10 /* X28 */] <0.11067569f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14576182f ? 
             (data[4 /* X18 */] <-0.51923496f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.0877606f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13037206f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16454498f ? 
                 (data[2 /* X15 */] <0.12813081f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16480513f ? 
                         (data[5 /* X19 */] <0.42266178f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.28f ? 
                                 (data[6 /* X20 */] <0.03329592f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6572364f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10458039f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_05_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[10 /* X28 */] <-0.28335956f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.2913392f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_144_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08168443f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14390558f ? 
                 (data[11 /* X34 */] <-0.2f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X5 */] <0.06530377f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.053174615f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.09943462f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.37882936f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15524456f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25243053f ? 
             (data[8 /* X23 */] <0.023687651f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.243259f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18555997f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.31386364f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[6 /* X20 */] <0.23072635f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.17564978f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (data[0 /* X5 */] <0.13484591f ? 
             (data[5 /* X19 */] <0.20239049f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.3984375f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.2f ? 
                 (data[4 /* X18 */] <-0.2751811f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.07946458f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.11493881f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053889077f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1735984f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23708715f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.10887284f ? 
                 (data[0 /* X5 */] <0.1300682f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39483172f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_145_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26757812f ? 
             (data[6 /* X20 */] <-0.28624782f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.103966475f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[2 /* X15 */] <0.10250809f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26065877f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.16115467f ? 
            0.0f : 
             (data[8 /* X23 */] <0.15714735f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.35276288f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[12 /* X35 */] <0.13476562f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13755344f ? 
            0.0f : 
             (data[0 /* X5 */] <0.11892023f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27546006f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1463167f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.046389278f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18424274f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
        0.85714287f : 
        0.012820513f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_146_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[1 /* X12 */] <-0.33880764f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20441133f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4457696f ? 
                     (data[12 /* X35 */] <-0.82238007f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.017857144f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[1 /* X12 */] <-0.34462276f ? 
             (data[6 /* X20 */] <-0.24752487f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25428852f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17933688f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10995092f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.31023914f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06656134f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[4 /* X18 */] <-0.13301384f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.46271113f ? 
                 (data[12 /* X35 */] <-0.13250351f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.13474737f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0012038336f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18424274f ? 
                 (data[11 /* X34 */] <-0.8625f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5132755f ? 
            1.0f : 
             (data[7 /* X21 */] <0.25074455f ? 
                0.0f : 
                1.0f)) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_147_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2007673f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.15342587f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2007673f ? 
            0.0f : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25128967f ? 
             (data[10 /* X28 */] <-0.24666288f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
        0.04f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[7 /* X21 */] <0.09539195f ? 
             (data[10 /* X28 */] <-0.12835446f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.12688307f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46340317f ? 
                     (data[1 /* X12 */] <-0.31520757f ? 
                         (data[8 /* X23 */] <0.1559021f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[5 /* X19 */] <0.12801318f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15153693f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.2657033f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (data[8 /* X23 */] <0.06470773f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.27126515f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.2890625f ? 
            0.0f : 
             (data[0 /* X5 */] <0.1205128f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_148_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20134504f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15077159f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5131232f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.011467229f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5942569f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8002697f ? 
             (data[7 /* X21 */] <0.011447034f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.16284053f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
        0.0f : 
         (data[9 /* X27 */] <0.014544552f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15426241f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.24522991f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X5 */] <0.1205128f ? 
                 (data[4 /* X18 */] <-0.24200876f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5136145f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15109956f ? 
                0.0f : 
                1.0f)) : 
         (data[8 /* X23 */] <0.10197245f ? 
            0.0f : 
             (data[9 /* X27 */] <0.061712746f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.3883338f ? 
                     (data[11 /* X34 */] <-0.4375f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5652778f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.57591766f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.15969798f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.31769177f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_149_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[7 /* X21 */] <0.09784489f ? 
             (data[8 /* X23 */] <0.11845702f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14251506f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16494694f ? 
            1.0f : 
             (data[8 /* X23 */] <0.18411586f ? 
                 (data[8 /* X23 */] <0.17068693f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
        0.01724138f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16494694f ? 
            0.0f : 
             (data[8 /* X23 */] <0.18411586f ? 
                 (data[8 /* X23 */] <0.17068693f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5328125f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26017612f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.20433553f ? 
                    1.0f : 
                    0.0f))) : 
         (data[8 /* X23 */] <0.097639345f ? 
             (data[8 /* X23 */] <0.09277801f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1864314f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1760913f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14908399f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10221093f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.040746037f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.06681774f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37474564f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20141329f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2558736f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16800134f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15491137f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13705957f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
        0.022727273f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_150_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
         (data[12 /* X35 */] <-0.1328125f ? 
            1.0f : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
        0.038961038f : 
         (data[11 /* X34 */] <-0.2671875f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
        0.7777778f : 
         (data[11 /* X34 */] <-0.6671875f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.036443487f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (data[3 /* X17 */] <-0.16753143f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.036443487f ? 
                     (data[1 /* X12 */] <-0.39653826f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
         (data[1 /* X12 */] <-0.5276083f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.17740281f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.240343f ? 
                 (data[1 /* X12 */] <-0.5735663f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_151_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (data[10 /* X28 */] <-0.36234224f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.09593705f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16433704f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
                 (data[10 /* X28 */] <-0.36234224f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[12 /* X35 */] <0.13476562f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21480039f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46054405f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13111293f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.14486112f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <2.7656555E-4f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4666494f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.39946488f ? 
                     (data[3 /* X17 */] <-0.20336875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.1093193f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17161104f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1681948f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[9 /* X27 */] <0.044975646f ? 
            0.0f : 
             (data[2 /* X15 */] <0.12769316f ? 
                 (data[0 /* X5 */] <0.14493217f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053910084f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2528616f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15916829f ? 
                 (data[12 /* X35 */] <0.171875f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35993746f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17704913f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_152_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (data[12 /* X35 */] <-0.0234375f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11414579f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12711178f ? 
                 (data[3 /* X17 */] <-0.8896244f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[8 /* X23 */] <0.02359089f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.45834985f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.017677775f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16900332f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[8 /* X23 */] <0.097639345f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15261236f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06656134f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.5437557f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16191956f ? 
         (data[5 /* X19 */] <0.17378384f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.012779457f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15455192f ? 
                     (data[10 /* X28 */] <-0.094176464f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.025f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[12 /* X35 */] <-0.03125f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.5133113f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.4875f ? 
                 (data[2 /* X15 */] <0.17706653f ? 
                     (data[2 /* X15 */] <0.111815654f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[12 /* X35 */] <-0.0234375f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30642855f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_153_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[10 /* X28 */] <-0.14544345f ? 
             (data[8 /* X23 */] <0.17443028f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18260746f ? 
             (data[1 /* X12 */] <-0.3599235f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05772726f ? 
            0.0f : 
             (data[7 /* X21 */] <0.10084292f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18260746f ? 
             (data[1 /* X12 */] <-0.3599235f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (data[4 /* X18 */] <-0.35337314f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1569879f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.207981f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1052843f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.07938185f ? 
                     (data[12 /* X35 */] <0.20104301f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06640625f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14249167f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                 (data[10 /* X28 */] <-0.1439123f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.1796875f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.15372612f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3764282f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.10205347f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22127733f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_154_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[10 /* X28 */] <-0.20412077f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.21989891f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4455471f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                1.0f : 
                0.0f)) : 
        0.044444446f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (data[10 /* X28 */] <-0.24681693f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.01710129f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1685712f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04935114f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.41362074f ? 
                1.0f : 
                0.0f)) : 
        0.03448276f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14576182f ? 
             (data[8 /* X23 */] <0.121327f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18262182f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.25264508f ? 
             (data[5 /* X19 */] <0.13945584f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6640625f ? 
                 (data[8 /* X23 */] <0.12594898f ? 
                     (data[6 /* X20 */] <0.045048587f ? 
                         (data[12 /* X35 */] <-0.2199707f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1918122f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_155_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[10 /* X28 */] <-0.33079332f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                 (data[1 /* X12 */] <-0.36210114f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18615903f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.0879601f ? 
             (data[5 /* X19 */] <0.06507852f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[10 /* X28 */] <-0.2506065f ? 
             (data[9 /* X27 */] <0.18433078f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.6057444f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[8 /* X23 */] <0.15888059f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[1 /* X12 */] <-0.45805016f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.42137912f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <0.12090255f ? 
             (data[11 /* X34 */] <-0.578125f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.119642295f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.018209249f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6875f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12703992f ? 
             (data[3 /* X17 */] <-0.3228265f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3288927f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <0.18808717f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20191102f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[9 /* X27 */] <0.26255795f ? 
             (data[7 /* X21 */] <0.09539195f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.12321355f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3540058f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[10 /* X28 */] <0.11220602f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.10023497f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0074169487f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_156_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[11 /* X34 */] <-0.1546875f ? 
             (data[3 /* X17 */] <-0.24517897f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18860352f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.34205094f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
                     (data[10 /* X28 */] <-0.35360256f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
             (data[12 /* X35 */] <-0.2421875f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.2655232f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (data[10 /* X28 */] <-0.2592999f ? 
             (data[5 /* X19 */] <0.43982577f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
                 (data[6 /* X20 */] <-0.28624782f ? 
                     (data[12 /* X35 */] <-0.84375f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (data[1 /* X12 */] <-0.39594468f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18952407f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.195169f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3840428f ? 
             (data[6 /* X20 */] <-0.17181407f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.12710448f ? 
                     (data[11 /* X34 */] <-0.6625f ? 
                         (data[12 /* X35 */] <0.40972266f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.53515625f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918751f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
        0.9230769f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_157_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10032263f ? 
             (data[5 /* X19 */] <-0.011633269f ? 
                 (data[9 /* X27 */] <-0.047839187f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.10735938f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.26757812f ? 
             (data[10 /* X28 */] <-0.25980827f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.051803622f ? 
                     (data[11 /* X34 */] <-0.2f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.37569484f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[6 /* X20 */] <-0.45834985f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X34 */] <-0.3328125f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[6 /* X20 */] <0.059031878f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.43196133f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.9765625f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46036005f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.079468995f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.13408092f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.18488054f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.06640625f ? 
             (data[0 /* X5 */] <0.15501843f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22080724f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08162027f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24027666f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25351745f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37474564f ? 
         (data[1 /* X12 */] <-0.43196586f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23918751f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.58847165f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_158_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[3 /* X17 */] <-0.42137912f ? 
             (data[0 /* X5 */] <0.11945108f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1796875f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24747398f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20278941f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[7 /* X21 */] <0.14445066f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26755992f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.08689745f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1817898f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22615314f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.11892023f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[9 /* X27 */] <0.069320515f ? 
            0.0f : 
             (data[0 /* X5 */] <0.12688307f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.01581455f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.15583538f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18141274f ? 
                     (data[4 /* X18 */] <-0.10458039f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1352384f ? 
                             (data[0 /* X5 */] <0.16031574f ? 
                                1.0f : 
                                 (data[6 /* X20 */] <-0.13393752f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[7 /* X21 */] <0.15807809f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06298775f ? 
                 (data[7 /* X21 */] <0.14161693f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18996626f ? 
            0.0f : 
             (data[7 /* X21 */] <0.19788955f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_159_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[10 /* X28 */] <-0.14675799f ? 
             (data[3 /* X17 */] <-0.39450115f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20707177f ? 
             (data[1 /* X12 */] <-0.34253398f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18256824f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[8 /* X23 */] <0.1698578f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19681469f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18302073f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5328125f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12666593f ? 
             (data[10 /* X28 */] <-0.12676139f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14212677f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3111122f ? 
                         (data[6 /* X20 */] <-0.14426365f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20602357f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15985377f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.16896647f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2699506f ? 
             (data[2 /* X15 */] <0.060682625f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_160_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[6 /* X20 */] <-0.28624782f ? 
             (data[5 /* X19 */] <0.07079986f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13169411f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.038235657f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.08305824f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X21 */] <0.05922678f ? 
                    1.0f : 
                    0.0f))) : 
         (data[10 /* X28 */] <-0.14807253f ? 
             (data[5 /* X19 */] <0.04505386f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[6 /* X20 */] <-0.28947476f ? 
             (data[5 /* X19 */] <0.07652119f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.03652149f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25889897f ? 
                     (data[12 /* X35 */] <-0.890625f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17296605f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0017838087f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[11 /* X34 */] <-0.5328125f ? 
            1.0f : 
             (data[5 /* X19 */] <-0.17746769f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.025094183f ? 
            0.0f : 
             (data[3 /* X17 */] <0.068406746f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
             (data[5 /* X19 */] <0.18236583f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.25276503f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13518402f ? 
                         (data[6 /* X20 */] <-0.12705345f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07276988f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.026974242f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.22305313f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.27126515f ? 
                 (data[2 /* X15 */] <0.07341211f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_161_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.378125f ? 
             (data[6 /* X20 */] <-0.008880928f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0434239f ? 
                     (data[3 /* X17 */] <-0.81260324f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.1271485f ? 
             (data[12 /* X35 */] <-0.1796875f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15262713f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.265625f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.7578125f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9533154f ? 
         (data[6 /* X20 */] <-0.29592857f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25038552f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82687336f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.009802201f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.05084179f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X20 */] <-0.089154445f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[11 /* X34 */] <-0.4890625f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.17564978f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.11812394f ? 
             (data[10 /* X28 */] <-0.20722675f ? 
                 (data[6 /* X20 */] <-0.028094776f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[6 /* X20 */] <-0.20449936f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.22478424f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.1271485f ? 
             (data[10 /* X28 */] <-0.11258f ? 
                 (data[8 /* X23 */] <0.10977204f ? 
                     (data[2 /* X15 */] <0.12069308f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[5 /* X19 */] <0.23472944f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0625f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.1579544f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.5027661f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40710562f ? 
             (data[5 /* X19 */] <0.07938185f ? 
                 (data[10 /* X28 */] <0.25811976f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_162_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18430148f ? 
            1.0f : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05654253f ? 
             (data[2 /* X15 */] <0.14221393f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22137544f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[2 /* X15 */] <0.1302402f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24491417f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21070875f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02489822f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.00329156f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08366016f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.19568978f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09585995f ? 
             (data[9 /* X27 */] <0.20473887f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.22076274f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20336875f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.12660217f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13970003f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1401222f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19854863f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.068826266f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[2 /* X15 */] <0.10250809f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0879942f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1896937f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.47419757f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.15371732f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_163_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17505752f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (data[11 /* X34 */] <-0.6220511f ? 
                     (data[10 /* X28 */] <-0.11520907f ? 
                         (data[3 /* X17 */] <-0.36245584f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.019280018f ? 
                    1.0f : 
                     (data[1 /* X12 */] <0.1915731f ? 
                        0.0f : 
                        1.0f))) : 
             (data[12 /* X35 */] <-0.8203125f ? 
                 (data[0 /* X5 */] <0.11520424f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[8 /* X23 */] <0.1698578f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25243053f ? 
             (data[8 /* X23 */] <0.04564206f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0384181f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53708845f ? 
                        0.0f : 
                        1.0f))) : 
             (data[2 /* X15 */] <0.17524804f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.08939418f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22615314f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.59765625f ? 
                 (data[11 /* X34 */] <-0.75f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                 (data[11 /* X34 */] <-0.24375f ? 
                     (data[0 /* X5 */] <0.13643847f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2528616f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46948937f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36298054f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16298127f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3984375f ? 
                     (data[2 /* X15 */] <0.113419086f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_164_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[0 /* X5 */] <0.14254332f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19932292f ? 
                 (data[5 /* X19 */] <0.16520184f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.19861211f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.0879601f ? 
             (data[7 /* X21 */] <0.18042706f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13882801f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18372373f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.6671875f ? 
             (data[1 /* X12 */] <-0.26303896f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.20778199f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.10082875f ? 
                        1.0f : 
                         (data[12 /* X35 */] <0.19030762f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16292483f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.02216853f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15599185f ? 
                 (data[5 /* X19 */] <0.1938085f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05365369f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.5288504f ? 
            0.0f : 
             (data[9 /* X27 */] <0.11953182f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.53125f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.10037085f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_165_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[12 /* X35 */] <-0.2890625f ? 
             (data[9 /* X27 */] <0.17430778f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.04766715f ? 
                     (data[11 /* X34 */] <-0.20555624f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.35866383f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[7 /* X21 */] <0.14826635f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[12 /* X35 */] <-0.9765625f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.26562184f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.13409384f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.55469644f ? 
             (data[1 /* X12 */] <-0.14541702f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.28698918f ? 
                     (data[6 /* X20 */] <-0.16849041f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X34 */] <-0.8f ? 
             (data[4 /* X18 */] <-0.4212864f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15480751f ? 
                    1.0f : 
                     (data[6 /* X20 */] <0.045048587f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X34 */] <-0.6660156f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20336875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.533335f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.421875f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08162027f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11916716f ? 
                     (data[5 /* X19 */] <0.2624645f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09717327f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[3 /* X17 */] <0.25173295f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[7 /* X21 */] <0.09866253f ? 
                 (data[6 /* X20 */] <-0.15286875f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[10 /* X28 */] <0.11220602f ? 
             (data[5 /* X19 */] <0.26532516f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_166_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1996118f ? 
            1.0f : 
            0.0f) : 
        0.017857144f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26287517f ? 
            0.0f : 
            1.0f) : 
         (data[10 /* X28 */] <-0.3360515f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.06077223f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.22170956f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30516148f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12508236f ? 
             (data[4 /* X18 */] <-0.35337314f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.23608512f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.040746037f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13020088f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.094176464f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5120929f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.0020230797f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14112586f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08162027f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20683365f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33962113f ? 
                0.0f : 
                1.0f)) : 
        0.012820513f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_167_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.17878056f ? 
             (data[5 /* X19 */] <-0.012159463f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <0.0f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19152333f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.111328125f ? 
                 (data[5 /* X19 */] <0.08409177f ? 
                     (data[2 /* X15 */] <0.30254292f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20704232f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.001337443f ? 
                 (data[8 /* X23 */] <0.13975626f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.019121297f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.20985582f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19653635f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[8 /* X23 */] <0.1256601f ? 
             (data[5 /* X19 */] <0.20239049f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.04398346f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.012675101f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.07516644f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X19 */] <0.37260014f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18209209f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12927192f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.050478954f ? 
                 (data[3 /* X17 */] <-0.25071135f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33699206f ? 
                         (data[8 /* X23 */] <0.08480116f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_168_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[2 /* X15 */] <0.09387022f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3624077f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09747202f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46948937f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.14097041f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[10 /* X28 */] <-0.34525326f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.8890625f ? 
                 (data[8 /* X23 */] <0.1687023f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.32666036f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.26948243f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18587804f ? 
             (data[10 /* X28 */] <-0.3781167f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20838615f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22615314f ? 
            1.0f : 
            0.0f) : 
         (data[0 /* X5 */] <0.1186548f ? 
             (data[8 /* X23 */] <0.11266078f ? 
                 (data[0 /* X5 */] <0.092153475f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <0.07225664f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17877683f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08891831f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.18726106f ? 
                         (data[8 /* X23 */] <0.16503099f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16271585f ? 
             (data[10 /* X28 */] <-0.14675799f ? 
                 (data[4 /* X18 */] <-0.4078706f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04956577f ? 
                     (data[8 /* X23 */] <0.10168358f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.028757839f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.23322834f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.49992046f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[0 /* X5 */] <0.13458048f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.42699742f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23182899f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_169_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[10 /* X28 */] <-0.14675799f ? 
             (data[3 /* X17 */] <-0.39450115f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15862319f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36164415f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.20172803f ? 
                 (data[11 /* X34 */] <0.22222306f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[2 /* X15 */] <0.14069657f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X21 */] <0.011447034f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.058911983f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.2630976f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16162695f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11089148f ? 
            1.0f : 
             (data[7 /* X21 */] <0.17770158f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14249167f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.121824175f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18662918f ? 
                     (data[11 /* X34 */] <-0.66323245f ? 
                         (data[5 /* X19 */] <0.14803784f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.09809085f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12342166f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2699506f ? 
             (data[10 /* X28 */] <-0.277249f ? 
                 (data[8 /* X23 */] <0.11092754f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_170_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[10 /* X28 */] <-0.33128306f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19050404f ? 
                     (data[7 /* X21 */] <0.09593705f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1645104f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2702142f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (data[10 /* X28 */] <-0.2592999f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51992446f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X23 */] <0.025420895f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.229803f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.22628754f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10098175f ? 
            0.0f : 
             (data[5 /* X19 */] <0.08796385f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.13166037f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14576182f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.10432659f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.334375f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4140798f ? 
             (data[7 /* X21 */] <0.09593705f ? 
                 (data[3 /* X17 */] <-0.08391101f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.64453125f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21915866f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[10 /* X28 */] <-0.28335956f ? 
             (data[0 /* X5 */] <0.14591178f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <0.029320195f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_171_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.088074096f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18805842f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.82433695f ? 
                     (data[11 /* X34 */] <-0.2f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5359088f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3561683f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[9 /* X27 */] <0.18824945f ? 
                             (data[1 /* X12 */] <-0.18817401f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.08688657f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
            0.0f : 
             (data[2 /* X15 */] <0.20252551f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2448056f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67726105f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17879178f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[9 /* X27 */] <-0.168042f ? 
            1.0f : 
             (data[5 /* X19 */] <0.20811182f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3829334f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11926759f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (data[2 /* X15 */] <0.0897786f ? 
             (data[5 /* X19 */] <0.12229185f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.51347786f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.55440557f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09585995f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71444976f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18527722f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.23028679f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
        0.012658228f : 
         (data[5 /* X19 */] <0.029320195f ? 
             (data[5 /* X19 */] <-0.047878727f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_172_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (data[5 /* X19 */] <0.07079986f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09943462f ? 
                 (data[5 /* X19 */] <0.15608999f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.175f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2866743f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[5 /* X19 */] <0.07079986f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9404424f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1817898f ? 
            1.0f : 
             (data[5 /* X19 */] <0.107937984f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16739653f ? 
             (data[10 /* X28 */] <-0.09943462f ? 
                 (data[11 /* X34 */] <-0.15625f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7544991f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (data[1 /* X12 */] <-0.5027661f ? 
            1.0f : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_173_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1546875f ? 
             (data[10 /* X28 */] <-0.13624169f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3111079f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18430148f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[4 /* X18 */] <-0.19698912f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17274652f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24753335f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22948578f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.2421875f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28830028f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (data[10 /* X28 */] <-0.12572539f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21669383f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.21388593f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20397086f ? 
                     (data[9 /* X27 */] <0.110402495f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47238946f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4947366f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48828125f ? 
                 (data[2 /* X15 */] <0.060682625f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_174_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[12 /* X35 */] <-0.17773438f ? 
             (data[10 /* X28 */] <-0.3229061f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18315254f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.096578985f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.15969668f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2671875f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13627422f ? 
                0.0f : 
                1.0f)) : 
         (data[10 /* X28 */] <-0.3229061f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1134906f ? 
                 (data[12 /* X35 */] <-0.8666666f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X34 */] <-0.8f ? 
             (data[7 /* X21 */] <0.1553526f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.11092754f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.069883674f ? 
                 (data[4 /* X18 */] <-0.24200876f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.16091084f ? 
             (data[7 /* X21 */] <0.09539195f ? 
                 (data[0 /* X5 */] <0.15767272f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.4f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20684874f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.079468995f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.14299177f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
        0.85714287f : 
        0.012820513f);
    return pred;
  } // constant pool size = 6B, number of visited nodes = 1, static init size = 0B
}


class h2o_rf_05_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_175_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (data[11 /* X34 */] <-0.5109375f ? 
             (data[12 /* X35 */] <-0.4453125f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.3599235f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.2857287f ? 
                     (data[3 /* X17 */] <-0.15558565f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.06188964f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18950121f ? 
                        1.0f : 
                        0.0f)))) : 
        0.044444446f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (data[7 /* X21 */] <0.03652149f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13882801f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8288764f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.164043f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[12 /* X35 */] <-0.8046875f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2702142f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.02716858f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (data[11 /* X34 */] <-0.55625f ? 
             (data[12 /* X35 */] <0.265625f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.121574506f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.27802983f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.028094776f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.15907784f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20616251f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2875f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18315254f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7829296f ? 
            0.0f : 
            1.0f) : 
        0.9230769f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_176_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.28248915f ? 
         (data[2 /* X15 */] <0.1006896f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17879178f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2844105f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.5546875f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13710399f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1328125f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16999358f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.29907528f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9533154f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2598082f ? 
             (data[12 /* X35 */] <-0.88671875f ? 
                 (data[7 /* X21 */] <0.15499426f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.46662903f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14298505f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (data[2 /* X15 */] <0.111600585f ? 
            0.0f : 
             (data[7 /* X21 */] <0.04687833f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36854097f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18706828f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7109375f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43905827f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.20336875f ? 
                        0.0f : 
                        1.0f))) : 
             (data[7 /* X21 */] <0.09437507f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16739653f ? 
             (data[12 /* X35 */] <-0.06640625f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16407773f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.107988514f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.8375f ? 
                         (data[10 /* X28 */] <-0.15727429f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.074962206f ? 
        0.032258064f : 
         (data[12 /* X35 */] <-0.17773438f ? 
            0.0f : 
             (data[7 /* X21 */] <0.15371732f ? 
                 (data[7 /* X21 */] <0.12278441f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_177_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1546875f ? 
             (data[2 /* X15 */] <0.09250635f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.4694764f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14280875f ? 
                         (data[3 /* X17 */] <-0.28776616f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11203451f ? 
                 (data[6 /* X20 */] <-0.3679963f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
        0.7777778f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2598082f ? 
             (data[12 /* X35 */] <-0.88967025f ? 
                 (data[11 /* X34 */] <0.3375f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (data[11 /* X34 */] <-0.24375f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.119428426f ? 
                 (data[11 /* X34 */] <-0.8877441f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10496926f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.77734375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20683365f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3984375f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.1006896f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1896937f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_178_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[2 /* X15 */] <0.13978732f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.0234375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11123631f ? 
                 (data[0 /* X5 */] <0.1385619f ? 
                     (data[2 /* X15 */] <0.16062191f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0903849f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22546297f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.08f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[2 /* X15 */] <0.14069657f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21889201f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11150161f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17661138f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2561383f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17112286f ? 
             (data[1 /* X12 */] <-0.5172175f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.118797116f ? 
                     (data[2 /* X15 */] <0.14290805f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23845458f ? 
                             (data[11 /* X34 */] <-0.28f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22021492f ? 
                             (data[4 /* X18 */] <-0.35811204f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3692226f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.77734375f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[6 /* X20 */] <-0.12705345f ? 
             (data[9 /* X27 */] <0.22604065f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3386977f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_179_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16457385f ? 
            1.0f : 
             (data[8 /* X23 */] <0.15830284f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.0879601f ? 
             (data[11 /* X34 */] <-0.35625f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14752278f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.334375f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.28666726f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.15524456f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.4875f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.7328125f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1470613f ? 
                 (data[4 /* X18 */] <-0.21831422f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.216276f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.57761306f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.018209249f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[11 /* X34 */] <-0.4890625f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.64473873f ? 
                 (data[1 /* X12 */] <-0.30956537f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.100439586f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[4 /* X18 */] <-0.51923496f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.12342083f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20590192f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.37379912f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.30835348f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15625f ? 
             (data[4 /* X18 */] <-0.3770677f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.10023497f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.091367394f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_180_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20307828f ? 
            1.0f : 
            0.0f) : 
         (data[5 /* X19 */] <-0.013589796f ? 
             (data[3 /* X17 */] <-0.42111123f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
        0.01724138f : 
         (data[5 /* X19 */] <0.15661983f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20105617f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.016716026f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.19710022f ? 
                 (data[5 /* X19 */] <0.21097249f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (data[5 /* X19 */] <-0.035044793f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.6677338f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20336875f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04398346f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29036537f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1938085f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.047103092f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[5 /* X19 */] <0.37260014f ? 
             (data[7 /* X21 */] <0.13627422f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[8 /* X23 */] <0.069040835f ? 
             (data[3 /* X17 */] <-0.17606649f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.8875f ? 
                 (data[3 /* X17 */] <-0.22958738f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.006582022f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19633031f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38957357f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
         (data[0 /* X5 */] <0.11892023f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.06640625f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.1373965f ? 
                     (data[11 /* X34 */] <-0.525f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_05_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_181_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.088074096f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10469277f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.048073683f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.008159324f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.36931056f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.10356812f ? 
                     (data[6 /* X20 */] <-0.17075123f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[6 /* X20 */] <-0.29270166f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19036783f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23707698f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.31546184f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09585995f ? 
             (data[10 /* X28 */] <-0.10732185f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.048073683f ? 
                     (data[11 /* X34 */] <-0.3375f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.103354685f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.52743834f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (data[6 /* X20 */] <-0.24644923f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_182_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (data[10 /* X28 */] <-0.3229061f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25162497f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11414874f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.081758045f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[8 /* X23 */] <0.11872713f ? 
             (data[5 /* X19 */] <-0.012159463f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0890625f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19123445f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (data[9 /* X27 */] <0.16822156f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.020614518f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1632137f ? 
            0.0f : 
             (data[5 /* X19 */] <0.07938185f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.31169435f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1733408f ? 
                     (data[6 /* X20 */] <-0.07542284f ? 
                         (data[3 /* X17 */] <-0.45291707f ? 
                             (data[12 /* X35 */] <-0.386668f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.1291266f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0084769055f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7829296f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.15625f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.21949893f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_183_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[0 /* X5 */] <0.13458048f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12730277f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.5216044f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18260746f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.244445f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.1746601f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.2623917f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.2506289f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[6 /* X20 */] <-0.28947476f ? 
             (data[7 /* X21 */] <0.14445066f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18289319f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13738771f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22111002f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.012236361f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.58125f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.9546875f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[6 /* X20 */] <-0.081876665f ? 
             (data[11 /* X34 */] <-0.57756346f ? 
                 (data[11 /* X34 */] <-0.8876575f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13524106f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.65151507f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2384913f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.11553491f ? 
                 (data[10 /* X28 */] <-0.036336787f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.103644654f ? 
         (data[6 /* X20 */] <0.01600637f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22219945f ? 
             (data[0 /* X5 */] <0.14387046f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.15090996f ? 
                     (data[10 /* X28 */] <0.37905726f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X15 */] <0.12002822f ? 
                         (data[3 /* X17 */] <-0.24021737f ? 
                            0.0f : 
                            1.0f) : 
                         (data[1 /* X12 */] <-0.6331876f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[3 /* X17 */] <0.25544113f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.2633779f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_05_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_184_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10337824f ? 
             (data[11 /* X34 */] <-0.578125f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14424042f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.397744f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.134375f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (data[10 /* X28 */] <-0.2506065f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.040607575f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16025849f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[10 /* X28 */] <-0.20722675f ? 
             (data[11 /* X34 */] <-0.265625f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.8f ? 
                 (data[0 /* X5 */] <0.13369007f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.6f ? 
             (data[4 /* X18 */] <-0.35337314f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <-0.07509412f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17174391f ? 
         (data[10 /* X28 */] <-0.10206369f ? 
             (data[11 /* X34 */] <-0.509375f ? 
                 (data[1 /* X12 */] <-0.31931478f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3540058f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[0 /* X5 */] <0.14036332f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08562475f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48559645f ? 
                     (data[4 /* X18 */] <-0.3036146f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20683365f ? 
            1.0f : 
            0.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_185_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.049566906f ? 
         (data[12 /* X35 */] <-0.17773438f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18315254f ? 
                 (data[12 /* X35 */] <-0.6217749f ? 
                     (data[10 /* X28 */] <-0.26243734f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.44974476f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[12 /* X35 */] <-0.62109375f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18860352f ? 
                 (data[1 /* X12 */] <-0.32183564f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <0.028238544f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3661904f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17092317f ? 
             (data[10 /* X28 */] <0.095117025f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
        0.055555556f : 
         (data[6 /* X20 */] <0.06763698f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18151726f ? 
                 (data[9 /* X27 */] <-0.09795677f ? 
                     (data[10 /* X28 */] <0.38957357f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[12 /* X35 */] <-0.06640625f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06800723f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.2234547f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[1 /* X12 */] <-0.5276083f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39036855f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17706653f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_186_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1546875f ? 
             (data[10 /* X28 */] <-0.14412892f ? 
                 (data[5 /* X19 */] <0.29107115f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18260746f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23836283f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06625698f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X5 */] <0.10883396f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
        0.7777778f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2279845f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19681469f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18025725f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4890625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (data[11 /* X34 */] <-0.24375f ? 
             (data[3 /* X17 */] <-0.561742f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25110337f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[7 /* X21 */] <0.1458134f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6801217f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.17215955f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (data[2 /* X15 */] <0.07204824f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39483172f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_187_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.049566906f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (data[10 /* X28 */] <-0.14412892f ? 
                 (data[5 /* X19 */] <0.23385783f ? 
                     (data[1 /* X12 */] <-0.40463945f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16630492f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.26818582f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8021907f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.27233762f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03764329f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16722812f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.33868057f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22025588f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1919138f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14445066f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.010161966f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.108262405f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.73125f ? 
                    1.0f : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.17988196f ? 
                 (data[6 /* X20 */] <0.014930733f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.098843224f ? 
                 (data[10 /* X28 */] <-0.14675799f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.15384871f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.34627402f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X20 */] <0.036443487f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20958975f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.849878f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.10796359f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1916475f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.41980112f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_188_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0453125f ? 
             (data[9 /* X27 */] <-0.011321876f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.094785035f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42142537f ? 
                         (data[4 /* X18 */] <-0.47287935f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08044256f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[9 /* X27 */] <0.4855923f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20707205f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (data[2 /* X15 */] <0.14069657f ? 
            0.0f : 
            1.0f) : 
         (data[7 /* X21 */] <0.08530766f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2279845f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11150161f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.1710133f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[2 /* X15 */] <0.11023671f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.081876665f ? 
         (data[11 /* X34 */] <-0.24375f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16563556f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12750022f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43905827f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <0.19952983f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.4268262f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.032258064f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053889077f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15807809f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.5288504f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.24219252f ? 
                 (data[0 /* X5 */] <0.12978312f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.10093526f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_05_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_189_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.042078067f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08575484f ? 
                 (data[12 /* X35 */] <-0.265625f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.018631255f ? 
                        1.0f : 
                         (data[4 /* X18 */] <0.18656635f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.97906137f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36164415f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.24322233f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3508081f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.10870368f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12640692f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11711632f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.15558578f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.17378384f ? 
         (data[6 /* X20 */] <-0.20449936f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09585995f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.114058204f ? 
                 (data[1 /* X12 */] <-0.49017584f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.094176464f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15130244f ? 
                             (data[12 /* X35 */] <-0.2f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.073143855f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.14387046f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_05_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.52798796f ? 
            1.0f : 
            0.0f) : 
        0.012820513f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_190_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.13978732f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12710448f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.04296875f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.46679688f ? 
             (data[6 /* X20 */] <-0.28624782f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23093955f ? 
         (data[6 /* X20 */] <-0.28947476f ? 
             (data[12 /* X35 */] <-0.734375f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6446167f ? 
                     (data[3 /* X17 */] <-0.16753143f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11150161f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.625f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
        0.7777778f : 
         (data[11 /* X34 */] <-0.7328125f ? 
             (data[2 /* X15 */] <0.13978732f ? 
                 (data[5 /* X19 */] <0.29679248f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[4 /* X18 */] <-0.30598402f ? 
            1.0f : 
            0.0f) : 
         (data[12 /* X35 */] <-0.04296875f ? 
             (data[11 /* X34 */] <-0.2f ? 
                 (data[6 /* X20 */] <-0.14426365f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48273578f ? 
                 (data[3 /* X17 */] <-0.39450115f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33888993f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.053910084f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.47419757f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2875f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6657997f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_191_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0743705f ? 
             (data[10 /* X28 */] <-0.34656778f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12520917f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.09339868f ? 
                         (data[6 /* X20 */] <-0.14426365f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            0.0f) : 
         (data[2 /* X15 */] <0.09477948f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.734375f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23071225f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_05_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4890625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <2.7656555E-4f ? 
             (data[4 /* X18 */] <-0.15196948f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18189524f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1577251f ? 
                 (data[5 /* X19 */] <0.056496523f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5486102f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.46798703f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08558426f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19595054f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20876047f ? 
             (data[1 /* X12 */] <-0.48910287f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.160327f ? 
                0.0f : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_05_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_192_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
         (data[5 /* X19 */] <0.31824747f ? 
             (data[10 /* X28 */] <-0.10732185f ? 
                 (data[3 /* X17 */] <-0.34671804f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.15201615f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.203125f ? 
                     (data[3 /* X17 */] <-0.09585678f ? 
                         (data[4 /* X18 */] <-0.3340894f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9661884f ? 
             (data[8 /* X23 */] <0.025666889f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.09154739f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19881405f ? 
             (data[6 /* X20 */] <0.042897314f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1052843f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.31023914f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[4 /* X18 */] <-0.3225702f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.12572539f ? 
             (data[8 /* X23 */] <0.12306024f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.09375f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.103417344f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7201711f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.07827263f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[11 /* X34 */] <-0.4625f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07431344f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.41323525f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.4120921f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.023191407f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_05_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_193_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1906567f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14604585f ? 
             (data[10 /* X28 */] <-0.12572539f ? 
                 (data[3 /* X17 */] <-0.2630976f ? 
                     (data[1 /* X12 */] <-0.36489195f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.06875f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.32514444f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12572539f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19325657f ? 
         (data[8 /* X23 */] <0.04133124f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23980473f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.13492715f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.01530533f ? 
         (data[8 /* X23 */] <0.11872713f ? 
            0.0f : 
            1.0f) : 
         (data[9 /* X27 */] <0.068697184f ? 
             (data[11 /* X34 */] <-0.578125f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.21538976f ? 
         (data[4 /* X18 */] <-0.3225702f ? 
            1.0f : 
            0.0f) : 
         (data[10 /* X28 */] <-0.12572539f ? 
             (data[11 /* X34 */] <-0.178125f ? 
                 (data[7 /* X21 */] <0.11338015f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.31386715f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.30527067f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15554929f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.13657118f ? 
        0.04761905f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11089148f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_194_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08484718f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1651047f ? 
                 (data[1 /* X12 */] <-0.33338866f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.77500314f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.75f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1922744f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (data[8 /* X23 */] <0.18372373f ? 
                     (data[6 /* X20 */] <-0.46119022f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5942569f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2279845f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11319427f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04935114f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.553125f ? 
                1.0f : 
                 (data[5 /* X19 */] <-7.1679824E-4f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.124410845f ? 
         (data[2 /* X15 */] <0.12796707f ? 
             (data[11 /* X34 */] <-0.821875f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.032397326f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17112286f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2625f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19589435f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[1 /* X12 */] <-0.51270294f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <0.0023721154f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_195_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15546875f ? 
         (data[0 /* X5 */] <0.13458048f ? 
             (data[12 /* X35 */] <-0.17578125f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0017838087f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20707177f ? 
                 (data[10 /* X28 */] <-0.34656778f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1929677f ? 
             (data[10 /* X28 */] <-0.36234224f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.024120962f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.16797404f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.465625f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7328125f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16925257f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6875f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.29679248f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.26102322f ? 
             (data[5 /* X19 */] <-0.16377477f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X17 */] <0.35446003f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
         (data[0 /* X5 */] <0.1252905f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.015222805f ? 
                 (data[5 /* X19 */] <-0.09797945f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51171875f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2057658f ? 
                     (data[6 /* X20 */] <-0.18728916f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.4642607f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.028094776f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15706305f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0467459f ? 
         (data[8 /* X23 */] <0.06470773f ? 
             (data[3 /* X17 */] <-0.17485318f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16797404f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3527665f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2940917f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_196_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.26660156f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15235457f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18252203f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4671402f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.23351751f ? 
                0.0f : 
                1.0f)) : 
        0.017857144f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21407616f ? 
         (data[7 /* X21 */] <0.042245008f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25708047f ? 
                 (data[10 /* X28 */] <-0.34656778f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.890625f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[2 /* X15 */] <0.1247847f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.17773438f ? 
        0.0f : 
         (data[5 /* X19 */] <0.10941885f ? 
             (data[1 /* X12 */] <-0.49903977f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44721556f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15261236f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5107422f ? 
         (data[5 /* X19 */] <0.20096016f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.51923496f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.003227234f ? 
                     (data[11 /* X34 */] <-0.2f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3125f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17838226f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08326212f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (data[1 /* X12 */] <-0.46798703f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08162027f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_05_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19487213f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3668788f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17566402f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25811976f ? 
                     (data[1 /* X12 */] <-0.43445006f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.41706052f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_05_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_197_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08430937f ? 
         (data[1 /* X12 */] <-0.32887077f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06640625f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16639131f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11310368f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.10486172f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[3 /* X17 */] <-0.25038174f ? 
                         (data[1 /* X12 */] <-0.1504677f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.28947476f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10529106f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20577402f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39036855f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12034323f ? 
        0.0f : 
         (data[1 /* X12 */] <-0.4257553f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}

class h2o_rf_05_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (data[0 /* X5 */] <0.1252905f ? 
             (data[12 /* X35 */] <-0.13671875f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                 (data[11 /* X34 */] <-0.7125f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.024372805f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15596174f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.30715775f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_05_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2881427f ? 
         (data[1 /* X12 */] <-0.51270294f ? 
            1.0f : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 10B, number of visited nodes = 2, static init size = 0B
}


class h2o_rf_05_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_198_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.33321816f ? 
        0.0f : 
         (data[8 /* X23 */] <0.09272849f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.088074096f ? 
                 (data[11 /* X34 */] <-0.13125f ? 
                     (data[5 /* X19 */] <0.054854576f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19127454f ? 
                         (data[6 /* X20 */] <-0.45285964f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15994388f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26287517f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.246875f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.20169577f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[0 /* X5 */] <0.16457385f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.25980827f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19161452f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_05_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.146834f ? 
         (data[8 /* X23 */] <0.12479348f ? 
             (data[11 /* X34 */] <-0.7125f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29645562f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10205739f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_05_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20962825f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09693559f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.21875f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21446778f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.78310573f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.4257553f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2744301f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3419246f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}


class h2o_rf_05_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_05_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_05_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_05_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_05_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_05_Tree_199_class_4.score0(fdata);
  }
}
class h2o_rf_05_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10535004f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1907839f ? 
             (data[7 /* X21 */] <0.095367484f ? 
                 (data[10 /* X28 */] <-0.19652301f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08377155f ? 
                     (data[1 /* X12 */] <-0.3256871f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16803841f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.24999687f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.41227892f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18766607f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_05_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.33079332f ? 
        1.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.110259496f ? 
            0.0f : 
             (data[8 /* X23 */] <0.14501464f ? 
                 (data[7 /* X21 */] <0.037066586f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_05_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15633227f ? 
         (data[11 /* X34 */] <-0.7328125f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16171604f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.13629991f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.975f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16176933f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.53203124f ? 
                         (data[4 /* X18 */] <-0.2562255f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.24433365f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_05_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117612384f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.008668744f ? 
                 (data[5 /* X19 */] <0.07366052f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.13624169f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15069568f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_05_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13455316f ? 
         (data[1 /* X12 */] <-0.51270294f ? 
            1.0f : 
            0.0f) : 
         (data[0 /* X5 */] <0.12927192f ? 
             (data[7 /* X21 */] <0.21858385f ? 
                0.0f : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}



