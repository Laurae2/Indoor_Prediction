/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2016-12-26T14:43:02.437+01:00
  3.10.0.8
  
  Standalone prediction code with sample test data for DRFModel named h2o_rf_10

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/h2o_rf_10 > h2o_rf_10.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m h2o_rf_10.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="h2o_rf_10", algorithm="drf")
public class h2o_rf_10 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Multinomial; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 13; }
  public int nclasses() { return 6; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_h2o_rf_10.VALUES;
  // Number of output classes included in training data response column.
  public static final int NCLASSES = 6;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* X5 */ null,
    /* X12 */ null,
    /* X15 */ null,
    /* X17 */ null,
    /* X18 */ null,
    /* X19 */ null,
    /* X20 */ null,
    /* X21 */ null,
    /* X23 */ null,
    /* X27 */ null,
    /* X28 */ null,
    /* X34 */ null,
    /* X35 */ null,
    /* Label */ h2o_rf_10_ColInfo_13.VALUES
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {0.24761904761904763,0.18571428571428572,0.06190476190476191,0.12857142857142856,0.24761904761904763,0.12857142857142856};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {0.24761904761904763,0.18571428571428572,0.06190476190476191,0.12857142857142856,0.24761904761904763,0.12857142857142856};

  public h2o_rf_10() { super(NAMES,DOMAINS); }
  public String getUUID() { return Long.toString(-4485365748645799480L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    h2o_rf_10_Forest_0.score0(data,preds);
    h2o_rf_10_Forest_1.score0(data,preds);
    h2o_rf_10_Forest_2.score0(data,preds);
    h2o_rf_10_Forest_3.score0(data,preds);
    h2o_rf_10_Forest_4.score0(data,preds);
    h2o_rf_10_Forest_5.score0(data,preds);
    h2o_rf_10_Forest_6.score0(data,preds);
    h2o_rf_10_Forest_7.score0(data,preds);
    h2o_rf_10_Forest_8.score0(data,preds);
    h2o_rf_10_Forest_9.score0(data,preds);
    h2o_rf_10_Forest_10.score0(data,preds);
    h2o_rf_10_Forest_11.score0(data,preds);
    h2o_rf_10_Forest_12.score0(data,preds);
    h2o_rf_10_Forest_13.score0(data,preds);
    h2o_rf_10_Forest_14.score0(data,preds);
    h2o_rf_10_Forest_15.score0(data,preds);
    h2o_rf_10_Forest_16.score0(data,preds);
    h2o_rf_10_Forest_17.score0(data,preds);
    h2o_rf_10_Forest_18.score0(data,preds);
    h2o_rf_10_Forest_19.score0(data,preds);
    h2o_rf_10_Forest_20.score0(data,preds);
    h2o_rf_10_Forest_21.score0(data,preds);
    h2o_rf_10_Forest_22.score0(data,preds);
    h2o_rf_10_Forest_23.score0(data,preds);
    h2o_rf_10_Forest_24.score0(data,preds);
    h2o_rf_10_Forest_25.score0(data,preds);
    h2o_rf_10_Forest_26.score0(data,preds);
    h2o_rf_10_Forest_27.score0(data,preds);
    h2o_rf_10_Forest_28.score0(data,preds);
    h2o_rf_10_Forest_29.score0(data,preds);
    h2o_rf_10_Forest_30.score0(data,preds);
    h2o_rf_10_Forest_31.score0(data,preds);
    h2o_rf_10_Forest_32.score0(data,preds);
    h2o_rf_10_Forest_33.score0(data,preds);
    h2o_rf_10_Forest_34.score0(data,preds);
    h2o_rf_10_Forest_35.score0(data,preds);
    h2o_rf_10_Forest_36.score0(data,preds);
    h2o_rf_10_Forest_37.score0(data,preds);
    h2o_rf_10_Forest_38.score0(data,preds);
    h2o_rf_10_Forest_39.score0(data,preds);
    h2o_rf_10_Forest_40.score0(data,preds);
    h2o_rf_10_Forest_41.score0(data,preds);
    h2o_rf_10_Forest_42.score0(data,preds);
    h2o_rf_10_Forest_43.score0(data,preds);
    h2o_rf_10_Forest_44.score0(data,preds);
    h2o_rf_10_Forest_45.score0(data,preds);
    h2o_rf_10_Forest_46.score0(data,preds);
    h2o_rf_10_Forest_47.score0(data,preds);
    h2o_rf_10_Forest_48.score0(data,preds);
    h2o_rf_10_Forest_49.score0(data,preds);
    h2o_rf_10_Forest_50.score0(data,preds);
    h2o_rf_10_Forest_51.score0(data,preds);
    h2o_rf_10_Forest_52.score0(data,preds);
    h2o_rf_10_Forest_53.score0(data,preds);
    h2o_rf_10_Forest_54.score0(data,preds);
    h2o_rf_10_Forest_55.score0(data,preds);
    h2o_rf_10_Forest_56.score0(data,preds);
    h2o_rf_10_Forest_57.score0(data,preds);
    h2o_rf_10_Forest_58.score0(data,preds);
    h2o_rf_10_Forest_59.score0(data,preds);
    h2o_rf_10_Forest_60.score0(data,preds);
    h2o_rf_10_Forest_61.score0(data,preds);
    h2o_rf_10_Forest_62.score0(data,preds);
    h2o_rf_10_Forest_63.score0(data,preds);
    h2o_rf_10_Forest_64.score0(data,preds);
    h2o_rf_10_Forest_65.score0(data,preds);
    h2o_rf_10_Forest_66.score0(data,preds);
    h2o_rf_10_Forest_67.score0(data,preds);
    h2o_rf_10_Forest_68.score0(data,preds);
    h2o_rf_10_Forest_69.score0(data,preds);
    h2o_rf_10_Forest_70.score0(data,preds);
    h2o_rf_10_Forest_71.score0(data,preds);
    h2o_rf_10_Forest_72.score0(data,preds);
    h2o_rf_10_Forest_73.score0(data,preds);
    h2o_rf_10_Forest_74.score0(data,preds);
    h2o_rf_10_Forest_75.score0(data,preds);
    h2o_rf_10_Forest_76.score0(data,preds);
    h2o_rf_10_Forest_77.score0(data,preds);
    h2o_rf_10_Forest_78.score0(data,preds);
    h2o_rf_10_Forest_79.score0(data,preds);
    h2o_rf_10_Forest_80.score0(data,preds);
    h2o_rf_10_Forest_81.score0(data,preds);
    h2o_rf_10_Forest_82.score0(data,preds);
    h2o_rf_10_Forest_83.score0(data,preds);
    h2o_rf_10_Forest_84.score0(data,preds);
    h2o_rf_10_Forest_85.score0(data,preds);
    h2o_rf_10_Forest_86.score0(data,preds);
    h2o_rf_10_Forest_87.score0(data,preds);
    h2o_rf_10_Forest_88.score0(data,preds);
    h2o_rf_10_Forest_89.score0(data,preds);
    h2o_rf_10_Forest_90.score0(data,preds);
    h2o_rf_10_Forest_91.score0(data,preds);
    h2o_rf_10_Forest_92.score0(data,preds);
    h2o_rf_10_Forest_93.score0(data,preds);
    h2o_rf_10_Forest_94.score0(data,preds);
    h2o_rf_10_Forest_95.score0(data,preds);
    h2o_rf_10_Forest_96.score0(data,preds);
    h2o_rf_10_Forest_97.score0(data,preds);
    h2o_rf_10_Forest_98.score0(data,preds);
    h2o_rf_10_Forest_99.score0(data,preds);
    h2o_rf_10_Forest_100.score0(data,preds);
    h2o_rf_10_Forest_101.score0(data,preds);
    h2o_rf_10_Forest_102.score0(data,preds);
    h2o_rf_10_Forest_103.score0(data,preds);
    h2o_rf_10_Forest_104.score0(data,preds);
    h2o_rf_10_Forest_105.score0(data,preds);
    h2o_rf_10_Forest_106.score0(data,preds);
    h2o_rf_10_Forest_107.score0(data,preds);
    h2o_rf_10_Forest_108.score0(data,preds);
    h2o_rf_10_Forest_109.score0(data,preds);
    h2o_rf_10_Forest_110.score0(data,preds);
    h2o_rf_10_Forest_111.score0(data,preds);
    h2o_rf_10_Forest_112.score0(data,preds);
    h2o_rf_10_Forest_113.score0(data,preds);
    h2o_rf_10_Forest_114.score0(data,preds);
    h2o_rf_10_Forest_115.score0(data,preds);
    h2o_rf_10_Forest_116.score0(data,preds);
    h2o_rf_10_Forest_117.score0(data,preds);
    h2o_rf_10_Forest_118.score0(data,preds);
    h2o_rf_10_Forest_119.score0(data,preds);
    h2o_rf_10_Forest_120.score0(data,preds);
    h2o_rf_10_Forest_121.score0(data,preds);
    h2o_rf_10_Forest_122.score0(data,preds);
    h2o_rf_10_Forest_123.score0(data,preds);
    h2o_rf_10_Forest_124.score0(data,preds);
    h2o_rf_10_Forest_125.score0(data,preds);
    h2o_rf_10_Forest_126.score0(data,preds);
    h2o_rf_10_Forest_127.score0(data,preds);
    h2o_rf_10_Forest_128.score0(data,preds);
    h2o_rf_10_Forest_129.score0(data,preds);
    h2o_rf_10_Forest_130.score0(data,preds);
    h2o_rf_10_Forest_131.score0(data,preds);
    h2o_rf_10_Forest_132.score0(data,preds);
    h2o_rf_10_Forest_133.score0(data,preds);
    h2o_rf_10_Forest_134.score0(data,preds);
    h2o_rf_10_Forest_135.score0(data,preds);
    h2o_rf_10_Forest_136.score0(data,preds);
    h2o_rf_10_Forest_137.score0(data,preds);
    h2o_rf_10_Forest_138.score0(data,preds);
    h2o_rf_10_Forest_139.score0(data,preds);
    h2o_rf_10_Forest_140.score0(data,preds);
    h2o_rf_10_Forest_141.score0(data,preds);
    h2o_rf_10_Forest_142.score0(data,preds);
    h2o_rf_10_Forest_143.score0(data,preds);
    h2o_rf_10_Forest_144.score0(data,preds);
    h2o_rf_10_Forest_145.score0(data,preds);
    h2o_rf_10_Forest_146.score0(data,preds);
    h2o_rf_10_Forest_147.score0(data,preds);
    h2o_rf_10_Forest_148.score0(data,preds);
    h2o_rf_10_Forest_149.score0(data,preds);
    h2o_rf_10_Forest_150.score0(data,preds);
    h2o_rf_10_Forest_151.score0(data,preds);
    h2o_rf_10_Forest_152.score0(data,preds);
    h2o_rf_10_Forest_153.score0(data,preds);
    h2o_rf_10_Forest_154.score0(data,preds);
    h2o_rf_10_Forest_155.score0(data,preds);
    h2o_rf_10_Forest_156.score0(data,preds);
    h2o_rf_10_Forest_157.score0(data,preds);
    h2o_rf_10_Forest_158.score0(data,preds);
    h2o_rf_10_Forest_159.score0(data,preds);
    h2o_rf_10_Forest_160.score0(data,preds);
    h2o_rf_10_Forest_161.score0(data,preds);
    h2o_rf_10_Forest_162.score0(data,preds);
    h2o_rf_10_Forest_163.score0(data,preds);
    h2o_rf_10_Forest_164.score0(data,preds);
    h2o_rf_10_Forest_165.score0(data,preds);
    h2o_rf_10_Forest_166.score0(data,preds);
    h2o_rf_10_Forest_167.score0(data,preds);
    h2o_rf_10_Forest_168.score0(data,preds);
    h2o_rf_10_Forest_169.score0(data,preds);
    h2o_rf_10_Forest_170.score0(data,preds);
    h2o_rf_10_Forest_171.score0(data,preds);
    h2o_rf_10_Forest_172.score0(data,preds);
    h2o_rf_10_Forest_173.score0(data,preds);
    h2o_rf_10_Forest_174.score0(data,preds);
    h2o_rf_10_Forest_175.score0(data,preds);
    h2o_rf_10_Forest_176.score0(data,preds);
    h2o_rf_10_Forest_177.score0(data,preds);
    h2o_rf_10_Forest_178.score0(data,preds);
    h2o_rf_10_Forest_179.score0(data,preds);
    h2o_rf_10_Forest_180.score0(data,preds);
    h2o_rf_10_Forest_181.score0(data,preds);
    h2o_rf_10_Forest_182.score0(data,preds);
    h2o_rf_10_Forest_183.score0(data,preds);
    h2o_rf_10_Forest_184.score0(data,preds);
    h2o_rf_10_Forest_185.score0(data,preds);
    h2o_rf_10_Forest_186.score0(data,preds);
    h2o_rf_10_Forest_187.score0(data,preds);
    h2o_rf_10_Forest_188.score0(data,preds);
    h2o_rf_10_Forest_189.score0(data,preds);
    h2o_rf_10_Forest_190.score0(data,preds);
    h2o_rf_10_Forest_191.score0(data,preds);
    h2o_rf_10_Forest_192.score0(data,preds);
    h2o_rf_10_Forest_193.score0(data,preds);
    h2o_rf_10_Forest_194.score0(data,preds);
    h2o_rf_10_Forest_195.score0(data,preds);
    h2o_rf_10_Forest_196.score0(data,preds);
    h2o_rf_10_Forest_197.score0(data,preds);
    h2o_rf_10_Forest_198.score0(data,preds);
    h2o_rf_10_Forest_199.score0(data,preds);
    double sum = 0;
    for(int i=1; i<preds.length; i++) { sum += preds[i]; }
    if (sum>0) for(int i=1; i<preds.length; i++) { preds[i] /= sum; }
    preds[0] = hex.genmodel.GenModel.getPrediction(preds, PRIOR_CLASS_DISTRIB, data, 0.5);
    return preds;
  }
}
// The class representing training column names
class NamesHolder_h2o_rf_10 implements java.io.Serializable {
  public static final String[] VALUES = new String[13];
  static {
    NamesHolder_h2o_rf_10_0.fill(VALUES);
  }
  static final class NamesHolder_h2o_rf_10_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "X5";
      sa[1] = "X12";
      sa[2] = "X15";
      sa[3] = "X17";
      sa[4] = "X18";
      sa[5] = "X19";
      sa[6] = "X20";
      sa[7] = "X21";
      sa[8] = "X23";
      sa[9] = "X27";
      sa[10] = "X28";
      sa[11] = "X34";
      sa[12] = "X35";
    }
  }
}
// The class representing column Label
class h2o_rf_10_ColInfo_13 implements java.io.Serializable {
  public static final String[] VALUES = new String[6];
  static {
    h2o_rf_10_ColInfo_13_0.fill(VALUES);
  }
  static final class h2o_rf_10_ColInfo_13_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "1";
      sa[1] = "2";
      sa[2] = "3";
      sa[3] = "4";
      sa[4] = "5";
      sa[5] = "6";
    }
  }
}

class h2o_rf_10_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_0_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_0_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_0_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_0_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_0_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_0_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[4 /* X18 */] <-0.3205271f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22743559f ? 
                 (data[9 /* X27 */] <0.02100656f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26550323f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.47605172f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.047216028f ? 
             (data[6 /* X20 */] <-0.48860922f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.35742912f ? 
                     (data[10 /* X28 */] <-0.23101132f ? 
                         (data[3 /* X17 */] <-0.025264043f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.14412925f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.14335267f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35450128f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13629073f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07413004f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.32527235f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39781126f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18898065f ? 
                             (data[12 /* X35 */] <-0.1204525f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.116223216f ? 
                                    1.0f : 
                                     (data[11 /* X34 */] <-0.025f ? 
                                         (data[1 /* X12 */] <-0.03555356f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                0.0f) : 
                             (data[5 /* X19 */] <0.1763885f ? 
                                0.0f : 
                                1.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_0_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (data[12 /* X35 */] <-0.7957648f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32799095f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.39451152f ? 
             (data[0 /* X5 */] <0.09387125f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3707449f ? 
                     (data[9 /* X27 */] <-0.1046267f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.039810114f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.33928174f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[9 /* X27 */] <0.26934472f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.31742674f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.020700088f ? 
                                     (data[5 /* X19 */] <0.24323991f ? 
                                        1.0f : 
                                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12125f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f)))) : 
                     (data[10 /* X28 */] <-0.23101132f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_0_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06298262f ? 
         (data[12 /* X35 */] <-0.88738436f ? 
             (data[4 /* X18 */] <-0.106552765f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1978266f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06679573f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33820525f ? 
                     (data[10 /* X28 */] <-0.5168918f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.35154444f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2051122f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_0_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (data[9 /* X27 */] <-0.14754212f ? 
             (data[0 /* X5 */] <0.21443057f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.050006304f ? 
             (data[0 /* X5 */] <0.09026169f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19570744f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5348468f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                     (data[12 /* X35 */] <-0.46555275f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22699925f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3175f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.2666629f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[9 /* X27 */] <-0.010584898f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_0_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14563571f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.06853477f ? 
             (data[11 /* X34 */] <-0.42490235f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2607303f ? 
                 (data[5 /* X19 */] <0.012949341f ? 
                     (data[10 /* X28 */] <-0.0875648f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5354412f ? 
             (data[6 /* X20 */] <-0.2506512f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7713109f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2832255f ? 
                         (data[10 /* X28 */] <-0.026810998f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3286369f ? 
                                 (data[0 /* X5 */] <0.1640411f ? 
                                    1.0f : 
                                     (data[1 /* X12 */] <-0.44010967f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.025f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f)) : 
             (data[6 /* X20 */] <0.6725812f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.30400723f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_0_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23375472f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.021176025f ? 
            0.0f : 
             (data[0 /* X5 */] <0.13141067f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.09923087f ? 
                     (data[10 /* X28 */] <0.38158965f ? 
                        0.0f : 
                         (data[9 /* X27 */] <-0.20415117f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23620558f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.4166648f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[2 /* X15 */] <0.13327152f ? 
            1.0f : 
             (data[8 /* X23 */] <0.18384823f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <1.0048598f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_1_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_1_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_1_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_1_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_1_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_1_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41825497f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3096769f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25968924f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.32287505f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.25761044f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22131485f ? 
                 (data[9 /* X27 */] <0.08435367f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18203695f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14082456f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.47605172f ? 
                            0.0f : 
                             (data[1 /* X12 */] <0.27901492f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
             (data[0 /* X5 */] <0.088817865f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.6368855f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.42965648f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20735046f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24505629f ? 
                                0.0f : 
                                1.0f) : 
                             (data[5 /* X19 */] <0.3331813f ? 
                                 (data[11 /* X34 */] <0.066662f ? 
                                    1.0f : 
                                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14944094f ? 
                                         (data[7 /* X21 */] <0.11803513f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.257141f ? 
                                    0.0f : 
                                     (data[2 /* X15 */] <0.3045209f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_1_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41824102f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0079283f ? 
                 (data[4 /* X18 */] <-0.49954984f ? 
                     (data[7 /* X21 */] <0.14080943f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.1640481f ? 
                         (data[5 /* X19 */] <0.16057146f ? 
                             (data[4 /* X18 */] <-0.23101577f ? 
                                0.0f : 
                                 (data[12 /* X35 */] <0.02613875f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[6 /* X20 */] <-0.48962033f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.084105015f ? 
             (data[11 /* X34 */] <0.3674302f ? 
                 (data[4 /* X18 */] <-0.20760511f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.90838045f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.24757564f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[0 /* X5 */] <0.088817865f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24027649f ? 
                     (data[7 /* X21 */] <0.13748962f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26704374f ? 
                             (data[2 /* X15 */] <0.15271658f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_1_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[4 /* X18 */] <-0.08366631f ? 
            1.0f : 
             (data[2 /* X15 */] <0.2099134f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.033662435f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_1_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[4 /* X18 */] <-0.1470128f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14512701f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2067858f ? 
                    0.0f : 
                    1.0f))) : 
         (data[1 /* X12 */] <-0.26414007f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36904642f ? 
                 (data[5 /* X19 */] <-0.45809954f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.18589593f ? 
                             (data[3 /* X17 */] <-0.07354382f ? 
                                1.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11665031f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_1_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[4 /* X18 */] <-0.17042346f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23320028f ? 
                 (data[9 /* X27 */] <-0.06803499f ? 
                     (data[12 /* X35 */] <0.20632383f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.16985777f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.146827f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.18217331f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.21106657f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.28369224f ? 
                         (data[2 /* X15 */] <0.10938742f ? 
                             (data[5 /* X19 */] <0.10052005f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.6551836f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.20987046f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22419547f ? 
                                1.0f : 
                                0.0f)))))) : 
         (data[1 /* X12 */] <-0.25191996f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24330705f ? 
                 (data[6 /* X20 */] <-0.066914536f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.31285352f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.36859894f ? 
                             (data[7 /* X21 */] <0.21818307f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.024239082f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.11259104f ? 
                     (data[4 /* X18 */] <-0.09671664f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08525955f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.22245699f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_1_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[9 /* X27 */] <-0.1641061f ? 
            1.0f : 
             (data[10 /* X28 */] <0.47347978f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.19588262f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-1.0904487f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.9619073f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9878663f ? 
                                0.0f : 
                                1.0f)))))) : 
         (data[2 /* X15 */] <0.08245462f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2221448f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.56536996f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.03309807f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.36322245f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.34815198f ? 
                            1.0f : 
                            0.0f) : 
                         (data[12 /* X35 */] <0.16051406f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23456542f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_2_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_2_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_2_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_2_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_2_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_2_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18849526f ? 
            0.0f : 
             (data[7 /* X21 */] <0.1449592f ? 
                 (data[1 /* X12 */] <-0.28614318f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049764123f ? 
             (data[6 /* X20 */] <-0.54315865f ? 
                 (data[10 /* X28 */] <-0.51971865f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36986166f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.14301677f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16733149f ? 
                     (data[3 /* X17 */] <-0.4115022f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13391514f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4675099f ? 
                             (data[4 /* X18 */] <-0.55353206f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.26138082f ? 
                                     (data[9 /* X27 */] <0.07734791f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            1.0f)) : 
                     (data[9 /* X27 */] <0.124107234f ? 
                         (data[2 /* X15 */] <0.20983641f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_2_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0291426f ? 
             (data[6 /* X20 */] <-0.5276638f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.3955848f ? 
                     (data[9 /* X27 */] <0.03134892f ? 
                         (data[9 /* X27 */] <-0.1173383f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.54457206f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39451152f ? 
             (data[1 /* X12 */] <0.26781112f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.18227494f ? 
                     (data[12 /* X35 */] <-0.84730077f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2784962f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.1281523f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_2_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
        0.011904762f : 
         (data[1 /* X12 */] <0.12445947f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.34279218f ? 
                 (data[0 /* X5 */] <0.09820272f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.15416771f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.33689466f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_2_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18593135f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14443836f ? 
                 (data[1 /* X12 */] <-1.0030543f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.04789277f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.53601086f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38158965f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.32042867f ? 
                         (data[7 /* X21 */] <0.17068774f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.09909582f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2188457f ? 
                                     (data[9 /* X27 */] <-0.2533097f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[9 /* X27 */] <-0.057098024f ? 
                                        0.0f : 
                                         (data[9 /* X27 */] <0.044420194f ? 
                                            1.0f : 
                                            0.0f))) : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_2_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[4 /* X18 */] <-0.1442586f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30962387f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
                 (data[2 /* X15 */] <0.13327152f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.12182359f ? 
                         (data[12 /* X35 */] <0.2521336f ? 
                             (data[9 /* X27 */] <-0.094905846f ? 
                                0.0f : 
                                1.0f) : 
                             (data[2 /* X15 */] <0.16126247f ? 
                                1.0f : 
                                 (data[12 /* X35 */] <0.35749605f ? 
                                     (data[9 /* X27 */] <0.26128128f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.9581254f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14483836f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5780792f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06268748f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.24382666f ? 
                 (data[6 /* X20 */] <-0.0136424145f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.24692602f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_2_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.49345702f ? 
         (data[1 /* X12 */] <-0.6918439f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.61097676f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.04173003f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.12992592f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16389672f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.16621688f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.945693f ? 
             (data[0 /* X5 */] <0.11697244f ? 
                 (data[2 /* X15 */] <0.12160862f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_3_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_3_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_3_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_3_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_3_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_3_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24150227f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.4205575f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11258536f ? 
             (data[5 /* X19 */] <0.08024204f ? 
                 (data[3 /* X17 */] <-0.36322245f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.4718403f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.25459296f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.21935542f ? 
                             (data[0 /* X5 */] <0.19176252f ? 
                                0.0f : 
                                1.0f) : 
                             (data[10 /* X28 */] <-0.21387899f ? 
                                 (data[12 /* X35 */] <-0.583332f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4426379f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5878988f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20442796f ? 
                     (data[12 /* X35 */] <-0.95419025f ? 
                         (data[3 /* X17 */] <0.11957528f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_3_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29780164f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0291426f ? 
                 (data[6 /* X20 */] <-0.4388956f ? 
                     (data[5 /* X19 */] <0.08771901f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13654926f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.5107556f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.20209672f ? 
             (data[4 /* X18 */] <-0.39948896f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.08435367f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.1774426f ? 
                         (data[0 /* X5 */] <0.15804882f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.11841626f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20218039f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2349656f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6858763f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_3_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
        0.011904762f : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10983116f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12201545f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3055611f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4653058f ? 
                 (data[0 /* X5 */] <0.103978015f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_3_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[0 /* X5 */] <0.09026169f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.026033215f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20701863f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14788851f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.06355075f ? 
             (data[11 /* X34 */] <-0.49417642f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36157686f ? 
                     (data[9 /* X27 */] <-0.101162955f ? 
                         (data[8 /* X23 */] <0.16857941f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.12931007f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.2666629f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04489017f ? 
                            0.0f : 
                             (data[12 /* X35 */] <0.2773775f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2379649f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_3_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[0 /* X5 */] <0.09026169f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.16904637f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.33781895f ? 
                     (data[9 /* X27 */] <0.0048465445f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.13085f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.39694786f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35688978f ? 
                             (data[5 /* X19 */] <-0.52718705f ? 
                                1.0f : 
                                 (data[0 /* X5 */] <0.19479628f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20434205f ? 
                                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6332992f ? 
                                            1.0f : 
                                             (data[2 /* X15 */] <0.1443707f ? 
                                                1.0f : 
                                                0.0f)) : 
                                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.111547925f ? 
                                            0.0f : 
                                            1.0f)))) : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26858833f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.031896595f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.19804688f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.1709109f ? 
                     (data[3 /* X17 */] <-0.3752924f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_3_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.49345702f ? 
         (data[0 /* X5 */] <0.153429f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.40589336f ? 
                 (data[0 /* X5 */] <0.17416236f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.16072829f ? 
                        1.0f : 
                         (data[12 /* X35 */] <0.4659125f ? 
                             (data[10 /* X28 */] <0.23456542f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42498222f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.85881114f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_4_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_4_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_4_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_4_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_4_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_4_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[3 /* X17 */] <-0.28778532f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23790126f ? 
                 (data[10 /* X28 */] <-0.2532859f ? 
                     (data[11 /* X34 */] <0.14257812f ? 
                         (data[0 /* X5 */] <0.12130391f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22990693f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2339222f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4286537f ? 
                     (data[1 /* X12 */] <-0.23344155f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.4389575f ? 
                             (data[8 /* X23 */] <0.15158455f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.57637566f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[2 /* X15 */] <0.27176556f ? 
                        1.0f : 
                         (data[1 /* X12 */] <0.7386977f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12587029f ? 
                     (data[9 /* X27 */] <-0.037274957f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31128025f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.70605403f ? 
                 (data[8 /* X23 */] <0.110159576f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_4_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[3 /* X17 */] <-0.28024158f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19807617f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.8358852f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34130672f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2025869f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.22155789f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_4_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10246327f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4584913f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042353373f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_4_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15880258f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.08804982f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <-0.14091653f ? 
             (data[2 /* X15 */] <0.15826343f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <-0.5373118f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3791876f ? 
                     (data[8 /* X23 */] <0.11547047f ? 
                         (data[1 /* X12 */] <-0.71552336f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31269437f ? 
                             (data[9 /* X27 */] <0.0945858f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16733241f ? 
                                    0.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.007481685f ? 
                                        0.0f : 
                                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3408982f ? 
                                            1.0f : 
                                            0.0f)))) : 
                             (data[11 /* X34 */] <-0.805f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_4_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[1 /* X12 */] <-0.44744173f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.29661244f ? 
                 (data[8 /* X23 */] <0.19911705f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.13327152f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13454746f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.23708394f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1588916f ? 
             (data[10 /* X28 */] <0.008924059f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22727427f ? 
                     (data[2 /* X15 */] <0.15326506f ? 
                        1.0f : 
                         (data[9 /* X27 */] <-0.022603193f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50074077f ? 
                     (data[4 /* X18 */] <-0.37285683f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.03590364f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.18489495f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[0 /* X5 */] <0.18194452f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.008050514f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5323049f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28243044f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_4_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[9 /* X27 */] <-0.039876215f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2712501f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04742101f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.05550088f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X12 */] <-0.13690649f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2677922f ? 
            1.0f : 
             (data[2 /* X15 */] <0.15076587f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_5_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_5_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_5_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_5_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_5_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_5_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[12 /* X35 */] <-0.35675454f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23536602f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22878441f ? 
             (data[11 /* X34 */] <-0.036410905f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.49807444f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18886842f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.7519547f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X27 */] <0.08435367f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.72098124f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10849113f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1867957f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5061151f ? 
                                    1.0f : 
                                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13021247f ? 
                                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.38644513f ? 
                                            1.0f : 
                                             (data[2 /* X15 */] <0.18516338f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f)) : 
                                0.0f) : 
                            1.0f)))) : 
             (data[10 /* X28 */] <-0.20038128f ? 
                 (data[4 /* X18 */] <-0.13599601f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_5_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[6 /* X20 */] <-0.52977735f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.13851023f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18562688f ? 
             (data[2 /* X15 */] <0.17291883f ? 
                 (data[6 /* X20 */] <-0.40507916f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.22978136f ? 
                     (data[0 /* X5 */] <0.10975332f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.42198738f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3300301f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.06781445f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.31970504f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.28663206f ? 
                         (data[2 /* X15 */] <0.2552181f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_5_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[6 /* X20 */] <-0.5826156f ? 
             (data[0 /* X5 */] <0.13574216f ? 
                 (data[3 /* X17 */] <0.06526053f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.10619694f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.82366925f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22092777f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.37285683f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <0.3344589f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_5_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[6 /* X20 */] <0.040875442f ? 
             (data[1 /* X12 */] <-1.0071229f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.1682602f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.0054723746f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37029135f ? 
             (data[5 /* X19 */] <-0.64128524f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10637318f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3895629f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.46901423f ? 
                             (data[2 /* X15 */] <0.18306378f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[3 /* X17 */] <-0.78567046f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06374344f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.015f ? 
                                 (data[10 /* X28 */] <-0.12225542f ? 
                                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.173436f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)))) : 
             (data[6 /* X20 */] <-0.33744624f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_5_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48690864f ? 
             (data[11 /* X34 */] <-0.7468475f ? 
                 (data[4 /* X18 */] <-0.18006314f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.29916686f ? 
                     (data[7 /* X21 */] <0.13843675f ? 
                         (data[2 /* X15 */] <0.1799231f ? 
                             (data[10 /* X28 */] <0.36525363f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[5 /* X19 */] <0.027903274f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16990347f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.09314204f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
                 (data[12 /* X35 */] <0.5362302f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.50410986f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.24855798f ? 
                    0.0f : 
                     (data[3 /* X17 */] <0.06969246f ? 
                        1.0f : 
                         (data[5 /* X19 */] <-0.0020045915f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3130246f ? 
             (data[10 /* X28 */] <-0.4709467f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.21359903f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.15982458f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15887697f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.14488438f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.18089311f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09371366f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06989533f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_5_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05634689f ? 
             (data[1 /* X12 */] <-0.64540756f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20442796f ? 
             (data[11 /* X34 */] <-0.97333986f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19121295f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.5139941f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.28267345f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.32806146f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4224297f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.036844984f ? 
                     (data[6 /* X20 */] <-0.066914536f ? 
                         (data[2 /* X15 */] <0.36966947f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_6_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_6_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_6_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_6_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_6_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_6_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.69841903f ? 
                 (data[3 /* X17 */] <-0.30200928f ? 
                     (data[10 /* X28 */] <-0.29486847f ? 
                         (data[11 /* X34 */] <0.5973531f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36905187f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3036298f ? 
                             (data[4 /* X18 */] <-0.51827836f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16724095f ? 
                             (data[6 /* X20 */] <-0.79737896f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (data[9 /* X27 */] <-0.21250513f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26152006f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.045780882f ? 
                             (data[10 /* X28 */] <-0.48184615f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0021408855f ? 
                                    1.0f : 
                                     (data[6 /* X20 */] <-0.53358173f ? 
                                        0.0f : 
                                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.02451332f ? 
                                            1.0f : 
                                            0.0f)))) : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5029663f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[12 /* X35 */] <-0.70414525f ? 
             (data[1 /* X12 */] <-0.09305851f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_6_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[3 /* X17 */] <-0.27571535f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25968924f ? 
                 (data[9 /* X27 */] <-0.101162955f ? 
                     (data[11 /* X34 */] <-0.0296875f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.7840917f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.69590074f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36400157f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14733584f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[4 /* X18 */] <-0.05269893f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.0063909655f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6659562f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_6_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66625977f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6514051f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.009590421f ? 
                    0.0f : 
                    1.0f)) : 
             (data[10 /* X28 */] <-0.27695638f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18991986f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_6_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[3 /* X17 */] <-0.7901967f ? 
             (data[10 /* X28 */] <-0.17485623f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.1470128f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16637918f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.074660584f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.8209961f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33053955f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25620916f ? 
                         (data[6 /* X20 */] <-0.03309807f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.32353926f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.14767334f ? 
                                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.30879185f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1761755f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5449468f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.19638276f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_6_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[11 /* X34 */] <-0.42490235f ? 
             (data[9 /* X27 */] <-0.04484541f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.21218537f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.5671988f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1998735f ? 
             (data[3 /* X17 */] <-0.6589361f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.046029188f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.078125f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.57559824f ? 
                             (data[6 /* X20 */] <-0.05872718f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16576959f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[10 /* X28 */] <-0.3829479f ? 
                                    1.0f : 
                                     (data[3 /* X17 */] <-0.12571879f ? 
                                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.04007308f ? 
                                            0.0f : 
                                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.278022f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        0.0f))) : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9581605f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[12 /* X35 */] <0.01709028f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5296349f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.74141765f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25989723f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.054034192f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18984179f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[4 /* X18 */] <-0.11209352f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_6_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37606156f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28324097f ? 
                 (data[7 /* X21 */] <0.09433208f ? 
                     (data[2 /* X15 */] <0.119942494f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <0.2933708f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.20548353f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.53462714f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24073677f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.011472139f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.0048465445f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.6496094f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_7_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_7_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_7_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_7_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_7_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_7_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.08435367f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.4444659f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.10415916f ? 
                         (data[3 /* X17 */] <-0.11529856f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[12 /* X35 */] <-0.8434833f ? 
                 (data[3 /* X17 */] <-0.30287275f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1873906f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X21 */] <0.1358338f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18538141f ? 
                         (data[4 /* X18 */] <-0.1525212f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5361179f ? 
             (data[4 /* X18 */] <-0.12773344f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.31566685f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13454746f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26885688f ? 
                             (data[2 /* X15 */] <0.15459795f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12609334f ? 
                     (data[11 /* X34 */] <0.0359375f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.19563052f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.43582788f ? 
                                 (data[7 /* X21 */] <0.14253867f ? 
                                    0.0f : 
                                     (data[11 /* X34 */] <0.30582032f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f))) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_7_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25221226f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.019737845f ? 
             (data[12 /* X35 */] <-0.21359903f ? 
                 (data[2 /* X15 */] <0.13327152f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.61669123f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.39437157f ? 
                            0.0f : 
                             (data[12 /* X35 */] <-0.8804549f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.043772448f ? 
                                     (data[4 /* X18 */] <-0.3925259f ? 
                                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.4411023f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                    0.0f))))) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15580842f ? 
                 (data[3 /* X17 */] <-0.043368958f ? 
                     (data[1 /* X12 */] <0.2774226f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.16061307f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19638276f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.27940264f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.004141643f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.61440116f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.44734976f ? 
                     (data[6 /* X20 */] <-0.7266339f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_7_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.17089589f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21430658f ? 
                 (data[2 /* X15 */] <0.21324566f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_7_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46864074f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17370412f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06889453f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14371516f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.16577816f ? 
                             (data[1 /* X12 */] <0.27501172f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21112728f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023015728f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16700065f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <0.086058795f ? 
                                    1.0f : 
                                     (data[0 /* X5 */] <0.16846104f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19038118f ? 
                                1.0f : 
                                 (data[8 /* X23 */] <0.19443683f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.017224574f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3175f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3284832f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1557851f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13391514f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.27540216f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_7_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14563571f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22587958f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.29608718f ? 
                     (data[0 /* X5 */] <0.14729275f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (data[12 /* X35 */] <-0.7442288f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2960409f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23625399f ? 
             (data[3 /* X17 */] <-0.25459296f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.29298007f ? 
                     (data[5 /* X19 */] <-0.056248512f ? 
                         (data[2 /* X15 */] <0.16659407f ? 
                            0.0f : 
                            1.0f) : 
                         (data[4 /* X18 */] <-0.076717086f ? 
                            1.0f : 
                             (data[8 /* X23 */] <0.14296061f ? 
                                 (data[7 /* X21 */] <0.1161932f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5333277f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.62663f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36776584f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.5156119f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-1.0657793f ? 
                     (data[3 /* X17 */] <-0.42357218f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_7_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[1 /* X12 */] <-0.7187282f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.06853477f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.023537247f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.056797665f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11328292f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36525363f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.40680927f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.33079928f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24706146f ? 
                     (data[3 /* X17 */] <-0.6047034f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.116641276f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.34547788f ? 
                         (data[7 /* X21 */] <0.23304598f ? 
                             (data[3 /* X17 */] <-0.44311914f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
             (data[7 /* X21 */] <0.46277678f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}


class h2o_rf_10_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_8_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_8_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_8_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_8_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_8_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_8_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[0 /* X5 */] <0.081237786f ? 
             (data[10 /* X28 */] <0.014029066f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.1595412f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18850046f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.695312f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28585312f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12084795f ? 
             (data[11 /* X34 */] <-0.31064454f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12690349f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18052892f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08625736f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.2550297f ? 
                         (data[7 /* X21 */] <0.13085f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2833209f ? 
                     (data[7 /* X21 */] <0.21052545f ? 
                         (data[5 /* X19 */] <0.33749643f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.49091443f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.21586116f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_8_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.23268643f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4811662f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24980426f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.28060928f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.1114873f ? 
                     (data[12 /* X35 */] <-0.61309767f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15884334f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.16585279f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38662276f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2661671f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18593135f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.63352185f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_8_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (data[12 /* X35 */] <-0.74995506f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04940393f ? 
                 (data[8 /* X23 */] <0.11281502f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2114428f ? 
                         (data[1 /* X12 */] <-0.04906611f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2393044f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.51178676f ? 
                 (data[0 /* X5 */] <0.15162422f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_8_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[12 /* X35 */] <-0.38538563f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.057441045f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.0864205f ? 
             (data[8 /* X23 */] <0.14999129f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14240612f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.08817047f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.07402344f ? 
                 (data[1 /* X12 */] <-0.63563144f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.64915156f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.91251045f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0033177026f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4224297f ? 
                             (data[12 /* X35 */] <-0.022725f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15870997f ? 
                                     (data[6 /* X20 */] <0.007481685f ? 
                                        0.0f : 
                                         (data[10 /* X28 */] <-0.023613954f ? 
                                             (data[8 /* X23 */] <0.20171294f ? 
                                                1.0f : 
                                                0.0f) : 
                                            1.0f)) : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_8_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09334839f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05423336f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44205067f ? 
                     (data[12 /* X35 */] <0.13920492f ? 
                         (data[10 /* X28 */] <-0.0895023f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.22f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.9386902f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.1861565f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[4 /* X18 */] <-0.14012732f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28209978f ? 
                 (data[0 /* X5 */] <0.089539774f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.22776046f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.32587892f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9227205f ? 
                     (data[7 /* X21 */] <0.22792576f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.54764664f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_8_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[12 /* X35 */] <0.045989648f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.77467525f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <0.25906944f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.87025756f ? 
                     (data[12 /* X35 */] <0.49902666f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22204939f ? 
             (data[11 /* X34 */] <-0.36777344f ? 
                 (data[1 /* X12 */] <-0.7431684f ? 
                     (data[0 /* X5 */] <0.1731097f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.71341515f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_9_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_9_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_9_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_9_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_9_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_9_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[2 /* X15 */] <0.11369452f ? 
             (data[0 /* X5 */] <0.15162422f ? 
                 (data[12 /* X35 */] <-0.09143965f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.3205271f ? 
                 (data[5 /* X19 */] <-0.14092395f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.28778532f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23376414f ? 
                 (data[11 /* X34 */] <-0.4363281f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20617749f ? 
                         (data[8 /* X23 */] <0.117629364f ? 
                             (data[11 /* X34 */] <0.56875974f ? 
                                1.0f : 
                                 (data[5 /* X19 */] <0.20784584f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23464411f ? 
                 (data[4 /* X18 */] <-0.45290476f ? 
                     (data[9 /* X27 */] <0.18373758f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.026629573f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[0 /* X5 */] <0.04717256f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20989068f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.316546f ? 
                                 (data[7 /* X21 */] <0.08072572f ? 
                                    1.0f : 
                                     (data[3 /* X17 */] <-0.18088773f ? 
                                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17689627f ? 
                                            0.0f : 
                                             (data[12 /* X35 */] <-0.46249875f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        0.0f)) : 
                                 (data[8 /* X23 */] <0.165114f ? 
                                    1.0f : 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3159075f ? 
                                        0.0f : 
                                         (data[7 /* X21 */] <0.13767752f ? 
                                            0.0f : 
                                            1.0f)))) : 
                             (data[3 /* X17 */] <-0.025710223f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[7 /* X21 */] <0.13582972f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 118B, number of visited nodes = 29, static init size = 0B
}

class h2o_rf_10_Tree_9_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
        0.013333334f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2753089f ? 
             (data[10 /* X28 */] <-0.47605172f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.25838524f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.037446346f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23725833f ? 
                         (data[5 /* X19 */] <0.03518302f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.06286991f ? 
                                1.0f : 
                                 (data[2 /* X15 */] <0.16598275f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <-0.12727483f ? 
                                         (data[8 /* X23 */] <0.13974239f ? 
                                             (data[10 /* X28 */] <0.12498989f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f) : 
                                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.07158875f ? 
                                            1.0f : 
                                            0.0f))))) : 
                        0.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19069414f ? 
                 (data[0 /* X5 */] <0.11841626f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21903291f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.17068774f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_9_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06298262f ? 
         (data[6 /* X20 */] <-0.2761539f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21655273f ? 
                 (data[1 /* X12 */] <0.10735131f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.20548628f ? 
                 (data[7 /* X21 */] <0.1480209f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_9_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.12269614f ? 
         (data[5 /* X19 */] <-0.65623915f ? 
            1.0f : 
             (data[7 /* X21 */] <0.076903075f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.76756555f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.35915625f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.50892836f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.46816322f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.026868345f ? 
                 (data[0 /* X5 */] <0.060663294f ? 
                     (data[8 /* X23 */] <0.16326852f ? 
                        1.0f : 
                        0.0f) : 
                     (data[5 /* X19 */] <-0.09172819f ? 
                         (data[9 /* X27 */] <-0.08309786f ? 
                            1.0f : 
                            0.0f) : 
                         (data[8 /* X23 */] <0.11547047f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.091740936f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[8 /* X23 */] <0.10352096f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.34995753f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29536468f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.061588027f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <0.075523324f ? 
                                    0.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.41231477f ? 
                                         (data[3 /* X17 */] <-0.17692931f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f))) : 
                            1.0f) : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_9_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (data[6 /* X20 */] <-0.26769978f ? 
            0.0f : 
             (data[0 /* X5 */] <0.11986008f ? 
                 (data[0 /* X5 */] <0.1017591f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.25438616f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11188571f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.16904637f ? 
                     (data[3 /* X17 */] <-0.2666629f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19389437f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3603294f ? 
                         (data[10 /* X28 */] <-0.13326006f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-1.0032123f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0359375f ? 
                            1.0f : 
                            0.0f))))) : 
         (data[2 /* X15 */] <0.1395195f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24458788f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.43165946f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18916364f ? 
                 (data[11 /* X34 */] <-0.6039063f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16969134f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.9475794f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[1 /* X12 */] <-0.24458788f ? 
                         (data[3 /* X17 */] <-0.009573779f ? 
                             (data[3 /* X17 */] <-0.30205613f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_9_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.023066927f ? 
         (data[6 /* X20 */] <-0.01618984f ? 
            0.0f : 
             (data[10 /* X28 */] <0.7236252f ? 
                 (data[0 /* X5 */] <0.13312638f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654575f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.15353969f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.38730112f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.49746895f ? 
             (data[1 /* X12 */] <-0.5378705f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15928535f ? 
                     (data[7 /* X21 */] <0.15740849f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.2683692f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24558738f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5640109f ? 
                         (data[8 /* X23 */] <0.24976744f ? 
                             (data[9 /* X27 */] <0.079136014f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_10 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_10_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_10_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_10_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_10_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_10_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_10_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_10_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17312084f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.54814523f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23874386f ? 
                     (data[10 /* X28 */] <-0.49647173f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06824695f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2559977f ? 
                                1.0f : 
                                0.0f) : 
                             (data[1 /* X12 */] <0.41710016f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.54166627f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))) : 
                    0.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <0.17370412f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.057441045f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20388584f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[12 /* X35 */] <0.06858137f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1028346f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.12476453f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_10_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[3 /* X17 */] <-0.21536565f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32799095f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.3139636f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.11986008f ? 
                 (data[1 /* X12 */] <-0.45966184f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.38632813f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                         (data[10 /* X28 */] <-0.33985302f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.6860958f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2399037f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27627602f ? 
                         (data[7 /* X21 */] <0.12671965f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_10_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0237553f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05128927f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12852304f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12690349f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.40507916f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.10429151f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_10_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[3 /* X17 */] <-0.7901967f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12780112f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15682457f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.10429554f ? 
                     (data[1 /* X12 */] <-0.008815124f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[3 /* X17 */] <-0.23196182f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11749873f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36323676f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X5 */] <0.1148067f ? 
                 (data[12 /* X35 */] <1.767578E-4f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28276363f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3601175f ? 
                         (data[9 /* X27 */] <-0.23367484f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.12129553f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10779805f ? 
                                    0.0f : 
                                     (data[5 /* X19 */] <0.0697271f ? 
                                        0.0f : 
                                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.29191676f ? 
                                            1.0f : 
                                            0.0f))) : 
                                0.0f)) : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.44010967f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_10_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29537702f ? 
             (data[9 /* X27 */] <0.14729682f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2819014f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4415658f ? 
             (data[3 /* X17 */] <-0.23237713f ? 
                 (data[10 /* X28 */] <-0.1595412f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23044433f ? 
                        0.0f : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.8721259f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X18 */] <-0.38269442f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.17249459f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34937742f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19985151f ? 
                                0.0f : 
                                 (data[2 /* X15 */] <0.18316244f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14565344f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.390625f ? 
                     (data[6 /* X20 */] <-0.12125592f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_10_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
        0.0091743115f : 
         (data[4 /* X18 */] <-0.1470128f ? 
             (data[0 /* X5 */] <0.1025342f ? 
                 (data[4 /* X18 */] <-0.21138293f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.38145313f ? 
                 (data[7 /* X21 */] <0.17068774f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.18185665f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.25848806f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.24790423f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26927948f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.2932818f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_11 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_11_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_11_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_11_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_11_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_11_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_11_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_11_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.52138305f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.07354382f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.1774426f ? 
                 (data[4 /* X18 */] <-0.11396246f ? 
                     (data[12 /* X35 */] <-0.69460154f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.4388956f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.8196152f ? 
                     (data[0 /* X5 */] <0.15688434f ? 
                         (data[5 /* X19 */] <0.3615913f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.85340875f ? 
                                 (data[1 /* X12 */] <-0.03593425f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25406545f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.2388255f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))) : 
         (data[3 /* X17 */] <-0.33455634f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2796875f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.39254606f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_11_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
             (data[8 /* X23 */] <0.08626055f ? 
                 (data[3 /* X17 */] <-0.08561376f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.5215834f ? 
                     (data[7 /* X21 */] <0.12753019f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.03508567f ? 
                 (data[4 /* X18 */] <-0.36184004f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.33162358f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.665896f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[11 /* X34 */] <0.27465084f ? 
                     (data[3 /* X17 */] <0.22579694f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.26515415f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.3449219f ? 
                 (data[12 /* X35 */] <-0.14488438f ? 
                     (data[8 /* X23 */] <0.1792012f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.35435447f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05613147f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3961853f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_11_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (data[1 /* X12 */] <0.10246327f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35688978f ? 
                 (data[3 /* X17 */] <-0.025264043f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14184876f ? 
                         (data[0 /* X5 */] <0.11058129f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.7585131f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.813232f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.13020118f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6717253f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4388956f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_11_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.12269614f ? 
         (data[1 /* X12 */] <-0.23969984f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.0879897f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.05922556f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.09459316f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25968924f ? 
                 (data[2 /* X15 */] <0.17825697f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.21875f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.46982935f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.080176465f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.034534857f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22806144f ? 
                                 (data[1 /* X12 */] <-0.5652436f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25434187f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09575367f ? 
                            0.0f : 
                             (data[10 /* X28 */] <0.23456542f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5965271f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_11_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.18283883f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18491957f ? 
                 (data[10 /* X28 */] <-0.09828111f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.34995753f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8799464f ? 
                         (data[9 /* X27 */] <-0.12504226f ? 
                             (data[10 /* X28 */] <0.7390997f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.28675532f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.122898355f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.13731728f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.21999899f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6559684f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12734374f ? 
                     (data[6 /* X20 */] <-0.15145569f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28541908f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.42490235f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.54845846f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_11_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[0 /* X5 */] <0.11625052f ? 
             (data[9 /* X27 */] <-0.12103974f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.041120645f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.1610509f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18737616f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3465359f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2182966f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42490235f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.10708366f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_12 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_12_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_12_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_12_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_12_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_12_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_12_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_12_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049764123f ? 
             (data[5 /* X19 */] <0.1550117f ? 
                 (data[4 /* X18 */] <-0.20760511f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18761298f ? 
                         (data[12 /* X35 */] <-0.90838045f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.38253435f ? 
                                1.0f : 
                                 (data[7 /* X21 */] <0.10694736f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.029298188f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.80784434f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10735131f ? 
                             (data[11 /* X34 */] <-0.4692295f ? 
                                0.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2606816f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.28055322f ? 
                                 (data[3 /* X17 */] <-0.15484498f ? 
                                    1.0f : 
                                     (data[4 /* X18 */] <0.05999028f ? 
                                        0.0f : 
                                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.857145f ? 
                                            1.0f : 
                                            0.0f))) : 
                                0.0f)) : 
                        0.0f) : 
                     (data[3 /* X17 */] <-0.5563415f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.29637268f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.061957203f ? 
                                0.0f : 
                                1.0f) : 
                             (data[6 /* X20 */] <-0.56210124f ? 
                                0.0f : 
                                1.0f))))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_12_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3939453f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22237161f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8466311f ? 
             (data[6 /* X20 */] <-0.3983753f ? 
                 (data[2 /* X15 */] <0.1982505f ? 
                     (data[6 /* X20 */] <-0.44222584f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.25687304f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_12_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.18949921f ? 
         (data[10 /* X28 */] <-0.5194443f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19247843f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19365832f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7748047f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4174286f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.13327152f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.93448544f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_12_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0344491f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2542176f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.26651597f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29488593f ? 
             (data[10 /* X28 */] <0.090604186f ? 
                 (data[3 /* X17 */] <-0.32097766f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2622842f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.95893204f ? 
                             (data[3 /* X17 */] <-0.25439766f ? 
                                 (data[11 /* X34 */] <-0.384616f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[3 /* X17 */] <-0.23648804f ? 
                     (data[6 /* X20 */] <0.14927918f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_12_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
        0.014285714f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <1.0218753f ? 
                 (data[0 /* X5 */] <0.10975332f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.15410872f ? 
                         (data[4 /* X18 */] <-0.19658832f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18941528f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[4 /* X18 */] <-0.5050582f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19193451f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.28087962f ? 
                                     (data[6 /* X20 */] <-0.1798727f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[7 /* X21 */] <0.20474108f ? 
                                        1.0f : 
                                        0.0f)))))) : 
                1.0f) : 
             (data[10 /* X28 */] <-0.06765106f ? 
                 (data[3 /* X17 */] <-0.26062793f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22990693f ? 
                    1.0f : 
                     (data[6 /* X20 */] <0.66388124f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_12_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45561227f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.08211128f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18185665f ? 
                 (data[0 /* X5 */] <0.09387125f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3960661f ? 
                         (data[9 /* X27 */] <-0.23307729f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[5 /* X19 */] <-0.52738494f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3032444f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.7491502f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31269437f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_13 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_13_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_13_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_13_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_13_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_13_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_13_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_13_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17915581f ? 
             (data[0 /* X5 */] <0.088095956f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.37453696f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.19931167f ? 
                         (data[11 /* X34 */] <-0.29921874f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.1175792f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <-0.24055447f ? 
                                     (data[6 /* X20 */] <-0.47169676f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.038533106f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f) : 
                    1.0f)) : 
             (data[0 /* X5 */] <0.096036986f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.085710764f ? 
                     (data[10 /* X28 */] <-0.19017126f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.27835977f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.27416876f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33070767f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21224476f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0344491f ? 
                     (data[12 /* X35 */] <-0.69460154f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19724621f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18086591f ? 
                                 (data[1 /* X12 */] <-0.14307193f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.38679767f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.047216028f ? 
                 (data[3 /* X17 */] <0.03508567f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                         (data[7 /* X21 */] <0.14047185f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_10_Tree_13_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
        0.013333334f : 
         (data[12 /* X35 */] <-0.2555913f ? 
             (data[0 /* X5 */] <0.12130391f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.45332485f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.30016035f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43220395f ? 
                     (data[9 /* X27 */] <-0.101162955f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.36190096f ? 
                             (data[9 /* X27 */] <0.28828856f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.418184f ? 
                                1.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.33179334f ? 
                                    1.0f : 
                                     (data[11 /* X34 */] <-0.07375f ? 
                                        0.0f : 
                                        1.0f))))) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_13_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06298262f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.31264916f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                 (data[0 /* X5 */] <0.17183776f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19048685f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_13_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (data[9 /* X27 */] <-0.14754212f ? 
             (data[0 /* X5 */] <0.21731822f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.047538623f ? 
             (data[5 /* X19 */] <-0.03565094f ? 
                 (data[0 /* X5 */] <0.1908614f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.059897203f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.3497023f ? 
                        1.0f : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.13429832f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2796533f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2666629f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <0.38158965f ? 
                     (data[11 /* X34 */] <-0.29921874f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.07836914f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_13_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.039290022f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.21378681f ? 
                 (data[6 /* X20 */] <-0.26135918f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16051406f ? 
                         (data[11 /* X34 */] <-0.3296875f ? 
                             (data[10 /* X28 */] <-0.026810998f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17254281f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (data[1 /* X12 */] <-0.3795792f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.046992555f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[6 /* X20 */] <0.36424538f ? 
                     (data[3 /* X17 */] <-0.46166855f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4525513f ? 
             (data[12 /* X35 */] <-0.45245624f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.04163795f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24649529f ? 
                         (data[2 /* X15 */] <0.13208012f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.23666897f ? 
                                 (data[7 /* X21 */] <0.22605886f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (data[7 /* X21 */] <0.32241344f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18437187f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.107788555f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_13_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23375472f ? 
         (data[1 /* X12 */] <-0.7187282f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18266644f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25611383f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.70641375f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.17681804f ? 
                     (data[10 /* X28 */] <0.29990953f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[10 /* X28 */] <0.4709273f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.69772637f ? 
                 (data[5 /* X19 */] <-0.04686639f ? 
                     (data[12 /* X35 */] <0.5021268f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_14 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_14_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_14_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_14_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_14_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_14_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_14_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_14_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[10 /* X28 */] <-0.55517936f ? 
            1.0f : 
            0.0f) : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (data[12 /* X35 */] <-0.48464015f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5318909f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06313184f ? 
                 (data[6 /* X20 */] <-0.540345f ? 
                     (data[0 /* X5 */] <0.11841626f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22712451f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10931474f ? 
                             (data[6 /* X20 */] <-0.37495756f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.26901183f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.3379617f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_14_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2223044f ? 
             (data[12 /* X35 */] <-0.20214657f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.23486397f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.646637f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19270435f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19927041f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.27269787f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.46848503f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.12649615f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_14_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39575657f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9961704f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                 (data[11 /* X34 */] <0.36347657f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0011241575f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[2 /* X15 */] <0.099948965f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38696757f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4682129f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.051952545f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.15884334f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0031070556f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_14_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[5 /* X19 */] <0.1456655f ? 
             (data[11 /* X34 */] <-0.7486328f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6136695f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15306804f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.050006304f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.36190096f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.1501804f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23003525f ? 
                                0.0f : 
                                1.0f) : 
                             (data[4 /* X18 */] <-0.16574132f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[9 /* X27 */] <0.18373758f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24156983f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_14_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.18283883f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18305032f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.045989648f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22092777f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.76301795f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <-0.90849495f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.46546838f ? 
                         (data[4 /* X18 */] <-0.17455475f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.026810998f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17707685f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25732422f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.42490235f ? 
             (data[11 /* X34 */] <-0.7248068f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15884334f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6260606f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.69055146f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.7724967f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21908861f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0074077123f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18483217f ? 
                         (data[3 /* X17 */] <-0.36513925f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_14_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25141194f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5117673f ? 
             (data[1 /* X12 */] <-0.5378705f ? 
                 (data[11 /* X34 */] <-0.7259621f ? 
                     (data[9 /* X27 */] <0.40238217f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0291103f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.18670894f ? 
                     (data[1 /* X12 */] <-0.7724967f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_15 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_15_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_15_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_15_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_15_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_15_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_15_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_15_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25408152f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20841113f ? 
                 (data[1 /* X12 */] <-0.2866956f ? 
                     (data[2 /* X15 */] <0.16052435f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1466672f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4727121f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.23101132f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14417697f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.057441045f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6162106f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.065079145f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.107111104f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.2574301f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20364328f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.15145569f ? 
             (data[10 /* X28 */] <-0.08807109f ? 
                 (data[2 /* X15 */] <0.18658762f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.078023046f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.12072814f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.09355469f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_15_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.26155847f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4388956f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25866273f ? 
                     (data[7 /* X21 */] <0.081475675f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4719629f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.214995f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1592945f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07786108f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.16383412f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.617714f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.67977935f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.18413281f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31946835f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_15_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[2 /* X15 */] <0.21324566f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.013194101f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29968548f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2106345f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10849113f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_15_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[5 /* X19 */] <-0.065558806f ? 
             (data[8 /* X23 */] <0.18185665f ? 
                 (data[8 /* X23 */] <0.15498333f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <0.1620743f ? 
                 (data[1 /* X12 */] <-0.63563144f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <0.4872992f ? 
                     (data[10 /* X28 */] <0.2929737f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24336793f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_15_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[1 /* X12 */] <-0.6111912f ? 
             (data[9 /* X27 */] <-0.12103974f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.026757484f ? 
             (data[6 /* X20 */] <-0.15353188f ? 
                 (data[8 /* X23 */] <0.13805223f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                         (data[1 /* X12 */] <-0.5965271f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24040376f ? 
                 (data[1 /* X12 */] <-0.8604815f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20361435f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9984968f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.4205575f ? 
                         (data[2 /* X15 */] <0.18658762f ? 
                             (data[9 /* X27 */] <-0.08416335f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17949131f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_15_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18283883f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2677922f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.9716361f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.14722863f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.21613482f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26279598f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.51431984f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.42010275f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26656175f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.18899904f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_16 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_16_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_16_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_16_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_16_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_16_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_16_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_16_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.58680654f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28488916f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.2742066f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21862188f ? 
                 (data[9 /* X27 */] <0.08435367f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.9694601f ? 
                         (data[10 /* X28 */] <-0.22625019f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3548831f ? 
                     (data[6 /* X20 */] <-0.28356344f ? 
                         (data[8 /* X23 */] <0.19497904f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.4787174f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.30140108f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18491957f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.3758798f ? 
                         (data[7 /* X21 */] <0.13454367f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30299827f ? 
                     (data[12 /* X35 */] <-0.11728828f ? 
                         (data[0 /* X5 */] <0.17328158f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_16_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14645566f ? 
             (data[12 /* X35 */] <-0.30140108f ? 
                 (data[6 /* X20 */] <-0.4388956f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.011495974f ? 
                 (data[11 /* X34 */] <-0.2013483f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.12484107f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24040376f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.62765235f ? 
                     (data[6 /* X20 */] <-0.40507916f ? 
                         (data[4 /* X18 */] <-0.06438694f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[0 /* X5 */] <0.19493894f ? 
                 (data[3 /* X17 */] <-0.025386447f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.49629304f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.41670552f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_16_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25399265f ? 
            0.0f : 
             (data[2 /* X15 */] <0.20741421f ? 
                1.0f : 
                 (data[1 /* X12 */] <0.34922224f ? 
                     (data[11 /* X34 */] <0.29251176f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.047895186f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.19107993f ? 
                 (data[0 /* X5 */] <0.12419156f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.13069606f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22636665f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_16_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18593135f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3806915f ? 
                 (data[12 /* X35 */] <0.0939875f ? 
                     (data[12 /* X35 */] <-0.17897217f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3790236f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11738996f ? 
                 (data[9 /* X27 */] <0.19698876f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.09960974f ? 
                         (data[3 /* X17 */] <-0.7011809f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.051829565f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19193451f ? 
                                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15668747f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.050006304f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2745447f ? 
                         (data[6 /* X20 */] <0.16263828f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.53181535f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[9 /* X27 */] <0.0048465445f ? 
                             (data[8 /* X23 */] <0.17609702f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_16_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18305032f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51172227f ? 
                 (data[6 /* X20 */] <-0.050006304f ? 
                     (data[3 /* X17 */] <-0.57499707f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X17 */] <-0.16919442f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.532278f ? 
                             (data[8 /* X23 */] <0.14127281f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27822465f ? 
                 (data[11 /* X34 */] <-0.7231145f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09391377f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.13202192f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22878441f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <0.024723327f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.057547413f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.25177383f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.26516458f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_16_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[1 /* X12 */] <-0.7187282f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                 (data[2 /* X15 */] <0.08780263f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.18595996f ? 
                    1.0f : 
                    0.0f))) : 
         (data[2 /* X15 */] <0.13202192f ? 
             (data[1 /* X12 */] <-0.7431684f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_17 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_17_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_17_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_17_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_17_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_17_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_17_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_17_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
        0.02020202f : 
         (data[6 /* X20 */] <-0.3860574f ? 
             (data[11 /* X34 */] <-0.062001754f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18764171f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26421848f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.30287308f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[2 /* X15 */] <0.2632295f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11947085f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09757522f ? 
                     (data[9 /* X27 */] <-0.021655831f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.17639455f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01660734f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.39318746f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_17_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27947423f ? 
             (data[6 /* X20 */] <-0.3797168f ? 
                 (data[7 /* X21 */] <0.08705757f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.22036064f ? 
                 (data[0 /* X5 */] <0.11264096f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.48962033f ? 
             (data[10 /* X28 */] <-0.20548628f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21686555f ? 
                     (data[1 /* X12 */] <0.40063396f ? 
                        1.0f : 
                         (data[4 /* X18 */] <0.043862797f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[8 /* X23 */] <0.110219695f ? 
                 (data[8 /* X23 */] <0.10813571f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.26611653f ? 
                     (data[6 /* X20 */] <-0.39613304f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.37425703f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_17_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
        0.011904762f : 
         (data[12 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18977664f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.14080943f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04723103f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.32242528f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19056602f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_17_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[2 /* X15 */] <0.17534125f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.48683006f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28608295f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36987638f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.055438902f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.10668212f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.20717245f ? 
                             (data[4 /* X18 */] <-0.20941052f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7469131f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3735263f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[7 /* X21 */] <0.37549436f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.601105f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_17_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22449201f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-1.8566762E-4f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06438694f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1501804f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.15721285f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.29916686f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.21948396f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14393874f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2520231f ? 
                 (data[10 /* X28 */] <-0.118701145f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.044600107f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.38555917f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
            0.0f : 
             (data[7 /* X21 */] <0.103461556f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.18393639f ? 
                     (data[4 /* X18 */] <-0.24065545f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_17_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13339473f ? 
             (data[6 /* X20 */] <-0.066914536f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.29449892f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22755778f ? 
                 (data[1 /* X12 */] <-0.3912292f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18315122f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.6346616f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.18820828f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0095056f ? 
                 (data[5 /* X19 */] <-0.15902089f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.30400723f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31269437f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_18 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_18_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_18_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_18_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_18_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_18_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_18_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_18_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[0 /* X5 */] <0.052361302f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.4875068f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36236408f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22168836f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <-0.03159422f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15833142f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2605373f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20321603f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0010001756f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[11 /* X34 */] <0.4661003f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17905708f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[12 /* X35 */] <-0.7137786f ? 
                         (data[0 /* X5 */] <0.22013852f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_18_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17328158f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3507012f ? 
                 (data[6 /* X20 */] <-0.5657074f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.035131454f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.48734248f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.4875068f ? 
             (data[4 /* X18 */] <0.0072221444f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.74505055f ? 
                     (data[11 /* X34 */] <0.36564866f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.11082344f ? 
                 (data[12 /* X35 */] <-0.91164404f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7980308f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_18_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
        0.011904762f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0237553f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22907387f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21311349f ? 
                     (data[0 /* X5 */] <0.129859f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.39088875f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_18_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[0 /* X5 */] <0.09711985f ? 
             (data[2 /* X15 */] <0.16076262f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <-0.32312036f ? 
                 (data[6 /* X20 */] <0.39806184f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5768269f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.19961403f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
            0.0f : 
             (data[6 /* X20 */] <0.01402702f ? 
                 (data[4 /* X18 */] <-0.1470128f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.52886003f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20892772f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.34995753f ? 
                             (data[11 /* X34 */] <-0.514231f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5635482f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[11 /* X34 */] <-0.4832695f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_18_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[4 /* X18 */] <-0.1442586f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.33833817f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.45890737f ? 
                 (data[2 /* X15 */] <0.13327152f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6185189f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5269922f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25035772f ? 
                                0.0f : 
                                 (data[11 /* X34 */] <-0.61f ? 
                                    0.0f : 
                                     (data[9 /* X27 */] <0.19233452f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5780792f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6972283f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.096503936f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.051740166f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.45409036f ? 
                     (data[0 /* X5 */] <0.10619891f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <0.05128927f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.12063561f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.1721003f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_18_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.07650355f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15408868f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09371366f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1624228f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3928095f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.13141067f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.31270972f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22204939f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19420719f ? 
                             (data[7 /* X21 */] <0.14944094f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.034403037f ? 
                                    1.0f : 
                                     (data[5 /* X19 */] <0.06304335f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f) : 
                        1.0f) : 
                     (data[5 /* X19 */] <-0.10907193f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20528893f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_19 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_19_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_19_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_19_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_19_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_19_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_19_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_19_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23334916f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4092539f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4169922f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24258514f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.04906611f ? 
                 (data[6 /* X20 */] <-0.39662504f ? 
                     (data[11 /* X34 */] <-0.065139f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.092331566f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.029648544f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[5 /* X19 */] <0.1774426f ? 
                     (data[0 /* X5 */] <0.12130391f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11034924f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.45035836f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.047155615f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.8052183f ? 
                                 (data[10 /* X28 */] <-0.36052984f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f) : 
                        1.0f)))) : 
         (data[5 /* X19 */] <-0.19453648f ? 
             (data[6 /* X20 */] <-0.44734976f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_19_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.123535156f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26706886f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.40507916f ? 
                     (data[1 /* X12 */] <-0.34234878f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5228149f ? 
                 (data[5 /* X19 */] <0.18491957f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.27382594f ? 
                         (data[3 /* X17 */] <-0.3149427f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1638608f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5876881f ? 
                                 (data[2 /* X15 */] <0.19259545f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.113922045f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24114132f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19102158f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5276638f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.32800648f ? 
                 (data[11 /* X34 */] <0.5005859f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.540345f ? 
                     (data[0 /* X5 */] <0.11546151f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_19_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.62055665f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6185836f ? 
                 (data[12 /* X35 */] <-0.9770951f ? 
                     (data[2 /* X15 */] <0.15936354f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4752637f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.5985863f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.31085452f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.87784064f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_19_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[11 /* X34 */] <0.10258789f ? 
             (data[10 /* X28 */] <-0.030158896f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.65623915f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.48315835f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.23864943f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.56767255f ? 
                             (data[5 /* X19 */] <-0.112120636f ? 
                                1.0f : 
                                 (data[8 /* X23 */] <0.15158455f ? 
                                    1.0f : 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17179485f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_19_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (data[11 /* X34 */] <-0.34301758f ? 
             (data[11 /* X34 */] <-0.74721575f ? 
                 (data[10 /* X28 */] <-0.0681826f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.2782674f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.19069414f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5860985f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[0 /* X5 */] <0.14332223f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5918894f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53088653f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.6050719f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.24867803f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.19693919f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.99419063f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15338865f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12861489f ? 
                         (data[3 /* X17 */] <-0.2666629f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.026810998f ? 
                                1.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.87677616f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_19_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2284394f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.42797306f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5092148f ? 
                 (data[1 /* X12 */] <-0.5378705f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31269437f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8714923f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25200915f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.016654162f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_20 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_20_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_20_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_20_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_20_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_20_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_20_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_20_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[5 /* X19 */] <0.15314247f ? 
             (data[4 /* X18 */] <-0.24340965f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.33540204f ? 
                     (data[3 /* X17 */] <-0.2908028f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.464258f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.53444403f ? 
                        0.0f : 
                         (data[9 /* X27 */] <-0.044238325f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[4 /* X18 */] <-0.13599601f ? 
                 (data[12 /* X35 */] <-0.9763848f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.21795194f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.07195406f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6922188f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.04662209f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.29541016f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_20_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.26155847f ? 
             (data[1 /* X12 */] <-0.29346833f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18583982f ? 
                     (data[10 /* X28 */] <-0.12891115f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.62246096f ? 
                     (data[3 /* X17 */] <-0.33908257f ? 
                        0.0f : 
                         (data[9 /* X27 */] <-0.119619936f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.21004954f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[4 /* X18 */] <-0.43002367f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.15158455f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15483734f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)))) : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.51937115f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.49702695f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6303832f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_20_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35128206f ? 
             (data[7 /* X21 */] <0.0852026f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.12476453f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.12993926f ? 
                        1.0f : 
                        0.0f))) : 
             (data[4 /* X18 */] <-0.047861766f ? 
                1.0f : 
                 (data[11 /* X34 */] <0.13496093f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_20_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[5 /* X19 */] <0.09706521f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1106081f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.7736143f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2690281f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40624192f ? 
                 (data[10 /* X28 */] <-0.58836186f ? 
                     (data[3 /* X17 */] <0.179925f ? 
                        0.0f : 
                        1.0f) : 
                     (data[8 /* X23 */] <0.096306816f ? 
                         (data[9 /* X27 */] <-0.18067008f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.7410156f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.63295335f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28409135f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16761564f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2095993f ? 
                             (data[6 /* X20 */] <0.007481685f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.18683858f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_20_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[9 /* X27 */] <0.17711198f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23894876f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.6896294f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <0.06613329f ? 
             (data[4 /* X18 */] <-0.51882917f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5032075f ? 
                         (data[10 /* X28 */] <-0.40326393f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.098455176f ? 
                                 (data[5 /* X19 */] <-0.038562723f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[9 /* X27 */] <-0.07867217f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.21862188f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.23648804f ? 
                     (data[1 /* X12 */] <-0.37438154f ? 
                         (data[8 /* X23 */] <0.20575568f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16326852f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.57559824f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.55f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41875f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_20_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26882255f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18325536f ? 
                     (data[12 /* X35 */] <0.15848047f ? 
                         (data[10 /* X28 */] <0.17738932f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.3850022f ? 
             (data[4 /* X18 */] <-0.18557154f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.44239217f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31269437f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.11085605f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.009277344f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24885944f ? 
                     (data[8 /* X23 */] <0.12078136f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11537189f ? 
                            0.0f : 
                             (data[1 /* X12 */] <0.0142428f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_21 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_21_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_21_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_21_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_21_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_21_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_21_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_21_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[2 /* X15 */] <0.11369452f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.020426307f ? 
                 (data[7 /* X21 */] <0.14246933f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.29095325f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.11396246f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13186473f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0038190503f ? 
                 (data[11 /* X34 */] <-0.23828125f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16637918f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10735131f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X17 */] <-0.5261667f ? 
                     (data[12 /* X35 */] <-0.28231367f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1876391f ? 
                 (data[4 /* X18 */] <0.071707025f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.13748962f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.10715909f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.15665391f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[4 /* X18 */] <-0.057838637f ? 
                    0.0f : 
                     (data[1 /* X12 */] <0.2833209f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.33683425f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_21_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
        0.013333334f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20907499f ? 
             (data[6 /* X20 */] <-0.3839439f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33987138f ? 
                     (data[7 /* X21 */] <0.087692454f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32433245f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.13265099f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.014808134f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.028620604f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.46848503f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5118951f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19705378f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_21_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06298262f ? 
         (data[6 /* X20 */] <-0.23811038f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21244507f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18230706f ? 
                     (data[6 /* X20 */] <-0.8208357f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.4381493f ? 
                             (data[5 /* X19 */] <0.0039769816f ? 
                                0.0f : 
                                1.0f) : 
                             (data[0 /* X5 */] <0.15773991f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2910925f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9961704f ? 
                 (data[10 /* X28 */] <-0.23101132f ? 
                     (data[0 /* X5 */] <0.16750628f ? 
                         (data[7 /* X21 */] <0.18457387f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_21_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25842556f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.42133346f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5597138f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4224297f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.23703703f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23044433f ? 
                             (data[11 /* X34 */] <-0.26875f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19494788f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                         (data[7 /* X21 */] <0.24372357f ? 
                             (data[5 /* X19 */] <-0.042560358f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_21_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.14484635f ? 
         (data[2 /* X15 */] <0.10411428f ? 
             (data[5 /* X19 */] <0.039118722f ? 
                0.0f : 
                1.0f) : 
             (data[7 /* X21 */] <0.103461556f ? 
                 (data[0 /* X5 */] <0.14698245f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.084793076f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.06182032f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[4 /* X18 */] <-0.14012732f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0038190503f ? 
                 (data[11 /* X34 */] <-0.42109376f ? 
                     (data[5 /* X19 */] <-0.08150919f ? 
                        0.0f : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.44010967f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <-0.01847617f ? 
                     (data[12 /* X35 */] <-0.40447304f ? 
                        0.0f : 
                         (data[5 /* X19 */] <-0.080028616f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.85881114f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.37078133f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20720565f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.5466764f ? 
                             (data[12 /* X35 */] <0.22159375f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26364243f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[11 /* X34 */] <-0.40000126f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[0 /* X5 */] <0.19551195f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.5172662f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_21_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.023066927f ? 
         (data[6 /* X20 */] <-0.022530425f ? 
            0.0f : 
             (data[6 /* X20 */] <0.009828859f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.99419063f ? 
                     (data[7 /* X21 */] <0.13748962f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (data[8 /* X23 */] <0.09953779f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.35231578f ? 
                 (data[9 /* X27 */] <0.08867309f ? 
                     (data[7 /* X21 */] <0.18584353f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.29990953f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.6278106f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[2 /* X15 */] <0.126607f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.122281395f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.24655274f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.122604765f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_22 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_22_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_22_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_22_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_22_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_22_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_22_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_22_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.09561689f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.024254555f ? 
                 (data[9 /* X27 */] <0.08435367f ? 
                     (data[8 /* X23 */] <0.1845121f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23936097f ? 
                             (data[1 /* X12 */] <-0.5321317f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22712451f ? 
                         (data[6 /* X20 */] <-0.55445135f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13647705f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17967643f ? 
                                    1.0f : 
                                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22806144f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.12421038f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4624601f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.29613099f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.051848713f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <0.27168915f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <0.2945509f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f) : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.49334443f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.44345704f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_22_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.049912173f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25485766f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24999352f ? 
                     (data[0 /* X5 */] <0.29033712f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3939453f ? 
                 (data[2 /* X15 */] <0.20759107f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <0.15060961f ? 
                     (data[10 /* X28 */] <-0.5577318f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9083161f ? 
             (data[0 /* X5 */] <0.09748081f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.096499465f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.28476784f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_22_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5800772f ? 
             (data[1 /* X12 */] <0.10246327f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.4590181f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.5015263f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35875905f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.9770951f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.3731714f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10735131f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.1677226f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_22_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.343234f ? 
             (data[1 /* X12 */] <-0.9777945f ? 
                 (data[9 /* X27 */] <0.32950065f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4329528f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.17409165f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.21378681f ? 
             (data[9 /* X27 */] <-0.14091653f ? 
                 (data[1 /* X12 */] <-0.6258553f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.074010335f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.28369224f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13654926f ? 
                             (data[3 /* X17 */] <-0.07354382f ? 
                                1.0f : 
                                 (data[4 /* X18 */] <-0.31755537f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20104739f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23103455f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.23538207f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X28 */] <0.23864943f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_22_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[4 /* X18 */] <-0.60145503f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5531602f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4888174f ? 
                 (data[0 /* X5 */] <0.10873966f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.057851296f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.013645293f ? 
                             (data[10 /* X28 */] <-0.4188756f ? 
                                1.0f : 
                                 (data[6 /* X20 */] <-0.029874947f ? 
                                     (data[3 /* X17 */] <-0.42115816f ? 
                                        0.0f : 
                                         (data[1 /* X12 */] <-0.3463803f ? 
                                            0.0f : 
                                            1.0f)) : 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17125f ? 
                                        0.0f : 
                                         (data[10 /* X28 */] <-0.0072077573f ? 
                                            1.0f : 
                                            0.0f)))) : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2289127f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17125f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49594182f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27172562f ? 
                                         (data[0 /* X5 */] <0.13216493f ? 
                                            0.0f : 
                                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18941528f ? 
                                                1.0f : 
                                                 (data[10 /* X28 */] <-0.18036965f ? 
                                                    1.0f : 
                                                    0.0f))) : 
                                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19682291f ? 
                                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18443827f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f)) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f))) : 
                 (data[7 /* X21 */] <0.18728678f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.16659407f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.7676541f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22657467f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_22_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26279598f ? 
             (data[0 /* X5 */] <0.10109037f ? 
                 (data[9 /* X27 */] <0.0048465445f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.097977124f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <0.0879988f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10772265f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3584439f ? 
             (data[9 /* X27 */] <-0.13760373f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.17374878f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.43378273f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_23 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_23_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_23_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_23_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_23_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_23_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_23_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_23_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[12 /* X35 */] <-0.35675454f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15131421f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.14596348f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.28325906f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29537702f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.50642914f ? 
                     (data[5 /* X19 */] <-0.050531764f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.10661347f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.14013602f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.22291014f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18396698f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8989699f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[9 /* X27 */] <0.17048639f ? 
                 (data[3 /* X17 */] <-0.23763481f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6708271f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.6417944f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17389031f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11607063f ? 
                         (data[1 /* X12 */] <-0.35718012f ? 
                             (data[8 /* X23 */] <0.11356588f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_23_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[12 /* X35 */] <-0.21359903f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22574161f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53489405f ? 
                     (data[5 /* X19 */] <-0.09172819f ? 
                         (data[11 /* X34 */] <-0.4810791f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.2063132f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.32701263f ? 
            0.0f : 
             (data[8 /* X23 */] <0.17322645f ? 
                 (data[5 /* X19 */] <-0.032126315f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.1343046f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1584836f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2025579f ? 
                                1.0f : 
                                 (data[9 /* X27 */] <0.22914915f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23818149f ? 
                     (data[10 /* X28 */] <-0.21059129f ? 
                         (data[2 /* X15 */] <0.25617018f ? 
                            0.0f : 
                            1.0f) : 
                         (data[5 /* X19 */] <0.20802426f ? 
                             (data[1 /* X12 */] <-0.19423038f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_23_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[8 /* X23 */] <0.14302073f ? 
             (data[3 /* X17 */] <-0.09466622f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.1271312f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.12734374f ? 
                        1.0f : 
                        0.0f))) : 
             (data[1 /* X12 */] <0.2343791f ? 
                 (data[9 /* X27 */] <0.104230456f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_23_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14567618f ? 
             (data[1 /* X12 */] <-0.6735695f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.65623915f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7767282f ? 
                 (data[9 /* X27 */] <-0.23760222f ? 
                     (data[3 /* X17 */] <-0.38907188f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.144926f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[0 /* X5 */] <0.1444051f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.6676722f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28461754f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17068774f ? 
                                    0.0f : 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.22159375f ? 
                                        0.0f : 
                                         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.019916315f ? 
                                            0.0f : 
                                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.38492194f ? 
                                                1.0f : 
                                                0.0f)))) : 
                                 (data[11 /* X34 */] <-0.29876646f ? 
                                    0.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11569437f ? 
                                        0.0f : 
                                        1.0f)))))) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_23_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (data[2 /* X15 */] <0.13160539f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.16406839f ? 
                     (data[5 /* X19 */] <0.04347015f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <1.280071f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.1448581f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
             (data[1 /* X12 */] <-0.6111912f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X17 */] <-0.6009242f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19805214f ? 
                     (data[10 /* X28 */] <-0.23101132f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.078125f ? 
                            0.0f : 
                             (data[12 /* X35 */] <0.06421066f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_23_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24073677f ? 
                1.0f : 
                 (data[3 /* X17 */] <0.0712955f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38662276f ? 
             (data[9 /* X27 */] <0.057851296f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.03538024f ? 
                     (data[8 /* X23 */] <0.12078136f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11485641f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.15459795f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[5 /* X19 */] <0.04738196f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.20492265f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_24 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_24_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_24_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_24_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_24_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_24_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_24_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_24_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43033358f ? 
        0.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
             (data[6 /* X20 */] <-0.540345f ? 
                 (data[10 /* X28 */] <-0.5606765f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1774426f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.7263356f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07257923f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27028206f ? 
                         (data[10 /* X28 */] <-0.4930654f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.56f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10800531f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.19142567f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[1 /* X12 */] <0.34686548f ? 
                                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14725591f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1270792f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.43465024f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.066021524f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.14296128f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.010945786f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_24_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[12 /* X35 */] <-0.67360544f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23542404f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12509696f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.43203124f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[8 /* X23 */] <0.13007542f ? 
                 (data[4 /* X18 */] <-0.29023096f ? 
                     (data[6 /* X20 */] <-0.45580387f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.51498264f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2349656f ? 
                 (data[0 /* X5 */] <0.11552861f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.21324566f ? 
                         (data[4 /* X18 */] <0.0017137533f ? 
                            1.0f : 
                             (data[4 /* X18 */] <0.028853292f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.1543609f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_24_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[0 /* X5 */] <0.104338974f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.32899213f ? 
                 (data[7 /* X21 */] <0.080892324f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.6024299f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.1913747f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48250282f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (data[10 /* X28 */] <-0.31158292f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_24_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[0 /* X5 */] <0.08990073f ? 
             (data[10 /* X28 */] <-0.026810998f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15411189f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.097437285f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37153628f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.109550275f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.10253022f ? 
                            1.0f : 
                             (data[10 /* X28 */] <0.29990953f ? 
                                 (data[4 /* X18 */] <-0.13048764f ? 
                                    0.0f : 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23523816f ? 
                                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18203045f ? 
                                             (data[3 /* X17 */] <-0.22803909f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f) : 
                                        1.0f)) : 
                                0.0f)))) : 
                 (data[8 /* X23 */] <0.21702826f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26875f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_24_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48690864f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16658783f ? 
                 (data[12 /* X35 */] <-0.018407965f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.066914536f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17241034f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.026810998f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[5 /* X19 */] <0.03538024f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22657467f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.35861152f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.29921874f ? 
                         (data[0 /* X5 */] <0.11330272f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20791404f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2238047f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20178774f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36987638f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.63684005f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22207181f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.24408296f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.115788616f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.029344091f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17256258f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_24_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.53462714f ? 
             (data[7 /* X21 */] <0.18055652f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.18969633f ? 
                     (data[0 /* X5 */] <0.19831245f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.56536996f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049747143f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.5398706f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20406488f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X15 */] <0.099948965f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.6486292f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_25 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_25_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_25_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_25_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_25_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_25_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_25_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_25_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[5 /* X19 */] <0.18118109f ? 
             (data[7 /* X21 */] <0.098059736f ? 
                 (data[11 /* X34 */] <0.13496093f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7519531f ? 
                     (data[0 /* X5 */] <0.07510153f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.15676928f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.042651955f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2244181f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07528916f ? 
                     (data[0 /* X5 */] <0.09820272f ? 
                         (data[2 /* X15 */] <0.18658762f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.828125f ? 
                            1.0f : 
                             (data[12 /* X35 */] <-0.8928575f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.122747734f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.15558857f ? 
                         (data[2 /* X15 */] <0.21324566f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4079551f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24656822f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.1442586f ? 
                 (data[1 /* X12 */] <-0.15660308f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.058470864f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_25_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[5 /* X19 */] <0.18118109f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2079655f ? 
                 (data[3 /* X17 */] <-0.3752924f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.37109375f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6271297f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15902154f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5525556f ? 
                             (data[8 /* X23 */] <0.14062163f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.086272806f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f))) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.2348118f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4994478f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_25_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (data[8 /* X23 */] <0.114142746f ? 
             (data[8 /* X23 */] <0.0878699f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10246327f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.031299014f ? 
                     (data[4 /* X18 */] <-0.042353373f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_25_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1456655f ? 
             (data[8 /* X23 */] <0.10338939f ? 
                 (data[12 /* X35 */] <-0.5189975f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.13361733f ? 
                     (data[11 /* X34 */] <-0.8171875f ? 
                         (data[1 /* X12 */] <-0.24458788f ? 
                            0.0f : 
                            1.0f) : 
                         (data[9 /* X27 */] <-0.23367484f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.11306909f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.021953119f ? 
                                 (data[1 /* X12 */] <-0.3459557f ? 
                                    0.0f : 
                                     (data[7 /* X21 */] <0.16035676f ? 
                                        0.0f : 
                                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.414287f ? 
                                             (data[11 /* X34 */] <-0.46410304f ? 
                                                1.0f : 
                                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2925568f ? 
                                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21681522f ? 
                                                        0.0f : 
                                                         (data[12 /* X35 */] <0.220832f ? 
                                                            0.0f : 
                                                            1.0f)) : 
                                                    1.0f)) : 
                                            1.0f))) : 
                                0.0f))) : 
                     (data[10 /* X28 */] <-0.3331115f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20381281f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.33221722f ? 
                     (data[5 /* X19 */] <0.18836102f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_25_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28688112f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X18 */] <-0.22137608f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.097946554f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.31734258f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.2751013f ? 
                        1.0f : 
                        0.0f))) : 
             (data[3 /* X17 */] <-0.48995686f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22013436f ? 
                    1.0f : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.15928535f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.022017382f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.51831836f ? 
                             (data[8 /* X23 */] <0.18570705f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <0.95028365f ? 
                                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4362726f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (data[7 /* X21 */] <0.2131813f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1617578f ? 
                                     (data[12 /* X35 */] <0.2402332f ? 
                                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.11411077f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f))))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_25_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
        0.0091743115f : 
         (data[2 /* X15 */] <0.12327475f ? 
             (data[1 /* X12 */] <-0.7187282f ? 
                1.0f : 
                 (data[12 /* X35 */] <0.16068183f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.015496364f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[12 /* X35 */] <0.27800223f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10086479f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22525924f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38158965f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.30690464f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28347957f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19060747f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.8541203f ? 
                                 (data[9 /* X27 */] <-0.17955509f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[10 /* X28 */] <0.5647131f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_26 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_26_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_26_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_26_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_26_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_26_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_26_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_26_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[11 /* X34 */] <-0.2154297f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.47693914f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06781445f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.5577318f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15005863f ? 
                            0.0f : 
                             (data[1 /* X12 */] <0.5109709f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2282408f ? 
                     (data[12 /* X35 */] <-0.4502828f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.011242676f ? 
                            1.0f : 
                            0.0f) : 
                         (data[11 /* X34 */] <-0.15224625f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09193478f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[4 /* X18 */] <-0.1483899f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.044659115f ? 
                 (data[1 /* X12 */] <-0.22503571f ? 
                     (data[11 /* X34 */] <-0.3296875f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.37542653f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23304893f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1773735f ? 
                        0.0f : 
                         (data[1 /* X12 */] <0.19530666f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.3535315f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0344491f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X28 */] <-0.08807109f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.14257812f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_26_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.056026842f ? 
             (data[6 /* X20 */] <-0.4008521f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46863812f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27655852f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.23697807f ? 
                        1.0f : 
                        0.0f))) : 
             (data[4 /* X18 */] <-0.04510757f ? 
                 (data[1 /* X12 */] <0.064370885f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.540345f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.46905705f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.320538f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X27 */] <0.21394205f ? 
                         (data[1 /* X12 */] <0.550933f ? 
                            0.0f : 
                            1.0f) : 
                         (data[10 /* X28 */] <-0.20205332f ? 
                            0.0f : 
                             (data[11 /* X34 */] <0.445f ? 
                                1.0f : 
                                0.0f)))))) : 
         (data[6 /* X20 */] <-0.49384737f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17616923f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06464629f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_26_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.28576493f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.32899213f ? 
                 (data[6 /* X20 */] <-0.8599172f ? 
                     (data[0 /* X5 */] <0.16461864f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19724621f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.8625707f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_26_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.12269614f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07451172f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19068667f ? 
                 (data[0 /* X5 */] <0.10109037f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.47024587f ? 
             (data[10 /* X28 */] <-0.5934669f ? 
                 (data[12 /* X35 */] <0.4506426f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.8171875f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19039485f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.04652812f ? 
                            0.0f : 
                             (data[4 /* X18 */] <0.08803375f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[9 /* X27 */] <-0.102897f ? 
                         (data[10 /* X28 */] <-0.04069023f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_26_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (data[11 /* X34 */] <-0.2668457f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07874793f ? 
                 (data[1 /* X12 */] <-0.3794839f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.45088476f ? 
                         (data[4 /* X18 */] <-0.28472257f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[12 /* X35 */] <-0.20596406f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.092427425f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.1111503f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20827842f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.20158276f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.18315862f ? 
             (data[2 /* X15 */] <0.13867208f ? 
                 (data[0 /* X5 */] <0.12559591f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6987788f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19780935f ? 
                     (data[0 /* X5 */] <0.11264096f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.14967197f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.6529011f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[9 /* X27 */] <-0.16084896f ? 
                         (data[8 /* X23 */] <0.33753324f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_26_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[1 /* X12 */] <-0.7187282f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.77004296f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24375443f ? 
                 (data[4 /* X18 */] <-0.25147507f ? 
                     (data[0 /* X5 */] <0.10686567f ? 
                         (data[4 /* X18 */] <-0.41109678f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.6273438f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.48369795f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.35231578f ? 
                 (data[1 /* X12 */] <-0.90936196f ? 
                     (data[4 /* X18 */] <-0.035462353f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_27 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_27_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_27_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_27_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_27_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_27_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_27_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_27_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.021686578f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.078023046f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.24065545f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25743958f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17526613f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3567183f ? 
                                1.0f : 
                                 (data[7 /* X21 */] <0.1888173f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2223044f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.254193f ? 
                            0.0f : 
                             (data[12 /* X35 */] <-0.11931875f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.20738688f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.19780003f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[3 /* X17 */] <-0.41753718f ? 
                     (data[3 /* X17 */] <-0.6542318f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36135638f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4919849f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.22020371f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.48535156f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.27269787f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_27_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[10 /* X28 */] <-0.43521163f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36986166f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20361435f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.55717224f ? 
                         (data[1 /* X12 */] <0.14645566f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.044064697f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                0.0f)) : 
         (data[8 /* X23 */] <0.11049151f ? 
             (data[12 /* X35 */] <-0.6144345f ? 
                 (data[3 /* X17 */] <-0.36322245f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_27_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (data[10 /* X28 */] <-0.5168918f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11223935f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.21324566f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.054423764f ? 
                         (data[9 /* X27 */] <0.21686555f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_27_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.89974797f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.29916686f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.5985863f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24458788f ? 
             (data[0 /* X5 */] <0.073657714f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.09953779f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24912082f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.2873936f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27239192f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.29160157f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.14509884f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15506569f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_27_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53072923f ? 
            0.0f : 
             (data[2 /* X15 */] <0.1382699f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.075950354f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.312028f ? 
                     (data[6 /* X20 */] <-0.044012472f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18982299f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.28158808f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17244369f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24724855f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2776433f ? 
                                    0.0f : 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.61f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24323596f ? 
                         (data[11 /* X34 */] <-0.26875f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24957055f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.18771572f ? 
                        1.0f : 
                        0.0f))) : 
             (data[11 /* X34 */] <-0.3334961f ? 
                 (data[6 /* X20 */] <-0.038121838f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_27_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
            0.0f : 
             (data[2 /* X15 */] <0.3640302f ? 
                1.0f : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.7187282f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
                 (data[3 /* X17 */] <-0.36322245f ? 
                     (data[6 /* X20 */] <0.26621395f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.29160157f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23874386f ? 
                     (data[3 /* X17 */] <-0.56841147f ? 
                        0.0f : 
                         (data[5 /* X19 */] <-0.09172819f ? 
                             (data[7 /* X21 */] <0.19817717f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_28 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_28_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_28_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_28_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_28_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_28_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_28_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_28_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[4 /* X18 */] <-0.20760511f ? 
             (data[6 /* X20 */] <-0.5910697f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.23455474f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17068774f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.340625f ? 
                            1.0f : 
                            0.0f) : 
                         (data[9 /* X27 */] <0.21901935f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.42018616f ? 
                 (data[4 /* X18 */] <-0.115598f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.15575764f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.365f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.36849892f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0037038198f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (data[10 /* X28 */] <-0.39437157f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15019532f ? 
             (data[6 /* X20 */] <-0.1599098f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18593366f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_28_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[4 /* X18 */] <-0.36046296f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2592345f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2698133f ? 
                     (data[5 /* X19 */] <-0.043033883f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.26376873f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11088968f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.48962033f ? 
                     (data[6 /* X20 */] <-0.727018f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24754888f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_28_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (data[5 /* X19 */] <-0.04499715f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.74433595f ? 
                 (data[2 /* X15 */] <0.10328122f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.502448f ? 
                         (data[0 /* X5 */] <0.093811095f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.037930574f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[5 /* X19 */] <0.47139722f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_28_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[4 /* X18 */] <-0.0864205f ? 
             (data[5 /* X19 */] <-0.01924532f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17615527f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.33223245f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.09916424f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                 (data[0 /* X5 */] <0.089539774f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.677041f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.0595571f ? 
                     (data[0 /* X5 */] <0.09820272f ? 
                        1.0f : 
                         (data[4 /* X18 */] <0.15112886f ? 
                             (data[9 /* X27 */] <-0.21247293f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2183654f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17328158f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4515625f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.35583314f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_28_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[9 /* X27 */] <0.17711198f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13454746f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.06986721f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19052729f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.77849704f ? 
                 (data[4 /* X18 */] <-0.26819742f ? 
                     (data[0 /* X5 */] <0.11448961f ? 
                        0.0f : 
                        1.0f) : 
                     (data[10 /* X28 */] <-0.10849113f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.063880354f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1795315f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.375f ? 
                                 (data[1 /* X12 */] <-0.9449433f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18153818f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.36609864f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.10750413f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.4140625f ? 
                         (data[6 /* X20 */] <0.36807245f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_28_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
        0.0091743115f : 
         (data[0 /* X5 */] <0.15378995f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2797042f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.3129231f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.38634118f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.40805316f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22712451f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25033247f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.95335054f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_29 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_29_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_29_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_29_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_29_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_29_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_29_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_29_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[4 /* X18 */] <-0.206228f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0344491f ? 
                     (data[3 /* X17 */] <-0.3149427f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11524455f ? 
                             (data[5 /* X19 */] <0.14753474f ? 
                                 (data[7 /* X21 */] <0.10694736f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2282408f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.12996686f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.252576f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.44726562f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2686451f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.16622145f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1227255f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_29_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2157136f ? 
             (data[11 /* X34 */] <0.009277344f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.12060234f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.038330078f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.13912117f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.30287275f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.11281502f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.15625188f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.40655863f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.103388034f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_29_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.18949921f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19232276f ? 
             (data[2 /* X15 */] <0.1082796f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.618252f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35688978f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2197547f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.8663882f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.42018616f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.15867577f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_29_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.38333872f ? 
             (data[3 /* X17 */] <-0.78868794f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.8748594f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[1 /* X12 */] <-0.3790091f ? 
             (data[12 /* X35 */] <0.023084765f ? 
                 (data[1 /* X12 */] <-0.7782719f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.3330476f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2908661f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.2043812f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3047487f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_29_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[4 /* X18 */] <-0.60145503f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24208984f ? 
             (data[3 /* X17 */] <-0.23648804f ? 
                 (data[5 /* X19 */] <0.027903274f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30273438f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13923077f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.7787151f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.7714844f ? 
                     (data[6 /* X20 */] <-0.044012472f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19239654f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.49645233f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.026675163f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.29637268f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0344491f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.48871636f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.074660584f ? 
                         (data[6 /* X20 */] <0.21517552f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_29_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.21103261f ? 
             (data[11 /* X34 */] <-0.8209961f ? 
                 (data[1 /* X12 */] <-0.69428796f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7255012f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3407496f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.99419063f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.73828036f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21856591f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8785512f ? 
                     (data[9 /* X27 */] <-0.14091653f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.49645233f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.51923126f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.00261702f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.36599287f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25020257f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.23871075f ? 
                            0.0f : 
                             (data[9 /* X27 */] <-0.042857733f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}


class h2o_rf_10_Forest_30 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_30_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_30_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_30_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_30_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_30_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_30_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_30_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[9 /* X27 */] <0.081040874f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19151102f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.22712451f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.08561376f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.24208984f ? 
                 (data[0 /* X5 */] <0.068832144f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5169361f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23708394f ? 
                         (data[2 /* X15 */] <0.18658762f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.010527179f ? 
                                 (data[0 /* X5 */] <0.17838526f ? 
                                     (data[8 /* X23 */] <0.20699514f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                 (data[0 /* X5 */] <0.11526542f ? 
                                    1.0f : 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1204525f ? 
                                         (data[0 /* X5 */] <0.12891442f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f)))) : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.55717224f ? 
                         (data[7 /* X21 */] <0.1640481f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18037432f ? 
                                1.0f : 
                                0.0f) : 
                             (data[1 /* X12 */] <-0.31497574f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.49334443f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.60298204f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_30_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (data[8 /* X23 */] <0.08592862f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23725833f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.040234376f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.1493312f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.48082265f ? 
                            0.0f : 
                            1.0f) : 
                         (data[0 /* X5 */] <0.0930067f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.21430653f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1204525f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2795104f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.55464464f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.56387246f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04510757f ? 
             (data[8 /* X23 */] <0.17389031f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.47289765f ? 
                     (data[2 /* X15 */] <0.28401217f ? 
                         (data[6 /* X20 */] <-0.20218039f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.23677574f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.13724941f ? 
                 (data[3 /* X17 */] <-0.23648804f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.11552861f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_30_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19081879f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18452969f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.13496093f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.06861829f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.018797625f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.049912173f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.74433595f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.12292131f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.22466438f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.055935472f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_30_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.362759f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1456655f ? 
             (data[2 /* X15 */] <0.15659732f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.37167704f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26046997f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.30722937f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.21586375f ? 
                                1.0f : 
                                 (data[2 /* X15 */] <0.18751878f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (data[7 /* X21 */] <0.10799923f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[11 /* X34 */] <-0.775293f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.6802866f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.7222236f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_30_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.18283883f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19679354f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37558222f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10637318f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2238047f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.34375313f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15999359f ? 
                                0.0f : 
                                 (data[11 /* X34 */] <-0.415f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[8 /* X23 */] <0.12951781f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11434453f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[7 /* X21 */] <0.22712451f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.31962913f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23066406f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19724621f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.17210083f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.8800337f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.19965503f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[4 /* X18 */] <-0.21999899f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.24919555f ? 
                 (data[3 /* X17 */] <-0.17613833f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.1386298f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4523814f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[5 /* X19 */] <-0.14468151f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23686367f ? 
                     (data[9 /* X27 */] <0.19036317f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28541908f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.7615888f ? 
                         (data[12 /* X35 */] <0.35946524f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26205117f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 118B, number of visited nodes = 29, static init size = 0B
}

class h2o_rf_10_Tree_30_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[9 /* X27 */] <-0.039876215f ? 
             (data[2 /* X15 */] <0.13410458f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.034090787f ? 
             (data[8 /* X23 */] <0.28276363f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3249382f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18194452f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_31 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_31_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_31_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_31_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_31_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_31_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_31_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_31_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23334916f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.065079145f ? 
                 (data[10 /* X28 */] <-0.38474348f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.1795748f ? 
                         (data[3 /* X17 */] <-0.2908028f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.0021408855f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12125f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.102167785f ? 
                             (data[12 /* X35 */] <-0.860662f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6575f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14734253f ? 
                                         (data[10 /* X28 */] <-0.23166099f ? 
                                            0.0f : 
                                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15819909f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        1.0f) : 
                                    0.0f) : 
                                 (data[6 /* X20 */] <-0.507021f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15125887f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.17685547f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_31_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.23268643f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25239965f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16606246f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0806047f ? 
                        0.0f : 
                        1.0f) : 
                     (data[8 /* X23 */] <0.16605702f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.4388956f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.31069395f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4811662f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24062638f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.285537f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.16542968f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.464258f ? 
                     (data[4 /* X18 */] <-0.034535218f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26284778f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_31_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (data[12 /* X35 */] <-0.90838045f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.046386443f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6910156f ? 
                     (data[9 /* X27 */] <-0.021655831f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15786155f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.45203665f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.47605172f ? 
                 (data[8 /* X23 */] <0.12776965f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_31_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[5 /* X19 */] <-0.016958524f ? 
             (data[2 /* X15 */] <0.1982505f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23828125f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17905688f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15851074f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.14820261f ? 
                     (data[2 /* X15 */] <0.2214158f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.48065916f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.77559376f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3067474f ? 
                         (data[11 /* X34 */] <-0.8171875f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.061588027f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.061588027f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <0.11226486f ? 
                                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06875103f ? 
                                        0.0f : 
                                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.057442244f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f))) : 
                         (data[4 /* X18 */] <0.28815007f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_31_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13951792f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6309652f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.019229073f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.2746815f ? 
                 (data[6 /* X20 */] <-0.100731f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16209f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.028582396f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36246517f ? 
                 (data[12 /* X35 */] <-0.18305919f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27779338f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.18527216f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5998912f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.29921874f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.95335054f ? 
                         (data[11 /* X34 */] <-0.64375f ? 
                            0.0f : 
                             (data[12 /* X35 */] <-0.21818f ? 
                                0.0f : 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19397059f ? 
                                    1.0f : 
                                     (data[4 /* X18 */] <0.26767564f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_31_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.3084596f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44795474f ? 
                 (data[1 /* X12 */] <-0.51831836f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39948142f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.19325212f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[0 /* X5 */] <0.103120744f ? 
                         (data[12 /* X35 */] <0.048136983f ? 
                             (data[4 /* X18 */] <-0.059980225f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2553429f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.84612995f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24757376f ? 
                            1.0f : 
                             (data[6 /* X20 */] <0.24469616f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
         (data[4 /* X18 */] <0.19726163f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_32 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_32_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_32_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_32_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_32_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_32_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_32_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_32_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23334916f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.019134074f ? 
             (data[6 /* X20 */] <-0.5318909f ? 
                 (data[0 /* X5 */] <0.11552861f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.30683595f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.30752733f ? 
                         (data[9 /* X27 */] <0.08435367f ? 
                             (data[3 /* X17 */] <-0.34604353f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.590908f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.060243122f ? 
                                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3217641f ? 
                                        1.0f : 
                                         (data[3 /* X17 */] <-0.37076885f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.46743724f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f)) : 
                         (data[0 /* X5 */] <0.12130391f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[10 /* X28 */] <0.036440197f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.29160157f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.12108402f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.19266723f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_32_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.730577f ? 
             (data[6 /* X20 */] <-0.4388956f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042353373f ? 
                     (data[11 /* X34 */] <-0.11640625f ? 
                         (data[0 /* X5 */] <0.19638276f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.39914817f ? 
                     (data[8 /* X23 */] <0.16079387f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[3 /* X17 */] <-0.2063132f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.13658999f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.32899213f ? 
                     (data[12 /* X35 */] <-0.9720981f ? 
                         (data[0 /* X5 */] <0.11552861f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_32_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12690349f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.08561376f ? 
                 (data[8 /* X23 */] <0.1906611f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.05425228f ? 
                         (data[4 /* X18 */] <-0.1137269f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_32_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17732735f ? 
             (data[12 /* X35 */] <-0.56862473f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.30433914f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0864205f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046571817f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.6149449f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[11 /* X34 */] <-0.8171875f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6674059f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.14437297f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18173364f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[0 /* X5 */] <0.21026848f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[4 /* X18 */] <-0.30124775f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_32_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11261069f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.089948446f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.14326829f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.047608566f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[11 /* X34 */] <-0.79433596f ? 
                     (data[1 /* X12 */] <-0.5637554f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.051295687f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4818893f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.74278104f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.63353753f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.19778933f ? 
                    1.0f : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.36734843f ? 
             (data[9 /* X27 */] <-0.008404643f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.5724422f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <0.102672935f ? 
                 (data[11 /* X34 */] <-0.5734375f ? 
                     (data[1 /* X12 */] <-0.81160104f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0095691895f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.22304687f ? 
                         (data[6 /* X20 */] <-0.308165f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0957092f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.25838086f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_32_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2284394f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22204939f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2839313f ? 
                 (data[5 /* X19 */] <0.05781114f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.007814844f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.16518828f ? 
                            1.0f : 
                             (data[12 /* X35 */] <0.06040924f ? 
                                 (data[9 /* X27 */] <0.030268647f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1978266f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.62152505f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_33 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_33_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_33_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_33_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_33_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_33_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_33_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_33_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33320686f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2223044f ? 
                 (data[1 /* X12 */] <0.04869478f ? 
                     (data[5 /* X19 */] <-0.053674344f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.17112255f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.31715637f ? 
                                0.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24988008f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3672213f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7451888f ? 
                            0.0f : 
                            1.0f) : 
                         (data[3 /* X17 */] <0.047155615f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.901248f ? 
                     (data[0 /* X5 */] <0.09615913f ? 
                         (data[1 /* X12 */] <0.0055184397f ? 
                            1.0f : 
                            0.0f) : 
                         (data[12 /* X35 */] <-0.9389203f ? 
                             (data[8 /* X23 */] <0.1905462f ? 
                                 (data[11 /* X34 */] <0.57692f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30299827f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.32782367f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_33_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
        0.013333334f : 
         (data[3 /* X17 */] <-0.0060747117f ? 
             (data[12 /* X35 */] <-0.20978154f ? 
                 (data[1 /* X12 */] <-0.3227966f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.32539064f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18664889f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.34425735f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3444336f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.22466438f ? 
                     (data[6 /* X20 */] <-0.4727121f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2349656f ? 
                     (data[0 /* X5 */] <0.11509321f ? 
                         (data[3 /* X17 */] <0.19202693f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[4 /* X18 */] <-0.02031981f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_33_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18961868f ? 
                 (data[5 /* X19 */] <0.08771901f ? 
                     (data[8 /* X23 */] <0.09953779f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.049912173f ? 
            0.0f : 
             (data[0 /* X5 */] <0.10109037f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06824695f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_33_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.055438902f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46864074f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.264179f ? 
                 (data[9 /* X27 */] <-0.42581707f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18771982f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                            0.0f : 
                             (data[12 /* X35 */] <0.368185f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3630642f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3912292f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[4 /* X18 */] <-0.13599601f ? 
             (data[5 /* X19 */] <-0.09172819f ? 
                 (data[0 /* X5 */] <0.14415708f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117127396f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.6009606f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15264674f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11552861f ? 
                            1.0f : 
                             (data[6 /* X20 */] <0.31858626f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16043167f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_33_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7503148f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.022156479f ? 
                 (data[7 /* X21 */] <0.1365905f ? 
                     (data[0 /* X5 */] <0.1328545f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12320155f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19239654f ? 
                     (data[4 /* X18 */] <-0.59319246f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.23599684f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.12307875f ? 
                                0.0f : 
                                 (data[2 /* X15 */] <0.16526118f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (data[3 /* X17 */] <-0.2063132f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.24065545f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (data[4 /* X18 */] <-0.14012732f ? 
             (data[0 /* X5 */] <0.092427425f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.076925f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.34821397f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6185836f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7025963f ? 
                     (data[1 /* X12 */] <-0.66835666f ? 
                         (data[10 /* X28 */] <0.7083102f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27904603f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_33_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[11 /* X34 */] <-0.11450195f ? 
             (data[2 /* X15 */] <0.08661994f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37304407f ? 
                     (data[5 /* X19 */] <-0.06988608f ? 
                         (data[0 /* X5 */] <0.11552861f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.44777095f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.16231696f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                     (data[0 /* X5 */] <0.12130391f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.35838208f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.027903274f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35493723f ? 
                     (data[12 /* X35 */] <0.49645233f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_34 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_34_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_34_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_34_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_34_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_34_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_34_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_34_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07257838f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13760918f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117127396f ? 
                     (data[1 /* X12 */] <-0.39096707f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.117923595f ? 
                             (data[11 /* X34 */] <-0.415f ? 
                                0.0f : 
                                 (data[5 /* X19 */] <-0.043875605f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3174345f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24186124f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.35422248f ? 
                         (data[10 /* X28 */] <-0.56502765f ? 
                             (data[11 /* X34 */] <0.56f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21889435f ? 
                                0.0f : 
                                 (data[11 /* X34 */] <0.4625f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[4 /* X18 */] <0.0017137533f ? 
                            0.0f : 
                             (data[11 /* X34 */] <0.365f ? 
                                 (data[12 /* X35 */] <-0.7833322f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)))) : 
                0.0f) : 
            0.0f) : 
        0.022222223f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_34_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43442413f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23031856f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.26376873f ? 
                    1.0f : 
                     (data[1 /* X12 */] <0.35786358f ? 
                         (data[0 /* X5 */] <0.12701689f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[2 /* X15 */] <0.21583971f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.43758705f ? 
             (data[9 /* X27 */] <0.07772808f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_34_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.37072453f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5800772f ? 
                 (data[7 /* X21 */] <0.12753019f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13610072f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02031981f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.74535733f ? 
             (data[9 /* X27 */] <0.22382376f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11223935f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.15030012f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_34_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.47024587f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.53588706f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18593135f ? 
                     (data[4 /* X18 */] <-0.06438694f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.17325859f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.059751656f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23086186f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_34_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[2 /* X15 */] <0.13493764f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21903291f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.04843045f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06861829f ? 
                 (data[12 /* X35 */] <-0.09143965f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26187357f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.60621f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X12 */] <-0.037600394f ? 
                     (data[11 /* X34 */] <-0.23828125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.21378681f ? 
                 (data[10 /* X28 */] <-0.07786108f ? 
                     (data[3 /* X17 */] <-0.32701263f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3296875f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[4 /* X18 */] <-0.22707175f ? 
                         (data[12 /* X35 */] <0.37429297f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[4 /* X18 */] <0.30307257f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21991016f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5269922f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.25212643f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_34_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26279598f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.16420804f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10772265f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8778329f ? 
             (data[3 /* X17 */] <-0.1610509f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.53462714f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.69435817f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_35 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_35_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_35_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_35_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_35_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_35_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_35_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_35_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.044678528f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09714315f ? 
                 (data[5 /* X19 */] <-0.031912457f ? 
                     (data[7 /* X21 */] <0.1009717f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.19658832f ? 
                         (data[1 /* X12 */] <-0.43132854f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.2728361f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12819415f ? 
                                    1.0f : 
                                     (data[6 /* X20 */] <-0.122014455f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (data[7 /* X21 */] <0.17068774f ? 
                             (data[5 /* X19 */] <0.49515045f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18982299f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.06182032f ? 
                        0.0f : 
                         (data[1 /* X12 */] <0.24155398f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[0 /* X5 */] <0.08138829f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.7098715f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.26806304f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_35_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25399265f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2914269f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.13186271f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.9694601f ? 
                     (data[0 /* X5 */] <0.21858531f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.025264043f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.2555913f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2694864f ? 
                 (data[7 /* X21 */] <0.116709635f ? 
                     (data[0 /* X5 */] <0.13574216f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24959135f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_35_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.17089589f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5800772f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17391934f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.36012265f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3788464f ? 
                            1.0f : 
                            0.0f) : 
                         (data[8 /* X23 */] <0.09953779f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[2 /* X15 */] <0.14964755f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_35_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[0 /* X5 */] <0.09026169f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15388209f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.6307434f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23680985f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20886555f ? 
                     (data[12 /* X35 */] <-0.76160485f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28008562f ? 
                         (data[10 /* X28 */] <0.13654926f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_35_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[1 /* X12 */] <-0.43766564f ? 
             (data[1 /* X12 */] <-0.83883345f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (data[0 /* X5 */] <0.12852304f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.02025148f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1914247f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X21 */] <0.165708f ? 
                     (data[0 /* X5 */] <0.1472182f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24537973f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.026675163f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.18315282f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[5 /* X19 */] <-0.19306445f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[8 /* X23 */] <0.14600812f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.95335054f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21455742f ? 
                        1.0f : 
                         (data[6 /* X20 */] <0.45080099f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_35_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45561227f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X12 */] <-0.6918439f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.8782913f ? 
                 (data[8 /* X23 */] <0.14866357f ? 
                    1.0f : 
                     (data[12 /* X35 */] <0.47875687f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[5 /* X19 */] <0.05781114f ? 
                 (data[4 /* X18 */] <-0.11396246f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.25906944f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_36 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_36_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_36_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_36_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_36_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_36_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_36_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_36_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.019134074f ? 
             (data[0 /* X5 */] <0.09531508f ? 
                 (data[11 /* X34 */] <-0.58867186f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <0.18949871f ? 
                     (data[1 /* X12 */] <-0.2124893f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.083987884f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.16407861f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.69460154f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12744798f ? 
                                1.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31625f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61110663f ? 
                         (data[5 /* X19 */] <0.1720377f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.1204525f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.10936268f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6575f ? 
                                        1.0f : 
                                         (data[0 /* X5 */] <0.10742069f ? 
                                             (data[3 /* X17 */] <-0.38918445f ? 
                                                1.0f : 
                                                0.0f) : 
                                            1.0f)) : 
                                     (data[3 /* X17 */] <0.19707003f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24737611f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_36_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.3053171f ? 
             (data[9 /* X27 */] <-0.11480279f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.20388268f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[3 /* X17 */] <-0.043368958f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17761305f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.1934271f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[10 /* X28 */] <-0.057441045f ? 
             (data[9 /* X27 */] <-0.061409395f ? 
                 (data[12 /* X35 */] <-0.09143965f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.79055387f ? 
                     (data[6 /* X20 */] <-0.37109756f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29657972f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.25657642f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_36_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.18949921f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10979533f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.42950034f ? 
                 (data[2 /* X15 */] <0.21491179f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11188157f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28322303f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18194452f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.87784064f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.15867577f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_36_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0344491f ? 
            0.0f : 
             (data[9 /* X27 */] <0.18743744f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18253358f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.6307434f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.5985863f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.26819742f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.36864334f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5269922f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20081069f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26735634f ? 
                                    1.0f : 
                                     (data[2 /* X15 */] <0.1358728f ? 
                                         (data[3 /* X17 */] <0.118932165f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                 (data[8 /* X23 */] <0.21106657f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[2 /* X15 */] <0.21600498f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_36_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[1 /* X12 */] <-0.44744173f ? 
             (data[6 /* X20 */] <-0.57138336f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.10181228f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2864343f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.055793747f ? 
                     (data[1 /* X12 */] <-0.045642085f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.066563636f ? 
                 (data[6 /* X20 */] <-0.04990311f ? 
                     (data[9 /* X27 */] <0.21283239f ? 
                         (data[2 /* X15 */] <0.12783742f ? 
                             (data[3 /* X17 */] <-0.59005255f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16233219f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21252465f ? 
                                 (data[11 /* X34 */] <-0.415f ? 
                                    1.0f : 
                                     (data[7 /* X21 */] <0.1263884f ? 
                                         (data[7 /* X21 */] <0.084755875f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5399889f ? 
                         (data[3 /* X17 */] <-0.23361892f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3680205f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.34702545f ? 
                                     (data[4 /* X18 */] <-0.16574132f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23655885f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.039052807f ? 
                                    0.0f : 
                                     (data[12 /* X35 */] <0.3619075f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (data[4 /* X18 */] <0.31018364f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20835878f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.16857941f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 118B, number of visited nodes = 29, static init size = 0B
}

class h2o_rf_10_Tree_36_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1646268f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79640836f ? 
                 (data[9 /* X27 */] <-0.2143248f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_10_Forest_37 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_37_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_37_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_37_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_37_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_37_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_37_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_37_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (data[10 /* X28 */] <-0.037021015f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19491825f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.12047879f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.019134074f ? 
                 (data[5 /* X19 */] <0.1774426f ? 
                     (data[11 /* X34 */] <-0.037199397f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.37294412f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25815564f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24965553f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))) : 
                     (data[1 /* X12 */] <0.056320406f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15004604f ? 
                            1.0f : 
                            0.0f) : 
                         (data[6 /* X20 */] <-0.44832042f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.22924048f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6094729f ? 
                                    1.0f : 
                                    0.0f))))) : 
                 (data[2 /* X15 */] <0.18991986f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18760464f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_37_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.42441407f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2642425f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.36436677f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21574485f ? 
                1.0f : 
                0.0f)) : 
         (data[8 /* X23 */] <0.12907964f ? 
             (data[5 /* X19 */] <-0.08051274f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43203124f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.3872319f ? 
                        0.0f : 
                        1.0f))) : 
             (data[6 /* X20 */] <-0.23811862f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24994382f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.05376137f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.2671662f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[11 /* X34 */] <0.53867185f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_37_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.74433595f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1611198f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.07540372f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0290507f ? 
                 (data[5 /* X19 */] <0.3344589f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31321332f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_37_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3790091f ? 
             (data[0 /* X5 */] <0.13790789f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6607803f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19613501f ? 
                 (data[6 /* X20 */] <0.1693714f ? 
                     (data[5 /* X19 */] <-0.086704604f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.17789349f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_37_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[11 /* X34 */] <-0.7981445f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.075950354f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.67835563f ? 
                 (data[1 /* X12 */] <-0.6306002f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.42109376f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.082847506f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6613675f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.059806656f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.07158875f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <0.08635167f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.115235165f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36190882f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0455252f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.38652295f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.13910297f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.052098375f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.028299f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_37_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.40680927f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45816478f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.23740451f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6751276f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40238217f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4652218f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.651597f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X18 */] <0.24408296f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.387356f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_38 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_38_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_38_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_38_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_38_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_38_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_38_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_38_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21838313f ? 
             (data[1 /* X12 */] <-0.4205575f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.33730468f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.18092921f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.08080707f ? 
                                 (data[1 /* X12 */] <-0.25722444f ? 
                                    1.0f : 
                                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.018274058f ? 
                                         (data[9 /* X27 */] <0.21939437f ? 
                                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20099503f ? 
                                                1.0f : 
                                                0.0f) : 
                                            1.0f) : 
                                        0.0f)) : 
                                 (data[11 /* X34 */] <0.27105725f ? 
                                    0.0f : 
                                     (data[0 /* X5 */] <0.10931813f ? 
                                        0.0f : 
                                         (data[4 /* X18 */] <-0.23624873f ? 
                                            0.0f : 
                                            1.0f)))) : 
                            0.0f)))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1802372f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2698703f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2632295f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <0.014029066f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1640481f ? 
                         (data[11 /* X34 */] <0.0359375f ? 
                            0.0f : 
                             (data[1 /* X12 */] <0.3112396f ? 
                                1.0f : 
                                 (data[8 /* X23 */] <0.20256914f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_38_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[5 /* X19 */] <-0.04499715f ? 
             (data[12 /* X35 */] <-0.64115685f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.2767799f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40900776f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.44898713f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27822465f ? 
                    1.0f : 
                    0.0f))) : 
         (data[5 /* X19 */] <-0.09546667f ? 
             (data[10 /* X28 */] <-0.016600981f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_38_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.18949921f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61671436f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.55717224f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6681641f ? 
                     (data[9 /* X27 */] <-0.12766533f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35109085f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.68295527f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
        0.00862069f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_38_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[3 /* X17 */] <-0.8188628f ? 
             (data[12 /* X35 */] <-0.48082265f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.32950065f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.6307434f ? 
            0.0f : 
             (data[12 /* X35 */] <0.18341894f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.29990953f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.85292256f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2932198f ? 
                             (data[0 /* X5 */] <0.1270792f ? 
                                0.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.37088147f ? 
                                    1.0f : 
                                     (data[11 /* X34 */] <-0.72404f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_38_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
        0.014285714f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11261069f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19780935f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12734374f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.088051684f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.011221313f ? 
                                 (data[1 /* X12 */] <-0.63413286f ? 
                                    1.0f : 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.41196308f ? 
                                         (data[6 /* X20 */] <-0.105275095f ? 
                                            1.0f : 
                                             (data[8 /* X23 */] <0.1537476f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        0.0f)) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24656822f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.5108796f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22237161f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26875f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5918894f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_38_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (data[3 /* X17 */] <-0.876195f ? 
             (data[12 /* X35 */] <-0.28994864f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.70641375f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.7500315f ? 
                    1.0f : 
                    0.0f))) : 
         (data[1 /* X12 */] <-0.73828036f ? 
             (data[10 /* X28 */] <0.67768013f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.39557275f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.0038121801f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.5277344f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.047211625f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.061409395f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.40944472f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[11 /* X34 */] <-0.390625f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_39 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_39_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_39_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_39_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_39_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_39_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_39_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_39_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[3 /* X17 */] <-0.27571535f ? 
             (data[9 /* X27 */] <0.19036317f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.22413027f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.35728937f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23044433f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.17048639f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.20860723f ? 
                     (data[1 /* X12 */] <-0.34234878f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23225337f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20370178f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.20398484f ? 
                                0.0f : 
                                 (data[5 /* X19 */] <0.24323991f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f))) : 
         (data[10 /* X28 */] <-0.070203565f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1506836f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05144309f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_39_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[3 /* X17 */] <-0.27571535f ? 
             (data[8 /* X23 */] <0.15397446f ? 
                 (data[9 /* X27 */] <0.124107234f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4727121f ? 
                 (data[10 /* X28 */] <-0.2434168f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2223044f ? 
                         (data[3 /* X17 */] <-0.016086895f ? 
                             (data[3 /* X17 */] <-0.18177697f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.31661135f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1640481f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.19525023f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15401594f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_39_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (data[2 /* X15 */] <0.10369775f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.43438324f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.6333403f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.47541118f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41563335f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7367188f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.90411955f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5811988f ? 
                         (data[0 /* X5 */] <0.15098442f ? 
                             (data[3 /* X17 */] <-0.30954108f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_39_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
        0.020833334f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                 (data[0 /* X5 */] <0.0909836f ? 
                     (data[12 /* X35 */] <0.27095243f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.8171875f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18728678f ? 
                        1.0f : 
                        0.0f) : 
                     (data[12 /* X35 */] <0.35085344f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.17931159f ? 
                             (data[3 /* X17 */] <-0.34391055f ? 
                                0.0f : 
                                1.0f) : 
                             (data[7 /* X21 */] <0.22131066f ? 
                                 (data[3 /* X17 */] <0.19682291f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_39_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[2 /* X15 */] <0.13327152f ? 
             (data[1 /* X12 */] <-0.4205575f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.67169297f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.36969894f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42498222f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22657467f ? 
                 (data[5 /* X19 */] <0.072765075f ? 
                     (data[7 /* X21 */] <0.13414082f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.13432671f ? 
                             (data[2 /* X15 */] <0.10649778f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.179925f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.102167785f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.18741031f ? 
                                 (data[7 /* X21 */] <0.17753182f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.21862188f ? 
                     (data[9 /* X27 */] <0.08473515f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07959652f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2924443f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.03309807f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.34649438f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.77004296f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_39_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.8486979f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.282042f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.083282426f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.118125916f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22490855f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6039063f ? 
                     (data[7 /* X21 */] <0.2802415f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_40 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_40_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_40_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_40_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_40_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_40_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_40_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_40_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[0 /* X5 */] <0.052361302f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04210661f ? 
             (data[5 /* X19 */] <0.1774426f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.27865827f ? 
                     (data[5 /* X19 */] <-0.15212157f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.24793687f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042959277f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17183776f ? 
                     (data[4 /* X18 */] <-0.1525212f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3111029f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.06993263f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_40_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[6 /* X20 */] <-0.52977735f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3082895f ? 
                1.0f : 
                 (data[4 /* X18 */] <0.018238926f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.39873856f ? 
             (data[10 /* X28 */] <-0.55976844f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.11841626f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24824283f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.025264043f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[6 /* X20 */] <-0.24171878f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.27162492f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_40_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[0 /* X5 */] <0.13177164f ? 
             (data[12 /* X35 */] <-0.6144345f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13101307f ? 
                     (data[0 /* X5 */] <0.117975235f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20658115f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.39873856f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21630518f ? 
                 (data[5 /* X19 */] <0.2223044f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.17389031f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33820525f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_40_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[4 /* X18 */] <-0.18832573f ? 
            0.0f : 
             (data[2 /* X15 */] <0.1682602f ? 
                 (data[6 /* X20 */] <0.124009304f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.15840349f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
            0.0f : 
             (data[6 /* X20 */] <0.01402702f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.10668212f ? 
                     (data[4 /* X18 */] <0.029856592f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36987638f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_40_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[4 /* X18 */] <-0.16629218f ? 
             (data[5 /* X19 */] <-0.031912457f ? 
                 (data[4 /* X18 */] <-0.59765726f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[10 /* X28 */] <-0.08807109f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.10412942f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13517408f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3369595f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.30879185f ? 
                                1.0f : 
                                 (data[12 /* X35 */] <-0.02895f ? 
                                    0.0f : 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.69037753f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f))))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.096503936f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.043746635f ? 
                 (data[12 /* X35 */] <-0.14346781f ? 
                     (data[8 /* X23 */] <0.25355372f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.11547047f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.4081016f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_40_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[0 /* X5 */] <0.100368455f ? 
             (data[2 /* X15 */] <0.099948965f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <1.0243171f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.79713124f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4799637f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_10_Forest_41 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_41_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_41_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_41_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_41_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_41_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_41_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_41_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39451152f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43400759f ? 
                 (data[7 /* X21 */] <0.071771875f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24543089f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0052350992f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.019134074f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8204617f ? 
                     (data[11 /* X34 */] <-0.29086405f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15206477f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.124888316f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.108598255f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.19407171f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
            0.0f : 
             (data[10 /* X28 */] <0.0344491f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24027649f ? 
                     (data[11 /* X34 */] <-0.23828125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_41_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39451152f ? 
             (data[2 /* X15 */] <0.1590965f ? 
                 (data[1 /* X12 */] <-0.27391616f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.16166389f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29707405f ? 
                     (data[8 /* X23 */] <0.10219324f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0256477f ? 
                         (data[11 /* X34 */] <-0.13221094f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26572868f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.3106957f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.19053128f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_41_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (data[7 /* X21 */] <0.08935236f ? 
            1.0f : 
             (data[2 /* X15 */] <0.10494734f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.38913098f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20081183f ? 
                         (data[7 /* X21 */] <0.14284602f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2962078f ? 
                                0.0f : 
                                 (data[11 /* X34 */] <0.253845f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (data[3 /* X17 */] <-0.12182359f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[10 /* X28 */] <-0.23613973f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.12609226f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.49100426f ? 
                                1.0f : 
                                0.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_41_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13809778f ? 
             (data[9 /* X27 */] <-0.107788555f ? 
                 (data[11 /* X34 */] <-0.15204258f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0028319214f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2486704f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.6529011f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                 (data[0 /* X5 */] <0.10975332f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.03095881f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26176906f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18039969f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[4 /* X18 */] <-0.09354986f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.332974f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_41_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28065646f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36626965f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20801938f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10772265f ? 
                 (data[11 /* X34 */] <-0.79433596f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30962387f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.034846354f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3686104f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1857235f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2960409f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <0.010673497f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20406488f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.54296875f ? 
                        0.0f : 
                        1.0f))) : 
             (data[5 /* X19 */] <-0.38332987f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32950065f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1960941f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20965816f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[7 /* X21 */] <0.39311504f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_41_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
        0.0091743115f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5117673f ? 
             (data[2 /* X15 */] <0.08230959f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2696384f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.29392627f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.37893406f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_10_Forest_42 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_42_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_42_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_42_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_42_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_42_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_42_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_42_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.039554108f ? 
             (data[11 /* X34 */] <-0.26875f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.069391616f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25620916f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.383723f ? 
                             (data[9 /* X27 */] <-0.0635202f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04232764f ? 
                                    1.0f : 
                                     (data[7 /* X21 */] <0.19252525f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.06268748f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2017725f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18491957f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18776238f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.58576125f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26958677f ? 
                     (data[9 /* X27 */] <0.08435367f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.17431383f ? 
                             (data[9 /* X27 */] <0.12620689f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_42_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.64014816f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.040234376f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0013991354f ? 
                     (data[10 /* X28 */] <-0.31269145f ? 
                         (data[4 /* X18 */] <-0.02031981f ? 
                             (data[9 /* X27 */] <0.011672154f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.009303029f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18477209f ? 
                     (data[11 /* X34 */] <0.36833343f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.062298156f ? 
                            1.0f : 
                            0.0f) : 
                         (data[6 /* X20 */] <-0.50652856f ? 
                             (data[4 /* X18 */] <-0.074174516f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07354382f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.5318909f ? 
             (data[7 /* X21 */] <0.14534913f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.85493577f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_42_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1391236f ? 
            0.0f : 
             (data[2 /* X15 */] <0.15749545f ? 
                1.0f : 
                 (data[1 /* X12 */] <0.40055382f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.014965462f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[3 /* X17 */] <-0.38132736f ? 
             (data[7 /* X21 */] <0.13771567f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_42_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (data[9 /* X27 */] <-0.10281935f ? 
             (data[11 /* X34 */] <-0.24970703f ? 
                 (data[2 /* X15 */] <0.121618f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.18315862f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.489538f ? 
                 (data[1 /* X12 */] <-0.5769749f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37184373f ? 
                         (data[11 /* X34 */] <-0.66484374f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.41464844f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <-0.083080895f ? 
                                    0.0f : 
                                     (data[4 /* X18 */] <0.040657885f ? 
                                        1.0f : 
                                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19463962f ? 
                                             (data[9 /* X27 */] <-0.19698712f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f))))) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_42_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.075950354f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2649414f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20440938f ? 
                     (data[4 /* X18 */] <-0.3948904f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.6432312f ? 
                             (data[4 /* X18 */] <-0.18659654f ? 
                                 (data[9 /* X27 */] <0.030906899f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4575f ? 
                                    0.0f : 
                                     (data[8 /* X23 */] <0.14912729f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.076529495f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18275446f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.19257812f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.1599098f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9890856f ? 
                 (data[11 /* X34 */] <-0.42109376f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.27434927f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X27 */] <-0.12766533f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.2365039f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.5377224f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.38121185f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_42_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[10 /* X28 */] <0.25141194f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2991157f ? 
             (data[11 /* X34 */] <-0.49345702f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6878901f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9431405f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.9908239f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_43 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_43_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_43_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_43_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_43_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_43_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_43_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_43_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43033358f ? 
        0.0f : 
         (data[3 /* X17 */] <-0.27571535f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5400755f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2292287f ? 
                     (data[3 /* X17 */] <-0.3696678f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.13735843f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.35372406f ? 
                                0.0f : 
                                 (data[11 /* X34 */] <-0.36625f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.21023996f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33320686f ? 
                 (data[1 /* X12 */] <-0.41818985f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.42794076f ? 
                         (data[11 /* X34 */] <-0.38301343f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.52203274f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20735046f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.30989793f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17337789f ? 
                                    0.0f : 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.30313316f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)))) : 
                 (data[10 /* X28 */] <-0.2820614f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_43_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[6 /* X20 */] <-0.4367821f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19566086f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
                 (data[3 /* X17 */] <-0.23045307f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.320538f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.23002519f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.771428f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.44734976f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_43_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031299014f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16540474f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36819553f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15242878f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.1638608f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_43_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0049454505f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44795474f ? 
                 (data[9 /* X27 */] <-0.15416771f ? 
                    1.0f : 
                     (data[12 /* X35 */] <0.023084765f ? 
                        0.0f : 
                         (data[9 /* X27 */] <-0.032422423f ? 
                             (data[6 /* X20 */] <0.11998647f ? 
                                1.0f : 
                                0.0f) : 
                             (data[1 /* X12 */] <-0.44010967f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.18482429f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)))) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_43_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[6 /* X20 */] <-0.26769978f ? 
             (data[2 /* X15 */] <0.13327152f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
                 (data[12 /* X35 */] <-0.5096029f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.022308292f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.096875f ? 
                            1.0f : 
                             (data[12 /* X35 */] <-0.063970774f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20735046f ? 
                             (data[0 /* X5 */] <0.18459044f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <-0.026810998f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.0792483f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (data[5 /* X19 */] <0.34140217f ? 
                                 (data[8 /* X23 */] <0.21813823f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23828125f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7204107f ? 
                         (data[3 /* X17 */] <-0.40033245f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15135853f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.12310869f ? 
             (data[4 /* X18 */] <-0.13324183f ? 
                 (data[5 /* X19 */] <-0.08846886f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_43_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[3 /* X17 */] <-0.2908028f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.13760373f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.49645233f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26279598f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24726413f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.2674035f ? 
                        1.0f : 
                        0.0f))) : 
             (data[9 /* X27 */] <-0.1707317f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_44 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_44_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_44_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_44_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_44_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_44_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_44_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_44_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4092539f ? 
             (data[12 /* X35 */] <-0.3548458f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2223044f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.18771982f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049764123f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09757522f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23542404f ? 
                     (data[5 /* X19 */] <0.061983626f ? 
                         (data[8 /* X23 */] <0.17389031f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.32675412f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.5145865f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16278547f ? 
                            0.0f : 
                            1.0f) : 
                         (data[10 /* X28 */] <-0.28272018f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27189335f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[6 /* X20 */] <-0.7770603f ? 
                         (data[9 /* X27 */] <0.0048465445f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_44_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[12 /* X35 */] <-0.77285993f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.23304433f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14744905f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19927041f ? 
                         (data[0 /* X5 */] <0.15530257f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (data[5 /* X19 */] <0.22978136f ? 
             (data[0 /* X5 */] <0.11841626f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.0101526715f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.33744624f ? 
                         (data[4 /* X18 */] <-0.1547892f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.006548833f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19493894f ? 
                     (data[6 /* X20 */] <-0.45580387f ? 
                         (data[12 /* X35 */] <-0.6640617f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_44_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
        0.011904762f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.38118994f ? 
             (data[8 /* X23 */] <0.114142746f ? 
                 (data[4 /* X18 */] <-0.29573935f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.69712496f ? 
                 (data[7 /* X21 */] <0.18562688f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.30675614f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_44_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022246558f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3252508f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.70258373f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X19 */] <-0.21883662f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2424029f ? 
                 (data[4 /* X18 */] <-0.13586554f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37153628f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24408296f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23757344f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.102167785f ? 
                            0.0f : 
                             (data[4 /* X18 */] <0.016930174f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <0.091686696f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[10 /* X28 */] <0.22664803f ? 
                         (data[8 /* X23 */] <0.17389031f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_44_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (data[8 /* X23 */] <0.1201175f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.06447689f ? 
                     (data[6 /* X20 */] <-0.01618984f ? 
                         (data[10 /* X28 */] <-0.080997296f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20810999f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.105539374f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.3442464f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.85868f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f))) : 
             (data[1 /* X12 */] <-0.40954044f ? 
                 (data[4 /* X18 */] <0.122898355f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[11 /* X34 */] <0.12453472f ? 
             (data[2 /* X15 */] <0.15992956f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18483217f ? 
                     (data[8 /* X23 */] <0.13140315f ? 
                         (data[3 /* X17 */] <-0.2666629f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16253288f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18483217f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.089289494f ? 
                         (data[8 /* X23 */] <0.12078136f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35659713f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_44_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[1 /* X12 */] <-0.5720869f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47628483f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.7390632f ? 
                    1.0f : 
                     (data[6 /* X20 */] <0.30506656f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23680985f ? 
                 (data[2 /* X15 */] <0.083287686f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2712501f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.06524856f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5092148f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05128927f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20360188f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.15795763f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23044433f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_45 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_45_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_45_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_45_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_45_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_45_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_45_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_45_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12971884f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.1470128f ? 
                 (data[5 /* X19 */] <0.32698193f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13186473f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18119279f ? 
                 (data[5 /* X19 */] <0.072765075f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.40507916f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17010336f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.171532f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[4 /* X18 */] <-0.5736794f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.110931136f ? 
                        1.0f : 
                        0.0f))) : 
             (data[8 /* X23 */] <0.18318437f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.07733047f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.11705029f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2833209f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21948396f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28171203f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_45_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[6 /* X20 */] <-0.52977735f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.49954984f ? 
                 (data[5 /* X19 */] <-0.06182032f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.3935133f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.47136167f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.072765075f ? 
                     (data[5 /* X19 */] <0.015947489f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.23725833f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.058625974f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2698133f ? 
                        1.0f : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.14744905f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.024239082f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2702289f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X17 */] <-0.3393445f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_45_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.31998125f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.050615963f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41397697f ? 
             (data[8 /* X23 */] <0.16857941f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.04869478f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2165963f ? 
                         (data[4 /* X18 */] <-0.019798571f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16260466f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_45_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20548353f ? 
             (data[9 /* X27 */] <-0.4821346f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.10883185f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.34193036f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06851823f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16051406f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2106345f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.59255135f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38158965f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.168203f ? 
                         (data[6 /* X20 */] <0.102167785f ? 
                             (data[12 /* X35 */] <0.23991765f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.01660098f ? 
                             (data[1 /* X12 */] <-0.6310947f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_45_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[6 /* X20 */] <-0.050006304f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23690082f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23536602f ? 
                     (data[6 /* X20 */] <-0.52910614f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.45830873f ? 
                     (data[10 /* X28 */] <-0.06765106f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17116085f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.56841224f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34937742f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.49369508f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                1.0f)) : 
         (data[9 /* X27 */] <0.011472139f ? 
             (data[5 /* X19 */] <-0.09546667f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0011241575f ? 
                     (data[4 /* X18 */] <-0.56853646f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.59163904f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40161473f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.06542308f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.06889453f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_45_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[1 /* X12 */] <-0.7187282f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.074660584f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.512617f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.38838717f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.38145313f ? 
                     (data[10 /* X28 */] <0.5245299f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31269437f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3416652f ? 
                             (data[5 /* X19 */] <-0.36784688f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <-0.1539253f ? 
                                     (data[10 /* X28 */] <0.8011316f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_46 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_46_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_46_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_46_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_46_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_46_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_46_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_46_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (data[7 /* X21 */] <0.14080943f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18820828f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.2666629f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.076805435f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.89523137f ? 
                         (data[2 /* X15 */] <0.10661347f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.108598255f ? 
                                1.0f : 
                                 (data[12 /* X35 */] <-0.804545f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.90715885f ? 
                                         (data[9 /* X27 */] <0.30911002f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.13599601f ? 
                     (data[10 /* X28 */] <-0.3105217f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20748547f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4727121f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[10 /* X28 */] <-0.1645321f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[10 /* X28 */] <0.035356436f ? 
             (data[3 /* X17 */] <-0.29857874f ? 
                 (data[2 /* X15 */] <0.1799231f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_46_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031299014f ? 
                 (data[11 /* X34 */] <0.07340633f ? 
                     (data[5 /* X19 */] <0.14753474f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4914752f ? 
                         (data[10 /* X28 */] <-0.2177333f ? 
                             (data[1 /* X12 */] <0.31069395f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2567634f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[1 /* X12 */] <-0.039290022f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1550433f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.03938695f ? 
                 (data[5 /* X19 */] <0.08771901f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.2888243f ? 
                         (data[10 /* X28 */] <-0.55723166f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.6417944f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_46_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66625977f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42888457f ? 
                 (data[3 /* X17 */] <-0.20914252f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.89523137f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.045780882f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <0.35175353f ? 
                    1.0f : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.08817047f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_46_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[8 /* X23 */] <0.10370573f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6149373f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35991696f ? 
                 (data[9 /* X27 */] <-0.23367484f ? 
                     (data[3 /* X17 */] <-0.061473873f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <7.183925E-4f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.8171875f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.47759604f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <0.0037005378f ? 
                                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06780865f ? 
                                        0.0f : 
                                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19749278f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f))))) : 
                 (data[1 /* X12 */] <-0.61941975f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.10086479f ? 
                         (data[3 /* X17 */] <-0.5523358f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_46_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29537702f ? 
             (data[1 /* X12 */] <-0.4449977f ? 
                1.0f : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19525686f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.021389546f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.007735723f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.025390625f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29280004f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.241344f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.26819742f ? 
                     (data[0 /* X5 */] <0.11552861f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.2632507f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.269038f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
                         (data[10 /* X28 */] <0.5216937f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97546786f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21948396f ? 
                                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.059535824f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_46_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.21024908f ? 
             (data[7 /* X21 */] <0.09350213f ? 
                 (data[5 /* X19 */] <0.0054723746f ? 
                     (data[2 /* X15 */] <0.17659084f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.047155615f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.6685935f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0271763f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.49387816f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3542508f ? 
                     (data[7 /* X21 */] <0.20388584f ? 
                        1.0f : 
                         (data[10 /* X28 */] <0.8720379f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_47 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_47_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_47_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_47_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_47_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_47_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_47_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_47_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3923173f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5849373f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.27571535f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10294568f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.69170654f ? 
                    1.0f : 
                     (data[1 /* X12 */] <0.2051122f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[6 /* X20 */] <-0.3036298f ? 
                     (data[0 /* X5 */] <0.115223676f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.15235949f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66673034f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06420834f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19513388f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15419202f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.013262408f ? 
                                     (data[9 /* X27 */] <0.29637268f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.114549406f ? 
                                 (data[3 /* X17 */] <-0.20347092f ? 
                                     (data[6 /* X20 */] <-0.6417944f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23225337f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_47_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
             (data[3 /* X17 */] <-0.2908028f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07369526f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2671662f ? 
                         (data[7 /* X21 */] <0.097963125f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[1 /* X12 */] <0.14645566f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.07722316f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17159246f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12891115f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28585637f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_47_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.03862762f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35315132f ? 
                0.0f : 
                 (data[11 /* X34 */] <8.4237196E-4f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.1476606f ? 
                         (data[1 /* X12 */] <0.22466438f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.058456387f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39575657f ? 
                 (data[9 /* X27 */] <0.075486146f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66731f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.33744624f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_47_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[11 /* X34 */] <-0.9493316f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22657467f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13654926f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16332828f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.015328283f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.013824331f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10912738f ? 
                 (data[5 /* X19 */] <-0.6375467f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.11552861f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11300192f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5333277f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.32538512f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.11305166f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.25240877f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_47_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28688112f ? 
            0.0f : 
             (data[2 /* X15 */] <0.14909974f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.11085605f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19674373f ? 
             (data[4 /* X18 */] <-0.0864205f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01618984f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.04906611f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[0 /* X5 */] <0.11596909f ? 
                        0.0f : 
                         (data[3 /* X17 */] <0.2999921f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[11 /* X34 */] <-0.8238281f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.99419063f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.015954463f ? 
                             (data[6 /* X20 */] <-0.046624657f ? 
                                 (data[1 /* X12 */] <-0.28300872f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[5 /* X19 */] <-0.13958077f ? 
                                    0.0f : 
                                     (data[11 /* X34 */] <-0.3848252f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f) : 
                        0.0f))) : 
             (data[10 /* X28 */] <-0.118701145f ? 
                 (data[0 /* X5 */] <0.22180708f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8545841f ? 
                     (data[5 /* X19 */] <-0.18145178f ? 
                         (data[0 /* X5 */] <0.232486f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_47_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3914324f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2862608f ? 
             (data[2 /* X15 */] <0.12327475f ? 
                 (data[4 /* X18 */] <-0.42794076f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.08991854f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.7920489f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46326977f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.34349924f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23297039f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_48 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_48_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_48_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_48_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_48_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_48_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_48_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_48_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17931184f ? 
             (data[3 /* X17 */] <-0.36925742f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17624582f ? 
                     (data[2 /* X15 */] <0.099948965f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.014898058f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.09765189f ? 
                     (data[11 /* X34 */] <0.2796875f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.020644108f ? 
                 (data[5 /* X19 */] <0.3383434f ? 
                     (data[1 /* X12 */] <-0.20548353f ? 
                         (data[6 /* X20 */] <-0.2476231f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[11 /* X34 */] <-0.5125f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20835994f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.67631876f ? 
                                 (data[12 /* X35 */] <-0.60909f ? 
                                     (data[6 /* X20 */] <-0.48197258f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16361102f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.67360544f ? 
             (data[4 /* X18 */] <-0.048035655f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13997918f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_48_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3535121f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.038330078f ? 
             (data[12 /* X35 */] <-0.2555913f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5161726f ? 
                     (data[12 /* X35 */] <-0.4998504f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4727121f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.18258056f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.32399514f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.21359903f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17600419f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4388956f ? 
                             (data[0 /* X5 */] <0.095952354f ? 
                                 (data[6 /* X20 */] <-0.6992824f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[8 /* X23 */] <0.10095805f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16807197f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.39406434f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.24812698f ? 
                                 (data[9 /* X27 */] <0.35940313f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.36218566f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4857175f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_48_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
            0.0f : 
             (data[0 /* X5 */] <0.13213259f ? 
                 (data[0 /* X5 */] <0.10050841f ? 
                     (data[2 /* X15 */] <0.17325859f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21384527f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.49475405f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.144142f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.97518635f ? 
             (data[9 /* X27 */] <0.24670815f ? 
                 (data[5 /* X19 */] <0.065288104f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43995425f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.49799433f ? 
                     (data[0 /* X5 */] <0.14729275f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_48_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[5 /* X19 */] <0.09706521f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.08595736f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20277002f ? 
             (data[9 /* X27 */] <-0.2471087f ? 
                 (data[0 /* X5 */] <0.2039988f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.14753474f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.7867187f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.18900017f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (data[4 /* X18 */] <0.21366309f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.5333277f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.35295948f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17327876f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.4829804f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_48_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.00894347f ? 
         (data[11 /* X34 */] <-0.42490235f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14673264f ? 
                 (data[5 /* X19 */] <-0.08015643f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.118125916f ? 
                 (data[5 /* X19 */] <0.047923878f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13574216f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (data[4 /* X18 */] <-0.2984889f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6739511f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.20218039f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.17010336f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.057754785f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35960457f ? 
                                 (data[6 /* X20 */] <-0.107782826f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[9 /* X27 */] <-0.03095597f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.19067627f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5343026f ? 
                            0.0f : 
                             (data[12 /* X35 */] <0.24999875f ? 
                                 (data[5 /* X19 */] <-0.09172819f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.58669233f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.5333277f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_48_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[5 /* X19 */] <-0.07116653f ? 
             (data[8 /* X23 */] <0.13870563f ? 
                 (data[5 /* X19 */] <-0.08678832f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0859375f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20912613f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.36424538f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51172227f ? 
             (data[4 /* X18 */] <-0.0323139f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2552078f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0014443f ? 
                 (data[6 /* X20 */] <0.16980071f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_49 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_49_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_49_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_49_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_49_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_49_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_49_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_49_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[5 /* X19 */] <0.15314247f ? 
             (data[3 /* X17 */] <-0.36623994f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09386735f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2296547f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.56794184f ? 
                     (data[11 /* X34 */] <0.584375f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.19158599f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12024712f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.35843492f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.42139235f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.03196496f ? 
                             (data[5 /* X19 */] <0.25751737f ? 
                                0.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14944094f ? 
                                    1.0f : 
                                     (data[0 /* X5 */] <0.1270792f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.11401367f ? 
             (data[9 /* X27 */] <-0.0050918465f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.013085102f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.009636139f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_49_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18118109f ? 
             (data[11 /* X34 */] <-0.32587892f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36688346f ? 
                     (data[10 /* X28 */] <-0.1493312f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.38736233f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[3 /* X17 */] <-0.061473873f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2747973f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19199494f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5320518f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.18325536f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4727121f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_49_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3344589f ? 
             (data[2 /* X15 */] <0.14909974f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.21536641f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.76015204f ? 
                         (data[0 /* X5 */] <0.2444256f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.03959918f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.14733584f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_49_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[5 /* X19 */] <-0.065558806f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23306617f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.64580077f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.096036986f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24668072f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <0.0049454505f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24885944f ? 
                     (data[1 /* X12 */] <-0.6160793f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.17325859f ? 
                            1.0f : 
                             (data[9 /* X27 */] <-0.12254948f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.23186599f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.431796f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_49_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[1 /* X12 */] <-0.6111912f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.45374703f ? 
                 (data[4 /* X18 */] <-0.14808095f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.46746716f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19067383f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1998735f ? 
                 (data[10 /* X28 */] <-0.08807109f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20310023f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.20923448f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.7615888f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5366403f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1112347f ? 
                                0.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23655885f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[11 /* X34 */] <-0.56875f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[3 /* X17 */] <-0.7736005f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X27 */] <-0.07797338f ? 
                 (data[4 /* X18 */] <-0.1470128f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_49_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[7 /* X21 */] <0.16861285f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.45374703f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.13273087f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0146106f ? 
                         (data[4 /* X18 */] <0.2924094f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.42710677f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))) : 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0359375f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.49746895f ? 
                     (data[1 /* X12 */] <-0.4318229f ? 
                         (data[3 /* X17 */] <-0.3936175f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5747083f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15888634f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[5 /* X19 */] <-0.031912457f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.06765625f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.32405078f ? 
                                    0.0f : 
                                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23456542f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[8 /* X23 */] <0.16972859f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}


class h2o_rf_10_Forest_50 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_50_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_50_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_50_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_50_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_50_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_50_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_50_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43033358f ? 
        0.0f : 
         (data[6 /* X20 */] <-0.4727121f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23894876f ? 
                 (data[6 /* X20 */] <-0.79211915f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1325808f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.14398402f ? 
                    0.0f : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.25732422f ? 
                 (data[0 /* X5 */] <0.053444173f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.3586633f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14040105f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.085036844f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17068774f ? 
                                 (data[4 /* X18 */] <-0.5231742f ? 
                                     (data[5 /* X19 */] <0.21311966f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1270792f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (data[3 /* X17 */] <-0.6529011f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.20595245f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19617927f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12259437f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_50_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[6 /* X20 */] <-0.4727121f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.21494141f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.43501288f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.23045307f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.36703566f ? 
                 (data[7 /* X21 */] <0.08578067f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.12943144f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_50_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43255505f ? 
             (data[8 /* X23 */] <0.10020165f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.05887855f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.38913098f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_50_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.4829501f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
             (data[3 /* X17 */] <-0.8188628f ? 
                1.0f : 
                0.0f) : 
             (data[0 /* X5 */] <0.1148067f ? 
                 (data[10 /* X28 */] <-0.10849113f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.66497105f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.6300698f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4230775f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.50087345f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <0.2643381f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[12 /* X35 */] <0.238092f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1669475f ? 
                                    1.0f : 
                                     (data[10 /* X28 */] <0.23456542f ? 
                                        1.0f : 
                                        0.0f)))))))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_50_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[6 /* X20 */] <-0.25501862f ? 
             (data[11 /* X34 */] <-0.62294924f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.05272747f ? 
                 (data[0 /* X5 */] <0.10109037f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.146875f ? 
                             (data[12 /* X35 */] <-0.21818f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4506426f ? 
                     (data[11 /* X34 */] <-0.6754811f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.23101132f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2156428f ? 
                                0.0f : 
                                 (data[7 /* X21 */] <0.2344281f ? 
                                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42358407f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)))) : 
                     (data[10 /* X28 */] <-0.10849113f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.29684055f ? 
                            0.0f : 
                            1.0f) : 
                         (data[5 /* X19 */] <-0.031912457f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.94618195f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2432922f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.038219817f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_50_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4191971f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.6496094f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.2852212f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.01221116f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38662276f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.14094947f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2798087f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_51 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_51_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_51_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_51_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_51_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_51_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_51_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_51_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.35819876f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20168689f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.14122483f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.13197115f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22978136f ? 
                     (data[11 /* X34 */] <-0.1570711f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.43521163f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2122647f ? 
                                0.0f : 
                                1.0f) : 
                             (data[3 /* X17 */] <-0.73014873f ? 
                                1.0f : 
                                 (data[7 /* X21 */] <0.10846611f ? 
                                     (data[3 /* X17 */] <0.1525096f ? 
                                        0.0f : 
                                         (data[1 /* X12 */] <0.34747922f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f)))) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10735131f ? 
                         (data[2 /* X15 */] <0.1799128f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.097358346f ? 
                                 (data[0 /* X5 */] <0.11545375f ? 
                                     (data[12 /* X35 */] <-0.413635f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[5 /* X19 */] <0.33913198f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[1 /* X12 */] <0.27354482f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.26039326f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_51_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21073464f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25399265f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.031299014f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5613964f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18809582f ? 
                        1.0f : 
                        0.0f))) : 
             (data[5 /* X19 */] <-0.15528241f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.16481228f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2168457f ? 
            0.0f : 
             (data[5 /* X19 */] <0.1325808f ? 
                 (data[11 /* X34 */] <0.4626677f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26152006f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.51674855f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_51_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.18949921f ? 
         (data[2 /* X15 */] <0.21157953f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.078023046f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.186276f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.07354382f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31777343f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33737218f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_51_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.38333872f ? 
             (data[5 /* X19 */] <-0.05808184f ? 
                 (data[3 /* X17 */] <-0.5865164f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4614707f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[0 /* X5 */] <0.09495412f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15127322f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <-0.64128524f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23689143f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.28369224f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.08435367f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.8422115f ? 
                                1.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28540203f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[12 /* X35 */] <0.19105391f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24599308f ? 
                                1.0f : 
                                 (data[9 /* X27 */] <-0.10551222f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_51_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28854102f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.51390606f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.123535156f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.31576648f ? 
                 (data[5 /* X19 */] <-0.084236614f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.101162955f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.49645233f ? 
                            0.0f : 
                            1.0f) : 
                         (data[7 /* X21 */] <0.29834348f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[4 /* X18 */] <-0.1525212f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24375f ? 
                            1.0f : 
                             (data[8 /* X23 */] <0.17060727f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[5 /* X19 */] <-0.072005585f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.7618266f ? 
                                 (data[1 /* X12 */] <-0.6278106f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.8337597f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f)))) : 
                 (data[3 /* X17 */] <-0.2908028f ? 
                     (data[7 /* X21 */] <0.18720886f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4224297f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_51_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.40680927f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47347978f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21281232f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.23768345f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.153429f ? 
             (data[2 /* X15 */] <0.09328445f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.020426307f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.45312554f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4659125f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.20575568f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.27062753f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6470501f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <-0.95824236f ? 
                    1.0f : 
                     (data[6 /* X20 */] <0.0075276583f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_52 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_52_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_52_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_52_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_52_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_52_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_52_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_52_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[0 /* X5 */] <0.04694696f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.12125215f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X27 */] <0.11085605f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18331522f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13454746f ? 
                     (data[7 /* X21 */] <0.22689013f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.55915797f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.4811662f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2636496f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.19017126f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11957528f ? 
                             (data[10 /* X28 */] <-0.01856337f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26152006f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10590687f ? 
                         (data[5 /* X19 */] <0.14753474f ? 
                             (data[1 /* X12 */] <-0.2782654f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19194707f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5862784f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_52_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[6 /* X20 */] <-0.47905266f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0072221444f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20841113f ? 
                    1.0f : 
                     (data[1 /* X12 */] <0.3810818f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X12 */] <0.2051122f ? 
                    1.0f : 
                     (data[3 /* X17 */] <0.08336545f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18863435f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.18073645f ? 
                 (data[2 /* X15 */] <0.13660377f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21751624f ? 
                        0.0f : 
                         (data[1 /* X12 */] <0.052108817f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[8 /* X23 */] <0.22567153f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_52_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[12 /* X35 */] <-0.61252576f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.22955242f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.14363107f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.1607933f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1878314f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.029513935f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.5234368f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_52_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[6 /* X20 */] <0.019740153f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.5769749f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08158542f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.36242706f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06765106f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.16675895f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15964139f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.33483738f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.14768544f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3227966f ? 
                 (data[8 /* X23 */] <0.14600812f ? 
                     (data[7 /* X21 */] <0.19632038f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.584045f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.055874083f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24726884f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17010336f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_52_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12820688f ? 
             (data[11 /* X34 */] <-0.62294924f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22500767f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.1442586f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0035086654f ? 
                 (data[6 /* X20 */] <-0.20561635f ? 
                     (data[9 /* X27 */] <0.097604856f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.1760786f ? 
                     (data[1 /* X12 */] <-0.45399183f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.057441045f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24252301f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.9721832f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <-0.8786173f ? 
                     (data[3 /* X17 */] <-0.013194101f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.13671404f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61110663f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.38447085f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.253353f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_52_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
        0.0091743115f : 
         (data[9 /* X27 */] <0.023066927f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3912292f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
                     (data[9 /* X27 */] <-0.3810684f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24885944f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.41321376f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17905688f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.25234464f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.50848573f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49594182f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_53 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_53_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_53_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_53_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_53_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_53_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_53_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_53_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43033358f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37907904f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.38817093f ? 
                 (data[11 /* X34 */] <-0.025292058f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.053370155f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.46188024f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.42579708f ? 
                                 (data[3 /* X17 */] <-0.112167634f ? 
                                     (data[4 /* X18 */] <-0.009315503f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23376414f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11947085f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.062121328f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22428894f ? 
                                1.0f : 
                                 (data[6 /* X20 */] <-0.021679962f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19151868f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[8 /* X23 */] <0.18287097f ? 
                            0.0f : 
                             (data[1 /* X12 */] <0.30067465f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_53_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[12 /* X35 */] <-0.2555913f ? 
             (data[6 /* X20 */] <-0.46848503f ? 
                 (data[7 /* X21 */] <0.110931136f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1386298f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24958096f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.23950553f ? 
            0.0f : 
             (data[0 /* X5 */] <0.12202582f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.01481142f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22418153f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32698193f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_53_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.51772463f ? 
             (data[3 /* X17 */] <-0.2063132f ? 
                 (data[1 /* X12 */] <0.39276892f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_53_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[11 /* X34 */] <-0.8229004f ? 
             (data[3 /* X17 */] <-0.022246558f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19252692f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23680985f ? 
                     (data[4 /* X18 */] <-0.04331607f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.3364459f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.16102995f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14753474f ? 
                                     (data[8 /* X23 */] <0.17710403f ? 
                                        1.0f : 
                                         (data[8 /* X23 */] <0.24602485f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_53_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[12 /* X35 */] <-0.11434453f ? 
             (data[2 /* X15 */] <0.13327152f ? 
                 (data[11 /* X34 */] <-0.33653983f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.28734368f ? 
                 (data[6 /* X20 */] <-0.03309807f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.39643487f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.38181844f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34193587f ? 
                         (data[3 /* X17 */] <-0.6046213f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47354746f ? 
                                 (data[3 /* X17 */] <-0.14895898f ? 
                                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.04194987f ? 
                                        0.0f : 
                                         (data[1 /* X12 */] <-0.49814147f ? 
                                            1.0f : 
                                             (data[6 /* X20 */] <0.08075239f ? 
                                                1.0f : 
                                                0.0f))) : 
                                    0.0f) : 
                                 (data[6 /* X20 */] <0.14637895f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2689408f ? 
             (data[1 /* X12 */] <-0.037245985f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16566795f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.20209672f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_53_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.57280195f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24073677f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18338835f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.3850022f ? 
             (data[0 /* X5 */] <0.14873657f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.13599601f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5720849f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21218537f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26927948f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.027903274f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_54 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_54_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_54_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_54_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_54_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_54_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_54_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_54_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[10 /* X28 */] <-0.095728606f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15294167f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7519531f ? 
                     (data[0 /* X5 */] <0.10026682f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.20260517f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.219564f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15016742f ? 
                                     (data[8 /* X23 */] <0.15363929f ? 
                                        0.0f : 
                                         (data[4 /* X18 */] <-0.41251725f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42564622f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21226484f ? 
                     (data[9 /* X27 */] <0.17153056f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42557177f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24739094f ? 
                     (data[9 /* X27 */] <0.18435135f ? 
                         (data[8 /* X23 */] <0.22302845f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.4811662f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.46356568f ? 
                         (data[12 /* X35 */] <-0.6651775f ? 
                             (data[1 /* X12 */] <0.060426082f ? 
                                1.0f : 
                                 (data[5 /* X19 */] <0.57858187f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_54_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (data[6 /* X20 */] <-0.49384737f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
             (data[6 /* X20 */] <-0.5276638f ? 
                 (data[8 /* X23 */] <0.13671404f ? 
                     (data[12 /* X35 */] <-0.74041134f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.035131454f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.10037563f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39662504f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36721602f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.49839488f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.030450338f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[9 /* X27 */] <-0.10513346f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.22466438f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.16082445f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16467378f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_54_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.17089589f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.05887855f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.16028716f ? 
                     (data[6 /* X20 */] <-0.837404f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.14733584f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_54_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.14473087f ? 
         (data[6 /* X20 */] <-0.041552186f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5369768f ? 
                 (data[2 /* X15 */] <0.12327475f ? 
                     (data[11 /* X34 */] <-0.9238281f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4469336f ? 
                         (data[9 /* X27 */] <-0.27189258f ? 
                             (data[10 /* X28 */] <-0.047103036f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.019733546f ? 
                                1.0f : 
                                 (data[9 /* X27 */] <0.0017233862f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.82692343f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_54_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (data[6 /* X20 */] <-0.26769978f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.012300758f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25351563f ? 
                     (data[1 /* X12 */] <-0.7060156f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.20596406f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1697281f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29637268f ? 
                         (data[8 /* X23 */] <0.13140315f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (data[11 /* X34 */] <-0.5734375f ? 
             (data[9 /* X27 */] <0.07441528f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.45476812f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4092539f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.45635995f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18593135f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.09378576f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[8 /* X23 */] <0.16326852f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.12891115f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28931928f ? 
                         (data[12 /* X35 */] <-0.08380469f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.16980071f ? 
                                1.0f : 
                                 (data[8 /* X23 */] <0.1988709f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_54_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25906944f ? 
             (data[0 /* X5 */] <0.10469993f ? 
                 (data[7 /* X21 */] <0.1009717f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.87571937f ? 
                 (data[10 /* X28 */] <0.4487524f ? 
                     (data[9 /* X27 */] <-0.34141016f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2151639f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27280572f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48118243f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6470501f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25906944f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.71341515f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_55 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_55_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_55_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_55_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_55_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_55_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_55_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_55_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[3 /* X17 */] <-0.40244976f ? 
             (data[3 /* X17 */] <-0.7307428f ? 
                 (data[3 /* X17 */] <-0.8680756f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.366658f ? 
                     (data[9 /* X27 */] <0.08080021f ? 
                         (data[1 /* X12 */] <-0.16637918f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.17353515f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2594088f ? 
                     (data[9 /* X27 */] <-0.101162955f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.49573186f ? 
                             (data[4 /* X18 */] <-0.6240395f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.3399388f ? 
                                     (data[4 /* X18 */] <-0.24049988f ? 
                                         (data[10 /* X28 */] <-0.22347833f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    0.0f)) : 
                             (data[6 /* X20 */] <-0.80411345f ? 
                                0.0f : 
                                 (data[5 /* X19 */] <0.19538732f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11907601f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[12 /* X35 */] <-0.60107327f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.42198738f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_55_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3220149f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.31391436f ? 
                1.0f : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.20978154f ? 
             (data[7 /* X21 */] <0.12338042f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21908861f ? 
                     (data[6 /* X20 */] <-0.7514937f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19162674f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11953021f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[12 /* X35 */] <-0.925917f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31351995f ? 
                                0.0f : 
                                1.0f) : 
                             (data[11 /* X34 */] <0.0423075f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.028098172f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_55_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13087605f ? 
             (data[3 /* X17 */] <-0.40257502f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.16542968f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.30962387f ? 
                         (data[3 /* X17 */] <-0.35457933f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.17048624f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.61252576f ? 
             (data[8 /* X23 */] <0.14335267f ? 
                 (data[4 /* X18 */] <-0.097437285f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.119942494f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_55_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.12269614f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.039611902f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21731822f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07070313f ? 
                     (data[2 /* X15 */] <0.1283624f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7756897f ? 
             (data[8 /* X23 */] <0.084633276f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.017626625f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.28369224f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.07726003f ? 
                            0.0f : 
                             (data[6 /* X20 */] <0.23795399f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <0.038533106f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[12 /* X35 */] <0.19868985f ? 
                             (data[1 /* X12 */] <-0.21045573f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <0.0065965164f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_55_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.00894347f ? 
         (data[2 /* X15 */] <0.18783721f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0033238053f ? 
                 (data[6 /* X20 */] <-0.25290507f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.7701694f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                             (data[0 /* X5 */] <0.11683927f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.32710406f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13155808f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17543489f ? 
                                         (data[4 /* X18 */] <-0.31784177f ? 
                                             (data[3 /* X17 */] <-0.34258634f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f))) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.37539062f ? 
                 (data[12 /* X35 */] <-0.29758358f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.74458855f ? 
             (data[6 /* X20 */] <-0.1810451f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.7138401f ? 
                     (data[10 /* X28 */] <0.44631955f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.005339877f ? 
                         (data[0 /* X5 */] <0.103978015f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.045780882f ? 
                                1.0f : 
                                 (data[7 /* X21 */] <0.18131113f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[4 /* X18 */] <-0.21862188f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.85561574f ? 
                                0.0f : 
                                1.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_55_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.34739545f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.28324097f ? 
                 (data[2 /* X15 */] <0.08730209f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0019051572f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[9 /* X27 */] <-0.22042365f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4515625f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.74355257f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_56 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_56_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_56_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_56_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_56_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_56_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_56_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_56_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[9 /* X27 */] <0.13404563f ? 
             (data[11 /* X34 */] <-0.2154297f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.040902715f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24293193f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23686367f ? 
                 (data[0 /* X5 */] <0.09531508f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15796643f ? 
                             (data[4 /* X18 */] <-0.3544848f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19193451f ? 
                                    0.0f : 
                                     (data[4 /* X18 */] <0.14194636f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (data[6 /* X20 */] <-0.62095153f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23456332f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21052545f ? 
                             (data[8 /* X23 */] <0.15665089f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14188822f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.67360544f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.42198738f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_56_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06526053f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.039290022f ? 
                 (data[12 /* X35 */] <-0.2365039f ? 
                     (data[3 /* X17 */] <-0.31145558f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1774426f ? 
                             (data[7 /* X21 */] <0.10198118f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.009303029f ? 
                     (data[6 /* X20 */] <-0.6079779f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.46641475f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.16778925f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4727121f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.95419025f ? 
             (data[6 /* X20 */] <-0.7009732f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.464258f ? 
                 (data[0 /* X5 */] <0.12852304f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_56_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (data[10 /* X28 */] <-0.40127257f ? 
             (data[1 /* X12 */] <0.28820896f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.4953125f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.023747317f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.13667957f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.10109037f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.7957648f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5849373f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.40690267f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_56_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[9 /* X27 */] <-0.12269614f ? 
             (data[12 /* X35 */] <-0.3548458f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.4987662f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17905688f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16075905f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[11 /* X34 */] <-0.8209961f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.39082903f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18008809f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2592536f ? 
                        0.0f : 
                         (data[4 /* X18 */] <0.0123297665f ? 
                             (data[5 /* X19 */] <0.24323991f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[12 /* X35 */] <0.20632383f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.6149899f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35248318f ? 
                                1.0f : 
                                 (data[12 /* X35 */] <0.62856114f ? 
                                    1.0f : 
                                    0.0f))))))) : 
        1.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_56_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (data[10 /* X28 */] <-0.675147f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.3449219f ? 
                 (data[6 /* X20 */] <-0.041552186f ? 
                     (data[12 /* X35 */] <-0.20596406f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0017137533f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18674213f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4818893f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48690864f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1610509f ? 
                 (data[3 /* X17 */] <-0.5117112f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.18527216f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24824283f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.25008306f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.22597f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[4 /* X18 */] <-0.10845406f ? 
                     (data[6 /* X20 */] <-0.25290507f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28351903f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4428749f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.31569204f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_56_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[9 /* X27 */] <-0.038219817f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.048374314f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.12160862f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51172227f ? 
             (data[3 /* X17 */] <-0.16708587f ? 
                 (data[0 /* X5 */] <0.16606246f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.23762104f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[6 /* X20 */] <0.49528417f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_57 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_57_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_57_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_57_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_57_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_57_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_57_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_57_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[3 /* X17 */] <-0.39037982f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22712451f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.024643954f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16369168f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.44951442f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.08433962f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30071735f ? 
             (data[11 /* X34 */] <-0.2154297f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19115071f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.1946497f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X17 */] <-0.32701263f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.097437285f ? 
                         (data[6 /* X20 */] <-0.24251093f ? 
                             (data[10 /* X28 */] <-0.2879078f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22866109f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.34853452f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1228668f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17068774f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16574132f ? 
                                    1.0f : 
                                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.19102962f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (data[8 /* X23 */] <0.17787348f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24999352f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8388118f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_57_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (data[3 /* X17 */] <-0.27571535f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22604288f ? 
                 (data[11 /* X34 */] <-0.39824218f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07528916f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23306617f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22569136f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[6 /* X20 */] <-0.4875068f ? 
             (data[1 /* X12 */] <0.21429835f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_57_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39575657f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38696757f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
                 (data[10 /* X28 */] <-0.5168918f ? 
                     (data[10 /* X28 */] <-0.56824553f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.7432438f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20388277f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34445816f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.1493312f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6575f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.16845186f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16245289f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_57_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.042629387f ? 
            0.0f : 
             (data[0 /* X5 */] <0.11552391f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.050006304f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.38145313f ? 
                 (data[10 /* X28 */] <-0.5373118f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.15154392f ? 
                         (data[3 /* X17 */] <-0.23746602f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[10 /* X28 */] <-0.08807109f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2943255f ? 
                        0.0f : 
                        1.0f) : 
                     (data[5 /* X19 */] <-0.054509804f ? 
                         (data[9 /* X27 */] <-0.20717245f ? 
                            1.0f : 
                             (data[10 /* X28 */] <0.24769054f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_57_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (data[3 /* X17 */] <-0.48693937f ? 
             (data[7 /* X21 */] <0.159626f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.059897203f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.12727483f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.152771f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21183239f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2189442f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.17145097f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[1 /* X12 */] <-0.17995596f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20735046f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22831382f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.12386625f ? 
                                0.0f : 
                                 (data[2 /* X15 */] <0.122608304f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3407496f ? 
                             (data[4 /* X18 */] <-0.48906913f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6709224f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.19702993f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1908194f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9890856f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14596348f ? 
                     (data[4 /* X18 */] <-0.20760511f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.030181127f ? 
                             (data[7 /* X21 */] <0.2150072f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[2 /* X15 */] <0.18827425f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.14849418f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.56624484f ? 
                 (data[7 /* X21 */] <0.21410462f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.121627964f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 118B, number of visited nodes = 29, static init size = 0B
}

class h2o_rf_10_Tree_57_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23375472f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.30515066f ? 
             (data[5 /* X19 */] <-0.02443549f ? 
                 (data[6 /* X20 */] <-0.07536865f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.09539773f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.12766533f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.12796937f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13654926f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.051551078f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16361092f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46326977f ? 
                        0.0f : 
                        1.0f))) : 
             (data[1 /* X12 */] <-0.55742276f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.7040641f ? 
             (data[10 /* X28 */] <0.75936025f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45305976f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_58 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_58_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_58_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_58_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_58_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_58_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_58_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_58_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[12 /* X35 */] <-0.35675454f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25968924f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.28175032f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.024643954f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27822465f ? 
                     (data[3 /* X17 */] <-0.6643426f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.23514763f ? 
                             (data[11 /* X34 */] <0.005384f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30571574f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2223044f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21948396f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.030344093f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27346855f ? 
                         (data[6 /* X20 */] <-0.5444154f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.39832425f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <0.38913426f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_58_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[12 /* X35 */] <-0.77285993f ? 
             (data[2 /* X15 */] <0.11077879f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.4388956f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.44199282f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.06348144f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.3203191f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.32701263f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4008521f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33663306f ? 
                     (data[2 /* X15 */] <0.13139582f ? 
                         (data[6 /* X20 */] <-0.71834284f ? 
                            0.0f : 
                            1.0f) : 
                         (data[10 /* X28 */] <-0.23077792f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20655514f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24738719f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.27862948f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_58_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25399265f ? 
            0.0f : 
             (data[2 /* X15 */] <0.2099134f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06901759f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18527216f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2748924f ? 
                     (data[2 /* X15 */] <0.12937853f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1305784f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_58_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22259168f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.35486653f ? 
                 (data[2 /* X15 */] <0.109459154f ? 
                     (data[0 /* X5 */] <0.15306804f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (data[3 /* X17 */] <-0.7901967f ? 
             (data[6 /* X20 */] <-0.33744624f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26279598f ? 
                 (data[5 /* X19 */] <-0.19640572f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.018097732f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.10820538f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_58_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48690864f ? 
             (data[7 /* X21 */] <0.15408868f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35065827f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.17654575f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.37137964f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.10361735f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.26611653f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[6 /* X20 */] <0.20361717f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09517861f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.8869854f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26550323f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.5411612f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X5 */] <0.15884334f ? 
                     (data[8 /* X23 */] <0.25089827f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[11 /* X34 */] <0.12453472f ? 
             (data[6 /* X20 */] <-0.20640744f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19638276f ? 
                     (data[2 /* X15 */] <0.14653394f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.1525212f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.10198241f ? 
                                0.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.35065717f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[8 /* X23 */] <0.1677992f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_58_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.49345702f ? 
         (data[1 /* X12 */] <-0.6771798f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24073677f ? 
                 (data[10 /* X28 */] <0.62663f ? 
                     (data[2 /* X15 */] <0.17198479f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9992956f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27313766f ? 
             (data[2 /* X15 */] <0.09328445f ? 
                 (data[3 /* X17 */] <-0.33708343f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.40200967f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8507456f ? 
                        1.0f : 
                        0.0f))) : 
             (data[2 /* X15 */] <0.27072707f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_59 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_59_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_59_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_59_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_59_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_59_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_59_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_59_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[11 /* X34 */] <-0.2154297f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20324889f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31269437f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23103455f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.044659115f ? 
                 (data[4 /* X18 */] <-0.20209672f ? 
                     (data[6 /* X20 */] <-0.24018042f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.161854f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.34197745f ? 
                         (data[7 /* X21 */] <0.15740849f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.309193f ? 
                                 (data[2 /* X15 */] <0.2300309f ? 
                                    0.0f : 
                                     (data[11 /* X34 */] <0.2311525f ? 
                                        0.0f : 
                                         (data[8 /* X23 */] <0.16857941f ? 
                                            0.0f : 
                                            1.0f))) : 
                                1.0f)) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15644152f ? 
                             (data[9 /* X27 */] <-0.013235834f ? 
                                0.0f : 
                                1.0f) : 
                             (data[1 /* X12 */] <0.645695f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_59_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (data[0 /* X5 */] <0.13141067f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2223044f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15159881f ? 
                 (data[6 /* X20 */] <-0.87251097f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.23508593f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8466311f ? 
                 (data[9 /* X27 */] <0.25284693f ? 
                     (data[0 /* X5 */] <0.16931565f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_59_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43255505f ? 
             (data[2 /* X15 */] <0.21324566f ? 
                 (data[3 /* X17 */] <-0.013194101f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2282408f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.06989533f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_59_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[9 /* X27 */] <-0.10613215f ? 
             (data[2 /* X15 */] <0.18408842f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4171837f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23491257f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.42317775f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18837538f ? 
             (data[10 /* X28 */] <0.1569693f ? 
                 (data[1 /* X12 */] <-0.6114681f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.113159575f ? 
                        0.0f : 
                         (data[9 /* X27 */] <-0.12322349f ? 
                            0.0f : 
                             (data[12 /* X35 */] <0.12386625f ? 
                                 (data[1 /* X12 */] <-0.39471453f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)))) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.39053613f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.40200967f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_59_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[11 /* X34 */] <-0.8229004f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09550253f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47347978f ? 
                 (data[1 /* X12 */] <-0.3761832f ? 
                     (data[0 /* X5 */] <0.1484474f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X34 */] <-0.4515625f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.10680679f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11628828f ? 
                                 (data[9 /* X27 */] <0.011672154f ? 
                                     (data[4 /* X18 */] <-0.2380481f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (data[2 /* X15 */] <0.104616486f ? 
                            1.0f : 
                             (data[9 /* X27 */] <-0.23965302f ? 
                                1.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24507836f ? 
                                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19871731f ? 
                                         (data[8 /* X23 */] <0.18557428f ? 
                                            0.0f : 
                                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13023725f ? 
                                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20408492f ? 
                                                     (data[3 /* X17 */] <-0.48665875f ? 
                                                        0.0f : 
                                                        1.0f) : 
                                                    0.0f) : 
                                                0.0f)) : 
                                        1.0f) : 
                                    0.0f))))) : 
                 (data[4 /* X18 */] <-0.036844984f ? 
                     (data[9 /* X27 */] <0.13129726f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_59_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[6 /* X20 */] <-0.28672156f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.28815007f ? 
                    0.0f : 
                    1.0f))) : 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.38667074f ? 
                 (data[5 /* X19 */] <0.065288104f ? 
                     (data[9 /* X27 */] <-0.03833204f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.57082534f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.24588776f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.15498976f ? 
                         (data[1 /* X12 */] <-0.19782883f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_60 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_60_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_60_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_60_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_60_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_60_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_60_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_60_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[6 /* X20 */] <-0.46939525f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.097017206f ? 
                 (data[11 /* X34 */] <-0.44394532f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0046332898f ? 
                         (data[12 /* X35 */] <-0.7251414f ? 
                             (data[1 /* X12 */] <-0.0021408855f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.012793503f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.030930495f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15861653f ? 
                                     (data[9 /* X27 */] <-0.047456592f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.32163894f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41563335f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_60_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[7 /* X21 */] <0.08561758f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.06254605f ? 
                1.0f : 
                 (data[10 /* X28 */] <-0.036356572f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.7377988f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[6 /* X20 */] <-0.4392919f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26152006f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.23674233f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.37965214f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24999352f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_60_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (data[6 /* X20 */] <-0.18949921f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                 (data[10 /* X28 */] <-0.16975123f ? 
                     (data[8 /* X23 */] <0.14202495f ? 
                         (data[9 /* X27 */] <-0.048158206f ? 
                            1.0f : 
                            0.0f) : 
                         (data[9 /* X27 */] <-0.12766533f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21187764f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14645566f ? 
                            0.0f : 
                             (data[4 /* X18 */] <0.010527179f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[6 /* X20 */] <-0.7438015f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_60_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
        0.02027027f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21699445f ? 
             (data[11 /* X34 */] <-0.7486328f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36987638f ? 
                     (data[9 /* X27 */] <-0.23367484f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45684645f ? 
                            0.0f : 
                             (data[6 /* X20 */] <0.56755614f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2570028f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.34473082f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_60_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
        0.014285714f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5362152f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.123535156f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2853217f ? 
                     (data[4 /* X18 */] <-0.26268902f ? 
                         (data[6 /* X20 */] <-0.20318982f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.3486199f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3675f ? 
                                1.0f : 
                                 (data[0 /* X5 */] <0.108598255f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[6 /* X20 */] <-0.018338567f ? 
                             (data[12 /* X35 */] <-0.1204525f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.1046173f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.395f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.24168204f ? 
                                     (data[4 /* X18 */] <0.03262498f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)))) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2459787f ? 
                        0.0f : 
                         (data[4 /* X18 */] <0.0017137533f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18185665f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_60_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1442586f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47347978f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.055438902f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3275488f ? 
                 (data[4 /* X18 */] <-0.03133659f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.022725f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26417446f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.061409395f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_61 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_61_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_61_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_61_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_61_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_61_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_61_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_61_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43033358f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0038190503f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13760918f ? 
                 (data[8 /* X23 */] <0.15264674f ? 
                     (data[4 /* X18 */] <-0.19658832f ? 
                         (data[0 /* X5 */] <0.102026105f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.16923f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.25167224f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33320686f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.34686548f ? 
                                 (data[12 /* X35 */] <-0.6587173f ? 
                                    0.0f : 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31625f ? 
                                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.058910713f ? 
                                            0.0f : 
                                             (data[8 /* X23 */] <0.19832858f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        1.0f)) : 
                                1.0f) : 
                            1.0f))) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.3803656f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4393004f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.54054165f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_61_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[6 /* X20 */] <-0.4367821f ? 
             (data[5 /* X19 */] <-0.14406696f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.5734375f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2694864f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.27309614f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13399675f ? 
             (data[5 /* X19 */] <0.23725833f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10873789f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25323272f ? 
                         (data[1 /* X12 */] <0.03589823f ? 
                             (data[8 /* X23 */] <0.16872486f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0065845246f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5371101f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.5738637f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_61_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43255505f ? 
             (data[0 /* X5 */] <0.13141067f ? 
                 (data[8 /* X23 */] <0.16857941f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5849373f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.036844984f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_61_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.4829501f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0028319214f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.43713242f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28212014f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3758798f ? 
                         (data[1 /* X12 */] <-0.5965271f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.30405354f ? 
                                 (data[8 /* X23 */] <0.15158455f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[5 /* X19 */] <-0.05246842f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19058971f ? 
                                         (data[2 /* X15 */] <0.14040463f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_61_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[6 /* X20 */] <-0.28038096f ? 
             (data[3 /* X17 */] <-0.28050125f ? 
                 (data[4 /* X18 */] <-0.40590718f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3574271f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12734374f ? 
                     (data[4 /* X18 */] <-0.2574789f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1544922f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.1741505f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[7 /* X21 */] <0.17065364f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33894506f ? 
                                0.0f : 
                                 (data[12 /* X35 */] <-0.413635f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.26407897f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20200793f ? 
                                     (data[8 /* X23 */] <0.108540244f ? 
                                         (data[1 /* X12 */] <-0.8789245f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f) : 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.31137478f ? 
                                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24598633f ? 
                                            0.0f : 
                                             (data[0 /* X5 */] <0.18159936f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        1.0f)) : 
                                 (data[6 /* X20 */] <-0.024932902f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5460796f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_61_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0248207f ? 
             (data[6 /* X20 */] <0.30261618f ? 
                 (data[4 /* X18 */] <-0.02031981f ? 
                     (data[7 /* X21 */] <0.15740849f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.28012457f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
             (data[9 /* X27 */] <-0.12766533f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.041120645f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.72578126f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17967688f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_62 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_62_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_62_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_62_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_62_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_62_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_62_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_62_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.014048478f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.7556813f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32287505f ? 
                         (data[8 /* X23 */] <0.17389031f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14318071f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.38817093f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22770284f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.01658157f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.26376873f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.011193502f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23725833f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31321332f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.2610951f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.69460154f ? 
                     (data[3 /* X17 */] <-0.33908257f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33320686f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26029965f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_62_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[10 /* X28 */] <-0.02170599f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20908034f ? 
                 (data[5 /* X19 */] <-0.09920515f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12980656f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.3712627f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[7 /* X21 */] <0.14578915f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.17389031f ? 
                 (data[6 /* X20 */] <-0.35435447f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.04510757f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.07733047f ? 
                 (data[5 /* X19 */] <0.23725833f ? 
                     (data[8 /* X23 */] <0.17654575f ? 
                         (data[5 /* X19 */] <0.17239629f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.24973729f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.017796699f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14407924f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19660206f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.45f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <0.4120355f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_62_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[2 /* X15 */] <0.21449526f ? 
             (data[9 /* X27 */] <0.03134892f ? 
                 (data[8 /* X23 */] <0.11281502f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[2 /* X15 */] <0.2380899f ? 
                 (data[4 /* X18 */] <-0.042353373f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.1981058f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7307381f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_62_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2512481f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.24970703f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <0.14564042f ? 
             (data[1 /* X12 */] <-0.37167704f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.12326089f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3200792f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.01618984f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023015728f ? 
                            1.0f : 
                             (data[5 /* X19 */] <-0.043875605f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[3 /* X17 */] <-0.7615306f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.58602244f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.35446072f ? 
                             (data[8 /* X23 */] <0.09714788f ? 
                                 (data[2 /* X15 */] <0.14679262f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_62_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.282042f ? 
             (data[11 /* X34 */] <-0.32587892f ? 
                 (data[0 /* X5 */] <0.097577065f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.27387184f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.025264043f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20246972f ? 
                            1.0f : 
                             (data[12 /* X35 */] <0.445458f ? 
                                 (data[10 /* X28 */] <0.064497866f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08518082f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28807452f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24597682f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.09735659f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.13372377f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4589102f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26862216f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24789321f ? 
                        0.0f : 
                         (data[4 /* X18 */] <0.026346995f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.60941476f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.059974138f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_62_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[2 /* X15 */] <0.12619048f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.5505859f ? 
                 (data[3 /* X17 */] <-0.30287275f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44540223f ? 
             (data[8 /* X23 */] <0.13273087f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25316116f ? 
                     (data[5 /* X19 */] <-0.06182032f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.057253312f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_63 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_63_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_63_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_63_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_63_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_63_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_63_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_63_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[6 /* X20 */] <-0.47905266f ? 
             (data[5 /* X19 */] <-0.15528241f ? 
                 (data[4 /* X18 */] <-0.35646746f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25528526f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06409771f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.9467328f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[5 /* X19 */] <-0.06182032f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.105645664f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13410468f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4448328f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.219564f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.044405885f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.112655096f ? 
                            0.0f : 
                            1.0f) : 
                         (data[0 /* X5 */] <0.11339005f ? 
                             (data[4 /* X18 */] <0.0017683593f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
            0.0f : 
             (data[8 /* X23 */] <0.20243637f ? 
                 (data[11 /* X34 */] <-0.24589844f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_63_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[6 /* X20 */] <-0.47905266f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25476742f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43343082f ? 
                     (data[9 /* X27 */] <-0.101162955f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.231016f ? 
                            0.0f : 
                            1.0f) : 
                         (data[12 /* X35 */] <-0.9467328f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36617887f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.06929729f ? 
                 (data[8 /* X23 */] <0.1792012f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2908028f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.19666074f ? 
                         (data[9 /* X27 */] <0.23504847f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_63_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.30785683f ? 
             (data[7 /* X21 */] <0.0852026f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11220692f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21234816f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.017495913f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_63_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.011286037f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4329528f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.775293f ? 
                 (data[3 /* X17 */] <-0.07957879f ? 
                     (data[9 /* X27 */] <-0.47219622f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15261684f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X27 */] <-0.23367484f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17153732f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24458788f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19674972f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24702905f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6061192f ? 
                             (data[0 /* X5 */] <0.15673289f ? 
                                 (data[9 /* X27 */] <-0.13316537f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_63_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.136661f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.17344528f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24558738f ? 
                    0.0f : 
                    1.0f))) : 
         (data[0 /* X5 */] <0.103978015f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1998735f ? 
                 (data[4 /* X18 */] <-0.5215834f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.08401756f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4090604f ? 
                            0.0f : 
                            1.0f) : 
                         (data[5 /* X19 */] <-0.062090095f ? 
                            1.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22721466f ? 
                                 (data[3 /* X17 */] <-0.2682112f ? 
                                     (data[8 /* X23 */] <0.14067098f ? 
                                         (data[5 /* X19 */] <0.01553313f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4619017f ? 
                                     (data[10 /* X28 */] <0.16922131f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f))))) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15908498f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.68007815f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48064375f ? 
                             (data[0 /* X5 */] <0.16999754f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_63_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.46780828f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.12369128f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.065288104f ? 
                 (data[4 /* X18 */] <-0.5521932f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.49599183f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1998735f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34275183f ? 
                     (data[4 /* X18 */] <-0.042353373f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.90625f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3582225f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.02969252f ? 
                                    0.0f : 
                                     (data[0 /* X5 */] <0.15458335f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[9 /* X27 */] <-0.059752997f ? 
                                    1.0f : 
                                     (data[11 /* X34 */] <-0.4659455f ? 
                                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.028584676f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f))))) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_64 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_64_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_64_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_64_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_64_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_64_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_64_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_64_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.31842446f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33320686f ? 
                 (data[12 /* X35 */] <-0.93088275f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26568633f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.48950136f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08984801f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17455475f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.50820315f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17732735f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.064035654f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18053438f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.123979814f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22990693f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4402837f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_64_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[6 /* X20 */] <-0.4367821f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27464315f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1671793f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.6453125f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.024239082f ? 
                     (data[4 /* X18 */] <0.023747317f ? 
                         (data[8 /* X23 */] <0.21079774f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.39707005f ? 
                 (data[5 /* X19 */] <0.30455104f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.24380633f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8055078f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_64_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18527216f ? 
             (data[6 /* X20 */] <-0.42875648f ? 
                 (data[2 /* X15 */] <0.12993926f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.20893238f ? 
                         (data[11 /* X34 */] <0.096875f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[10 /* X28 */] <-0.1595412f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2238047f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.31909186f ? 
                         (data[4 /* X18 */] <-0.22307655f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_64_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[3 /* X17 */] <-0.7901967f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.120582f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <0.0091725085f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9686656f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.41967353f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44795474f ? 
                 (data[0 /* X5 */] <0.11552861f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3296875f ? 
                         (data[9 /* X27 */] <-0.101162955f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17903711f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.31801236f ? 
                                     (data[2 /* X15 */] <0.22986464f ? 
                                         (data[9 /* X27 */] <0.21462655f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.009961757f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_64_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[3 /* X17 */] <-0.28175032f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12996686f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2802415f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1998735f ? 
             (data[4 /* X18 */] <-0.51882917f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.87535983f ? 
                     (data[6 /* X20 */] <-0.2338992f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.21137771f ? 
                             (data[4 /* X18 */] <-0.33582202f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <-0.032293405f ? 
                                    1.0f : 
                                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15200903f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2344281f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.20432661f ? 
                                     (data[3 /* X17 */] <-0.14282799f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.0736997f ? 
                                        0.0f : 
                                         (data[2 /* X15 */] <0.28095788f ? 
                                            1.0f : 
                                            0.0f)))))) : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49389982f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.12402344f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7469131f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21323958f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_64_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.46780828f ? 
            0.0f : 
            1.0f) : 
         (data[6 /* X20 */] <-0.03309807f ? 
             (data[6 /* X20 */] <-0.2825128f ? 
                 (data[2 /* X15 */] <0.36368504f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.17554758f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0017137533f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44795474f ? 
                 (data[6 /* X20 */] <0.0020393468f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40238217f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.09734958f ? 
                            0.0f : 
                             (data[6 /* X20 */] <0.5063086f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8804748f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24656822f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.33003864f ? 
                            1.0f : 
                             (data[8 /* X23 */] <0.23668131f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.0048465445f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}


class h2o_rf_10_Forest_65 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_65_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_65_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_65_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_65_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_65_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_65_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_65_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2772241f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09334839f ? 
             (data[11 /* X34 */] <-0.29160157f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.23783243f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.81948394f ? 
                         (data[4 /* X18 */] <-0.042353373f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[11 /* X34 */] <-0.08716183f ? 
                         (data[5 /* X19 */] <0.34203058f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07451172f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.17996123f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.15779628f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.517947f ? 
                 (data[9 /* X27 */] <0.15060961f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.59319246f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35688978f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4779883f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17645049f ? 
                                    0.0f : 
                                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15016253f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                             (data[11 /* X34 */] <-0.07375f ? 
                                 (data[5 /* X19 */] <0.58468735f ? 
                                    0.0f : 
                                     (data[8 /* X23 */] <0.17039822f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)))) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17247388f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43882295f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07832031f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_65_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3220149f ? 
            0.0f : 
             (data[3 /* X17 */] <-0.30590695f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.43466857f ? 
             (data[8 /* X23 */] <0.10402277f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.7966424f ? 
                     (data[10 /* X28 */] <-0.639412f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.34197745f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.24656822f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4425f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[6 /* X20 */] <-0.2370206f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.27629432f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_65_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (data[12 /* X35 */] <-0.7957648f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.037333988f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6605469f ? 
                     (data[6 /* X20 */] <-0.74510115f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.009961757f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39381784f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18417525f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6681641f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.48861876f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_65_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[12 /* X35 */] <-0.38538563f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.30433914f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.051291f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24458788f ? 
                     (data[10 /* X28 */] <-0.39437157f ? 
                         (data[1 /* X12 */] <-0.6344094f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.17553632f ? 
                         (data[4 /* X18 */] <-0.17455475f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (data[11 /* X34 */] <-0.5505859f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.0017790496f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_65_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.18283883f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.53462714f ? 
             (data[11 /* X34 */] <-0.36777344f ? 
                 (data[1 /* X12 */] <-0.72361624f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.009943362f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21370865f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[9 /* X27 */] <-0.26017722f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.44010967f ? 
                         (data[11 /* X34 */] <-0.2729357f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.7679294f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.123535156f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6709224f ? 
                     (data[4 /* X18 */] <-0.26268902f ? 
                         (data[3 /* X17 */] <-0.14639644f ? 
                            0.0f : 
                            1.0f) : 
                         (data[7 /* X21 */] <0.18396698f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0673584f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14977434f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <-0.5652436f ? 
                                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22753723f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                1.0f))) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_65_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[12 /* X35 */] <-0.31667098f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.050006304f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.17711198f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.6537988f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.32271737f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.7920489f ? 
                         (data[1 /* X12 */] <-1.1535908f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
             (data[6 /* X20 */] <0.77763015f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_66 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_66_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_66_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_66_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_66_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_66_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_66_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_66_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[12 /* X35 */] <-0.33194092f ? 
             (data[9 /* X27 */] <0.20692715f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.0344491f ? 
                     (data[4 /* X18 */] <-0.0864205f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.15389617f ? 
            1.0f : 
             (data[3 /* X17 */] <-0.27873284f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.8227114f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.099183254f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.38022888f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X18 */] <-0.64276797f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17389031f ? 
                         (data[4 /* X18 */] <-0.24067545f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.16881739f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.061128438f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3571991f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3065488f ? 
                             (data[0 /* X5 */] <0.1644726f ? 
                                0.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.42536905f ? 
                                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2249285f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25444868f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_66_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[6 /* X20 */] <-0.52977735f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.13851023f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.11010118f ? 
                 (data[4 /* X18 */] <-0.43344912f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <0.3674302f ? 
             (data[5 /* X19 */] <0.23351985f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.13724941f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <0.19011568f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.023747317f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17443992f ? 
                            0.0f : 
                             (data[11 /* X34 */] <0.32202023f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.49991006f ? 
                 (data[5 /* X19 */] <0.18491957f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12690349f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19042417f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.17491084f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_66_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[12 /* X35 */] <-0.62779564f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40900776f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.15493119f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.042353373f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.45025814f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[7 /* X21 */] <0.12421038f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.90838045f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30321655f ? 
                     (data[11 /* X34 */] <0.41346562f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20552422f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_66_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[6 /* X20 */] <0.019740153f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18252051f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6148069f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37112132f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16051406f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2387332f ? 
                     (data[12 /* X35 */] <0.48929456f ? 
                         (data[0 /* X5 */] <0.120576814f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18730041f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.11759483f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    1.0f)) : 
             (data[10 /* X28 */] <0.1569693f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_66_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39435217f ? 
             (data[8 /* X23 */] <0.15131901f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.38672242f ? 
                     (data[5 /* X19 */] <-0.19640572f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47652125f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16182007f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08817047f ? 
                         (data[7 /* X21 */] <0.14412925f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.415f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4152889f ? 
                 (data[5 /* X19 */] <-0.52539223f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.07467259f ? 
             (data[10 /* X28 */] <-0.4709467f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.117900245f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.009590421f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_66_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.49345702f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44540223f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.15085492f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <1.1545796f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.114267625f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.24630968f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20801938f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15505491f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_67 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_67_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_67_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_67_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_67_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_67_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_67_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_67_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[6 /* X20 */] <-0.47905266f ? 
             (data[4 /* X18 */] <-0.3205271f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20841113f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36714864f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.85714376f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.3571009f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24455352f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06359364f ? 
                     (data[11 /* X34 */] <-0.6191406f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.5270918f ? 
                             (data[5 /* X19 */] <-0.06849095f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (data[0 /* X5 */] <0.12156136f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.18982299f ? 
                             (data[1 /* X12 */] <0.013818591f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.83468485f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.85292256f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15019532f ? 
                 (data[12 /* X35 */] <0.06858137f ? 
                     (data[3 /* X17 */] <-0.39943227f ? 
                         (data[9 /* X27 */] <-0.11275775f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_67_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[6 /* X20 */] <-0.4388956f ? 
             (data[9 /* X27 */] <-0.10970684f ? 
                 (data[7 /* X21 */] <0.10660343f ? 
                    0.0f : 
                     (data[1 /* X12 */] <0.35844737f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06765106f ? 
                     (data[0 /* X5 */] <0.11264096f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4723983f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.14753474f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.016600981f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14999129f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_67_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.41353327f ? 
             (data[7 /* X21 */] <0.08022288f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.009303029f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.11552861f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_67_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                 (data[0 /* X5 */] <0.09531508f ? 
                     (data[10 /* X28 */] <-0.06930686f ? 
                        0.0f : 
                        1.0f) : 
                     (data[8 /* X23 */] <0.10834433f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.32223898f ? 
                             (data[12 /* X35 */] <-0.21818f ? 
                                 (data[5 /* X19 */] <0.38679767f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[7 /* X21 */] <0.1911164f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.36627975f ? 
                                         (data[3 /* X17 */] <-0.42115816f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    0.0f)) : 
                             (data[1 /* X12 */] <-0.62686574f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_67_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12820688f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2802415f ? 
                0.0f : 
                1.0f)) : 
         (data[4 /* X18 */] <-0.22550738f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21897198f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.0061046025f ? 
                     (data[1 /* X12 */] <-0.22599691f ? 
                         (data[3 /* X17 */] <0.09543539f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.15596604f ? 
                 (data[6 /* X20 */] <0.102167785f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21657792f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31216133f ? 
                             (data[9 /* X27 */] <-0.24934934f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45305833f ? 
                     (data[11 /* X34 */] <-0.5703125f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17010336f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.033657264f ? 
                                 (data[10 /* X28 */] <-0.21295787f ? 
                                    1.0f : 
                                     (data[5 /* X19 */] <-0.1835262f ? 
                                         (data[9 /* X27 */] <-0.1515976f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)) : 
                                1.0f) : 
                             (data[1 /* X12 */] <-0.65646285f ? 
                                 (data[7 /* X21 */] <0.22520363f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (data[5 /* X19 */] <0.34193587f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26465267f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_67_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
             (data[10 /* X28 */] <0.2948045f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.4102251f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26790115f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.92217195f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.27189335f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.116070546f ? 
             (data[0 /* X5 */] <0.14223936f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25434187f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4683748f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_68 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_68_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_68_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_68_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_68_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_68_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_68_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_68_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[9 /* X27 */] <0.081040874f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2635206f ? 
                 (data[10 /* X28 */] <-0.56803656f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <0.04792353f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.24208984f ? 
                 (data[0 /* X5 */] <0.06932624f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.1414459f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[11 /* X34 */] <0.12578164f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12191171f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.19781935f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.033846f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[5 /* X19 */] <0.23725833f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.023747317f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5113625f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19634682f ? 
                                     (data[4 /* X18 */] <-0.42422423f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (data[9 /* X27 */] <0.28915647f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.16574132f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03232376f ? 
                                    0.0f : 
                                     (data[6 /* X20 */] <-0.23558562f ? 
                                        0.0f : 
                                        1.0f)))))))) : 
         (data[3 /* X17 */] <-0.3300301f ? 
             (data[0 /* X5 */] <0.10542184f ? 
                 (data[7 /* X21 */] <0.17898725f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_68_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[9 /* X27 */] <-0.10613215f ? 
             (data[1 /* X12 */] <-0.22992375f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                 (data[11 /* X34 */] <0.011589045f ? 
                     (data[2 /* X15 */] <0.21657792f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17328158f ? 
                     (data[11 /* X34 */] <0.48686972f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.3983753f ? 
             (data[5 /* X19 */] <0.16622715f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7441406f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.30192107f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.20363171f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_68_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031299014f ? 
             (data[2 /* X15 */] <0.2282408f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.17905688f ? 
                     (data[9 /* X27 */] <0.2632815f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_68_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[3 /* X17 */] <-0.7901967f ? 
             (data[7 /* X21 */] <0.24206366f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.8614604f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.36309093f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.53588706f ? 
             (data[0 /* X5 */] <0.09531508f ? 
                1.0f : 
                 (data[12 /* X35 */] <0.21395878f ? 
                     (data[0 /* X5 */] <0.10916852f ? 
                         (data[7 /* X21 */] <0.15342768f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[11 /* X34 */] <-0.72436064f ? 
                         (data[9 /* X27 */] <-0.16688268f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_68_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
        0.014285714f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05137577f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06861829f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2154297f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2348794f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06438694f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.45625f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[3 /* X17 */] <-0.19753535f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0957092f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0344491f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3692542f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4506426f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.33003864f ? 
                         (data[4 /* X18 */] <-0.26268902f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06546232f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.074268945f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2680286f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.15906839f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.50642914f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_68_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27336362f ? 
            0.0f : 
             (data[7 /* X21 */] <0.15574858f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.13402827f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25198314f ? 
            1.0f : 
             (data[8 /* X23 */] <0.3006879f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_10_Forest_69 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_69_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_69_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_69_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_69_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_69_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_69_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_69_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (data[7 /* X21 */] <0.1449592f ? 
                 (data[6 /* X20 */] <-0.21908861f ? 
                     (data[8 /* X23 */] <0.16314724f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11223935f ? 
                 (data[6 /* X20 */] <-0.540345f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23995648f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29637268f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1754682f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.35153428f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21204557f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2726728f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.18252206f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.16995801f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[4 /* X18 */] <-0.040360924f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[1 /* X12 */] <0.33573157f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[3 /* X17 */] <-0.37830988f ? 
             (data[8 /* X23 */] <0.13936949f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_69_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2555913f ? 
             (data[5 /* X19 */] <0.06261675f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0347641f ? 
                     (data[6 /* X20 */] <-0.48962033f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17958969f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.15749921f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[5 /* X19 */] <0.32310918f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19638276f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23401865f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.54879916f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2491046f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_69_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2238047f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18527216f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24501784f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.7369032f ? 
             (data[1 /* X12 */] <0.5619394f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.1373779f ? 
                 (data[6 /* X20 */] <-0.5271437f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.61377984f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_69_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38538563f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.308107f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10005425f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.38367063f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.04231174f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.033068765f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[7 /* X21 */] <0.18811673f ? 
                 (data[5 /* X19 */] <-0.15154392f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.16975123f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.63563144f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.018261129f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.7403852f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_69_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.021176025f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4455406f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11907601f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.3570129f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17823511f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24327967f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.007735723f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.30171582f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[6 /* X20 */] <-0.1599098f ? 
             (data[4 /* X18 */] <-0.59594667f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.046852514f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.99419063f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.4987662f ? 
                         (data[8 /* X23 */] <0.15264674f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.43884546f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.699946f ? 
                                    1.0f : 
                                     (data[6 /* X20 */] <0.87934f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f)) : 
                         (data[4 /* X18 */] <0.13391514f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.38108075f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_69_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[5 /* X19 */] <-0.07303577f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.07669434f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8778329f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.4102251f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26862216f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24656822f ? 
                         (data[5 /* X19 */] <-0.031912457f ? 
                             (data[8 /* X23 */] <0.2043794f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[2 /* X15 */] <0.27452672f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_70 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_70_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_70_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_70_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_70_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_70_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_70_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_70_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[4 /* X18 */] <-0.5794215f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.517947f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.06969139f ? 
                    1.0f : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4092539f ? 
                0.0f : 
                1.0f) : 
             (data[6 /* X20 */] <-0.536118f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3532004f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13048764f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1845121f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12336243f ? 
                            1.0f : 
                            0.0f) : 
                         (data[6 /* X20 */] <-0.24354479f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.30281338f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16750628f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31321332f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.26725417f ? 
                                1.0f : 
                                 (data[2 /* X15 */] <0.3687412f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[5 /* X19 */] <0.19019924f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_70_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
        0.013333334f : 
         (data[12 /* X35 */] <-0.22696021f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43466857f ? 
                 (data[4 /* X18 */] <0.0072221444f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42943227f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X5 */] <0.16173099f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25355372f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[1 /* X12 */] <-0.15169851f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5651651f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_70_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06298262f ? 
         (data[6 /* X20 */] <-0.18527216f ? 
             (data[12 /* X35 */] <-0.7671337f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.031547617f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.11552861f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.16600785f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.2099134f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.13179153f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_70_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.12269614f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2501148f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.073134996f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36531165f ? 
             (data[4 /* X18 */] <-0.13048764f ? 
                 (data[9 /* X27 */] <-0.10551867f ? 
                     (data[12 /* X35 */] <0.19105391f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.46816322f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.12316653f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3775427f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6701528f ? 
                                    0.0f : 
                                     (data[5 /* X19 */] <0.48250282f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[2 /* X15 */] <0.16115214f ? 
                                     (data[3 /* X17 */] <-0.2694556f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)))) : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.33744624f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_70_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.18283883f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5400755f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19570744f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23828125f ? 
                     (data[9 /* X27 */] <0.044600107f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30069846f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.117000334f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[1 /* X12 */] <-0.75019497f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19682291f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.7585131f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12609334f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.21862188f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.63883525f ? 
                        1.0f : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.17905688f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.26550323f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_70_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[6 /* X20 */] <-0.066914536f ? 
             (data[1 /* X12 */] <-0.6405195f ? 
                1.0f : 
                0.0f) : 
             (data[3 /* X17 */] <-0.34511754f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.45724064f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2938409f ? 
                 (data[0 /* X5 */] <0.13089757f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.5305193f ? 
                         (data[6 /* X20 */] <-0.2698133f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19955415f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49594182f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4530136f ? 
                                    0.0f : 
                                     (data[6 /* X20 */] <0.510015f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (data[1 /* X12 */] <-0.8039543f ? 
                                    0.0f : 
                                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1927527f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_71 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_71_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_71_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_71_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_71_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_71_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_71_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_71_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23912758f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.019267285f ? 
                 (data[3 /* X17 */] <-0.34511754f ? 
                     (data[11 /* X34 */] <-0.31445312f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X27 */] <-0.10247397f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3291388f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3626781f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.14556016f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19175324f ? 
                 (data[2 /* X15 */] <0.13008216f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.38787833f ? 
                         (data[11 /* X34 */] <-0.634375f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10735131f ? 
                             (data[10 /* X28 */] <-0.2435219f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18252206f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)) : 
        0.022222223f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_71_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[5 /* X19 */] <-0.15341316f ? 
             (data[9 /* X27 */] <-0.18729568f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.7447711f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3939453f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.09072732f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.3949656f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.41785684f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2790577f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.28349963f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_71_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.49708292f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6607803f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.74433595f ? 
             (data[6 /* X20 */] <-0.7615245f ? 
                 (data[3 /* X17 */] <-0.11725081f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_71_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97121805f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24813095f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.25381774f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.8229004f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5284014f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15306804f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.13671404f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2632295f ? 
                     (data[2 /* X15 */] <0.17381443f ? 
                         (data[2 /* X15 */] <0.13050401f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.018866546f ? 
                                 (data[0 /* X5 */] <0.1270792f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41350028f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.10474243f ? 
                                 (data[1 /* X12 */] <-0.09166983f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_71_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
        0.014285714f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19067383f ? 
             (data[9 /* X27 */] <0.051225703f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.7700459f ? 
                     (data[9 /* X27 */] <-0.23280653f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26654816f ? 
                             (data[3 /* X17 */] <-0.34387887f ? 
                                 (data[6 /* X20 */] <0.014607829f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.22211835f ? 
                     (data[6 /* X20 */] <-0.20547064f ? 
                         (data[5 /* X19 */] <0.110219225f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15316339f ? 
                             (data[8 /* X23 */] <0.13458969f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08356444f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.05605184f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[4 /* X18 */] <-0.51882917f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.12523343f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.07573276f ? 
                         (data[9 /* X27 */] <-0.25341728f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.25768775f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.05340675f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34548604f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_71_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
             (data[2 /* X15 */] <0.1226589f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0071591293f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.1125652f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.33533272f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.97601706f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_72 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_72_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_72_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_72_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_72_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_72_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_72_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_72_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18118109f ? 
             (data[3 /* X17 */] <-0.3933973f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.16814902f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20443764f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2644331f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.31777292f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2697953f ? 
                         (data[3 /* X17 */] <-0.31463546f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.87850964f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19724621f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19105391f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6681641f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.58871377f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14371516f ? 
                             (data[10 /* X28 */] <-0.23057137f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.2611412f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31321332f ? 
                         (data[3 /* X17 */] <-0.4115022f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4702297f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.20429392f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.26323017f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_72_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[0 /* X5 */] <0.11191905f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.43521163f ? 
                 (data[12 /* X35 */] <-0.77858615f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43317452f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.4392919f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3395759f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.390625f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9101853f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_72_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (data[0 /* X5 */] <0.104338974f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.10356671f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.7442288f ? 
                 (data[4 /* X18 */] <-0.053370155f ? 
                     (data[11 /* X34 */] <0.00546875f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7176758f ? 
             (data[6 /* X20 */] <-0.7615245f ? 
                 (data[11 /* X34 */] <0.39561158f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.7976735f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_72_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[0 /* X5 */] <0.09026169f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.08719271f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.8229004f ? 
             (data[1 /* X12 */] <-0.6747358f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27391616f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2852212f ? 
                     (data[9 /* X27 */] <-0.40594026f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.078556284f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.038533106f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1860061f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.49381787f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.014271895f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_72_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
        0.014285714f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.123535156f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6725751f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                     (data[6 /* X20 */] <-0.005666053f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.31534576f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.18658762f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[3 /* X17 */] <-0.30793756f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.15226837f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.20003644f ? 
                                    1.0f : 
                                     (data[3 /* X17 */] <-0.25424513f ? 
                                        1.0f : 
                                         (data[7 /* X21 */] <0.19336915f ? 
                                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.27552027f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f)))))) : 
                     (data[2 /* X15 */] <0.21324566f ? 
                         (data[10 /* X28 */] <-0.0076108375f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.16006434f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.85819495f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_72_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[5 /* X19 */] <-0.07303577f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049666915f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.05144309f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20912613f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23157306f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.5878988f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.85881114f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.47671327f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.5272436f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_73 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_73_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_73_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_73_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_73_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_73_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_73_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_73_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[3 /* X17 */] <-0.27571535f ? 
             (data[10 /* X28 */] <-0.17996123f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18080331f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.053370155f ? 
                         (data[2 /* X15 */] <0.126607f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.48962033f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.06373025f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04723103f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43920976f ? 
                         (data[1 /* X12 */] <-0.2467388f ? 
                             (data[9 /* X27 */] <0.020295007f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2671662f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.5374367f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15833984f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.53016716f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.69514525f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.37109375f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24656822f ? 
            0.0f : 
             (data[7 /* X21 */] <0.19143654f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_73_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[3 /* X17 */] <-0.12333233f ? 
             (data[10 /* X28 */] <-0.31269145f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.118125916f ? 
                    0.0f : 
                    1.0f)) : 
             (data[9 /* X27 */] <-0.07134779f ? 
                 (data[6 /* X20 */] <-0.9057874f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.3983753f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18977664f ? 
                 (data[11 /* X34 */] <-0.09355469f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_73_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.12333233f ? 
             (data[12 /* X35 */] <-0.8865414f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18483217f ? 
                     (data[9 /* X27 */] <0.17711198f ? 
                         (data[6 /* X20 */] <-0.5277971f ? 
                            1.0f : 
                            0.0f) : 
                         (data[11 /* X34 */] <0.00546875f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14645566f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19148767f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_73_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
        0.02027027f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.53588706f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33564457f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.03891869f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36686143f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20737812f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.15618941f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[6 /* X20 */] <0.5195462f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_73_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28688112f ? 
            0.0f : 
             (data[10 /* X28 */] <0.58579f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.039438657f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22277461f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24558738f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0017137533f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.52049756f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.10813821f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45150813f ? 
                 (data[10 /* X28 */] <-0.30248144f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06824695f ? 
                         (data[7 /* X21 */] <0.19172218f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.20163071f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.79456645f ? 
                                     (data[3 /* X17 */] <-0.112167634f ? 
                                         (data[0 /* X5 */] <0.2841673f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    0.0f))) : 
                        1.0f)) : 
                 (data[6 /* X20 */] <0.5580155f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61110663f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_73_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.39353004f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45816478f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[2 /* X15 */] <0.124107815f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18705037f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.031299014f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.21384527f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.25635633f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23027763f ? 
                         (data[1 /* X12 */] <-0.7138401f ? 
                             (data[1 /* X12 */] <-0.926723f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[10 /* X28 */] <0.46326977f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.17654575f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.2633586f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.30319425f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_74 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_74_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_74_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_74_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_74_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_74_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_74_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_74_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[4 /* X18 */] <-0.17455475f ? 
             (data[6 /* X20 */] <-0.37548977f ? 
                 (data[7 /* X21 */] <0.102631606f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <-0.040746607f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.17010336f ? 
                         (data[2 /* X15 */] <0.09730208f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.41704875f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[7 /* X21 */] <0.12421038f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.23582554f ? 
                                0.0f : 
                                 (data[5 /* X19 */] <0.29355517f ? 
                                    0.0f : 
                                     (data[8 /* X23 */] <0.15288037f ? 
                                        0.0f : 
                                        1.0f))))))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33154073f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.48861876f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2864914f ? 
                        0.0f : 
                         (data[4 /* X18 */] <0.012139932f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19263187f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[4 /* X18 */] <0.12801419f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X20 */] <-0.78551435f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30328244f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31128025f ? 
            0.0f : 
             (data[10 /* X28 */] <0.05403907f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11695637f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_74_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (data[5 /* X19 */] <0.08024204f ? 
             (data[6 /* X20 */] <-0.37548977f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3182117f ? 
             (data[9 /* X27 */] <-0.10222784f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.14733584f ? 
                     (data[12 /* X35 */] <-0.17542422f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.05079987f ? 
                                1.0f : 
                                 (data[9 /* X27 */] <0.1994085f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.50652856f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.29422462f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25595075f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.42330888f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.5486311f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_74_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.590545f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06824695f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.044506095f ? 
                     (data[1 /* X12 */] <0.16722985f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25399265f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20484866f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09958768f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.50652856f ? 
                        0.0f : 
                        1.0f))) : 
             (data[10 /* X28 */] <-0.055935472f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_74_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[4 /* X18 */] <-0.08504341f ? 
             (data[9 /* X27 */] <-0.101162955f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.12268321f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.18527216f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                     (data[8 /* X23 */] <0.15825157f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19154513f ? 
                            1.0f : 
                             (data[6 /* X20 */] <0.28741407f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[1 /* X12 */] <-0.48060152f ? 
                            0.0f : 
                             (data[6 /* X20 */] <0.10880048f ? 
                                 (data[3 /* X17 */] <-0.6915249f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_74_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.00894347f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.44651634f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.14300157f ? 
                 (data[7 /* X21 */] <0.09433208f ? 
                     (data[2 /* X15 */] <0.18325536f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.5448568f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.5698646f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19124614f ? 
                     (data[4 /* X18 */] <-0.3826422f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.007814844f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36987638f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.293599f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.309946f ? 
                                     (data[12 /* X35 */] <-0.33522624f ? 
                                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1691633f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f) : 
         (data[9 /* X27 */] <0.11085605f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24209824f ? 
                 (data[1 /* X12 */] <-0.36536893f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.2795895f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[2 /* X15 */] <0.26839146f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13391514f ? 
                        0.0f : 
                        1.0f))) : 
             (data[5 /* X19 */] <0.18491957f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19638276f ? 
                     (data[0 /* X5 */] <0.10314838f ? 
                         (data[8 /* X23 */] <0.17631586f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.2293225f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[12 /* X35 */] <-0.3586633f ? 
                             (data[5 /* X19 */] <0.29200488f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 114B, number of visited nodes = 28, static init size = 0B
}

class h2o_rf_10_Tree_74_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[5 /* X19 */] <-0.07303577f ? 
             (data[8 /* X23 */] <0.13339473f ? 
                 (data[10 /* X28 */] <-0.0064806975f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.10139109f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22240935f ? 
            1.0f : 
             (data[0 /* X5 */] <0.1740035f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_75 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_75_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_75_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_75_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_75_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_75_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_75_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_75_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43033358f ? 
        0.0f : 
         (data[4 /* X18 */] <-0.20209672f ? 
             (data[3 /* X17 */] <-0.3300301f ? 
                 (data[3 /* X17 */] <-0.4879177f ? 
                     (data[12 /* X35 */] <0.17578399f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48118243f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <0.2223044f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.23011674f ? 
                         (data[5 /* X19 */] <-0.1470853f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.34366828f ? 
                                 (data[10 /* X28 */] <-0.31604487f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3132133f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12827824f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25221226f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19044633f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7367188f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.39544043f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20648953f ? 
                     (data[11 /* X34 */] <-0.4615378f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31987783f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15483734f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6356031f ? 
                                    0.0f : 
                                     (data[10 /* X28 */] <0.16922131f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29637268f ? 
                                1.0f : 
                                 (data[9 /* X27 */] <0.35485777f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_75_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10156858f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19199494f ? 
                 (data[5 /* X19 */] <-0.1022236f ? 
                     (data[12 /* X35 */] <-0.29758358f ? 
                        1.0f : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.63352185f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08397551f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2344281f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <-0.17964283f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25358847f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.23950553f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.30785683f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5234375f ? 
                     (data[9 /* X27 */] <-0.101162955f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.004003906f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.781819f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_75_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[4 /* X18 */] <-0.05750145f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22134866f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2278699f ? 
                 (data[2 /* X15 */] <0.21324566f ? 
                     (data[0 /* X5 */] <0.18771982f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_75_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35991696f ? 
             (data[3 /* X17 */] <-0.30287275f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.017626625f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.14020953f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.56379825f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3075764f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28303248f ? 
                                     (data[5 /* X19 */] <-0.13958077f ? 
                                         (data[3 /* X17 */] <-0.2212974f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.216541f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6878901f ? 
                     (data[12 /* X35 */] <0.114704296f ? 
                         (data[3 /* X17 */] <-0.5639488f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_75_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[4 /* X18 */] <-0.5491253f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.07733047f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.25290507f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
                     (data[6 /* X20 */] <-0.04392948f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29637268f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.17f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2379649f ? 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21238355f ? 
                                        1.0f : 
                                         (data[10 /* X28 */] <0.10387721f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.57820797f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[10 /* X28 */] <-0.47605172f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.72300524f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.5789924f ? 
                                    1.0f : 
                                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12675747f ? 
                                        0.0f : 
                                         (data[9 /* X27 */] <0.13716167f ? 
                                            1.0f : 
                                            0.0f)))))) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7427395f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.55573744f ? 
                             (data[1 /* X12 */] <-0.32963985f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2689408f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6783993f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.19868886f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_75_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40989318f ? 
             (data[4 /* X18 */] <0.24043f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.8512504f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.39355728f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.16980071f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.71023124f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.7503148f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X5 */] <0.14007363f ? 
                     (data[9 /* X27 */] <-0.33968434f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46326977f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.6971987f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_76 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_76_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_76_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_76_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_76_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_76_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_76_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_76_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[2 /* X15 */] <0.19158599f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22131485f ? 
                 (data[6 /* X20 */] <-0.40507916f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.4345364f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4271518f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16967201f ? 
                 (data[3 /* X17 */] <-0.40546724f ? 
                     (data[7 /* X21 */] <0.29020092f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.6163991f ? 
                     (data[12 /* X35 */] <-0.86214346f ? 
                         (data[9 /* X27 */] <0.15832655f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14080943f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.15281639f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15019532f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07445221f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.109185115f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_76_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[9 /* X27 */] <-0.101162955f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25485766f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43343082f ? 
                     (data[3 /* X17 */] <-0.025264043f ? 
                         (data[8 /* X23 */] <0.14157104f ? 
                             (data[11 /* X34 */] <-0.266345f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.5772162f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.038330078f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.0580966f ? 
                 (data[3 /* X17 */] <-0.12785856f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.28231367f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.1418237f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_76_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39244378f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117127396f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.21757853f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36904764f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.3712627f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.011495974f ? 
                1.0f : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_76_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25488144f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4329528f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.6625157f ? 
            0.0f : 
             (data[2 /* X15 */] <0.17409165f ? 
                 (data[2 /* X15 */] <0.123157f ? 
                     (data[3 /* X17 */] <0.11957528f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14753474f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4659125f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16785504f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.18063122f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22198229f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_76_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29537702f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28688112f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26875f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.7787967f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f) : 
         (data[1 /* X12 */] <-0.5598667f ? 
             (data[2 /* X15 */] <0.13327152f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1980299f ? 
                     (data[6 /* X20 */] <0.42342418f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.043826662f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18325536f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.32617188f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.010945786f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.23725833f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[7 /* X21 */] <0.13021576f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.34910205f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[3 /* X17 */] <-0.2666629f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.21862188f ? 
                         (data[5 /* X19 */] <-0.3662379f ? 
                            0.0f : 
                            1.0f) : 
                         (data[1 /* X12 */] <-0.47790268f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_76_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27313766f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.58579f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.18473694f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3985613f ? 
             (data[2 /* X15 */] <0.13327152f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.053190585f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.16173099f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4506426f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3227058f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27096552f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5897436f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.55128205f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2736815f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.047155615f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_77 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_77_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_77_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_77_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_77_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_77_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_77_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_77_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09305851f ? 
             (data[7 /* X21 */] <0.0993118f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.11841626f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21943142f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1653196f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.121360585f ? 
                                 (data[0 /* X5 */] <0.09771107f ? 
                                    0.0f : 
                                     (data[11 /* X34 */] <-0.3175f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.5304499f ? 
                0.0f : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.11816201f ? 
             (data[6 /* X20 */] <-0.48539326f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.72148436f ? 
                     (data[4 /* X18 */] <-0.015307449f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.026465433f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.1550117f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2506777f ? 
                         (data[8 /* X23 */] <0.17389031f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16138865f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29233056f ? 
                                 (data[10 /* X28 */] <-0.16384746f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7959747f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.03891869f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_77_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (data[6 /* X20 */] <-0.39873856f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14650239f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031299014f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.340625f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30074653f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12445465f ? 
                                1.0f : 
                                 (data[5 /* X19 */] <0.24213655f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14173244f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8466311f ? 
                0.0f : 
                 (data[5 /* X19 */] <1.0149066f ? 
                    1.0f : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.1296059f ? 
             (data[6 /* X20 */] <-0.4388956f ? 
                 (data[11 /* X34 */] <0.3939453f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.21686555f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_77_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.17089589f ? 
            0.0f : 
             (data[0 /* X5 */] <0.1654752f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36819553f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <0.39186716f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.44487426f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_77_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[6 /* X20 */] <-0.052119832f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40989318f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.37167704f ? 
                     (data[10 /* X28 */] <-0.5781519f ? 
                         (data[5 /* X19 */] <0.46670178f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.0864205f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4224297f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_77_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5269871f ? 
             (data[2 /* X15 */] <0.16492794f ? 
                 (data[1 /* X12 */] <-0.31127274f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15298647f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X17 */] <-0.44264024f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.3141443f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.56364f ? 
                                 (data[7 /* X21 */] <0.12803857f ? 
                                    1.0f : 
                                     (data[5 /* X19 */] <0.247845f ? 
                                         (data[6 /* X20 */] <0.15883873f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f)) : 
                                1.0f)))) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7307381f ? 
                     (data[4 /* X18 */] <-0.28472257f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                            0.0f : 
                            1.0f) : 
                         (data[11 /* X34 */] <-0.48203126f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3089929f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[5 /* X19 */] <0.8475657f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4525513f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24947593f ? 
                 (data[10 /* X28 */] <0.21822938f ? 
                     (data[12 /* X35 */] <-0.74330384f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.09133788f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.12849441f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17798227f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.59255135f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97377056f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.60115f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17734376f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 114B, number of visited nodes = 28, static init size = 0B
}

class h2o_rf_10_Tree_77_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23375472f ? 
         (data[1 /* X12 */] <-0.7187282f ? 
             (data[7 /* X21 */] <0.17898725f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.18338835f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.25595108f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46326977f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.038927976f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40238217f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2503632f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[8 /* X23 */] <0.18351631f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.8410404f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2885803f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_78 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_78_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_78_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_78_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_78_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_78_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_78_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_78_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.067631654f ? 
             (data[5 /* X19 */] <0.12510383f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.67578125f ? 
                     (data[4 /* X18 */] <-0.22963867f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3036298f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09757522f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13048764f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.21803345f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.38626793f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14596348f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.039290022f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.21838313f ? 
                    1.0f : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.18483773f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_78_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[0 /* X5 */] <0.12563539f ? 
             (data[9 /* X27 */] <0.11085605f ? 
                 (data[1 /* X12 */] <-0.34234878f ? 
                    0.0f : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.57416147f ? 
                     (data[11 /* X34 */] <0.6346125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.17660281f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19724621f ? 
                     (data[4 /* X18 */] <-0.18557154f ? 
                         (data[6 /* X20 */] <-0.50652856f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.23323919f ? 
                     (data[5 /* X19 */] <0.047241263f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.0755824f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.55725324f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24252301f ? 
                            0.0f : 
                             (data[11 /* X34 */] <0.325f ? 
                                1.0f : 
                                0.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_78_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (data[10 /* X28 */] <-0.16975123f ? 
             (data[11 /* X34 */] <0.16542968f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.029513935f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.46424603f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0011241575f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[8 /* X23 */] <0.116271175f ? 
                 (data[6 /* X20 */] <-0.7009732f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7138672f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_78_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18152472f ? 
             (data[9 /* X27 */] <-0.107788555f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13598424f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[0 /* X5 */] <0.0942322f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.2436505f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16072829f ? 
                     (data[11 /* X34 */] <-0.920635f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.36604932f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042353373f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27357286f ? 
                             (data[1 /* X12 */] <-0.2504175f ? 
                                1.0f : 
                                 (data[6 /* X20 */] <0.092525765f ? 
                                    0.0f : 
                                     (data[8 /* X23 */] <0.20256914f ? 
                                        1.0f : 
                                         (data[3 /* X17 */] <-0.18941528f ? 
                                            0.0f : 
                                            1.0f)))) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_78_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29537702f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24537253f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.108789064f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19067383f ? 
             (data[1 /* X12 */] <-0.73828036f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.49609375f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.37506714f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X20 */] <7.183925E-4f ? 
                     (data[1 /* X12 */] <-0.41078132f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.55528826f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21052545f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15746447f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f))) : 
             (data[6 /* X20 */] <-0.03309807f ? 
                 (data[5 /* X19 */] <-0.016958524f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_78_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.83338284f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.29275802f ? 
             (data[5 /* X19 */] <-0.02443549f ? 
                 (data[9 /* X27 */] <-0.21924886f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26344824f ? 
                         (data[3 /* X17 */] <-0.24252301f ? 
                             (data[1 /* X12 */] <-0.4118713f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[4 /* X18 */] <-0.10845406f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[6 /* X20 */] <-0.3712627f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.4010053f ? 
                         (data[4 /* X18 */] <0.08984801f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.54101443f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_79 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_79_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_79_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_79_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_79_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_79_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_79_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_79_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[6 /* X20 */] <-0.4875068f ? 
             (data[3 /* X17 */] <-0.17010336f ? 
                 (data[4 /* X18 */] <-0.25910395f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.23101132f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
                    0.0f : 
                     (data[3 /* X17 */] <0.05638979f ? 
                        0.0f : 
                         (data[1 /* X12 */] <0.22466438f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[5 /* X19 */] <0.11762687f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13735843f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13515282f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2799684f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.785715f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3665294f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04281904f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.120185584f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
            0.0f : 
             (data[10 /* X28 */] <0.024239082f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29877788f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.38679767f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.78598195f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_79_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[6 /* X20 */] <-0.4875068f ? 
             (data[10 /* X28 */] <-0.43521163f ? 
                 (data[3 /* X17 */] <-0.013194101f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.7823648f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X17 */] <-0.031299014f ? 
                     (data[4 /* X18 */] <-0.06543029f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5613964f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3677189f ? 
                        1.0f : 
                         (data[1 /* X12 */] <0.26376873f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3256033f ? 
                 (data[5 /* X19 */] <0.1325808f ? 
                     (data[6 /* X20 */] <-0.39529493f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.22470294f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_79_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66625977f ? 
             (data[2 /* X15 */] <0.126607f ? 
                 (data[3 /* X17 */] <-0.35718748f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.43438324f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.63644415f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.47541118f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41563335f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3364823f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.27516517f ? 
                                 (data[2 /* X15 */] <0.36874503f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.21008113f ? 
                             (data[1 /* X12 */] <0.27914593f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18658762f ? 
                 (data[4 /* X18 */] <-0.17001408f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_79_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.60561025f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.20038128f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44029725f ? 
             (data[5 /* X19 */] <0.14753474f ? 
                 (data[4 /* X18 */] <-0.26819742f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.050006304f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.5965271f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.11997739f ? 
                                 (data[2 /* X15 */] <0.15459795f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_79_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12820688f ? 
            0.0f : 
             (data[2 /* X15 */] <0.13327152f ? 
                 (data[4 /* X18 */] <-0.20487534f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.30514008f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.22912186f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6751276f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1998735f ? 
                 (data[1 /* X12 */] <-0.6160793f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.03309807f ? 
                         (data[2 /* X15 */] <0.18658762f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.17947328f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[5 /* X19 */] <-0.020930657f ? 
                             (data[10 /* X28 */] <-0.021084249f ? 
                                1.0f : 
                                 (data[4 /* X18 */] <-0.27150244f ? 
                                     (data[9 /* X27 */] <-0.07187607f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            0.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.12402344f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.43537146f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.10772265f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.87571937f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_79_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.46780828f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.58579f ? 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.34558573f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <-0.38332987f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.744043f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_80 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_80_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_80_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_80_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_80_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_80_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_80_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_80_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (data[8 /* X23 */] <0.14202495f ? 
             (data[11 /* X34 */] <-0.28398436f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.024723327f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13652366f ? 
                         (data[6 /* X20 */] <-0.3036298f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.037021015f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16155386f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21523488f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4048328f ? 
                            1.0f : 
                            0.0f) : 
                         (data[9 /* X27 */] <-0.048158206f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21814577f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.021686578f ? 
             (data[5 /* X19 */] <0.18118109f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7519531f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16572157f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31015626f ? 
                         (data[12 /* X35 */] <-0.4502828f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.61519796f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[3 /* X17 */] <-0.40728042f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.24075416f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[8 /* X23 */] <0.16857941f ? 
                         (data[0 /* X5 */] <0.19526032f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_80_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[1 /* X12 */] <-0.42033315f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5120117f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8428926f ? 
                     (data[1 /* X12 */] <-0.30631533f ? 
                         (data[9 /* X27 */] <0.0060892897f ? 
                            1.0f : 
                             (data[12 /* X35 */] <-0.46249875f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.17721763f ? 
                                     (data[6 /* X20 */] <-0.47947538f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                         (data[6 /* X20 */] <-0.4388956f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20432661f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.73277634f ? 
                     (data[4 /* X18 */] <-0.39502954f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.36322245f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.23950553f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1889467f ? 
                 (data[10 /* X28 */] <-0.20482852f ? 
                     (data[5 /* X19 */] <-0.031912457f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26704374f ? 
                         (data[9 /* X27 */] <0.19036317f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.4318416f ? 
                                 (data[10 /* X28 */] <-0.0267266f ? 
                                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40968278f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[11 /* X34 */] <0.3939453f ? 
                     (data[4 /* X18 */] <-0.10845406f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_80_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[4 /* X18 */] <-0.07540372f ? 
            1.0f : 
             (data[0 /* X5 */] <0.103978015f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.15686889f ? 
                     (data[7 /* X21 */] <0.13416982f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_80_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.33852804f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.056931973f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[0 /* X5 */] <0.1025342f ? 
             (data[10 /* X28 */] <-0.052336037f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13465449f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.08879187f ? 
                        1.0f : 
                        0.0f))) : 
             (data[5 /* X19 */] <-0.71605486f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.0588422f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19426578f ? 
                         (data[0 /* X5 */] <0.15338872f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3167297f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.08979467f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.46f ? 
                                0.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.10387721f ? 
                                     (data[2 /* X15 */] <0.16205032f ? 
                                         (data[0 /* X5 */] <0.21841861f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                    0.0f))) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_80_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[8 /* X23 */] <0.14069721f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21298674f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.29794335f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.61057776f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9890856f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20045094f ? 
                     (data[9 /* X27 */] <0.057851296f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.3036298f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23967901f ? 
                                 (data[0 /* X5 */] <0.11026858f ? 
                                     (data[2 /* X15 */] <0.16526118f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[12 /* X35 */] <-0.1204525f ? 
                                        0.0f : 
                                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27035135f ? 
                                            1.0f : 
                                            0.0f))) : 
                                0.0f))) : 
                     (data[2 /* X15 */] <0.19658437f ? 
                         (data[12 /* X35 */] <-0.32812345f ? 
                             (data[5 /* X19 */] <0.036856435f ? 
                                0.0f : 
                                 (data[12 /* X35 */] <-0.68735534f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (data[11 /* X34 */] <-0.66484374f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07354382f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.37401146f ? 
                                     (data[6 /* X20 */] <-0.15483734f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)))) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2432922f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.050604872f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_80_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.43825373f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.52011716f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <0.9431405f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5117673f ? 
             (data[5 /* X19 */] <-0.06929729f ? 
                 (data[7 /* X21 */] <0.09433208f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.17250831f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19815706f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.21857727f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (data[9 /* X27 */] <-0.107788555f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_81 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_81_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_81_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_81_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_81_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_81_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_81_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_81_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.078023046f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09543539f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2262727f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.010930986f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.15483734f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.38596985f ? 
             (data[2 /* X15 */] <0.18825373f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.115334176f ? 
                     (data[6 /* X20 */] <-0.5234368f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.14997812f ? 
                             (data[8 /* X23 */] <0.15865502f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31269437f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22206944f ? 
                            0.0f : 
                             (data[10 /* X28 */] <0.06490385f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.11085605f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[4 /* X18 */] <0.038829494f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30010337f ? 
                     (data[7 /* X21 */] <0.13416982f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_81_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.123535156f ? 
             (data[12 /* X35 */] <-0.6297044f ? 
                 (data[3 /* X17 */] <-0.2908028f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.13518591f ? 
                 (data[4 /* X18 */] <-0.0864205f ? 
                     (data[6 /* X20 */] <-0.48962033f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.065079145f ? 
                     (data[8 /* X23 */] <0.15264674f ? 
                         (data[10 /* X28 */] <-0.15751934f ? 
                            0.0f : 
                             (data[12 /* X35 */] <-0.9022725f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19069414f ? 
             (data[3 /* X17 */] <-0.20933068f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.7400802f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.32701096f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4727121f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_81_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1540039f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.117127396f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.036844984f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2051122f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.34050918f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.23827685f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_81_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[11 /* X34 */] <-0.7733887f ? 
             (data[12 /* X35 */] <0.15669659f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.021655831f ? 
                     (data[4 /* X18 */] <-0.48302466f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15610895f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.343234f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.058229472f ? 
                     (data[7 /* X21 */] <0.19482282f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.6432312f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023484107f ? 
                                 (data[7 /* X21 */] <0.20605674f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_81_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.18283883f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24208984f ? 
             (data[1 /* X12 */] <-0.73828036f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.03508567f ? 
                    0.0f : 
                     (data[3 /* X17 */] <0.23272888f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.124979235f ? 
                     (data[9 /* X27 */] <-0.021655831f ? 
                         (data[6 /* X20 */] <-0.066914536f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.23045307f ? 
                         (data[8 /* X23 */] <0.10992245f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.26502344f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[1 /* X12 */] <-0.6302077f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.095257126f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.31260964f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.11818794f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14768611f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16784206f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3578617f ? 
                         (data[2 /* X15 */] <0.20687853f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[9 /* X27 */] <-0.072839014f ? 
                         (data[10 /* X28 */] <0.05486913f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[6 /* X20 */] <0.31352067f ? 
                     (data[9 /* X27 */] <-0.03379639f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_81_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.04294371f ? 
             (data[12 /* X35 */] <-0.36248076f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17379266f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.15833087f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11769062f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.30972296f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.5305193f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2204849f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09871099f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.16980071f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.29571897f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[10 /* X28 */] <0.46326977f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.049343903f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_82 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_82_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_82_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_82_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_82_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_82_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_82_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_82_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22832698f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.38926658f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.019134074f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                 (data[5 /* X19 */] <0.22816971f ? 
                     (data[5 /* X19 */] <0.09988129f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.100731f ? 
                            1.0f : 
                            0.0f) : 
                         (data[3 /* X17 */] <-0.2666629f ? 
                             (data[1 /* X12 */] <-0.25240877f ? 
                                1.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.581818f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04940393f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10735131f ? 
                             (data[11 /* X34 */] <-0.46375f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <-0.2290992f ? 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.251075f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.34184518f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.11947085f ? 
                 (data[0 /* X5 */] <0.103978015f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_82_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
        0.013333334f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27197665f ? 
             (data[12 /* X35 */] <-0.22505146f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10735131f ? 
                     (data[9 /* X27 */] <0.1171861f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                             (data[1 /* X12 */] <-0.34856248f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.52171147f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.042676542f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.3640309f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19069414f ? 
                 (data[5 /* X19 */] <-0.15098189f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16455467f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.34972498f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_82_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08807109f ? 
                 (data[9 /* X27 */] <0.2698703f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.2796875f ? 
                         (data[6 /* X20 */] <-0.16836393f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[10 /* X28 */] <-0.51178676f ? 
                 (data[4 /* X18 */] <0.019662965f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.828125f ? 
                         (data[6 /* X20 */] <-0.57416147f ? 
                             (data[2 /* X15 */] <0.20791404f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.15847015f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (data[8 /* X23 */] <0.18861283f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_82_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38538563f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43942252f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                 (data[9 /* X27 */] <-0.11441415f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.070823565f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.31086874f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16637918f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35991696f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7218913f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.415f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <-0.051010456f ? 
                                    0.0f : 
                                     (data[12 /* X35 */] <0.46986115f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (data[6 /* X20 */] <0.568779f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[3 /* X17 */] <-0.5563415f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[12 /* X35 */] <0.38750574f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16420552f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_82_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.10181228f ? 
        0.06896552f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20449848f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4888174f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2835613f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33617306f ? 
                             (data[12 /* X35 */] <-0.14393f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <-0.5786095f ? 
                                     (data[12 /* X35 */] <0.445184f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f) : 
                         (data[8 /* X23 */] <0.22699925f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.095257126f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.62182873f ? 
                     (data[12 /* X35 */] <-0.024571413f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07354382f ? 
                             (data[1 /* X12 */] <-0.3775427f ? 
                                0.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05810752f ? 
                                     (data[1 /* X12 */] <-0.11881394f ? 
                                         (data[0 /* X5 */] <0.16396892f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_82_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.023066927f ? 
         (data[12 /* X35 */] <-0.04562988f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.62663f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13705091f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.09172819f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2297206f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46582228f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_83 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_83_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_83_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_83_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_83_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_83_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_83_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_83_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.082023665f ? 
             (data[3 /* X17 */] <-0.39037982f ? 
                 (data[10 /* X28 */] <-0.20038128f ? 
                     (data[3 /* X17 */] <-0.5737277f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.5577318f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.118701145f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2165963f ? 
                     (data[2 /* X15 */] <0.11077966f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08984801f ? 
                             (data[11 /* X34 */] <0.4625f ? 
                                1.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.14959186f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.106235534f ? 
                     (data[9 /* X27 */] <0.1310222f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.423075f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (data[7 /* X21 */] <0.1449592f ? 
                 (data[10 /* X28 */] <-0.026810998f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16305077f ? 
                         (data[11 /* X34 */] <-0.46709442f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.18719351f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.26062793f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.8209097f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.08817047f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1640481f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.014029066f ? 
                             (data[0 /* X5 */] <0.14556016f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_10_Tree_83_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25408152f ? 
             (data[6 /* X20 */] <-0.32899213f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08549918f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.10422928f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (data[6 /* X20 */] <-0.59952384f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.524488f ? 
                     (data[2 /* X15 */] <0.19325212f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[9 /* X27 */] <0.13624938f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.089794844f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1493312f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_83_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61671436f ? 
             (data[8 /* X23 */] <0.11613433f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.03508567f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.20824727f ? 
                     (data[6 /* X20 */] <-0.62488616f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_83_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35991696f ? 
             (data[11 /* X34 */] <-0.775293f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19570744f ? 
                     (data[9 /* X27 */] <-0.32976022f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26279598f ? 
                     (data[9 /* X27 */] <-0.10781712f ? 
                         (data[11 /* X34 */] <-0.23613892f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[6 /* X20 */] <0.5408165f ? 
                         (data[10 /* X28 */] <0.05486913f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (data[6 /* X20 */] <-0.33744624f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.29805407f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_83_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1998735f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.87571937f ? 
                 (data[12 /* X35 */] <-0.19069414f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.06765106f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12034986f ? 
                             (data[9 /* X27 */] <0.02796946f ? 
                                 (data[11 /* X34 */] <-0.17125f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[6 /* X20 */] <0.1344868f ? 
                                0.0f : 
                                 (data[11 /* X34 */] <-0.3175f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.025f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26027626f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.6246639f ? 
                                     (Double.isNaN(data[10]) || data[10 /* X28 */] <1.009169f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37483293f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31987783f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42109376f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44927764f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.43970674f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27350378f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19105391f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.23717672f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.09453736f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11907601f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_83_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[7 /* X21 */] <0.18023218f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.21311733f ? 
                 (data[9 /* X27 */] <-0.287205f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42179072f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[9 /* X27 */] <0.08435367f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26417446f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04639666f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13645533f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X27 */] <-0.17901368f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.43610534f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17761305f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.37419742f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[11 /* X34 */] <-0.72578126f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_84 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_84_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_84_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_84_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_84_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_84_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_84_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_84_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11671665f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24558738f ? 
                 (data[9 /* X27 */] <0.074899994f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19164516f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.4727121f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13186191f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17083202f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
             (data[7 /* X21 */] <0.14163938f ? 
                 (data[10 /* X28 */] <-0.2718514f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.61925125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6185836f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4592905f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31667987f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
             (data[10 /* X28 */] <-0.17996123f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15064105f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.28589442f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_84_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[4 /* X18 */] <-0.36046296f ? 
             (data[6 /* X20 */] <-0.4388956f ? 
                1.0f : 
                0.0f) : 
             (data[12 /* X35 */] <-0.6897775f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                     (data[12 /* X35 */] <-0.97576386f ? 
                         (data[3 /* X17 */] <0.0712955f ? 
                             (data[1 /* X12 */] <0.43582788f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                     (data[9 /* X27 */] <0.03659696f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23050915f ? 
                             (data[4 /* X18 */] <0.03957474f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[1 /* X12 */] <-0.12727483f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.25430337f ? 
                                0.0f : 
                                 (data[2 /* X15 */] <0.27053905f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14624639f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_84_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (data[2 /* X15 */] <0.105363876f ? 
            1.0f : 
             (data[8 /* X23 */] <0.15596604f ? 
                 (data[2 /* X15 */] <0.1382458f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23997219f ? 
                         (data[9 /* X27 */] <0.40524772f ? 
                             (data[10 /* X28 */] <-0.2870881f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3257971f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.79378897f ? 
                        0.0f : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_84_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[4 /* X18 */] <-0.13048764f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.36629823f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055670146f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36406672f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.04901284f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.12891115f ? 
                         (data[2 /* X15 */] <0.25323272f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38158965f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5083917f ? 
                     (data[3 /* X17 */] <-0.5201317f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0291426f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19982088f ? 
                                1.0f : 
                                 (data[4 /* X18 */] <-0.27150244f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_84_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[4 /* X18 */] <-0.60696346f ? 
             (data[12 /* X35 */] <-0.6578695f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28688112f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.365986f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.011962781f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.15039062f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44832444f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.797717f ? 
                 (data[3 /* X17 */] <-0.5985863f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25323272f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0291426f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.27150244f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[0 /* X5 */] <0.17905688f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.014629265f ? 
                                 (data[2 /* X15 */] <0.26291174f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_84_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
        0.0091743115f : 
         (data[6 /* X20 */] <-0.03732513f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23695718f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5551599f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <0.45845377f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <0.00800016f ? 
                 (data[11 /* X34 */] <-0.4873047f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.4839219f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24656822f ? 
                         (data[1 /* X12 */] <-0.98757064f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5677675f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[1 /* X12 */] <-1.143988f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_85 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_85_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_85_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_85_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_85_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_85_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_85_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_85_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[3 /* X17 */] <-0.28778532f ? 
             (data[11 /* X34 */] <-0.34111327f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.4022494f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.7511778f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.5298801f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21932f ? 
                            1.0f : 
                             (data[4 /* X18 */] <0.045780882f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26217312f ? 
                 (data[1 /* X12 */] <-0.3227966f ? 
                     (data[9 /* X27 */] <0.097604856f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.14715835f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2698703f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18205082f ? 
                             (data[4 /* X18 */] <-0.59292805f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (data[9 /* X27 */] <0.011472139f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24656822f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06861829f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_85_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[3 /* X17 */] <-0.28024158f ? 
             (data[2 /* X15 */] <0.13422534f ? 
                 (data[12 /* X35 */] <-0.7422306f ? 
                     (data[4 /* X18 */] <-0.21862188f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43466857f ? 
                 (data[8 /* X23 */] <0.118125916f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53489405f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20927973f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.3044465f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[3 /* X17 */] <-0.25752375f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_85_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.052421417f ? 
             (data[3 /* X17 */] <-0.40702313f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.09757522f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.31269145f ? 
                         (data[1 /* X12 */] <0.54458326f ? 
                            1.0f : 
                            0.0f) : 
                         (data[6 /* X20 */] <-0.57662123f ? 
                             (data[1 /* X12 */] <0.306179f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_85_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15880258f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.615332f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <-0.21711086f ? 
             (data[10 /* X28 */] <-0.057441045f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X23 */] <0.12476453f ? 
                 (data[6 /* X20 */] <0.04298897f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.18899904f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.0864205f ? 
                     (data[0 /* X5 */] <0.11552861f ? 
                         (data[9 /* X27 */] <0.0807303f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.35341197f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.37985843f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6485351f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[9 /* X27 */] <0.1813272f ? 
                             (data[10 /* X28 */] <-0.08923877f ? 
                                0.0f : 
                                1.0f) : 
                             (data[2 /* X15 */] <0.15459795f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_85_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[2 /* X15 */] <0.13327152f ? 
             (data[1 /* X12 */] <-0.2788042f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2619799f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2794895f ? 
                 (data[6 /* X20 */] <-0.03309807f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.10975332f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.16646329f ? 
                             (data[2 /* X15 */] <0.1280477f ? 
                                0.0f : 
                                1.0f) : 
                             (data[8 /* X23 */] <0.12795703f ? 
                                 (data[4 /* X18 */] <-0.024726523f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.81160104f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13131596f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21268243f ? 
                             (data[2 /* X15 */] <0.120910935f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[1 /* X12 */] <-0.22503571f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13713856f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.32252133f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_85_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19349512f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.6991211f ? 
                1.0f : 
                0.0f)) : 
         (data[2 /* X15 */] <0.12327475f ? 
             (data[10 /* X28 */] <0.039554108f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38669464f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.23044433f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.7854977f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24302769f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5040396f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_86 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_86_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_86_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_86_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_86_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_86_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_86_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_86_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
        0.02020202f : 
         (data[9 /* X27 */] <0.18373758f ? 
             (data[10 /* X28 */] <-0.1595412f ? 
                 (data[0 /* X5 */] <0.13574216f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.26605174f ? 
                         (data[10 /* X28 */] <-0.5687764f ? 
                             (data[9 /* X27 */] <-0.18485582f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[4 /* X18 */] <-0.516075f ? 
                     (data[6 /* X20 */] <-0.24690549f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.25532836f ? 
                 (data[6 /* X20 */] <-0.38817093f ? 
                     (data[1 /* X12 */] <0.26815847f ? 
                        0.0f : 
                         (data[4 /* X18 */] <0.08984801f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45543894f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.607956f ? 
                         (data[5 /* X19 */] <0.38679767f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2666629f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.029156275f ? 
                                    1.0f : 
                                     (data[10 /* X28 */] <-0.32525557f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f)) : 
                         (data[4 /* X18 */] <-0.19658832f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_86_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39873856f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7176758f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.22466438f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.10086479f ? 
                         (data[3 /* X17 */] <-0.0011241575f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.38693118f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.23693246f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25489885f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.28120962f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_86_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[8 /* X23 */] <0.1479997f ? 
             (data[6 /* X20 */] <-0.18414225f ? 
                 (data[0 /* X5 */] <0.1328545f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45463577f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <0.061164092f ? 
            0.0f : 
             (data[1 /* X12 */] <0.11223935f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.009303029f ? 
                     (data[6 /* X20 */] <-0.40507916f ? 
                         (data[6 /* X20 */] <-0.43249884f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_86_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[6 /* X20 */] <0.0070589795f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25866273f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1624228f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4329528f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.343234f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[1 /* X12 */] <-0.6307434f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.102167785f ? 
                     (data[0 /* X5 */] <0.09762762f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.129907f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09656856f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_86_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29537702f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28688112f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15739952f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.74455035f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10772265f ? 
                 (data[4 /* X18 */] <-0.18557154f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                        1.0f : 
                         (data[6 /* X20 */] <0.2019269f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[3 /* X17 */] <-0.24252301f ? 
                         (data[1 /* X12 */] <-0.7811f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36525363f ? 
                                 (data[4 /* X18 */] <-0.033539947f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47830024f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5087913f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.48846152f ? 
                                0.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3309154f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.051829565f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_86_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
        0.0091743115f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7443509f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2794895f ? 
                 (data[1 /* X12 */] <-0.5378705f ? 
                     (data[4 /* X18 */] <0.078831226f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2515666f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.78912455f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.46924603f ? 
                            1.0f : 
                             (data[6 /* X20 */] <0.66559064f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_87 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_87_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_87_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_87_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_87_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_87_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_87_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_87_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (data[8 /* X23 */] <0.14202495f ? 
             (data[2 /* X15 */] <0.103744835f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.24208984f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.20027822f ? 
                     (data[0 /* X5 */] <0.16053052f ? 
                         (data[0 /* X5 */] <0.12100455f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1774426f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.90838045f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31737864f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1998735f ? 
                 (data[6 /* X20 */] <-0.8869638f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.44951442f ? 
                     (data[3 /* X17 */] <-0.50806177f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.10369991f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16836393f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.17447387f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.3810818f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.37109375f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.24999812f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20223194f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_87_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3182117f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.21494141f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.25234464f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0034839874f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.540345f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[3 /* X17 */] <0.2815228f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X20 */] <-0.23599684f ? 
                     (data[5 /* X19 */] <0.23725833f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.0011241575f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.17328158f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.04510757f ? 
             (data[5 /* X19 */] <0.23725833f ? 
                 (data[1 /* X12 */] <0.0754215f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.36030897f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.031299014f ? 
                 (data[11 /* X34 */] <0.340625f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.67485124f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <-0.114159085f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.33744624f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_87_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[2 /* X15 */] <0.22865734f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21235304f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.186276f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.07354382f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[2 /* X15 */] <0.23825552f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23064137f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_87_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[8 /* X23 */] <0.1244326f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.07402344f ? 
                 (data[10 /* X28 */] <-0.5577318f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14753474f ? 
                         (data[1 /* X12 */] <-0.36190096f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.29884872f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24505149f ? 
                                    0.0f : 
                                     (data[11 /* X34 */] <-0.39625f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08455033f ? 
                                     (data[5 /* X19 */] <-0.08435102f ? 
                                         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.14195809f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f))) : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_87_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6904426f ? 
             (data[11 /* X34 */] <-0.32587892f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.019229073f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.122898355f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.027903274f ? 
                             (data[6 /* X20 */] <-0.046624657f ? 
                                1.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.480954f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)) : 
                     (data[0 /* X5 */] <0.15595569f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24610813f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20018327f ? 
                                 (data[0 /* X5 */] <0.1893376f ? 
                                     (data[7 /* X21 */] <0.2662983f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f))) : 
                 (data[1 /* X12 */] <-0.4527123f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09027536f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08380469f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24505149f ? 
                                 (data[6 /* X20 */] <0.16980071f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[1 /* X12 */] <-0.07422218f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42490235f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.90739524f ? 
                    0.0f : 
                    1.0f))) : 
         (data[4 /* X18 */] <-0.16766927f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20042598f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.024239082f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.14478187f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_87_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[10 /* X28 */] <0.7261777f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20699401f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.08561376f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2100991f ? 
                1.0f : 
                 (data[1 /* X12 */] <-1.0672926f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.94064313f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[2 /* X15 */] <0.08245462f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.14527665f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.3886038f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5269922f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31269437f ? 
                            0.0f : 
                            1.0f) : 
                         (data[2 /* X15 */] <0.23375057f ? 
                             (data[0 /* X5 */] <0.17346133f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[5 /* X19 */] <-0.07718386f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.37429297f ? 
                             (data[0 /* X5 */] <0.12700976f ? 
                                 (data[1 /* X12 */] <-0.27515367f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}


class h2o_rf_10_Forest_88 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_88_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_88_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_88_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_88_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_88_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_88_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_88_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23334916f ? 
         (data[3 /* X17 */] <-0.28778532f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.058460418f ? 
                     (data[0 /* X5 */] <0.106003396f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.61472476f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21726353f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.24812698f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25595075f ? 
                 (data[10 /* X28 */] <-0.08807109f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.14285688f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.16328126f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27322626f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17654575f ? 
                     (data[4 /* X18 */] <-0.48302466f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.14095162f ? 
                             (data[4 /* X18 */] <-0.07118821f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.086082175f ? 
                                    0.0f : 
                                     (data[9 /* X27 */] <0.8900259f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6379727f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2202406f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24862143f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)))) : 
         (data[10 /* X28 */] <-0.50668174f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_88_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18230706f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.009277344f ? 
                 (data[8 /* X23 */] <0.08626055f ? 
                     (data[3 /* X17 */] <-0.089227f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.49954984f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21833368f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.014029066f ? 
                             (data[12 /* X35 */] <-0.85340875f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18926533f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)))) : 
             (data[1 /* X12 */] <-0.49387816f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.42441407f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.006548833f ? 
             (data[6 /* X20 */] <-0.48962033f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08345756f ? 
                 (data[0 /* X5 */] <0.115648784f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.27561665f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[6 /* X20 */] <-0.62488616f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_88_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38696757f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                 (data[6 /* X20 */] <-0.55725324f ? 
                     (data[8 /* X23 */] <0.13936949f ? 
                         (data[0 /* X5 */] <0.15129565f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.23101132f ? 
                     (data[5 /* X19 */] <0.08771901f ? 
                        0.0f : 
                        1.0f) : 
                     (data[11 /* X34 */] <0.46040305f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.19782877f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7755999f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_88_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[0 /* X5 */] <0.114445746f ? 
             (data[4 /* X18 */] <-0.0864205f ? 
                 (data[9 /* X27 */] <-0.074660584f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
                     (data[0 /* X5 */] <0.08994176f ? 
                         (data[2 /* X15 */] <0.2932198f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.9238281f ? 
                 (data[0 /* X5 */] <0.13986804f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37270513f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3895629f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.026810998f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3230754f ? 
                                 (data[10 /* X28 */] <-0.5332278f ? 
                                     (data[2 /* X15 */] <0.14393474f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                     (data[4 /* X18 */] <0.22204939f ? 
                        1.0f : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_88_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (data[0 /* X5 */] <0.14729275f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25732422f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.028436776f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23864943f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.24947593f ? 
                 (data[0 /* X5 */] <0.1653631f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.6039063f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25323272f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23099191f ? 
             (data[6 /* X20 */] <-0.16413687f ? 
                 (data[11 /* X34 */] <-0.46679688f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.19071417f ? 
                     (data[12 /* X35 */] <-0.67933166f ? 
                        0.0f : 
                         (data[9 /* X27 */] <-0.15416771f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.03492f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <0.0482586f ? 
                                     (data[2 /* X15 */] <0.16254549f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)))) : 
                     (data[2 /* X15 */] <0.10725969f ? 
                        1.0f : 
                        0.0f))) : 
             (data[10 /* X28 */] <0.7663547f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8714923f ? 
                     (data[10 /* X28 */] <0.95784146f ? 
                         (data[11 /* X34 */] <-0.6039063f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_88_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1610509f ? 
             (data[11 /* X34 */] <-0.7410156f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0656607f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30631107f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1340586f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.71054685f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44540223f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.87571937f ? 
                 (data[4 /* X18 */] <-0.030174049f ? 
                     (data[0 /* X5 */] <0.1881021f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_89 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_89_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_89_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_89_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_89_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_89_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_89_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_89_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4092539f ? 
            0.0f : 
             (data[7 /* X21 */] <0.20471579f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22587958f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.058470864f ? 
                 (data[6 /* X20 */] <-0.3628086f ? 
                     (data[7 /* X21 */] <0.087154284f ? 
                        1.0f : 
                        0.0f) : 
                     (data[5 /* X19 */] <-0.04686639f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.23203212f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1734162f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (data[0 /* X5 */] <0.16476837f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.14753474f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.5452968f ? 
                             (data[1 /* X12 */] <0.5113482f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
             (data[10 /* X28 */] <-0.20038128f ? 
                 (data[7 /* X21 */] <0.23823161f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.7770603f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_89_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[3 /* X17 */] <-0.32701263f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25949267f ? 
                 (data[2 /* X15 */] <0.13327152f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.11552861f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16073667f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.10542184f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                             (data[7 /* X21 */] <0.073704064f ? 
                                0.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15279397f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33894506f ? 
                                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1827231f ? 
                                            1.0f : 
                                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5033112f ? 
                                                1.0f : 
                                                0.0f)) : 
                                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.6035541f ? 
                                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2491705f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f)) : 
                                    1.0f)) : 
                            0.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_89_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.03862762f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06506025f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.091886565f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.9770951f ? 
             (data[1 /* X12 */] <0.44951442f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16421129f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.38913098f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1790534f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_89_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[3 /* X17 */] <-0.022246558f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.32487622f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15234613f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35991696f ? 
             (data[5 /* X19 */] <-0.05808184f ? 
                 (data[9 /* X27 */] <-0.23367484f ? 
                     (data[10 /* X28 */] <-0.059103366f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.066493675f ? 
                         (data[4 /* X18 */] <-0.34504932f ? 
                             (data[7 /* X21 */] <0.13831958f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[6 /* X20 */] <-0.27449915f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1821774f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.04516811f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2741497f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.3775427f ? 
                                0.0f : 
                                1.0f))))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.216541f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_89_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14931178f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24490209f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4415658f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10772265f ? 
                 (data[4 /* X18 */] <-0.18557154f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.6734375f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23725833f ? 
                             (data[6 /* X20 */] <-0.052708805f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <-0.026810998f ? 
                                     (data[8 /* X23 */] <0.17819504f ? 
                                        1.0f : 
                                         (data[8 /* X23 */] <0.19936475f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f)) : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97377056f ? 
                 (data[6 /* X20 */] <-0.2698133f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.071020946f ? 
                         (data[9 /* X27 */] <0.11224453f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_89_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.8027528f ? 
            0.0f : 
            1.0f) : 
         (data[12 /* X35 */] <0.27897993f ? 
             (data[2 /* X15 */] <0.12327475f ? 
                 (data[10 /* X28 */] <0.1569693f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3912292f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.32893547f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29707405f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.1070417f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42888457f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.29661244f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.40200967f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_90 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_90_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_90_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_90_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_90_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_90_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_90_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_90_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23334916f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08953091f ? 
             (data[1 /* X12 */] <-0.06373025f ? 
                 (data[6 /* X20 */] <-0.5318909f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09543539f ? 
                         (data[6 /* X20 */] <-0.2303296f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.045780882f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20735046f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3182117f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.575572f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.41881138f ? 
                            0.0f : 
                             (data[4 /* X18 */] <0.010527179f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[11 /* X34 */] <0.178645f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[11 /* X34 */] <0.3863175f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0017137533f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.13876954f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.77071965f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_90_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2555913f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.044659115f ? 
                 (data[6 /* X20 */] <-0.48962033f ? 
                     (data[3 /* X17 */] <-0.025264043f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13541473f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.52884376f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8204617f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.2908028f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.54245853f ? 
             (data[7 /* X21 */] <0.22613776f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.8090739f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_90_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23823757f ? 
                 (data[11 /* X34 */] <0.35585937f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16353798f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11188157f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.13667957f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3797168f ? 
                     (data[0 /* X5 */] <0.14355111f ? 
                         (data[11 /* X34 */] <0.159375f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[5 /* X19 */] <0.43165946f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_90_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[9 /* X27 */] <-0.12103974f ? 
             (data[6 /* X20 */] <-0.10495806f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.42782438f ? 
                     (data[9 /* X27 */] <-0.25898668f ? 
                         (data[9 /* X27 */] <-0.48309788f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.8209961f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.12753013f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14734253f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08525955f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.32290345f ? 
                         (data[3 /* X17 */] <-0.07354382f ? 
                             (data[7 /* X21 */] <0.21740994f ? 
                                 (data[7 /* X21 */] <0.1671865f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (data[0 /* X5 */] <0.1312831f ? 
                            0.0f : 
                            1.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_90_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.11852178f ? 
             (data[11 /* X34 */] <-0.42490235f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5083917f ? 
                     (data[10 /* X28 */] <-0.055310007f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.74973047f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32950065f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1794238f ? 
                         (data[11 /* X34 */] <-0.465625f ? 
                             (data[11 /* X34 */] <-0.8650539f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.1662504f ? 
             (data[11 /* X34 */] <-0.8209961f ? 
                1.0f : 
                0.0f) : 
             (data[6 /* X20 */] <-0.046724472f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2644531f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3296875f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4506426f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.02868318f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4665137f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (data[7 /* X21 */] <0.21809676f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_90_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.3084596f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
             (data[1 /* X12 */] <-1.0462272f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.11840071f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13273087f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21686555f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.12327475f ? 
                     (data[0 /* X5 */] <0.12494538f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.8828125f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.08634313f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.41715962f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0350307f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.59577626f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.504079f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4375f ? 
                                        0.0f : 
                                         (data[2 /* X15 */] <0.18643813f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f)) : 
                            1.0f) : 
                        1.0f)))) : 
        0.6666667f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_91 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_91_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_91_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_91_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_91_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_91_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_91_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_91_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13760918f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.058470864f ? 
                 (data[11 /* X34 */] <-0.23828125f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33091158f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25451222f ? 
                         (data[5 /* X19 */] <0.058433387f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2293537f ? 
                                0.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0921551f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[1 /* X12 */] <-0.46484652f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <-0.4705457f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1889467f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2492313f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11124282f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.48470834f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.16988532f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12891115f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.768694f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_91_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[12 /* X35 */] <-0.97518635f ? 
             (data[9 /* X27 */] <0.14570518f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                     (data[6 /* X20 */] <-0.7455885f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <0.009277344f ? 
                 (data[6 /* X20 */] <-0.6115445f ? 
                    1.0f : 
                     (data[1 /* X12 */] <-0.3032444f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X28 */] <-0.5168918f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26683095f ? 
             (data[6 /* X20 */] <-0.4392919f ? 
                 (data[0 /* X5 */] <0.12996686f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7569075f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_91_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
             (data[2 /* X15 */] <0.2424029f ? 
                 (data[3 /* X17 */] <-0.2063132f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37347928f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[2 /* X15 */] <0.10411428f ? 
                 (data[6 /* X20 */] <-0.23599684f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35209984f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.57416147f ? 
                         (data[10 /* X28 */] <0.05486913f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_91_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.16206303f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4171837f ? 
                 (data[6 /* X20 */] <-0.33278987f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.5745309f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.49345702f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26128018f ? 
                     (data[12 /* X35 */] <0.16051406f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.13253805f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36525363f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_91_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
        0.014285714f : 
         (data[8 /* X23 */] <0.13372667f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15487447f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.14596348f ? 
                     (data[8 /* X23 */] <0.10005125f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41728514f ? 
                 (data[5 /* X19 */] <0.102672935f ? 
                     (data[10 /* X28 */] <0.62663f ? 
                         (data[2 /* X15 */] <0.20661429f ? 
                            1.0f : 
                             (data[6 /* X20 */] <0.08322527f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.15183765f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.023747317f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[5 /* X19 */] <-0.016958524f ? 
                     (data[12 /* X35 */] <0.16071312f ? 
                         (data[3 /* X17 */] <-0.41908684f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.55177397f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_91_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7216837f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23074f ? 
                0.0f : 
                1.0f)) : 
         (data[1 /* X12 */] <-0.73828036f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18327516f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.20683888f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.6878901f ? 
                        1.0f : 
                        0.0f))) : 
             (data[6 /* X20 */] <-0.00261702f ? 
                 (data[8 /* X23 */] <0.14866357f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2017725f ? 
                     (data[5 /* X19 */] <-0.06182032f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.042080685f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.20099503f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[11 /* X34 */] <-0.28398436f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.2092275f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_92 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_92_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_92_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_92_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_92_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_92_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_92_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_92_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42492467f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.3675275f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31269437f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22172982f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.23268643f ? 
                 (data[3 /* X17 */] <-0.21838313f ? 
                     (data[6 /* X20 */] <-0.23599684f ? 
                         (data[10 /* X28 */] <-0.5168918f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30375406f ? 
                                 (data[0 /* X5 */] <0.14581534f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <-0.12727483f ? 
                                        1.0f : 
                                         (data[0 /* X5 */] <0.21939139f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.40507916f ? 
                         (data[0 /* X5 */] <0.11841997f ? 
                             (data[8 /* X23 */] <0.14308712f ? 
                                0.0f : 
                                1.0f) : 
                             (data[3 /* X17 */] <-0.15296811f ? 
                                 (data[1 /* X12 */] <0.43582788f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[7 /* X21 */] <0.17466556f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22806144f ? 
                                 (data[3 /* X17 */] <-0.10601223f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.67548f ? 
                 (data[10 /* X28 */] <-0.16975123f ? 
                     (data[6 /* X20 */] <-0.50652856f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.11749873f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_92_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42533565f ? 
             (data[12 /* X35 */] <-0.70605403f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26656175f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0011241575f ? 
                     (data[4 /* X18 */] <-0.50842994f ? 
                         (data[7 /* X21 */] <0.14412925f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[5 /* X19 */] <0.2798769f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[10 /* X28 */] <-0.20038128f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.48962033f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[0 /* X5 */] <0.11805531f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22578064f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.11749873f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.32399514f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.464258f ? 
                     (data[10 /* X28 */] <-0.5168918f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2671662f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.13496396f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.26339594f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_92_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35875905f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.6144345f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.056797665f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[2 /* X15 */] <0.15743037f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20586108f ? 
                 (data[11 /* X34 */] <0.43557206f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.009961757f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[7 /* X21 */] <0.13513899f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.90838045f ? 
                     (data[7 /* X21 */] <0.18947272f ? 
                         (data[4 /* X18 */] <-0.2652245f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_92_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[4 /* X18 */] <-0.1470128f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16924328f ? 
                 (data[3 /* X17 */] <-0.3330476f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.119942494f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36946142f ? 
             (data[2 /* X15 */] <0.16338317f ? 
                 (data[3 /* X17 */] <-0.78567046f ? 
                     (data[1 /* X12 */] <-0.3032444f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05144309f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.15110175f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3487424f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_92_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[4 /* X18 */] <-0.1442586f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5137695f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.30088195f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.35788456f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21882498f ? 
                 (data[10 /* X28 */] <-0.10849113f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.7615888f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.75936025f ? 
                     (data[3 /* X17 */] <-0.68911093f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22795446f ? 
             (data[11 /* X34 */] <-0.24026366f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2063132f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.2103593f ? 
                 (data[9 /* X27 */] <-0.038219705f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_92_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[4 /* X18 */] <-0.06851823f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.049447365f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.3752924f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.5245299f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.98139584f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16425768f ? 
             (data[2 /* X15 */] <0.123891264f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.025828201f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.49746895f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49389982f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.35579124f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.15251452f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_93 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_93_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_93_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_93_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_93_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_93_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_93_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_93_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[3 /* X17 */] <-0.3043815f ? 
             (data[2 /* X15 */] <0.13243845f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.035497602f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.28398436f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21540004f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2698703f ? 
                 (data[5 /* X19 */] <-0.16517624f ? 
                     (data[7 /* X21 */] <0.10506762f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <0.053243622f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.5374992f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[10 /* X28 */] <-0.011495974f ? 
             (data[11 /* X34 */] <-0.42490235f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.35461897f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15651576f ? 
                         (data[1 /* X12 */] <-0.19842301f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.40487877f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
             (data[7 /* X21 */] <0.09267218f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.080876835f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.28398436f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.14733584f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6927469f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_93_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[3 /* X17 */] <-0.27571535f ? 
            0.0f : 
             (data[2 /* X15 */] <0.1590965f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.53553635f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23124512f ? 
                         (data[6 /* X20 */] <-0.4388956f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29637268f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.037402675f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.48962033f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                 (data[2 /* X15 */] <0.21350569f ? 
                     (data[0 /* X5 */] <0.18771982f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.08771901f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.2079287f ? 
                 (data[6 /* X20 */] <-0.39926586f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_93_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[0 /* X5 */] <0.104338974f ? 
            1.0f : 
             (data[2 /* X15 */] <0.21324566f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11738996f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.55717224f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_93_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[7 /* X21 */] <0.1395645f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.097437285f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.26414007f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0028319214f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6415166f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.34998372f ? 
                    0.0f : 
                    1.0f)) : 
             (data[7 /* X21 */] <0.19475636f ? 
                 (data[1 /* X12 */] <-0.27391616f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3655714f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <-0.6375467f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3728645f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.4423075f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_93_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[0 /* X5 */] <0.10469993f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18318437f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.6876953f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45446005f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2517863f ? 
                     (data[1 /* X12 */] <-0.8448824f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20231432f ? 
                             (data[9 /* X27 */] <-0.18206188f ? 
                                1.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.16368547f ? 
                                    0.0f : 
                                     (data[12 /* X35 */] <0.16205505f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.113486186f ? 
                                 (data[11 /* X34 */] <-0.615385f ? 
                                    0.0f : 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.45035437f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f))) : 
                     (data[3 /* X17 */] <-0.49599183f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.6666658f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[3 /* X17 */] <-0.35718748f ? 
                     (data[1 /* X12 */] <-0.3542252f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.029411765f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_93_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[0 /* X5 */] <0.18230549f ? 
            1.0f : 
             (data[2 /* X15 */] <0.124107815f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.39529678f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
             (data[9 /* X27 */] <-0.038219817f ? 
                 (data[2 /* X15 */] <0.13488588f ? 
                     (data[1 /* X12 */] <-0.2589465f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.6267578f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_94 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_94_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_94_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_94_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_94_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_94_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_94_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_94_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.058470864f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25620916f ? 
                     (data[6 /* X20 */] <-0.40507916f ? 
                        0.0f : 
                         (data[9 /* X27 */] <-0.1306493f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21372202f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.13504188f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17598584f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29637268f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[12 /* X35 */] <-0.60107327f ? 
             (data[3 /* X17 */] <-0.2938203f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_94_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
             (data[0 /* X5 */] <0.1251509f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2244181f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.043285735f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X17 */] <-0.2908028f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.089093f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.54326653f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.38260853f ? 
                                1.0f : 
                                 (data[9 /* X27 */] <0.49328285f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)))) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.49384737f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_94_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.19018555f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.029513935f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.013194101f ? 
                     (data[7 /* X21 */] <0.17068774f ? 
                        1.0f : 
                         (data[11 /* X34 */] <0.49038345f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.57416147f ? 
             (data[3 /* X17 */] <-0.02828153f ? 
                 (data[10 /* X28 */] <0.08021434f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_94_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24150227f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0588422f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.024643954f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.16061307f ? 
                        1.0f : 
                        0.0f))) : 
             (data[1 /* X12 */] <-0.08817047f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02396721f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.36309093f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <0.20801938f ? 
                 (data[11 /* X34 */] <-0.68007815f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.43648514f ? 
                         (data[12 /* X35 */] <0.11739094f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.081503905f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[9 /* X27 */] <-0.3860635f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_94_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.32466573f ? 
             (data[1 /* X12 */] <-0.25436398f ? 
                 (data[9 /* X27 */] <-0.23367484f ? 
                     (data[12 /* X35 */] <0.076290905f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X35 */] <-0.14103706f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.14245087f ? 
                             (data[11 /* X34 */] <-0.815385f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[11 /* X34 */] <-0.50961643f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.68967915f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.14527713f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (data[10 /* X28 */] <0.019134074f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.086896405f ? 
                     (data[3 /* X17 */] <-0.40650392f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.13876954f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.06447689f ? 
                     (data[6 /* X20 */] <0.17792243f ? 
                         (data[5 /* X19 */] <-0.031912457f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.21280532f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.15173277f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.949656f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97377056f ? 
                 (data[10 /* X28 */] <-0.0562718f ? 
                     (data[5 /* X19 */] <0.25221226f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_94_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.21137203f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06755935f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.022188166f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X34 */] <-0.76923126f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.66013944f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_95 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_95_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_95_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_95_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_95_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_95_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_95_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_95_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[9 /* X27 */] <0.13238923f ? 
             (data[10 /* X28 */] <-0.25653636f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.62676674f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.065079145f ? 
                 (data[0 /* X5 */] <0.13429832f ? 
                     (data[3 /* X17 */] <-0.78567046f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X17 */] <-0.2908028f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                             (data[10 /* X28 */] <-0.28453544f ? 
                                 (data[2 /* X15 */] <0.25979465f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.42933494f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.76961833f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
         (data[12 /* X35 */] <0.11559622f ? 
             (data[3 /* X17 */] <-0.46581697f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-1.8566762E-4f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_95_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[9 /* X27 */] <0.061164092f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.30162475f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.14246933f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.48539326f ? 
                 (data[12 /* X35 */] <-0.97602147f ? 
                     (data[9 /* X27 */] <0.18640609f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.13423526f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34958187f ? 
                     (data[8 /* X23 */] <0.11129967f ? 
                         (data[4 /* X18 */] <-0.4389575f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.010945786f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_95_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[2 /* X15 */] <0.1486832f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07786108f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.05399263f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_95_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
        0.020833334f : 
         (data[9 /* X27 */] <-0.21711086f ? 
             (data[10 /* X28 */] <0.008924059f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.775293f ? 
                 (data[3 /* X17 */] <-0.043368958f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19927041f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.28765932f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X12 */] <-0.4987662f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14443836f ? 
                     (data[3 /* X17 */] <-0.7615306f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06533817f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5131877f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_95_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29537702f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12609334f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.12286531f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20036186f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.18876953f ? 
                 (data[9 /* X27 */] <0.049799535f ? 
                     (data[4 /* X18 */] <-0.59319246f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16509508f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.18658762f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[11 /* X34 */] <-0.8183594f ? 
                         (data[5 /* X19 */] <0.20735046f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.010527179f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[1 /* X12 */] <-0.24458788f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.078297704f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11957528f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2694521f ? 
                 (data[10 /* X28 */] <0.50501716f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.35494196f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.19108813f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.16750628f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_95_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18200576f ? 
             (data[10 /* X28 */] <0.14165427f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0452406f ? 
                 (data[12 /* X35 */] <0.47354746f ? 
                     (data[3 /* X17 */] <-0.19424325f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42753473f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3458867f ? 
                 (data[9 /* X27 */] <-0.037539493f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.06888147f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.48944837f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_96 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_96_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_96_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_96_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_96_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_96_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_96_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_96_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[0 /* X5 */] <0.0819597f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.1595412f ? 
                 (data[0 /* X5 */] <0.16572447f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.265625f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.20548353f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15822491f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.219564f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (data[10 /* X28 */] <-0.100032404f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10185841f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.46925366f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23686367f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.54981595f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.29352072f ? 
                         (data[1 /* X12 */] <0.11560846f ? 
                             (data[11 /* X34 */] <-0.28798124f ? 
                                 (data[10 /* X28 */] <-0.15749921f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[7 /* X21 */] <0.140204f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <0.33478796f ? 
                                     (data[11 /* X34 */] <0.23047875f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f))) : 
                        0.0f) : 
                     (data[0 /* X5 */] <0.10109037f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_96_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24745835f ? 
            0.0f : 
             (data[0 /* X5 */] <0.12768179f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.10365741f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.39451152f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20841113f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18491957f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.026810998f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.3425066f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1640481f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.054792296f ? 
                        1.0f : 
                        0.0f))) : 
             (data[12 /* X35 */] <-0.22505146f ? 
                 (data[3 /* X17 */] <-0.16756324f ? 
                     (data[0 /* X5 */] <0.12936404f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_96_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35388145f ? 
             (data[4 /* X18 */] <-0.43344912f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.16600785f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.011495974f ? 
                 (data[12 /* X35 */] <-0.5800772f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16845593f ? 
                         (data[3 /* X17 */] <-0.38736233f ? 
                             (data[7 /* X21 */] <0.20647924f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.5933142f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_96_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35991696f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.045779243f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.63563144f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.04516811f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.30723062f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13577595f ? 
                                 (data[7 /* X21 */] <0.12175361f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.30913422f ? 
                             (data[11 /* X34 */] <-0.3175f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.2729298f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23058905f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            0.0f)))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.83083034f ? 
                 (data[12 /* X35 */] <0.122339256f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22749503f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_96_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.14484635f ? 
         (data[7 /* X21 */] <0.10470649f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16314365f ? 
                 (data[5 /* X19 */] <0.0045848466f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23686367f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.08476853f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21688025f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[6 /* X20 */] <-0.1599098f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.75222355f ? 
                 (data[7 /* X21 */] <0.123605564f ? 
                     (data[0 /* X5 */] <0.14091192f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[4 /* X18 */] <-0.05266514f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.051097285f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24040376f ? 
                         (data[11 /* X34 */] <-0.5125f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.23224303f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3296875f ? 
                     (data[9 /* X27 */] <-0.101162955f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.20282444f ? 
                             (data[1 /* X12 */] <-0.9406454f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_96_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.30972296f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.51431984f ? 
                 (data[7 /* X21 */] <0.094682194f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.092634924f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.06438694f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18083349f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[0 /* X5 */] <0.15332837f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.03508567f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.034090787f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.7871608f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.44771206f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3611696f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_97 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_97_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_97_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_97_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_97_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_97_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_97_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_97_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33279032f ? 
            0.0f : 
             (data[0 /* X5 */] <0.06427285f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.4875068f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25949267f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.30655196f ? 
                     (data[6 /* X20 */] <-0.78620785f ? 
                         (data[0 /* X5 */] <0.13390847f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[3 /* X17 */] <-0.14596348f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09782947f ? 
                 (data[9 /* X27 */] <0.08435367f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.73868775f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5922623f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.41446528f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <-0.24190806f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4316566f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            0.0f))) : 
                 (data[8 /* X23 */] <0.18052892f ? 
                     (data[5 /* X19 */] <0.029720554f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_97_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[6 /* X20 */] <-0.52977735f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.612254f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3626286f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.30140108f ? 
                 (data[5 /* X19 */] <0.012949341f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.4875068f ? 
             (data[6 /* X20 */] <-0.78620785f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.8714362f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1471276f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.79644763f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_97_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[7 /* X21 */] <0.1466191f ? 
             (data[12 /* X35 */] <-0.6144345f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32698193f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18982299f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.41353327f ? 
             (data[7 /* X21 */] <0.08935236f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.053954158f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.9527702f ? 
                     (data[5 /* X19 */] <0.40603697f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_97_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1824223f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.040452868f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.104230456f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16648178f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.20027822f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0049454505f ? 
             (data[3 /* X17 */] <-0.8188628f ? 
                 (data[5 /* X19 */] <0.36564958f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.6307434f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.21838313f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.026018415f ? 
                        1.0f : 
                         (data[12 /* X35 */] <0.27914843f ? 
                            0.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3820304f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_97_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26406255f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.74458855f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.67768013f ? 
                     (data[0 /* X5 */] <0.08563783f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.17506526f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                                 (data[7 /* X21 */] <0.2300634f ? 
                                     (data[5 /* X19 */] <0.42758888f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24558501f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21908756f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.14406696f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23301333f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.096503936f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2000751f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.19612074f ? 
                     (data[4 /* X18 */] <-0.18557154f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1632265f ? 
                 (data[7 /* X21 */] <0.17898725f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.072651275f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_97_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[2 /* X15 */] <0.08995219f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2637393f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.076774254f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51172227f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2661323f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.9900079f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.49387816f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_98 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_98_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_98_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_98_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_98_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_98_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_98_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_98_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[5 /* X19 */] <0.15314247f ? 
             (data[12 /* X35 */] <-0.67551416f ? 
                 (data[1 /* X12 */] <-0.3032444f ? 
                     (data[12 /* X35 */] <-0.8428272f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.03134892f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.04906611f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20720565f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18479693f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14718969f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10646057f ? 
                         (data[9 /* X27 */] <0.23317918f ? 
                             (data[5 /* X19 */] <0.39100346f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[3 /* X17 */] <-0.41228858f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.151542f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.078831226f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.16566606f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[5 /* X19 */] <0.21260771f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.052558437f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.60107327f ? 
             (data[1 /* X12 */] <-0.16149114f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_98_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[6 /* X20 */] <-0.7496752f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.95037276f ? 
                 (data[2 /* X15 */] <0.22490855f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17339288f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25399265f ? 
                1.0f : 
                 (data[1 /* X12 */] <0.25637484f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.2555913f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26572868f ? 
                 (data[7 /* X21 */] <0.116007775f ? 
                     (data[7 /* X21 */] <0.08620312f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5234375f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.14753474f ? 
                             (data[12 /* X35 */] <-0.9069489f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (data[1 /* X12 */] <-0.034014724f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_98_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33819738f ? 
             (data[8 /* X23 */] <0.09887393f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.32242528f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.08006381f ? 
                        0.0f : 
                        1.0f))) : 
             (data[1 /* X12 */] <0.024254555f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.51056564f ? 
                    1.0f : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.61252576f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10735131f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.023052042f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.64885145f ? 
                         (data[2 /* X15 */] <0.21603079f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_98_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[3 /* X17 */] <-0.78567046f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.36284694f ? 
                 (data[1 /* X12 */] <-0.3032444f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-1.0071229f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.17613833f ? 
             (data[1 /* X12 */] <-0.5525347f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.24122134f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.1422023f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.42836937f ? 
                            0.0f : 
                             (data[4 /* X18 */] <0.11628828f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[1 /* X12 */] <-0.45966184f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29707405f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.5961881f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.39427462f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0582826f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.03134892f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3090048f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_98_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
        0.014285714f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (data[12 /* X35 */] <-0.11784886f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28081918f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.08807109f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.21862188f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17903417f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.02119552f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[11 /* X34 */] <-0.5125f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.17010336f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27172562f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3892844f ? 
                                    1.0f : 
                                     (data[4 /* X18 */] <-0.01875567f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            0.0f)))) : 
             (data[1 /* X12 */] <-0.3227966f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5155152f ? 
                     (data[7 /* X21 */] <0.2412094f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_98_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27336362f ? 
            0.0f : 
             (data[12 /* X35 */] <0.18723643f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23583902f ? 
            1.0f : 
             (data[7 /* X21 */] <0.2876522f ? 
                 (data[1 /* X12 */] <-0.9085359f ? 
                     (data[4 /* X18 */] <0.24408296f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_99 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_99_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_99_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_99_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_99_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_99_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_99_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_99_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[10 /* X28 */] <-0.09828111f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10637318f ? 
                 (data[2 /* X15 */] <0.13660377f ? 
                     (data[2 /* X15 */] <0.12208527f ? 
                         (data[1 /* X12 */] <-0.3227966f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                         (data[4 /* X18 */] <-0.18400353f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14999583f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.34737378f ? 
                                0.0f : 
                                 (data[7 /* X21 */] <0.13225843f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22132847f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.17978014f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (data[9 /* X27 */] <0.1671736f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.21359903f ? 
                     (data[7 /* X21 */] <0.13280487f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.31321332f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10569987f ? 
                 (data[6 /* X20 */] <-0.4811662f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.02686629f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.27013126f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5840611f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_99_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1904862f ? 
             (data[6 /* X20 */] <-0.3839439f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5189975f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1009717f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[6 /* X20 */] <-0.2365768f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14475666f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.46848503f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.023747317f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.43489254f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.12197949f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0091333315f ? 
                 (data[1 /* X12 */] <0.20252974f ? 
                     (data[4 /* X18 */] <-0.07540372f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_99_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[10 /* X28 */] <-0.43521163f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22629456f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.07540372f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_99_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.14473087f ? 
         (data[0 /* X5 */] <0.09278838f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.041552186f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.37167704f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.06813497f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.36015624f ? 
                             (data[11 /* X34 */] <-0.51677734f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[2 /* X15 */] <0.15992956f ? 
                             (data[7 /* X21 */] <0.3036221f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.8486979f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09794072f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19158599f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.565368f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_99_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19525686f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11434453f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14395751f ? 
                     (data[11 /* X34 */] <-0.42109376f ? 
                         (data[7 /* X21 */] <0.21716508f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.2588342f ? 
                    1.0f : 
                     (data[12 /* X35 */] <0.20821634f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3191212f ? 
                             (data[5 /* X19 */] <-0.13958077f ? 
                                 (data[11 /* X34 */] <-0.26875f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10837184f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2818026f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <0.3576827f ? 
                                    1.0f : 
                                     (data[2 /* X15 */] <0.116649106f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f)))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
                 (data[6 /* X20 */] <0.21582909f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26032263f ? 
                        0.0f : 
                         (data[4 /* X18 */] <0.08984801f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.5125f ? 
             (data[4 /* X18 */] <-0.15802959f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_99_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[10 /* X28 */] <0.4709273f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.28672156f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.0323139f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2516244f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20861763f ? 
                 (data[2 /* X15 */] <0.083287686f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <0.21594264f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2448022f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.20658115f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_100 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_100_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_100_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_100_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_100_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_100_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_100_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_100_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11816201f ? 
             (data[3 /* X17 */] <-0.40244976f ? 
                 (data[9 /* X27 */] <-0.022071049f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29655203f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.35435447f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4605405f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2556749f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4625f ? 
                                    0.0f : 
                                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.219564f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            1.0f) : 
                         (data[7 /* X21 */] <0.14412925f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.45524293f ? 
                                 (data[2 /* X15 */] <0.14358573f ? 
                                    1.0f : 
                                     (data[9 /* X27 */] <0.34537134f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f))) : 
                     (data[10 /* X28 */] <-0.10001601f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35109943f ? 
                             (data[5 /* X19 */] <-0.12498454f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[0 /* X5 */] <0.1501804f ? 
                             (data[9 /* X27 */] <0.25853527f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4605957f ? 
             (data[10 /* X28 */] <0.042055234f ? 
                 (data[12 /* X35 */] <-0.43501288f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.4145197f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_100_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22696021f ? 
             (data[3 /* X17 */] <-0.2908028f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16103953f ? 
                     (data[9 /* X27 */] <-0.124878526f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.18667755f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.53358173f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.68182f ? 
                                     (data[9 /* X27 */] <0.29997882f ? 
                                         (data[7 /* X21 */] <0.1320638f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.16542968f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3066594f ? 
                 (data[8 /* X23 */] <0.15264674f ? 
                     (data[9 /* X27 */] <0.124107234f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_100_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5800772f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33819738f ? 
                 (data[8 /* X23 */] <0.09953779f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.79659986f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.7438701f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[2 /* X15 */] <0.13160539f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7176758f ? 
             (data[10 /* X28 */] <-0.03715218f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41563335f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.40507916f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.086418785f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_100_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.38538563f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.48315835f ? 
             (data[5 /* X19 */] <-0.65623915f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.7786341f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35991696f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.37628433f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.022725f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <0.10387721f ? 
                                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0018753519f ? 
                                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.061588027f ? 
                                            0.0f : 
                                             (data[9 /* X27 */] <-0.010755525f ? 
                                                0.0f : 
                                                1.0f)) : 
                                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.73453754f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    0.0f)) : 
                             (data[5 /* X19 */] <0.2681943f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4048328f ? 
                             (data[12 /* X35 */] <0.21253723f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_100_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15860532f ? 
             (data[1 /* X12 */] <-0.4547738f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13993603f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.094839595f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19293663f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5398449f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28212014f ? 
                     (data[6 /* X20 */] <7.183925E-4f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22908501f ? 
                             (data[9 /* X27 */] <-0.19707878f ? 
                                 (data[2 /* X15 */] <0.22492139f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.32587892f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97817034f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4888174f ? 
                     (data[9 /* X27 */] <-0.101162955f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.26611653f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.5215834f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.09143965f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23441254f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15484947f ? 
                             (data[11 /* X34 */] <0.024987785f ? 
                                 (data[1 /* X12 */] <-0.3775427f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_100_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[9 /* X27 */] <-0.038219817f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.0879897f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.13327152f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.385114f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.15251933f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25115007f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.46972656f ? 
                1.0f : 
                 (data[5 /* X19 */] <0.027903274f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <0.17087254f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.9644876f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_101 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_101_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_101_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_101_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_101_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_101_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_101_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_101_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3273754f ? 
             (data[12 /* X35 */] <-0.3548458f ? 
                 (data[8 /* X23 */] <0.16592397f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.37774974f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.4811662f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21833046f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.031299014f ? 
                     (data[5 /* X19 */] <-0.15154392f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.062306054f ? 
                 (data[9 /* X27 */] <-0.018222762f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12690349f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0957092f ? 
                             (data[6 /* X20 */] <-0.39653754f ? 
                                 (data[10 /* X28 */] <0.006646463f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0396697f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.528571f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.59905887f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_101_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28988755f ? 
             (data[4 /* X18 */] <-0.50680983f ? 
                 (data[8 /* X23 */] <0.14069721f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31293666f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.46848503f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08807109f ? 
                     (data[5 /* X19 */] <0.012949341f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2555087f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2743791f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.009590421f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.2671662f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_101_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[7 /* X21 */] <0.1466191f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14485383f ? 
                 (data[12 /* X35 */] <-0.61221534f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06765106f ? 
                        0.0f : 
                         (data[1 /* X12 */] <0.30287308f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.09887393f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41232055f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11396246f ? 
                     (data[7 /* X21 */] <0.1640481f ? 
                         (data[1 /* X12 */] <0.18556002f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[9 /* X27 */] <0.13067521f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.076827124f ? 
                             (data[4 /* X18 */] <-0.046272635f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17876713f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_101_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18283883f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.048849903f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15234613f ? 
                1.0f : 
                 (data[4 /* X18 */] <0.0029844083f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.050006304f ? 
            0.0f : 
             (data[7 /* X21 */] <0.17068774f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4478934f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4224297f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.25026017f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06838501f ? 
                                 (data[1 /* X12 */] <-0.25240877f ? 
                                    1.0f : 
                                     (data[1 /* X12 */] <-0.22289795f ? 
                                        1.0f : 
                                         (data[12 /* X35 */] <-0.146646f ? 
                                            1.0f : 
                                            0.0f))) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_101_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[4 /* X18 */] <-0.1442586f ? 
             (data[12 /* X35 */] <-0.34721085f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.06803499f ? 
                    0.0f : 
                    1.0f)) : 
             (data[2 /* X15 */] <0.086048126f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.252226f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2832255f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42109376f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.15018244f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5880719f ? 
                             (data[0 /* X5 */] <0.12006087f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[7 /* X21 */] <0.25742957f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.096503936f ? 
            0.0f : 
             (data[12 /* X35 */] <0.114704296f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.024239082f ? 
                     (data[1 /* X12 */] <-0.3227966f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_101_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[4 /* X18 */] <-0.071272425f ? 
            0.0f : 
             (data[12 /* X35 */] <1.7988282E-4f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6637095f ? 
                     (data[10 /* X28 */] <0.6674701f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16637918f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.223348f ? 
             (data[2 /* X15 */] <0.12327475f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11963018f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7216837f ? 
                 (data[3 /* X17 */] <-0.677041f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.66484374f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_102 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_102_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_102_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_102_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_102_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_102_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_102_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_102_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[4 /* X18 */] <-0.3287897f ? 
             (data[7 /* X21 */] <0.15242878f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.81995714f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36986166f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.08435367f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.3149427f ? 
                         (data[5 /* X19 */] <0.10896008f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18867026f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17523018f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.45195845f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.31616163f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.29020092f ? 
                         (data[10 /* X28 */] <-0.14909405f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4937595f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.044316117f ? 
                                    1.0f : 
                                     (data[6 /* X20 */] <-0.27875414f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_102_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (data[12 /* X35 */] <-0.23268643f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                 (data[5 /* X19 */] <0.2223044f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.40507916f ? 
                         (data[6 /* X20 */] <-0.77095205f ? 
                             (data[3 /* X17 */] <0.0037038198f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21838313f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21487512f ? 
                             (data[6 /* X20 */] <-0.53358173f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36347657f ? 
                     (data[11 /* X34 */] <-0.619345f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.285537f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2661671f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.11396246f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35298988f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.27322626f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_102_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (data[12 /* X35 */] <-0.74995506f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04940393f ? 
                 (data[2 /* X15 */] <0.13660377f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24239117f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.67578125f ? 
                             (data[9 /* X27 */] <0.10721343f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <0.29752168f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.43485028f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.16627471f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_102_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.12269614f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.37077594f ? 
             (data[1 /* X12 */] <-0.23969984f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1578125f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7756897f ? 
             (data[8 /* X23 */] <0.08493283f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28212014f ? 
                     (data[11 /* X34 */] <-0.7867187f ? 
                         (data[5 /* X19 */] <0.08084248f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <9.685518E-4f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16458896f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22662373f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.034534857f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23440988f ? 
                                0.0f : 
                                 (data[5 /* X19 */] <0.2512327f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[10 /* X28 */] <0.10387721f ? 
                                 (data[1 /* X12 */] <-0.27637127f ? 
                                    0.0f : 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1913475f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f))) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_102_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.32466573f ? 
             (data[1 /* X12 */] <-0.8800337f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.2734284f ? 
                     (data[1 /* X12 */] <-0.30072403f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32698193f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.36538595f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17664005f ? 
                 (data[5 /* X19 */] <-0.0020045915f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7499501f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24458788f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31777343f ? 
                 (data[5 /* X19 */] <0.027903274f ? 
                     (data[2 /* X15 */] <0.14884134f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031039933f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-1.1424503f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.39272344f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21370865f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.21859756f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.67969143f ? 
                 (data[7 /* X21 */] <0.22651501f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15848728f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22254166f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_102_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[12 /* X35 */] <-0.6430656f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.38145313f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.77849704f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.21243422f ? 
                        1.0f : 
                         (data[6 /* X20 */] <0.6742586f ? 
                             (data[1 /* X12 */] <-0.95482075f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.083094314f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19247843f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0859375f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38662276f ? 
             (data[2 /* X15 */] <0.13160539f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4292326f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.12480197f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[9 /* X27 */] <0.08932915f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17029245f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.19141419f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}


class h2o_rf_10_Forest_103 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_103_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_103_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_103_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_103_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_103_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_103_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_103_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.044659115f ? 
                 (data[12 /* X35 */] <-0.84730077f ? 
                     (data[0 /* X5 */] <0.1269022f ? 
                        1.0f : 
                        0.0f) : 
                     (data[5 /* X19 */] <-0.04686639f ? 
                         (data[10 /* X28 */] <-0.38546008f ? 
                            1.0f : 
                            0.0f) : 
                         (data[6 /* X20 */] <-0.50691426f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
             (data[2 /* X15 */] <0.22324242f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20037165f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18998015f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1794787f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                     (data[3 /* X17 */] <-0.7977404f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.30287308f ? 
                             (data[5 /* X19 */] <0.37103978f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.56108415f ? 
                                    1.0f : 
                                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19133104f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_103_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
        0.013333334f : 
         (data[12 /* X35 */] <-0.20978154f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39662504f ? 
                 (data[12 /* X35 */] <-0.9753057f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1774426f ? 
                         (data[7 /* X21 */] <0.089070626f ? 
                             (data[3 /* X17 */] <0.018300915f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15236686f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.29177228f ? 
                         (data[10 /* X28 */] <-0.5139526f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.43203047f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.760646f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_103_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10246327f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5800772f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2782674f ? 
                     (data[2 /* X15 */] <0.21657792f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.132034f ? 
                             (data[0 /* X5 */] <0.24439017f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18888165f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_103_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.06640625f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24669614f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.396284f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.24831611f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.47816f ? 
                     (data[0 /* X5 */] <0.10526887f ? 
                         (data[7 /* X21 */] <0.13468994f ? 
                             (data[4 /* X18 */] <-0.13048764f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[9 /* X27 */] <-0.24692602f ? 
                    1.0f : 
                     (data[6 /* X20 */] <0.06835132f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.24990739f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.63055f ? 
                                 (data[1 /* X12 */] <-0.69037753f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <-0.24999128f ? 
                                        1.0f : 
                                         (data[8 /* X23 */] <0.15865502f ? 
                                            1.0f : 
                                             (data[5 /* X19 */] <-0.3156103f ? 
                                                1.0f : 
                                                0.0f)))) : 
                                0.0f) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_103_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14563571f ? 
         (data[11 /* X34 */] <-0.34301758f ? 
             (data[9 /* X27 */] <-0.039776783f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.092811555f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.48520863f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[5 /* X19 */] <-0.016958524f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.14791977f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13951792f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.02295241f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2908681f ? 
                    0.0f : 
                    1.0f)) : 
             (data[5 /* X19 */] <-0.5104383f ? 
                1.0f : 
                 (data[12 /* X35 */] <0.20955974f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.11552861f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <7.183925E-4f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8799464f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.093290806f ? 
                                0.0f : 
                                 (data[12 /* X35 */] <0.43305683f ? 
                                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.036866087f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_103_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23375472f ? 
         (data[1 /* X12 */] <-0.6380755f ? 
             (data[10 /* X28 */] <0.45816478f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24957055f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.017869322f ? 
                        1.0f : 
                        0.0f))) : 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.18396698f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.19683734f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23456542f ? 
                                0.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48409075f ? 
                                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3078441f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))))))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4525513f ? 
             (data[0 /* X5 */] <0.16678438f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_104 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_104_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_104_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_104_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_104_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_104_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_104_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_104_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[10 /* X28 */] <-0.037021015f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08978606f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.44328302f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.31842446f ? 
             (data[9 /* X27 */] <-0.108047925f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.55463374f ? 
                     (data[6 /* X20 */] <-0.35090345f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3465359f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.027903274f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22367994f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6147805f ? 
                     (data[11 /* X34 */] <-0.012776515f ? 
                         (data[3 /* X17 */] <-0.7309049f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.119363196f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_104_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.23688449f ? 
             (data[4 /* X18 */] <-0.10019148f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.23110461f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.038461562f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-4.0066591E-4f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[11 /* X34 */] <-0.47115386f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.17864798f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.3712627f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.7594987f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.4875068f ? 
             (data[8 /* X23 */] <0.117462054f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.71796876f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.12380615f ? 
                 (data[6 /* X20 */] <-0.39886445f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.16194095f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_104_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
        0.011904762f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10001925f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07607703f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.69460154f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_104_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18593135f ? 
             (data[4 /* X18 */] <-0.0864205f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.10542184f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.28672156f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09543539f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0028319214f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29869634f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.10591921f ? 
                     (data[2 /* X15 */] <0.13660377f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.066055745f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19682291f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.5033807f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_104_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[10 /* X28 */] <-0.08807109f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.35975915f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4659125f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1978266f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24824283f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6260606f ? 
                             (data[3 /* X17 */] <-0.34391055f ? 
                                 (data[8 /* X23 */] <0.20708339f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.88784283f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.7784916f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[9 /* X27 */] <-0.24858242f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.24026366f ? 
                 (data[2 /* X15 */] <0.15659732f ? 
                     (data[3 /* X17 */] <-0.27873284f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_104_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[10 /* X28 */] <0.04210661f ? 
            0.0f : 
            1.0f) : 
         (data[1 /* X12 */] <-0.73828036f ? 
             (data[4 /* X18 */] <0.08984801f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47519532f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.26364243f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.045989648f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46326977f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.40655592f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.7265625f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.69036597f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_105 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_105_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_105_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_105_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_105_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_105_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_105_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_105_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[3 /* X17 */] <-0.28929406f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
                 (data[11 /* X34 */] <-0.23828125f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23044433f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.47337675f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.3535315f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.42697746f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.4629883f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.2223044f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14115228f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20044477f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02031981f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.014029066f ? 
                             (data[12 /* X35 */] <-0.85340875f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.6493987f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08303817f ? 
                                0.0f : 
                                 (data[12 /* X35 */] <-0.21818f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_105_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[1 /* X12 */] <0.25399265f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
                 (data[3 /* X17 */] <-0.03355684f ? 
                     (data[4 /* X18 */] <0.1559487f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.87144804f ? 
                     (data[11 /* X34 */] <0.6478737f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[12 /* X35 */] <-0.2555913f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8167232f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27873284f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.4392919f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.11547047f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_105_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031299014f ? 
             (data[4 /* X18 */] <-0.03133659f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16606246f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.52839535f ? 
                         (data[3 /* X17 */] <-0.38998356f ? 
                             (data[9 /* X27 */] <0.38968915f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_105_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[1 /* X12 */] <-0.96557444f ? 
             (data[0 /* X5 */] <0.17761305f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <-0.05808184f ? 
                 (data[3 /* X17 */] <-0.5110101f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.21378681f ? 
             (data[9 /* X27 */] <-0.14030056f ? 
                 (data[2 /* X15 */] <0.14160216f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.25469917f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.21024273f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.014029066f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.16966589f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.00536399f ? 
                         (data[12 /* X35 */] <0.29353404f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.05195408f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5085423f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_105_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[1 /* X12 */] <-0.43766564f ? 
             (data[0 /* X5 */] <0.13429832f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                 (data[9 /* X27 */] <0.045850758f ? 
                     (data[4 /* X18 */] <-0.33179557f ? 
                         (data[3 /* X17 */] <-0.2666629f ? 
                            0.0f : 
                            1.0f) : 
                         (data[10 /* X28 */] <-0.39437157f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.6529011f ? 
                                 (data[12 /* X35 */] <-0.0166685f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2932707f ? 
                         (data[1 /* X12 */] <-0.7724967f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5052895f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.10714375f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[9 /* X27 */] <0.10383231f ? 
                 (data[3 /* X17 */] <-0.052425943f ? 
                     (data[1 /* X12 */] <-0.6551836f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_105_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27547714f ? 
             (data[6 /* X20 */] <-0.18673539f ? 
                 (data[12 /* X35 */] <0.5040873f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[5 /* X19 */] <-0.12537454f ? 
                1.0f : 
                0.0f)) : 
         (data[9 /* X27 */] <0.016441334f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <8.6177926E-4f ? 
                 (data[2 /* X15 */] <0.15826343f ? 
                     (data[1 /* X12 */] <-0.2589465f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.059920914f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.3120839f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.27503848f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_106 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_106_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_106_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_106_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_106_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_106_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_106_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_106_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[6 /* X20 */] <-0.22331567f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.58867574f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23247837f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.065079145f ? 
             (data[5 /* X19 */] <0.072765075f ? 
                 (data[10 /* X28 */] <-0.43688968f ? 
                     (data[11 /* X34 */] <0.12851563f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.25459296f ? 
                     (data[10 /* X28 */] <-0.4762566f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8949977f ? 
                             (data[6 /* X20 */] <-0.2332069f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2576848f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                     (data[6 /* X20 */] <-0.540345f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18009381f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25355372f ? 
                             (data[0 /* X5 */] <0.16536708f ? 
                                 (data[3 /* X17 */] <-0.2321734f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18319857f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_106_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[6 /* X20 */] <-0.612205f ? 
            1.0f : 
             (data[8 /* X23 */] <0.12954599f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.09999657f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[1 /* X12 */] <-0.21037158f ? 
             (data[5 /* X19 */] <0.065288104f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22820476f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.22743559f ? 
                 (data[11 /* X34 */] <0.123356625f ? 
                     (data[6 /* X20 */] <-0.48962033f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20218039f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2691914f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.14733584f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4064004f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_106_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.33110565f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.058571026f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.43913642f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.082291365f ? 
                         (data[3 /* X17 */] <0.19199494f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.34234738f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.11552861f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_106_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055670146f ? 
             (data[1 /* X12 */] <-1.0071229f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19143654f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.5960194f ? 
             (data[7 /* X21 */] <0.1663507f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.18820828f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.28515625f ? 
                         (data[10 /* X28 */] <-0.005768225f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18755567f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_106_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6904426f ? 
             (data[8 /* X23 */] <0.10854444f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.2063132f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.13040093f ? 
                         (data[6 /* X20 */] <-0.24636711f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.278036f ? 
                                1.0f : 
                                 (data[8 /* X23 */] <0.16121396f ? 
                                    0.0f : 
                                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24201678f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (data[6 /* X20 */] <-0.03608015f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18745302f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2677922f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.60181224f ? 
                    0.0f : 
                    1.0f))) : 
         (data[1 /* X12 */] <-0.44988576f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.30154103f ? 
                 (data[10 /* X28 */] <-0.002595759f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.14873657f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13735843f ? 
                         (data[6 /* X20 */] <0.21202044f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_106_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40988234f ? 
                 (data[3 /* X17 */] <-0.15803342f ? 
                     (data[3 /* X17 */] <-0.51043284f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22309919f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48624232f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20773053f ? 
                0.0f : 
                 (data[10 /* X28 */] <0.21590409f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.029136317f ? 
                         (data[2 /* X15 */] <0.13993603f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_107 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_107_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_107_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_107_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_107_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_107_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_107_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_107_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43033358f ? 
        0.0f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30321655f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08296609f ? 
                 (data[11 /* X34 */] <-0.26875f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.28231367f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.17069641f ? 
                             (data[1 /* X12 */] <-0.31253666f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.42194828f ? 
                                    1.0f : 
                                     (data[10 /* X28 */] <-0.5633127f ? 
                                        1.0f : 
                                         (data[11 /* X34 */] <0.361536f ? 
                                             (data[12 /* X35 */] <-0.84999925f ? 
                                                 (data[4 /* X18 */] <-0.05203376f ? 
                                                    0.0f : 
                                                    1.0f) : 
                                                0.0f) : 
                                            0.0f)))) : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19605549f ? 
                                1.0f : 
                                 (data[8 /* X23 */] <0.12551364f ? 
                                     (data[9 /* X27 */] <0.35644776f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                         (data[0 /* X5 */] <0.1386298f ? 
                            0.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25216836f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2349656f ? 
                     (data[12 /* X35 */] <-0.7556813f ? 
                         (data[1 /* X12 */] <-0.1378149f ? 
                             (data[1 /* X12 */] <-0.37805733f ? 
                                 (data[4 /* X18 */] <-0.5124251f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[9 /* X27 */] <0.037250724f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25557956f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.024239082f ? 
                     (data[11 /* X34 */] <-0.2078125f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.83541566f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_10_Tree_107_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33612257f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.15527539f ? 
                 (data[5 /* X19 */] <-0.21883662f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.29758358f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.05838186f ? 
                             (data[6 /* X20 */] <-0.3712627f ? 
                                1.0f : 
                                0.0f) : 
                             (data[3 /* X17 */] <-0.22803909f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2608964f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18900017f ? 
                                    1.0f : 
                                     (data[1 /* X12 */] <-0.46638012f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        0.0f)) : 
                0.0f) : 
             (data[2 /* X15 */] <0.36507073f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.48962033f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24757896f ? 
                 (data[3 /* X17 */] <-0.013194101f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14457688f ? 
                         (data[0 /* X5 */] <0.16173099f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.3590513f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_107_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[2 /* X15 */] <0.2282408f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.5392535f ? 
                 (data[8 /* X23 */] <0.13936949f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18771982f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.06714113f ? 
                 (data[6 /* X20 */] <-0.3120839f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_107_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17732735f ? 
             (data[4 /* X18 */] <-0.29573935f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.10850837f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.46816322f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <0.0344491f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22734603f ? 
                    1.0f : 
                     (data[12 /* X35 */] <0.49645233f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[7 /* X21 */] <0.095991984f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_107_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[9 /* X27 */] <-0.006748245f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17522807f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.24222545f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2649414f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14975013f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3630491f ? 
                         (data[5 /* X19 */] <0.20735046f ? 
                             (data[6 /* X20 */] <-0.046624657f ? 
                                1.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18441252f ? 
                                    0.0f : 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.62131006f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (data[1 /* X12 */] <-0.9852488f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11604522f ? 
                                    1.0f : 
                                     (data[2 /* X15 */] <0.14695404f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.81520027f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26474345f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23834457f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.116962485f ? 
            0.0f : 
             (data[6 /* X20 */] <0.21113783f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_107_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[9 /* X27 */] <-0.0050918465f ? 
            1.0f : 
             (data[1 /* X12 */] <-1.0235531f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.18670894f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.19424325f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20504571f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17451777f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_108 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_108_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_108_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_108_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_108_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_108_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_108_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_108_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.07493186f ? 
             (data[6 /* X20 */] <-0.8911908f ? 
                 (data[4 /* X18 */] <0.0347641f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.21059129f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.23203152f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.2154297f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.042425662f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11612923f ? 
                         (data[6 /* X20 */] <-0.33744624f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[11 /* X34 */] <2.0368178E-4f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18200621f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.18117483f ? 
                                0.0f : 
                                1.0f)))))) : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (data[6 /* X20 */] <-0.21486156f ? 
                 (data[4 /* X18 */] <-0.12830175f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <0.35633123f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11396246f ? 
                     (data[12 /* X35 */] <-0.94034094f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.22179964f ? 
                             (data[7 /* X21 */] <0.19193451f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5910938f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_108_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
        0.013333334f : 
         (data[12 /* X35 */] <-0.20978154f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39662504f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.22466438f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.0063671004f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0957092f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20352642f ? 
                                 (data[11 /* X34 */] <0.04999925f ? 
                                     (data[4 /* X18 */] <0.07438088f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11738996f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.3660734f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_108_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15884334f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.17578393f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.40507916f ? 
                         (data[0 /* X5 */] <0.16750628f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_108_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[5 /* X19 */] <-0.065558806f ? 
             (data[2 /* X15 */] <0.16281568f ? 
                 (data[11 /* X34 */] <-0.5125f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25906944f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[4 /* X18 */] <-0.06989533f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18593135f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.1735119f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26740018f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_108_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.14484635f ? 
         (data[2 /* X15 */] <0.08537035f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.48260298f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4165204f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08984801f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X18 */] <0.37077594f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (data[1 /* X12 */] <-0.20548353f ? 
                 (data[12 /* X35 */] <-0.18830821f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.37975037f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.13611953f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1201309f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.31574085f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0957092f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17522807f ? 
                1.0f : 
                 (data[4 /* X18 */] <0.35541683f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_108_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[2 /* X15 */] <0.124107815f ? 
             (data[6 /* X20 */] <-0.058460418f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.43033358f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8714923f ? 
                     (data[7 /* X21 */] <0.2487164f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.4389575f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39179966f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.54296875f ? 
             (data[6 /* X20 */] <-0.20218039f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.7491502f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_109 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_109_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_109_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_109_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_109_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_109_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_109_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_109_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[4 /* X18 */] <-0.572536f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.8869638f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.41753718f ? 
                     (data[0 /* X5 */] <0.18483217f ? 
                         (data[8 /* X23 */] <0.15759633f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0038190503f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.038761914f ? 
                 (data[4 /* X18 */] <-0.3287897f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.029493826f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22525924f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.08089755f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.70625f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22872443f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29544175f ? 
                             (data[4 /* X18 */] <-0.16673891f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27226818f ? 
                                    0.0f : 
                                     (data[8 /* X23 */] <0.17707685f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22806144f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <-0.14882535f ? 
                                    0.0f : 
                                    1.0f))))) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21882498f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3227966f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.19514057f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_109_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
        0.013333334f : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27197665f ? 
             (data[6 /* X20 */] <-0.39662504f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27540746f ? 
                     (data[6 /* X20 */] <-0.80368924f ? 
                         (data[8 /* X23 */] <0.12705953f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.22754273f ? 
                 (data[12 /* X35 */] <-0.9694601f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_109_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06298262f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
             (data[2 /* X15 */] <0.21720305f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2106345f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.2402239f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19114093f ? 
                     (data[3 /* X17 */] <-0.29939556f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.99243194f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_109_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20823257f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.030307798f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.05922556f ? 
                    1.0f : 
                    0.0f))) : 
         (data[9 /* X27 */] <-0.21711086f ? 
             (data[1 /* X12 */] <-0.2788042f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.18782637f ? 
                     (data[9 /* X27 */] <-0.3870211f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[8 /* X23 */] <0.1254284f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.039290022f ? 
                     (data[1 /* X12 */] <-0.823929f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.4700162f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.04906611f ? 
                         (data[10 /* X28 */] <0.06348144f ? 
                             (data[3 /* X17 */] <-0.2666629f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4072443f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[0 /* X5 */] <0.16042884f ? 
                                     (data[8 /* X23 */] <0.20834501f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17125f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <-0.14315176f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_109_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14563571f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.095257126f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22301608f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06861829f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08857651f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.33852804f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.07068496f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.19870095f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (data[2 /* X15 */] <0.18283883f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19613501f ? 
                 (data[2 /* X15 */] <0.13169752f ? 
                     (data[10 /* X28 */] <-0.36337337f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.15250789f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.12581939f ? 
                             (data[8 /* X23 */] <0.10112534f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.58443403f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15884334f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13760918f ? 
                 (data[1 /* X12 */] <-0.54764664f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <-0.5104383f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2937942f ? 
                         (data[5 /* X19 */] <-0.11911716f ? 
                             (data[9 /* X27 */] <-0.12548816f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[0 /* X5 */] <0.15595569f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_109_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23375472f ? 
         (data[2 /* X15 */] <0.12327475f ? 
             (data[8 /* X23 */] <0.12675612f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.2908028f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11879089f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.0258901f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19036317f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.8512504f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.396284f ? 
                 (data[3 /* X17 */] <-0.36925742f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_110 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_110_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_110_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_110_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_110_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_110_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_110_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_110_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[0 /* X5 */] <0.052361302f ? 
            1.0f : 
             (data[7 /* X21 */] <0.13858025f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13691388f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18217331f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22131485f ? 
                 (data[7 /* X21 */] <0.13246776f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2754401f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13048764f ? 
                             (data[10 /* X28 */] <-0.3535315f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19160287f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (data[3 /* X17 */] <-0.8962471f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.1493312f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.44734976f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23306617f ? 
                     (data[5 /* X19 */] <0.08771901f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_110_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[7 /* X21 */] <0.15533361f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15036362f ? 
                 (data[6 /* X20 */] <-0.6333403f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.27571535f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44544855f ? 
                 (data[7 /* X21 */] <0.1147012f ? 
                     (data[1 /* X12 */] <0.06824695f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.2297004f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.71875f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1689553f ? 
                            1.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.12720734f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.024726523f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_110_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[7 /* X21 */] <0.12960507f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.12744184f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.120314844f ? 
             (data[7 /* X21 */] <0.15906839f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.009590421f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.8225311f ? 
                         (data[1 /* X12 */] <0.35091153f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_110_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[7 /* X21 */] <0.14537418f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14753474f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.45305976f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20823257f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37070632f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25107643f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22204939f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[6 /* X20 */] <0.038761914f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.48984927f ? 
                     (data[8 /* X23 */] <0.15264674f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38158965f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07641378f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_110_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[0 /* X5 */] <0.15378995f ? 
             (data[5 /* X19 */] <0.17370412f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20072767f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1305252f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[12 /* X35 */] <-0.45791778f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X5 */] <0.16900313f ? 
                 (data[2 /* X15 */] <0.1082796f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1980299f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2934897f ? 
                         (data[8 /* X23 */] <0.12948751f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.20099503f ? 
                                1.0f : 
                                 (data[6 /* X20 */] <0.16980071f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
             (data[1 /* X12 */] <-0.6111912f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.12891115f ? 
                 (data[10 /* X28 */] <-0.2807418f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.15757455f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[4 /* X18 */] <-0.42243236f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_110_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[7 /* X21 */] <0.09184222f ? 
             (data[5 /* X19 */] <-0.06182032f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40238217f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.2447353f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25115007f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.87571937f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5386871f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.16135804f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.32422897f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_111 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_111_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_111_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_111_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_111_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_111_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_111_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_111_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36986166f ? 
                 (data[0 /* X5 */] <0.09531508f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43203124f ? 
                         (data[10 /* X28 */] <-0.41750365f ? 
                             (data[11 /* X34 */] <0.128208f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13268158f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21962577f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[10 /* X28 */] <-0.28612944f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19105391f ? 
                 (data[6 /* X20 */] <-0.2397689f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.26827002f ? 
                         (data[10 /* X28 */] <-0.091168605f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2971479f ? 
                                 (data[2 /* X15 */] <0.27328774f ? 
                                     (data[6 /* X20 */] <-0.41431645f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.04511369f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2725849f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.57858187f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[3 /* X17 */] <-0.6529011f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (data[10 /* X28 */] <0.035356436f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5637028f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_111_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3535121f ? 
         (data[6 /* X20 */] <-0.4388956f ? 
             (data[10 /* X28 */] <-0.41979194f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21504974f ? 
                     (data[3 /* X17 */] <-0.013194101f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06549774f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19349512f ? 
                         (data[11 /* X34 */] <0.39182484f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.112495884f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2694864f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15884334f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.37305176f ? 
                         (data[3 /* X17 */] <-0.2908028f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[6 /* X20 */] <-0.17140494f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_111_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.590545f ? 
             (data[8 /* X23 */] <0.092235304f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.35087195f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6148437f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19230363f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.74433595f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25399265f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.20824727f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <0.7974304f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_111_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.038761914f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22633539f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.101489f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37112132f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.36242706f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                     (data[3 /* X17 */] <-0.78567046f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2986137f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.53737843f ? 
                             (data[4 /* X18 */] <-0.16574132f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31269437f ? 
                                     (data[10 /* X28 */] <-0.08495059f ? 
                                         (data[1 /* X12 */] <-0.6264802f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
             (data[11 /* X34 */] <-0.52403945f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_111_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.00894347f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.12609334f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43537265f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09167825f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.082367845f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[12 /* X35 */] <-0.16778925f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2165963f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.084990144f ? 
                     (data[9 /* X27 */] <0.03134892f ? 
                         (data[5 /* X19 */] <-0.026789635f ? 
                            1.0f : 
                            0.0f) : 
                         (data[7 /* X21 */] <0.2238047f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4694177f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.22437882f ? 
             (data[12 /* X35 */] <0.091799416f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24305578f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.12416301f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08694312f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24990046f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X27 */] <0.21686555f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21991016f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[9 /* X27 */] <0.011472139f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.16870429f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.14420603f ? 
                         (data[4 /* X18 */] <0.03993614f ? 
                            1.0f : 
                             (data[3 /* X17 */] <0.022992523f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7713109f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_111_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4910571f ? 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5818629f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2698671f ? 
            1.0f : 
             (data[4 /* X18 */] <0.08984801f ? 
                 (data[4 /* X18 */] <-0.19550474f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_112 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_112_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_112_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_112_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_112_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_112_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_112_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_112_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[12 /* X35 */] <-0.35675454f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23536602f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.026791587f ? 
             (data[5 /* X19 */] <0.08024204f ? 
                 (data[0 /* X5 */] <0.13574216f ? 
                     (data[2 /* X15 */] <0.13993603f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.40546724f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14335841f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X28 */] <-0.20792705f ? 
                         (data[6 /* X20 */] <-0.7770603f ? 
                            1.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.42539117f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                             (data[1 /* X12 */] <-0.22425368f ? 
                                1.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.45787343f ? 
                                     (data[2 /* X15 */] <0.18658762f ? 
                                         (data[7 /* X21 */] <0.14674523f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    1.0f)) : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_112_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[12 /* X35 */] <-0.2555913f ? 
             (data[6 /* X20 */] <-0.50652856f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3253796f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.21214165f ? 
            1.0f : 
             (data[5 /* X19 */] <0.23725833f ? 
                 (data[3 /* X17 */] <-0.30287275f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1033459f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.26297995f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8132184f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23532997f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X27 */] <0.31622562f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_112_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[12 /* X35 */] <-0.90838045f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5050789f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <0.056026842f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.03133659f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.53426737f ? 
                    1.0f : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.6589361f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.12375528f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_112_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[12 /* X35 */] <0.13570043f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5206465f ? 
                1.0f : 
                0.0f) : 
             (data[8 /* X23 */] <0.117462054f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.38152456f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.025264043f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.21016394f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (data[9 /* X27 */] <-0.10281935f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.111680955f ? 
                 (data[9 /* X27 */] <-0.22148171f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.4821538f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.2238047f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36525363f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f) : 
             (data[10 /* X28 */] <-0.58836186f ? 
                 (data[10 /* X28 */] <-0.67414993f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08525955f ? 
                     (data[3 /* X17 */] <-0.81302977f ? 
                         (data[0 /* X5 */] <0.080876835f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.45751938f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.34931776f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.15647829f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.059980225f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_112_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (data[9 /* X27 */] <0.0545385f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2349656f ? 
                     (data[3 /* X17 */] <-0.25459296f ? 
                         (data[1 /* X12 */] <-0.9484663f ? 
                            0.0f : 
                            1.0f) : 
                         (data[10 /* X28 */] <-0.19017126f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.1446804f ? 
                 (data[4 /* X18 */] <-0.28763324f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97377056f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.026791587f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19105391f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19485791f ? 
                 (data[6 /* X20 */] <-0.15145569f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.22932903f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26656175f ? 
                             (data[7 /* X21 */] <0.16006434f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_112_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0272053f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2712501f ? 
                 (data[2 /* X15 */] <0.083287686f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08354424f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2017725f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6674701f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4308594f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X27 */] <-0.14754212f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.7491502f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9176155f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20648953f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2885545f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.5231492f ? 
                1.0f : 
                 (data[12 /* X35 */] <0.5040873f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_113 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_113_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_113_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_113_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_113_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_113_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_113_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_113_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.065079145f ? 
             (data[5 /* X19 */] <0.1550117f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.15997516f ? 
                     (data[2 /* X15 */] <0.12520145f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19843516f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026665924f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.30675614f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.17615527f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4532957f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16712886f ? 
                             (data[5 /* X19 */] <0.35054275f ? 
                                 (data[2 /* X15 */] <0.32374325f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[6 /* X20 */] <-0.47947538f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21731822f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.04417807f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.1838373f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <0.09371366f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_113_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[0 /* X5 */] <0.11733339f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22899084f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25968924f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4811662f ? 
                     (data[9 /* X27 */] <-0.1350778f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21399535f ? 
                         (data[7 /* X21 */] <0.18396698f ? 
                             (data[0 /* X5 */] <0.16685455f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[6 /* X20 */] <-0.48962033f ? 
                     (data[10 /* X28 */] <-0.008755645f ? 
                         (data[9 /* X27 */] <0.30754364f ? 
                            0.0f : 
                             (data[4 /* X18 */] <0.010527179f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.31548047f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.11105721f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_113_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[0 /* X5 */] <0.104338974f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16534258f ? 
                 (data[2 /* X15 */] <0.23657145f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16836393f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_113_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6133739f ? 
            0.0f : 
             (data[9 /* X27 */] <0.13404563f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.30992976f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[0 /* X5 */] <0.096036986f ? 
             (data[6 /* X20 */] <-0.011962781f ? 
                 (data[1 /* X12 */] <-0.19924703f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[5 /* X19 */] <-0.35729638f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.43263972f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.04723103f ? 
                     (data[7 /* X21 */] <0.17068774f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.07690389f ? 
                             (data[4 /* X18 */] <0.1867957f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.6129556f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)) : 
                     (data[9 /* X27 */] <-0.24692602f ? 
                         (data[0 /* X5 */] <0.20739745f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_113_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14931178f ? 
             (data[2 /* X15 */] <0.13327152f ? 
                 (data[1 /* X12 */] <-0.27391616f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13454746f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2994027f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1774426f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.87571937f ? 
                 (data[10 /* X28 */] <-0.31269145f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.15408868f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22001068f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17194128f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19682291f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <-0.31497574f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.16916128f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7402875f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47347978f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21766467f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                            1.0f : 
                            0.5f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.46050775f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_113_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51172227f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13993603f ? 
                1.0f : 
                 (data[12 /* X35 */] <0.16590996f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24121405f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.008812297f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f) : 
         (data[5 /* X19 */] <0.054072656f ? 
             (data[6 /* X20 */] <-0.020416897f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.024036149f ? 
                     (data[7 /* X21 */] <0.11425094f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.50410986f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2501466f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <0.045780882f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011962781f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39179966f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_114 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_114_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_114_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_114_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_114_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_114_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_114_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_114_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[6 /* X20 */] <-0.22331567f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.56624484f ? 
                 (data[9 /* X27 */] <0.2764959f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.38844046f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.08593021f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.4388956f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4940176f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20890468f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.009856206f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16552103f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                     (data[2 /* X15 */] <0.10661347f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.059898943f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.68432677f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6260606f ? 
                                     (data[6 /* X20 */] <-0.37648576f ? 
                                         (data[3 /* X17 */] <-0.30964288f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                     (data[1 /* X12 */] <-0.21272935f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20356455f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_114_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[6 /* X20 */] <-0.4367821f ? 
            1.0f : 
            0.0f) : 
         (data[0 /* X5 */] <0.12491347f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3958344f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3839439f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7183973f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17947987f ? 
                        1.0f : 
                         (data[1 /* X12 */] <0.34197745f ? 
                            1.0f : 
                             (data[8 /* X23 */] <0.17697379f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20001583f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_114_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[8 /* X23 */] <0.14965935f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.59241426f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.9770951f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.40549007f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.14080943f ? 
                 (data[6 /* X20 */] <-0.49807444f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.43521163f ? 
                     (data[1 /* X12 */] <0.47884268f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_114_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[6 /* X20 */] <0.02819427f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.5769749f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2797042f ? 
                 (data[9 /* X27 */] <-0.11441415f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.12966399f ? 
                        0.0f : 
                         (data[5 /* X19 */] <-0.13352323f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20053376f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.63563144f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_114_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[8 /* X23 */] <0.14567618f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4888174f ? 
                 (data[10 /* X28 */] <-0.057441045f ? 
                     (data[4 /* X18 */] <0.10086479f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.5856161f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27464315f ? 
                 (data[8 /* X23 */] <0.16955544f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.78993696f ? 
                         (data[1 /* X12 */] <-0.87025756f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.12623294f ? 
                                 (data[0 /* X5 */] <0.18252206f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[1 /* X12 */] <-0.1909135f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4136335f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.26441458f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.31260964f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.21629834f ? 
                 (data[11 /* X34 */] <-0.19042969f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.17068774f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.21810797f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25774413f ? 
                                 (data[7 /* X21 */] <0.22585328f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_114_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[7 /* X21 */] <0.09184222f ? 
             (data[5 /* X19 */] <0.020426307f ? 
                 (data[11 /* X34 */] <-0.5353516f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.27396592f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.12130391f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19710468f ? 
             (data[7 /* X21 */] <0.23459409f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.7724967f ? 
                     (data[5 /* X19 */] <-0.25622144f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_115 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_115_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_115_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_115_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_115_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_115_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_115_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_115_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[3 /* X17 */] <-0.27571535f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2412337f ? 
                 (data[8 /* X23 */] <0.11547047f ? 
                     (data[7 /* X21 */] <0.18739949f ? 
                        0.0f : 
                        1.0f) : 
                     (data[10 /* X28 */] <-0.19017126f ? 
                         (data[10 /* X28 */] <-0.27286792f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.1346061f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.33297214f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.320538f ? 
                 (data[9 /* X27 */] <-0.10902697f ? 
                     (data[2 /* X15 */] <0.21908267f ? 
                        0.0f : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.34234878f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25064126f ? 
                             (data[11 /* X34 */] <-0.3410769f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24293193f ? 
                            0.0f : 
                             (data[12 /* X35 */] <-0.86729485f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[5 /* X19 */] <0.16248867f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3588417f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.17022723f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.050696637f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.18593135f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_115_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[3 /* X17 */] <-0.27571535f ? 
             (data[5 /* X19 */] <0.08398052f ? 
                 (data[0 /* X5 */] <0.12130391f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25968924f ? 
                 (data[5 /* X19 */] <-0.1431924f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.14033408f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.064934514f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.1270792f ? 
                                 (data[9 /* X27 */] <0.087147385f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[4 /* X18 */] <-0.45650548f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (data[6 /* X20 */] <-0.4811662f ? 
                     (data[5 /* X19 */] <0.4251781f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_115_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (data[2 /* X15 */] <0.12702353f ? 
             (data[5 /* X19 */] <0.020426307f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37932068f ? 
                 (data[6 /* X20 */] <-0.8616014f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.8715086f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.1380362f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6910156f ? 
                         (data[8 /* X23 */] <0.15795763f ? 
                             (data[5 /* X19 */] <0.46813756f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_115_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[3 /* X17 */] <-0.7901967f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24206366f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08948661f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17183487f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2096955f ? 
                 (data[11 /* X34 */] <-0.7486328f ? 
                     (data[1 /* X12 */] <-0.6160793f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.10849113f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17761528f ? 
                         (data[4 /* X18 */] <-0.3287897f ? 
                             (data[3 /* X17 */] <-0.23298377f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.10302164f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.35975915f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_115_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[3 /* X17 */] <-0.4522383f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2802415f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.62294924f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12794547f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19052729f ? 
             (data[3 /* X17 */] <-0.28778532f ? 
                 (data[8 /* X23 */] <0.15928535f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29967725f ? 
                         (data[2 /* X15 */] <0.16913496f ? 
                             (data[9 /* X27 */] <-0.027897876f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13071403f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07070313f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.057851296f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.429656f ? 
                         (data[8 /* X23 */] <0.18899529f ? 
                             (data[11 /* X34 */] <0.0725f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1504403f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17616923f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.20551075f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.9721832f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_115_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
        0.0091743115f : 
         (data[5 /* X19 */] <0.072765075f ? 
             (data[4 /* X18 */] <-0.35357746f ? 
                0.0f : 
                 (data[5 /* X19 */] <-0.182635f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.24692602f ? 
                        0.0f : 
                         (data[5 /* X19 */] <-0.072189584f ? 
                            1.0f : 
                             (data[10 /* X28 */] <0.49594182f ? 
                                0.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.36574954f ? 
                                    1.0f : 
                                    0.0f)))))) : 
             (data[6 /* X20 */] <-0.2824945f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03133659f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.29782853f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.50410986f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_116 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_116_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_116_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_116_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_116_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_116_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_116_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_116_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[7 /* X21 */] <0.13831957f ? 
             (data[10 /* X28 */] <-0.016600981f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1636735f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.47905266f ? 
             (data[7 /* X21 */] <0.14460713f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17328158f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1774426f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.031537827f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[8 /* X23 */] <0.18185665f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23319767f ? 
                 (data[5 /* X19 */] <-0.039389424f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.26611653f ? 
                         (data[2 /* X15 */] <0.103210285f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.3334022f ? 
                                1.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.523074f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.055908006f ? 
                                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.59124625f ? 
                                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21174586f ? 
                                                 (data[5 /* X19 */] <0.2394185f ? 
                                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.16711244f ? 
                                                        1.0f : 
                                                        0.0f) : 
                                                    1.0f) : 
                                                0.0f) : 
                                             (data[9 /* X27 */] <0.26464352f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        1.0f) : 
                                    0.0f))) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_116_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0026296899f ? 
             (data[10 /* X28 */] <-0.32800648f ? 
                 (data[9 /* X27 */] <0.018097732f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26621342f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2063132f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.24341229f ? 
                             (data[3 /* X17 */] <-0.16983157f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2013483f ? 
                 (data[5 /* X19 */] <0.065288104f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.39451152f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2686568f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7183973f ? 
                    1.0f : 
                     (data[3 /* X17 */] <0.08336545f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1135403f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44213575f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26152006f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_116_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[8 /* X23 */] <0.11613433f ? 
             (data[7 /* X21 */] <0.14097519f ? 
                 (data[7 /* X21 */] <0.08912966f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[4 /* X18 */] <-0.07540372f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.20824727f ? 
                     (data[8 /* X23 */] <0.15081125f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_116_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15904711f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0864205f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.03134892f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.17548688f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.19763619f ? 
                            0.0f : 
                            1.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0070589795f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.343234f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.024723327f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27391616f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.09519597f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.24408296f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.12078136f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.16996564f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14493191f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.25486642f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[2 /* X15 */] <0.15393339f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_116_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[1 /* X12 */] <-0.9289141f ? 
             (data[10 /* X28 */] <0.7440452f ? 
                 (data[8 /* X23 */] <0.3960031f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.15527539f ? 
                 (data[9 /* X27 */] <-0.028281424f ? 
                     (data[3 /* X17 */] <-0.04940393f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22005934f ? 
                     (data[3 /* X17 */] <-0.43564212f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.18616869f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2022025f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4819544f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[3 /* X17 */] <-0.7373907f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23386255f ? 
                            1.0f : 
                             (data[5 /* X19 */] <-0.37008396f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.24458788f ? 
                 (data[3 /* X17 */] <-0.2063132f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.37628433f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.046036534f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.26516458f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_116_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.90841556f ? 
             (data[4 /* X18 */] <-0.047861766f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3454036f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.30108324f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2673096f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13735843f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011962781f ? 
            0.0f : 
             (data[2 /* X15 */] <0.09328445f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.29921874f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.20044477f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.43564212f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29524425f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_117 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_117_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_117_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_117_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_117_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_117_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_117_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_117_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[5 /* X19 */] <0.18118109f ? 
             (data[3 /* X17 */] <-0.32701263f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.16975123f ? 
                     (data[6 /* X20 */] <-0.35435447f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[5 /* X19 */] <-0.17170577f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.36152962f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.37956896f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07810648f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.34688032f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.05278243f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3403289f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.40226036f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[10 /* X28 */] <-0.19017126f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22895458f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2291873f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.02451172f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07018416f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_117_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[4 /* X18 */] <-0.3935133f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21040271f ? 
                 (data[3 /* X17 */] <-0.3330476f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.6976563f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.046363004f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47947538f ? 
                                1.0f : 
                                0.0f) : 
                             (data[10 /* X28 */] <-0.1845286f ? 
                                 (data[8 /* X23 */] <0.16273043f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1640411f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                1.0f)))) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2573426f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07528916f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.034534857f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[4 /* X18 */] <-0.025734965f ? 
                        1.0f : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_117_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.047861766f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09537716f ? 
                 (data[2 /* X15 */] <0.114944115f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.9770877f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.10387443f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.42490125f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <-0.53358173f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f))) : 
                1.0f) : 
             (data[8 /* X23 */] <0.10418482f ? 
                 (data[3 /* X17 */] <-0.16387513f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_117_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[0 /* X5 */] <0.10181228f ? 
             (data[11 /* X34 */] <-0.5924805f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25309998f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28584826f ? 
                 (data[3 /* X17 */] <-0.79189056f ? 
                     (data[5 /* X19 */] <0.21255301f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.42035148f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.034534857f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <0.028963886f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (data[10 /* X28 */] <-0.5324987f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[10 /* X28 */] <0.38158965f ? 
                     (data[6 /* X20 */] <0.11907601f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_117_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[4 /* X18 */] <-0.60145503f ? 
            1.0f : 
             (data[2 /* X15 */] <0.13327152f ? 
                 (data[10 /* X28 */] <-0.19017126f ? 
                     (data[2 /* X15 */] <0.11755632f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.21999899f ? 
             (data[5 /* X19 */] <-0.0879897f ? 
                 (data[4 /* X18 */] <-0.59751207f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.025390625f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16637918f ? 
                        1.0f : 
                        0.0f))) : 
             (data[10 /* X28 */] <-0.118701145f ? 
                 (data[6 /* X20 */] <0.41497007f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.21613194f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8714923f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.11753466f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9431452f ? 
                             (data[2 /* X15 */] <0.16526118f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21948396f ? 
                                     (data[9 /* X27 */] <-0.17006913f ? 
                                        0.0f : 
                                         (data[1 /* X12 */] <-0.29294616f ? 
                                             (data[3 /* X17 */] <-0.30954292f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f)) : 
                                    0.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3249382f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.38679767f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_117_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3914324f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X18 */] <-0.16629218f ? 
            0.0f : 
             (data[2 /* X15 */] <0.13160539f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.08771901f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.3611696f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                     (data[4 /* X18 */] <0.06523238f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.3726995f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3604262f ? 
                         (data[4 /* X18 */] <-0.032810573f ? 
                             (data[8 /* X23 */] <0.28754345f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9469862f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_118 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_118_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_118_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_118_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_118_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_118_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_118_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_118_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[1 /* X12 */] <-0.119942755f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12924494f ? 
                 (data[1 /* X12 */] <-0.4690274f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.45580387f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19521019f ? 
                     (data[2 /* X15 */] <0.16111663f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.44860744f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20310023f ? 
                     (data[1 /* X12 */] <-0.043070123f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3598649f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.26909637f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[6 /* X20 */] <-0.4727121f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.7008134f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29637268f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.11931586f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (data[8 /* X23 */] <0.16857941f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22056682f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07451172f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.42960715f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <0.23783481f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_118_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (data[0 /* X5 */] <0.11769435f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.078394376f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1774426f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20653208f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.46646982f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.12473055f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21154292f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22770336f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.02031981f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3036298f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[9 /* X27 */] <0.024723327f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_118_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.17089589f ? 
            0.0f : 
             (data[0 /* X5 */] <0.12202582f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30488268f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.5395041f ? 
                     (data[11 /* X34 */] <0.36904764f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.1199543f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.38679767f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_118_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
        0.020833334f : 
         (data[0 /* X5 */] <0.09062264f ? 
            1.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.396284f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7485118f ? 
                         (data[5 /* X19 */] <0.14753474f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30715021f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5704565f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.33875f ? 
                                        0.0f : 
                                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20382182f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (data[1 /* X12 */] <-0.6360923f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[12 /* X35 */] <0.20865414f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.17010336f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.60024947f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_118_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
        0.028301887f : 
         (data[9 /* X27 */] <0.039630912f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3358726f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2611328f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.4205575f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X27 */] <-0.19996737f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.03133659f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7497742f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1294849f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16785504f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.010527179f ? 
                                1.0f : 
                                 (data[6 /* X20 */] <0.38622606f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.102167785f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.21452169f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_118_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (data[11 /* X34 */] <-0.7429199f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2938409f ? 
             (data[2 /* X15 */] <0.12244169f ? 
                 (data[1 /* X12 */] <-0.72361624f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.03171689f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.42797306f ? 
                     (data[1 /* X12 */] <-0.4010053f ? 
                         (data[0 /* X5 */] <0.17336152f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28754345f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.263499f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20304011f ? 
                                        0.0f : 
                                         (data[6 /* X20 */] <0.5449966f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13391514f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.2870188f ? 
                                 (data[4 /* X18 */] <0.17296776f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_119 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_119_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_119_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_119_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_119_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_119_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_119_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_119_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4092539f ? 
            0.0f : 
             (data[7 /* X21 */] <0.20471579f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.3287897f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21301532f ? 
                 (data[8 /* X23 */] <0.1619408f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.33744624f ? 
                         (data[4 /* X18 */] <-0.51895344f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[0 /* X5 */] <0.11264096f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.28175032f ? 
                 (data[4 /* X18 */] <-0.10814798f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.19356921f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.08771901f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.05124129f ? 
                         (data[0 /* X5 */] <0.17328158f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16556357f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2296547f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.44748878f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2932198f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2839576f ? 
                         (data[4 /* X18 */] <-0.09909236f ? 
                             (data[4 /* X18 */] <-0.23436667f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_119_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.013963272f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26621342f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.23999213f ? 
                     (data[9 /* X27 */] <0.13735843f ? 
                         (data[5 /* X19 */] <0.08771901f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.6297044f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.21625127f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.34609374f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.3287897f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.062243044f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.17256258f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20841113f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                     (data[8 /* X23 */] <0.10002359f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.11552861f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.7476486f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24402897f ? 
                     (data[4 /* X18 */] <-0.13902597f ? 
                         (data[3 /* X17 */] <-0.17010336f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5961527f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.04102256f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_119_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[8 /* X23 */] <0.14866357f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11223935f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1275976f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11396246f ? 
             (data[12 /* X35 */] <-0.97602975f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19349512f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.18982299f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.034316503f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.74165416f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7848539f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_119_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18152472f ? 
             (data[1 /* X12 */] <-0.6747358f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14873657f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.34556141f ? 
                 (data[4 /* X18 */] <-0.11396246f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20823257f ? 
             (data[5 /* X19 */] <-0.51791525f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.8127765f ? 
                     (data[11 /* X34 */] <0.12915136f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[7 /* X21 */] <0.165708f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.0091725085f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38158965f ? 
                         (data[11 /* X34 */] <-0.584045f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_119_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39435217f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10772265f ? 
                 (data[0 /* X5 */] <0.088095956f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.15711051f ? 
                         (data[6 /* X20 */] <7.183925E-4f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33894506f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[9 /* X27 */] <-0.12766533f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.41341704f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.095257126f ? 
             (data[3 /* X17 */] <-0.45676452f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.44160402f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.105935976f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.1654784f ? 
                 (data[8 /* X23 */] <0.1355766f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.17756121f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.30455104f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_119_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24630693f ? 
             (data[7 /* X21 */] <0.09350213f ? 
                 (data[0 /* X5 */] <0.11697244f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4136769f ? 
                 (data[12 /* X35 */] <-5.584375E-4f ? 
                     (data[5 /* X19 */] <-0.29310247f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4913473f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3458867f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.17256258f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.34848595f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_120 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_120_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_120_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_120_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_120_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_120_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_120_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_120_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04210661f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.48482037f ? 
                     (data[9 /* X27 */] <0.08435367f ? 
                         (data[11 /* X34 */] <-0.02951021f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[0 /* X5 */] <0.120576814f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.39204103f ? 
             (data[6 /* X20 */] <-0.15568274f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18716754f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11534141f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42888457f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.025092138f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.37985843f ? 
                             (data[6 /* X20 */] <-0.6853331f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.113807805f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.7824052f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21637747f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_120_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (data[0 /* X5 */] <0.12816207f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.040234376f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.105188064f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.48539326f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2296547f ? 
                     (data[9 /* X27 */] <-0.14091653f ? 
                         (data[3 /* X17 */] <-0.01815952f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8373421f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.21153593f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13048764f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.32930505f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[4 /* X18 */] <0.11188157f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.16542968f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.464258f ? 
                 (data[4 /* X18 */] <-0.06930271f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.1792012f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.25272846f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_120_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23168926f ? 
         (data[10 /* X28 */] <-0.16719872f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20218039f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5919135f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <-0.08817047f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.042390246f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.8953705f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66435546f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4173027f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.021488504f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.13671404f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_120_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[0 /* X5 */] <0.089539774f ? 
             (data[9 /* X27 */] <0.124107234f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.24208984f ? 
                 (data[6 /* X20 */] <-0.050006304f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.17542422f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.49908495f ? 
                                 (data[10 /* X28 */] <0.10387721f ? 
                                     (data[4 /* X18 */] <-0.07277392f ? 
                                        0.0f : 
                                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14022198f ? 
                                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3270645f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f)) : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.338883f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_120_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.044659115f ? 
             (data[11 /* X34 */] <-0.3449219f ? 
                 (data[12 /* X35 */] <-0.11434453f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.010678905f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06781445f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.5905762f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.059897203f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.15673125f ? 
                        0.0f : 
                        1.0f))) : 
             (data[3 /* X17 */] <-0.39943227f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042353373f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.17455475f ? 
                     (data[9 /* X27 */] <0.05341334f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0859375f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22300887f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.029495727f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[11 /* X34 */] <-0.36777344f ? 
             (data[1 /* X12 */] <-0.5769749f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.179925f ? 
                     (data[6 /* X20 */] <0.42332f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.18305919f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.115482874f ? 
                     (data[3 /* X17 */] <-0.39621618f ? 
                        0.0f : 
                        1.0f) : 
                     (data[7 /* X21 */] <0.2178005f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_120_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23375472f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.6953125f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.42342418f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.76581585f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.5734375f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.484053f ? 
                 (data[8 /* X23 */] <0.15397446f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_121 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_121_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_121_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_121_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_121_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_121_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_121_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_121_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[3 /* X17 */] <-0.3043815f ? 
             (data[6 /* X20 */] <-0.20218039f ? 
                 (data[2 /* X15 */] <0.18353857f ? 
                     (data[5 /* X19 */] <0.082023665f ? 
                         (data[10 /* X28 */] <-0.25617176f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.019134074f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25906417f ? 
                 (data[4 /* X18 */] <-0.42243236f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.49296874f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.36489248f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.008206166f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6045832f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.6529011f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[0 /* X5 */] <0.15274574f ? 
                     (data[5 /* X19 */] <0.64570224f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[12 /* X35 */] <-0.67169666f ? 
                 (data[8 /* X23 */] <0.15111925f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_121_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (data[3 /* X17 */] <-0.27571535f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.41353327f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.026006745f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25221226f ? 
                         (data[12 /* X35 */] <-0.90838045f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.13480176f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[8 /* X23 */] <0.20409602f ? 
             (data[0 /* X5 */] <0.1805007f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.64115685f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.20596406f ? 
                 (data[6 /* X20 */] <-0.57416147f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7157842f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_121_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (data[2 /* X15 */] <0.10453081f ? 
             (data[10 /* X28 */] <-0.1544362f ? 
                 (data[2 /* X15 */] <0.09185913f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.18527216f ? 
                 (data[12 /* X35 */] <-0.90838045f ? 
                     (data[3 /* X17 */] <-0.05439006f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18154672f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21081251f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.601696f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33072037f ? 
                             (data[4 /* X18 */] <-0.38802966f ? 
                                 (data[2 /* X15 */] <0.1519905f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[5 /* X19 */] <0.44123378f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_121_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.14473087f ? 
         (data[9 /* X27 */] <-0.12269614f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.56714416f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06396351f ? 
                     (data[7 /* X21 */] <0.11947204f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.080876835f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                     (data[8 /* X23 */] <0.10338939f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3449219f ? 
                         (data[5 /* X19 */] <-0.09383109f ? 
                            1.0f : 
                             (data[10 /* X28 */] <0.23456542f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.053204544f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25906944f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.362759f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.05144309f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.15263644f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_121_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6607803f ? 
             (data[6 /* X20 */] <-0.25290507f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
                     (data[6 /* X20 */] <-0.10019642f ? 
                         (data[2 /* X15 */] <0.17878856f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.14620641f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.62663f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97632307f ? 
             (data[0 /* X5 */] <0.092427425f ? 
                 (data[0 /* X5 */] <0.07309787f ? 
                     (data[8 /* X23 */] <0.12952548f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4506426f ? 
                     (data[4 /* X18 */] <-0.14371262f ? 
                         (data[5 /* X19 */] <-0.09172819f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17183137f ? 
                                 (data[1 /* X12 */] <-0.18984179f ? 
                                    1.0f : 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.37177503f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f)) : 
                         (data[6 /* X20 */] <7.183925E-4f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.028195176f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[10 /* X28 */] <-0.10277572f ? 
                         (data[3 /* X17 */] <-0.2666629f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6303005f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.098779686f ? 
                                1.0f : 
                                0.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_121_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[9 /* X27 */] <0.04294371f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.25713214f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.108924806f ? 
                     (data[5 /* X19 */] <0.072765075f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20648953f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.38913098f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.10219017f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.36424538f ? 
                     (data[11 /* X34 */] <-0.66484374f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_122 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_122_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_122_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_122_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_122_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_122_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_122_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_122_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[3 /* X17 */] <-0.39792353f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11120826f ? 
                1.0f : 
                 (data[6 /* X20 */] <-0.3120839f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44213575f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.53867185f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16836393f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2671662f ? 
                             (data[9 /* X27 */] <-0.09968767f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.1716194f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15330888f ? 
                                 (data[5 /* X19 */] <0.3365003f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.320538f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X34 */] <-0.42109376f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.13958317f ? 
                        0.0f : 
                        1.0f)))) : 
        0.022222223f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_122_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[3 /* X17 */] <-0.2244181f ? 
             (data[6 /* X20 */] <-0.35435447f ? 
                 (data[2 /* X15 */] <0.14660054f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.3921362f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.54326653f ? 
                             (data[8 /* X23 */] <0.105189495f ? 
                                0.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.62299097f ? 
                                    1.0f : 
                                     (data[7 /* X21 */] <0.16893351f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_122_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031299014f ? 
             (data[1 /* X12 */] <0.078023046f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.044165898f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.21324566f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_122_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[7 /* X21 */] <0.17027275f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.07815792f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
            0.0f : 
             (data[2 /* X15 */] <0.10244816f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5647664f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4224297f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.11378531f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.20258158f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.468074f ? 
                                     (data[0 /* X5 */] <0.15319636f ? 
                                         (data[1 /* X12 */] <-0.17138427f ? 
                                            0.0f : 
                                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13334341f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_122_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.31260964f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.06989533f ? 
                 (data[10 /* X28 */] <0.20801938f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.011962781f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18492149f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.023358764f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.31197357f ? 
                         (data[0 /* X5 */] <0.14138258f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.16035968f ? 
                                 (data[10 /* X28 */] <0.36599612f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5607375f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16990714f ? 
                     (data[5 /* X19 */] <-0.062295474f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1652367f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.42115816f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2494228f ? 
                         (data[5 /* X19 */] <-0.38854712f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22872443f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[12 /* X35 */] <0.38201368f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_122_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[7 /* X21 */] <0.09184222f ? 
             (data[4 /* X18 */] <-0.2654432f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.85035706f ? 
             (data[9 /* X27 */] <-0.13760373f ? 
                 (data[6 /* X20 */] <0.67304754f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_10_Forest_123 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_123_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_123_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_123_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_123_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_123_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_123_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_123_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2154297f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.1544362f ? 
                 (data[0 /* X5 */] <0.1386298f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.1674189f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.69460154f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.18691619f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[7 /* X21 */] <0.10194672f ? 
                     (data[10 /* X28 */] <-0.0992869f ? 
                        1.0f : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.1224887f ? 
                         (data[4 /* X18 */] <-0.43748495f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2292287f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                 (data[10 /* X28 */] <-0.27871066f ? 
                     (data[7 /* X21 */] <0.1576477f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2694864f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14645566f ? 
                            1.0f : 
                             (data[11 /* X34 */] <0.12125f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[4 /* X18 */] <0.24833906f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[4 /* X18 */] <-0.1248015f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_123_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
        0.013333334f : 
         (data[12 /* X35 */] <-0.20978154f ? 
             (data[10 /* X28 */] <-0.43521163f ? 
                 (data[10 /* X28 */] <-0.6396395f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.11405706f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22767784f ? 
                         (data[9 /* X27 */] <0.0048465445f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                         (data[9 /* X27 */] <0.19036317f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.24281141f ? 
                                0.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.24812698f ? 
                                    1.0f : 
                                     (data[1 /* X12 */] <0.3138223f ? 
                                        0.0f : 
                                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21923465f ? 
                                            1.0f : 
                                            0.0f))))) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_123_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (data[12 /* X35 */] <-0.6144345f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06781445f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.6417944f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[10 /* X28 */] <-0.27695638f ? 
                 (data[11 /* X34 */] <0.6449852f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24336793f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22185695f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.04274851f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_123_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[11 /* X34 */] <-0.8229004f ? 
             (data[12 /* X35 */] <0.15669659f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.0038190503f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46864074f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0012212626f ? 
                     (data[5 /* X19 */] <-0.091986015f ? 
                         (data[10 /* X28 */] <0.5080259f ? 
                             (data[9 /* X27 */] <-0.21247293f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.12432817f ? 
                                    0.0f : 
                                     (data[3 /* X17 */] <-0.15079145f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7469131f ? 
                             (data[9 /* X27 */] <0.13142371f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.17273f ? 
                                    0.0f : 
                                     (data[10 /* X28 */] <-0.26102895f ? 
                                        1.0f : 
                                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23274279f ? 
                                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2978984f ? 
                                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16047968f ? 
                                                    0.0f : 
                                                     (data[8 /* X23 */] <0.22437282f ? 
                                                        1.0f : 
                                                        0.0f)) : 
                                                1.0f) : 
                                            0.0f))) : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_123_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.14484635f ? 
         (data[5 /* X19 */] <-0.076774254f ? 
             (data[10 /* X28 */] <-0.10338612f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.09350213f ? 
                 (data[2 /* X15 */] <0.16992633f ? 
                     (data[1 /* X12 */] <-0.10772265f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.057851296f ? 
                     (data[12 /* X35 */] <0.20626418f ? 
                         (data[10 /* X28 */] <0.3407496f ? 
                             (data[9 /* X27 */] <-0.09958929f ? 
                                1.0f : 
                                 (data[9 /* X27 */] <-0.08548865f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f) : 
                     (data[3 /* X17 */] <-0.13389353f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.19916792f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0344491f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.479214f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.07445221f ? 
                             (data[8 /* X23 */] <0.21555255f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (data[1 /* X12 */] <-0.31790856f ? 
                 (data[9 /* X27 */] <0.051225703f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49857715f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.36015624f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_123_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.11450195f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.67768013f ? 
                 (data[7 /* X21 */] <0.11492487f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20650907f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4659125f ? 
                             (data[3 /* X17 */] <-0.25326028f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.9898499f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39179966f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.32452217f ? 
             (data[2 /* X15 */] <0.12396981f ? 
                 (data[1 /* X12 */] <-0.7920489f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49389982f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.63563144f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_124 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_124_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_124_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_124_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_124_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_124_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_124_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_124_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.038761914f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22604288f ? 
                 (data[3 /* X17 */] <-0.32701263f ? 
                     (data[5 /* X19 */] <-0.04897035f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21370865f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18771982f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14803092f ? 
                             (data[3 /* X17 */] <-0.20615192f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2560189f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f))) : 
                 (data[3 /* X17 */] <-0.3511525f ? 
                     (data[1 /* X12 */] <-0.09006839f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.35970667f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24214497f ? 
                         (data[1 /* X12 */] <-0.17679217f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.06923475f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.1862722f ? 
                                    1.0f : 
                                     (data[8 /* X23 */] <0.24103208f ? 
                                        0.0f : 
                                         (data[0 /* X5 */] <0.1640411f ? 
                                            0.0f : 
                                            1.0f))))) : 
                        1.0f))) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.5472891f ? 
             (data[5 /* X19 */] <0.49521366f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.539857f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_124_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (data[6 /* X20 */] <-0.49384737f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19102158f ? 
             (data[11 /* X34 */] <-0.3449219f ? 
                 (data[6 /* X20 */] <-0.5318909f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16926774f ? 
                     (data[5 /* X19 */] <0.22222008f ? 
                         (data[1 /* X12 */] <0.0291426f ? 
                             (data[10 /* X28 */] <-0.2208737f ? 
                                 (data[11 /* X34 */] <-0.15625f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[6 /* X20 */] <-0.4388956f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.6235288f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47109926f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25126526f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23898299f ? 
                     (data[0 /* X5 */] <0.09820272f ? 
                         (data[0 /* X5 */] <0.09090345f ? 
                            0.0f : 
                             (data[10 /* X28 */] <0.23456542f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_124_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2649011f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.17600037f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.07424705f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.53804183f ? 
                 (data[5 /* X19 */] <0.29726535f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.7585131f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.8236151f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.126607f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.12608579f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.74433595f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.14212044f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_124_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
             (data[3 /* X17 */] <-0.78567046f ? 
                 (data[5 /* X19 */] <0.027903274f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                 (data[3 /* X17 */] <-0.28476784f ? 
                    0.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.059539255f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35586715f ? 
                            1.0f : 
                            0.0f) : 
                         (data[5 /* X19 */] <-0.043915614f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.21776037f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <-0.685f ? 
                                    1.0f : 
                                    0.0f))))) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_124_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.00894347f ? 
         (data[1 /* X12 */] <-0.6307434f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.42490235f ? 
                 (data[7 /* X21 */] <0.17068774f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18716754f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3200792f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0750759f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.11547047f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.13487023f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))) : 
         (data[7 /* X21 */] <0.13831957f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6410145f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.34111327f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0381615f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.12689154f ? 
                         (data[1 /* X12 */] <-0.8311532f ? 
                            1.0f : 
                             (data[6 /* X20 */] <0.04291283f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.04862036f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[9 /* X27 */] <-0.20692666f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f) : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.18991986f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.21394902f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.22176f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36184907f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_124_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[9 /* X27 */] <-0.12932174f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25853604f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.103718676f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26281247f ? 
            1.0f : 
             (data[7 /* X21 */] <0.28789535f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24156983f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.49645233f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_125 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_125_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_125_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_125_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_125_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_125_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_125_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_125_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[9 /* X27 */] <0.17711198f ? 
             (data[0 /* X5 */] <0.08015492f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.79765624f ? 
                     (data[7 /* X21 */] <0.09765189f ? 
                         (data[8 /* X23 */] <0.17759104f ? 
                            0.0f : 
                            1.0f) : 
                         (data[10 /* X28 */] <-0.19017126f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18136407f ? 
                                0.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.23846327f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23686367f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13599601f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1025165f ? 
                             (data[5 /* X19 */] <0.24323991f ? 
                                 (data[0 /* X5 */] <0.108598255f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.4674778f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.20628446f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.08116383f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.19313216f ? 
                                     (data[2 /* X15 */] <0.24929047f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f))))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_125_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23065048f ? 
             (data[8 /* X23 */] <0.13994525f ? 
                 (data[7 /* X21 */] <0.12376035f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.21822938f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (data[12 /* X35 */] <-0.64115685f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.40008017f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2550246f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15242878f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_125_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25993192f ? 
             (data[6 /* X20 */] <-0.37548977f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4091797f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43420625f ? 
                         (data[6 /* X20 */] <-0.7373785f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.16030484f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.53426737f ? 
                 (data[1 /* X12 */] <0.078023046f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23657145f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22999378f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_125_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.38333872f ? 
            0.0f : 
            1.0f) : 
         (data[0 /* X5 */] <0.153429f ? 
             (data[12 /* X35 */] <-0.77476865f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.32587892f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.479214f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.14927918f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_125_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2608562f ? 
            0.0f : 
             (data[8 /* X23 */] <0.26860884f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.10181228f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43155518f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.097946554f ? 
                 (data[8 /* X23 */] <0.13273087f ? 
                     (data[10 /* X28 */] <-0.2718514f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.21686555f ? 
                             (data[3 /* X17 */] <-0.24150711f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97377056f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32698193f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.31625f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3529753f ? 
                                     (data[3 /* X17 */] <-0.6368359f ? 
                                        0.0f : 
                                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19885613f ? 
                                             (data[6 /* X20 */] <-0.16803609f ? 
                                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18792258f ? 
                                                    1.0f : 
                                                    0.0f) : 
                                                1.0f) : 
                                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.7985732f ? 
                                                1.0f : 
                                                0.0f))) : 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3983179f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_125_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46201253f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3341884f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2297135f ? 
             (data[11 /* X34 */] <-0.87050784f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.046324622f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.39520758f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97377056f ? 
                         (data[6 /* X20 */] <0.041466318f ? 
                             (data[9 /* X27 */] <0.04194987f ? 
                                 (data[10 /* X28 */] <0.032021984f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_126 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_126_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_126_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_126_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_126_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_126_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_126_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_126_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33115703f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.096797645f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2698133f ? 
                         (data[9 /* X27 */] <-0.12105941f ? 
                             (data[0 /* X5 */] <0.2379649f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[7 /* X21 */] <0.20307282f ? 
                            1.0f : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21957226f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22497857f ? 
                         (data[12 /* X35 */] <-0.9389203f ? 
                             (data[8 /* X23 */] <0.17707685f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f))) : 
             (data[4 /* X18 */] <-0.44756976f ? 
                 (data[5 /* X19 */] <0.36357787f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.33730468f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18865804f ? 
            0.0f : 
             (data[8 /* X23 */] <0.18052892f ? 
                 (data[12 /* X35 */] <-0.9694601f ? 
                     (data[11 /* X34 */] <0.340625f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23542404f ? 
                     (data[10 /* X28 */] <-0.25143135f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.78973603f ? 
                             (data[8 /* X23 */] <0.20443901f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <0.41375f ? 
                                    0.0f : 
                                     (data[7 /* X21 */] <0.13702878f ? 
                                        0.0f : 
                                        1.0f))) : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_126_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27864116f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5120117f ? 
                 (data[6 /* X20 */] <-0.50652856f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.11240528f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.104912855f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.165708f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.6682667f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.5724422f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[6 /* X20 */] <-0.5276638f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24820213f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2933356f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5318909f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1889467f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.6842896f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.047861766f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.49141693f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13164522f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_126_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[2 /* X15 */] <0.24281943f ? 
             (data[10 /* X28 */] <-0.30758643f ? 
                 (data[4 /* X18 */] <-0.24065545f ? 
                    1.0f : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.030375585f ? 
                    0.0f : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.08366631f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_126_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[9 /* X27 */] <-0.12269614f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4887948f ? 
                 (data[6 /* X20 */] <-0.2782674f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.087771475f ? 
                        1.0f : 
                         (data[9 /* X27 */] <-0.20467222f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.8209961f ? 
                 (data[6 /* X20 */] <7.183925E-4f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21052545f ? 
                         (data[3 /* X17 */] <-0.06403819f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14090967f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.35902303f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.40420958f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.40764523f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.1640411f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (data[9 /* X27 */] <0.015897827f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.05515955f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2379649f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.46390882f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))))) : 
        1.0f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_126_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.312028f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24208984f ? 
                 (data[4 /* X18 */] <-0.26003483f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
                         (data[10 /* X28 */] <-0.10849113f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20067485f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22148068f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22291824f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.10424425f ? 
                                     (data[8 /* X23 */] <0.18557428f ? 
                                        1.0f : 
                                         (data[6 /* X20 */] <0.03171108f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f))) : 
                        1.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13454746f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.053246766f ? 
                         (data[10 /* X28 */] <0.05486913f ? 
                            0.0f : 
                            1.0f) : 
                         (data[9 /* X27 */] <-0.25897428f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[6 /* X20 */] <-0.15568274f ? 
                 (data[2 /* X15 */] <0.1749573f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.13211018f ? 
                         (data[0 /* X5 */] <0.16173099f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (data[12 /* X35 */] <-0.32048848f ? 
                    0.0f : 
                    1.0f))) : 
         (data[5 /* X19 */] <-0.052474115f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.13736774f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_126_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[2 /* X15 */] <0.13160539f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.24630968f ? 
                 (data[8 /* X23 */] <0.20442796f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.33335847f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24179381f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4191971f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.16072829f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_127 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_127_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_127_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_127_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_127_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_127_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_127_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_127_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[4 /* X18 */] <-0.3205271f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10849113f ? 
                 (data[1 /* X12 */] <-0.29346833f ? 
                     (data[11 /* X34 */] <-0.16210938f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20575568f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4663086f ? 
                 (data[4 /* X18 */] <-0.25758943f ? 
                     (data[8 /* X23 */] <0.14202495f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18738756f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.32654235f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[4 /* X18 */] <-0.21213445f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1250918f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31872934f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.122225046f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09757522f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36904886f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19060747f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.34197745f ? 
                            0.0f : 
                            1.0f) : 
                         (data[9 /* X27 */] <0.2460344f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_127_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (data[0 /* X5 */] <0.14512701f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3781923f ? 
                 (data[4 /* X18 */] <-0.5387943f ? 
                     (data[9 /* X27 */] <0.071102485f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.23674233f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.21494141f ? 
                 (data[8 /* X23 */] <0.086617835f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.15698178f ? 
                         (data[11 /* X34 */] <-0.30625f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3159075f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.26305002f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.40507916f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20562057f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.014029066f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.16542968f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22518727f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23845856f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.09869293f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_127_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.3858847f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19325212f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.22466438f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40238217f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3758798f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21991016f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18245898f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1014379f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <0.15012158f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[1 /* X12 */] <-0.06470785f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_127_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.12269614f ? 
         (data[0 /* X5 */] <0.1025342f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25906944f ? 
                 (data[4 /* X18 */] <-0.28899646f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.08779913f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.7981445f ? 
             (data[0 /* X5 */] <0.12563539f ? 
                1.0f : 
                 (data[1 /* X12 */] <-1.0071229f ? 
                     (data[9 /* X27 */] <0.03659649f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20809601f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25818047f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.26649016f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X20 */] <0.02608074f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.62854797f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.035696965f ? 
                             (data[7 /* X21 */] <0.19193451f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <-0.2228433f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_127_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (data[0 /* X5 */] <0.15234613f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.044659115f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1762519f ? 
                     (data[1 /* X12 */] <-0.24458788f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.5125f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.4984058f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.20361435f ? 
                     (data[9 /* X27 */] <0.11774439f ? 
                         (data[10 /* X28 */] <0.15569162f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[11 /* X34 */] <-0.42490235f ? 
                 (data[4 /* X18 */] <-0.20474927f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4922966f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4048328f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.16542968f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.18294248f ? 
                 (data[4 /* X18 */] <-0.124979235f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.34125248f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.15326506f ? 
                         (data[2 /* X15 */] <0.1306685f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22872443f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.113590784f ? 
                             (data[11 /* X34 */] <-0.6503711f ? 
                                1.0f : 
                                 (data[7 /* X21 */] <0.22944838f ? 
                                     (data[5 /* X19 */] <-0.07396322f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4027425f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19948885f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_10_Tree_127_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[4 /* X18 */] <-0.11809375f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.60621f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.47441405f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.35812387f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.4010053f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.14443836f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.11900479f ? 
                         (data[9 /* X27 */] <-0.23610856f ? 
                            0.0f : 
                            1.0f) : 
                         (data[6 /* X20 */] <0.21103375f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23686367f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.7431684f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.32174674f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.2782674f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_128 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_128_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_128_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_128_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_128_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_128_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_128_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_128_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[6 /* X20 */] <-0.22331567f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1878314f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.20102791f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22878441f ? 
             (data[6 /* X20 */] <-0.55725324f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.8431388f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.4511197f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[5 /* X19 */] <-0.016958524f ? 
                     (data[10 /* X28 */] <-0.3331115f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.119686395f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.4115022f ? 
                            1.0f : 
                             (data[12 /* X35 */] <-0.842857f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.059980225f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[3 /* X17 */] <-0.3568731f ? 
                                    0.0f : 
                                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.045278247f ? 
                                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2515911f ? 
                                            1.0f : 
                                             (data[11 /* X34 */] <0.523074f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        0.0f))))))) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_128_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[6 /* X20 */] <-0.52977735f ? 
             (data[8 /* X23 */] <0.1373779f ? 
                 (data[11 /* X34 */] <-0.28125f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22696021f ? 
             (data[6 /* X20 */] <-0.48539326f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4429027f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.13457179f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8204617f ? 
                     (data[12 /* X35 */] <-0.8369369f ? 
                         (data[2 /* X15 */] <0.1417466f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.13376546f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_128_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.30785683f ? 
             (data[7 /* X21 */] <0.13426791f ? 
                 (data[2 /* X15 */] <0.23157306f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.5131218f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.10338612f ? 
                 (data[11 /* X34 */] <0.36992186f ? 
                     (data[5 /* X19 */] <0.5811988f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_128_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[6 /* X20 */] <0.0070589795f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31011954f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25887778f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20680372f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.135297f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.25214508f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.63257724f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.39437157f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28223777f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[12 /* X35 */] <0.16051406f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47272152f ? 
                            1.0f : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_128_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[6 /* X20 */] <-0.03732513f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4683748f ? 
                 (data[6 /* X20 */] <-0.48727006f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19991663f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23103455f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8792529f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.37539062f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.49645233f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18483217f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.67f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.9466137f ? 
                                    0.0f : 
                                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.33934823f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        1.0f) : 
                    1.0f) : 
                1.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29495263f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <-0.11947085f ? 
                 (data[10 /* X28 */] <-0.08807109f ? 
                     (data[8 /* X23 */] <0.17535663f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.21716508f ? 
                     (data[3 /* X17 */] <-0.21838313f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_128_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8778329f ? 
             (data[10 /* X28 */] <-0.011495974f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.51953125f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.08771901f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.045989648f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.3850022f ? 
                 (data[1 /* X12 */] <-0.57385737f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22712451f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_129 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_129_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_129_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_129_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_129_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_129_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_129_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_129_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[0 /* X5 */] <0.048029833f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.1470128f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23540825f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.023084765f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15803342f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                 (data[9 /* X27 */] <0.08435367f ? 
                     (data[8 /* X23 */] <0.15795763f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.7251414f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[6 /* X20 */] <-0.4727121f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20967379f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22837642f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.713846f ? 
                                 (data[3 /* X17 */] <-0.42995808f ? 
                                    1.0f : 
                                     (data[10 /* X28 */] <-0.17696013f ? 
                                         (data[1 /* X12 */] <0.43582788f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20256914f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17161618f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            0.0f))) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.49128723f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20361435f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16836393f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5441103f ? 
                             (data[0 /* X5 */] <0.10997911f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_129_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[6 /* X20 */] <-0.5318909f ? 
             (data[2 /* X15 */] <0.21491179f ? 
                0.0f : 
                1.0f) : 
             (data[4 /* X18 */] <-0.5215834f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1682602f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.32701263f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.42518654f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.1638608f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.38647544f ? 
                         (data[8 /* X23 */] <0.1179222f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0649027f ? 
                         (data[6 /* X20 */] <-0.6417944f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2910925f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_129_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[12 /* X35 */] <-0.61252576f ? 
             (data[8 /* X23 */] <0.14932743f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2435642f ? 
                     (data[12 /* X35 */] <-0.86075145f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.12900297f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13177164f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09468309f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.36549455f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <0.09757522f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21770519f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.14272591f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_129_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[0 /* X5 */] <0.12527442f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24740128f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.002837798f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.07532521f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37070632f ? 
                 (data[7 /* X21 */] <0.15656881f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.16857941f ? 
                         (data[10 /* X28 */] <-0.08923877f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1748957f ? 
                                0.0f : 
                                1.0f) : 
                             (data[6 /* X20 */] <-0.046624657f ? 
                                0.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3849233f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.37865627f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22027755f ? 
                                0.0f : 
                                 (data[7 /* X21 */] <0.21417496f ? 
                                     (data[11 /* X34 */] <-0.46113616f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            1.0f))) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47407076f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_129_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48690864f ? 
             (data[4 /* X18 */] <-0.15527539f ? 
                 (data[9 /* X27 */] <0.011472139f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2518962f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23725833f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23186822f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41985893f ? 
                             (data[12 /* X35 */] <0.22735345f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21522851f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.58579f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.17010336f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17975922f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.28251952f ? 
             (data[1 /* X12 */] <-0.59163904f ? 
                 (data[5 /* X19 */] <-0.10668212f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.7293755f ? 
                     (data[8 /* X23 */] <0.12078136f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.23907064f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_129_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4910571f ? 
             (data[2 /* X15 */] <0.08245462f ? 
                1.0f : 
                0.0f) : 
             (data[7 /* X21 */] <0.15989834f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4152889f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.31293786f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.38818908f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <0.67550653f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_130 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_130_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_130_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_130_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_130_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_130_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_130_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_130_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2897471f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22237161f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.17325859f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049764123f ? 
             (data[3 /* X17 */] <-0.32399514f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.68943864f ? 
                     (data[9 /* X27 */] <-0.08791177f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X27 */] <0.29637268f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16606246f ? 
                     (data[4 /* X18 */] <-0.5491253f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.1109571f ? 
                             (data[1 /* X12 */] <-0.2648565f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[2 /* X15 */] <0.22657467f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_130_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.31264916f ? 
             (data[12 /* X35 */] <-0.77476865f ? 
                 (data[1 /* X12 */] <-0.10774906f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.035131454f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18325536f ? 
                         (data[0 /* X5 */] <0.112387314f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.037021015f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06526053f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.79055387f ? 
                     (data[0 /* X5 */] <0.1501804f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11699734f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2764959f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.65069807f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <0.14117222f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.801491f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11552861f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_130_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.21000025f ? 
            0.0f : 
             (data[0 /* X5 */] <0.13141067f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11223935f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.025264043f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22990693f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_130_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18593135f ? 
             (data[12 /* X35 */] <0.06507705f ? 
                 (data[1 /* X12 */] <-0.97014827f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.31595674f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.6368595f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26781642f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.116854645f ? 
                         (data[12 /* X35 */] <0.45183554f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3086367f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[5 /* X19 */] <0.34603754f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X27 */] <-0.008404643f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14304535f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_130_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[1 /* X12 */] <-0.73339236f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51172227f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5200651f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.19632967f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.09827291f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.021389546f ? 
                 (data[9 /* X27 */] <0.050713677f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19097571f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21027388f ? 
                        1.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.08970292f ? 
                             (data[0 /* X5 */] <0.14671616f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (data[4 /* X18 */] <-0.19658832f ? 
                     (data[5 /* X19 */] <-0.08261406f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24040376f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[1 /* X12 */] <-0.44988576f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.44949165f ? 
                1.0f : 
                0.0f) : 
             (data[11 /* X34 */] <-0.26516458f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.06182032f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.053624608f ? 
                        0.0f : 
                         (data[9 /* X27 */] <-0.20717245f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.095233925f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_130_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[1 /* X12 */] <-0.7187282f ? 
            1.0f : 
             (data[0 /* X5 */] <0.1025342f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24003386f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.7487981f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.4925491f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_131 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_131_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_131_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_131_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_131_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_131_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_131_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_131_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20823257f ? 
             (data[9 /* X27 */] <0.13404563f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2123943f ? 
                     (data[3 /* X17 */] <-0.400388f ? 
                        1.0f : 
                        0.0f) : 
                     (data[0 /* X5 */] <0.1776532f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.23828125f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11947085f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5096125f ? 
                            1.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.121368624f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[0 /* X5 */] <0.16654697f ? 
                             (data[3 /* X17 */] <-0.43427268f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13357061f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (data[0 /* X5 */] <0.19595373f ? 
                                1.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.31547624f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2098787f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)))))) : 
            0.0f) : 
        0.022222223f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_131_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[6 /* X20 */] <-0.39451152f ? 
             (data[3 /* X17 */] <-0.22140062f ? 
                 (data[11 /* X34 */] <0.06640625f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.30903605f ? 
             (data[10 /* X28 */] <-0.24575104f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.004910814f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.584375f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[0 /* X5 */] <0.11697244f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.37109375f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_131_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4452362f ? 
             (data[5 /* X19 */] <0.12510383f ? 
                 (data[8 /* X23 */] <0.14335267f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.34275183f ? 
                 (data[11 /* X34 */] <0.47011718f ? 
                     (data[0 /* X5 */] <0.14649379f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23947348f ? 
                     (data[11 /* X34 */] <0.6148437f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_131_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3713288f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02396721f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21587439f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.52011716f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31011954f ? 
                 (data[3 /* X17 */] <-0.2063132f ? 
                     (data[7 /* X21 */] <0.21467534f ? 
                         (data[11 /* X34 */] <0.0359375f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.26268902f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4908276f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1768159f ? 
                                1.0f : 
                                 (data[0 /* X5 */] <0.2102287f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.59319925f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f)) : 
         (data[10 /* X28 */] <0.1595218f ? 
            1.0f : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_131_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[12 /* X35 */] <-0.11434453f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13141067f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.27691263f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.27348575f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42753473f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0864205f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25105426f ? 
                         (data[8 /* X23 */] <0.12609226f ? 
                             (data[5 /* X19 */] <0.09968215f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[3 /* X17 */] <-0.2063132f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23828125f ? 
                             (data[4 /* X18 */] <-0.031744048f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.29055917f ? 
                             (data[12 /* X35 */] <0.20632383f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08546734f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7416062f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25120848f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9767397f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.57471067f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.1379745f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.072318636f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_131_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4910571f ? 
             (data[9 /* X27 */] <-0.038219817f ? 
                 (data[2 /* X15 */] <0.08661994f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21824405f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X19 */] <-0.38519913f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.675143f ? 
                 (data[4 /* X18 */] <-0.036844984f ? 
                     (data[11 /* X34 */] <-0.74358976f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.39503208f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_132 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_132_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_132_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_132_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_132_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_132_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_132_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_132_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43033358f ? 
        0.0f : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.28338003f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.15102766f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.09027037f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.037021015f ? 
                 (data[9 /* X27 */] <0.19658564f ? 
                     (data[6 /* X20 */] <-0.4388956f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18875943f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.37897044f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21837604f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.33894506f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2063132f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17455475f ? 
                            1.0f : 
                             (data[1 /* X12 */] <0.30800554f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.045780882f ? 
                             (data[4 /* X18 */] <-0.4797005f ? 
                                 (data[9 /* X27 */] <0.36109295f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25221226f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2698133f ? 
                         (data[4 /* X18 */] <-0.06460706f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_132_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[11 /* X34 */] <-0.42490235f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.26799595f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7382151f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0011241575f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26704374f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20865664f ? 
                                 (data[6 /* X20 */] <-0.3712627f ? 
                                     (data[4 /* X18 */] <-0.4376659f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15781558f ? 
                                     (data[9 /* X27 */] <-0.003624974f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.43725702f ? 
                             (data[4 /* X18 */] <-0.18153094f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <-0.07637298f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)) : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.056797665f ? 
             (data[6 /* X20 */] <-0.5910697f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.1286282f ? 
                     (data[6 /* X20 */] <-0.29979575f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24160421f ? 
                 (data[0 /* X5 */] <0.14296128f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19199494f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_132_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30465466f ? 
             (data[4 /* X18 */] <-0.07815792f ? 
                 (data[1 /* X12 */] <0.20648219f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0012859576f ? 
                 (data[8 /* X23 */] <0.18185665f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.06438694f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_132_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[11 /* X34 */] <0.10258789f ? 
            1.0f : 
            0.0f) : 
         (data[9 /* X27 */] <-0.20385966f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.58579f ? 
                 (data[12 /* X35 */] <-0.19069414f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.047216028f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3418709f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6186117f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33987138f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[2 /* X15 */] <0.17325859f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.072765075f ? 
                     (data[6 /* X20 */] <0.11309869f ? 
                         (data[4 /* X18 */] <-0.048309166f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[0 /* X5 */] <0.17327876f ? 
                        1.0f : 
                         (data[4 /* X18 */] <0.14158677f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.36625f ? 
                                 (data[6 /* X20 */] <0.52910066f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_132_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.36777344f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.67768013f ? 
                 (data[4 /* X18 */] <-0.1525212f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.24252301f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0788073f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.53286284f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5793892f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)))) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4092539f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.103125125f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26364243f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.49507868f ? 
                 (data[6 /* X20 */] <-0.41610268f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23823757f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08380469f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13048764f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13951792f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16990714f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_132_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[7 /* X21 */] <0.18023218f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0707657f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.39694786f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.03309807f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.49746895f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2712501f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23914604f ? 
                     (data[2 /* X15 */] <0.09661671f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5880719f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.34563202f ? 
                                 (data[4 /* X18 */] <0.030757912f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.022617891f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.18748145f ? 
                     (data[0 /* X5 */] <0.1444051f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.008176263f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_133 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_133_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_133_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_133_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_133_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_133_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_133_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_133_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
            0.0f : 
             (data[5 /* X19 */] <0.18118109f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.07447253f ? 
                     (data[2 /* X15 */] <0.121231005f ? 
                         (data[9 /* X27 */] <0.021169595f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.053648964f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.37726355f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[6 /* X20 */] <-0.56718516f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.21925633f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.09105738f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5828919f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6610544f ? 
                             (data[8 /* X23 */] <0.15158455f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.22824427f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (data[4 /* X18 */] <-0.19529608f ? 
                                1.0f : 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.7556813f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[0 /* X5 */] <0.103978015f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_133_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[12 /* X35 */] <-0.9770951f ? 
             (data[1 /* X12 */] <0.2393285f ? 
                1.0f : 
                 (data[11 /* X34 */] <0.3972335f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.059551857f ? 
                1.0f : 
                 (data[1 /* X12 */] <0.31264916f ? 
                     (data[0 /* X5 */] <0.16461864f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9083161f ? 
             (data[2 /* X15 */] <0.17425726f ? 
                 (data[6 /* X20 */] <-0.38473645f ? 
                     (data[2 /* X15 */] <0.1335404f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_133_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.18949921f ? 
         (data[12 /* X35 */] <-0.7957648f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.35175353f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.28520748f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29707405f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1444051f ? 
                             (data[9 /* X27 */] <0.3798235f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.056797665f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.54808915f ? 
                     (data[9 /* X27 */] <0.32287505f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
        0.00862069f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_133_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[10 /* X28 */] <-0.17996123f ? 
             (data[9 /* X27 */] <-0.101162955f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.17714652f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18118109f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38669464f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5334598f ? 
                     (data[1 /* X12 */] <-0.3227966f ? 
                         (data[9 /* X27 */] <0.031112578f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.05991264f ? 
                            1.0f : 
                             (data[9 /* X27 */] <-0.104697414f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_133_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[11 /* X34 */] <-0.7981445f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.44047934f ? 
             (data[8 /* X23 */] <0.1201175f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1559487f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.25000155f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[9 /* X27 */] <0.1090017f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.112680286f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2810212f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0186946f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4659125f ? 
                                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24098752f ? 
                                         (data[2 /* X15 */] <0.12660784f ? 
                                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.111950375f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f) : 
                                        0.0f) : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19682291f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29544175f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.039581344f ? 
                                        0.0f : 
                                         (data[11 /* X34 */] <-0.18625f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (data[5 /* X19 */] <-0.49669126f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                         (data[2 /* X15 */] <0.16354026f ? 
                             (data[12 /* X35 */] <-0.3159075f ? 
                                0.0f : 
                                1.0f) : 
                             (data[11 /* X34 */] <-0.3175f ? 
                                 (data[8 /* X23 */] <0.16562523f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[11 /* X34 */] <-0.8171875f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19931355f ? 
                                1.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40365624f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            0.0f));
    return pred;
  } // constant pool size = 110B, number of visited nodes = 27, static init size = 0B
}

class h2o_rf_10_Tree_133_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.12369128f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.7187282f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.8512504f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40482742f ? 
                     (data[1 /* X12 */] <-0.9699835f ? 
                         (data[9 /* X27 */] <-0.07842785f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.99305326f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_134 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_134_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_134_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_134_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_134_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_134_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_134_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_134_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.4866523f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20867418f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3626286f ? 
                         (data[1 /* X12 */] <0.30287308f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21384527f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13048764f ? 
                         (data[9 /* X27 */] <0.08435367f ? 
                            0.0f : 
                            1.0f) : 
                         (data[8 /* X23 */] <0.18393639f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.14288431f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[4 /* X18 */] <-0.0864205f ? 
                         (data[0 /* X5 */] <0.12934314f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_134_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20874305f ? 
             (data[8 /* X23 */] <0.116086684f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.696548f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25617287f ? 
                 (data[9 /* X27 */] <0.23011674f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.51673293f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.40008017f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2244181f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.15884334f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_134_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.18949921f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41870117f ? 
             (data[8 /* X23 */] <0.093352765f ? 
                 (data[9 /* X27 */] <0.19036317f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19514629f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.09820272f ? 
                        0.0f : 
                        1.0f))) : 
             (data[0 /* X5 */] <0.11336288f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.3838736f ? 
                     (data[6 /* X20 */] <-0.51138306f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43232387f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.13786994f ? 
                            0.0f : 
                            1.0f))))) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.93448544f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_134_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.47024587f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25844896f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.24279977f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.27511707f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[8 /* X23 */] <0.15131901f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23464411f ? 
                 (data[7 /* X21 */] <0.11793004f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14539315f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2632295f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.37167704f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.114704296f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.16972658f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[6 /* X20 */] <0.1928291f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25351563f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_134_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[11 /* X34 */] <-0.8229004f ? 
            1.0f : 
            0.0f) : 
         (data[8 /* X23 */] <0.14434846f ? 
             (data[4 /* X18 */] <-0.55738795f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.10328122f ? 
                     (data[0 /* X5 */] <0.1328545f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.18195157f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.12997422f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.20633657f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
             (data[5 /* X19 */] <-0.0879897f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.9920625f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.1525212f ? 
                     (data[6 /* X20 */] <-0.15926531f ? 
                         (data[11 /* X34 */] <-0.146875f ? 
                            1.0f : 
                            0.0f) : 
                         (data[0 /* X5 */] <0.10906857f ? 
                             (data[11 /* X34 */] <-0.5910255f ? 
                                1.0f : 
                                0.0f) : 
                             (data[7 /* X21 */] <0.12132913f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[1 /* X12 */] <-0.51831836f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5670879f ? 
                             (data[3 /* X17 */] <-0.4346869f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[2 /* X15 */] <0.18658762f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6613675f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_134_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (data[11 /* X34 */] <-0.34301758f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.050615963f ? 
                 (data[6 /* X20 */] <-0.26235816f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.33320215f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.52826846f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.05781114f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.28734368f ? 
                 (data[0 /* X5 */] <0.0935466f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.17984733f ? 
                         (data[11 /* X34 */] <-0.66484374f ? 
                             (data[12 /* X35 */] <0.22618875f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[1 /* X12 */] <-0.9086014f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17592439f ? 
                                1.0f : 
                                0.0f) : 
                             (data[12 /* X35 */] <0.09761805f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.02047563f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31571186f ? 
                 (data[6 /* X20 */] <0.0062061674f ? 
                     (data[12 /* X35 */] <0.57280195f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X17 */] <-0.19101867f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3477303f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}


class h2o_rf_10_Forest_135 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_135_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_135_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_135_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_135_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_135_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_135_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_135_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43033358f ? 
        0.0f : 
         (data[4 /* X18 */] <-0.23790126f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.087622166f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.205274f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.047155615f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.350949f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07070313f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.39013672f ? 
                 (data[2 /* X15 */] <0.2113786f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.21829514f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.14753474f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.52909213f ? 
                                0.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25451222f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11373775f ? 
                                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.48250285f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f) : 
                                    0.0f))))) : 
                 (data[1 /* X12 */] <0.2262639f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11763923f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.62488616f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21754564f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_135_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1442586f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3182117f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0011241575f ? 
                     (data[6 /* X20 */] <-0.42198738f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21293129f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.17542422f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[10 /* X28 */] <-0.1493312f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16514687f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.20787281f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
                 (data[3 /* X17 */] <-0.031299014f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                         (data[6 /* X20 */] <-0.67561084f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.47605172f ? 
                    1.0f : 
                     (data[5 /* X19 */] <0.027903274f ? 
                         (data[12 /* X35 */] <-0.72770625f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_135_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[4 /* X18 */] <-0.047861766f ? 
             (data[9 /* X27 */] <0.12742004f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.25143135f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (data[8 /* X23 */] <0.1373779f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.186276f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_135_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[4 /* X18 */] <-0.1442586f ? 
            0.0f : 
             (data[2 /* X15 */] <0.16076262f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <-0.12269614f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25906944f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06526053f ? 
                     (data[10 /* X28 */] <-0.0467958f ? 
                         (data[2 /* X15 */] <0.17135632f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.30732653f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.20361717f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09543539f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36987638f ? 
                             (data[6 /* X20 */] <0.18970032f ? 
                                 (data[2 /* X15 */] <0.16700065f ? 
                                    1.0f : 
                                     (data[0 /* X5 */] <0.106641516f ? 
                                        1.0f : 
                                        0.0f)) : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21759458f ? 
                                    0.0f : 
                                     (data[0 /* X5 */] <0.2252226f ? 
                                        1.0f : 
                                        0.0f))) : 
                            1.0f))) : 
                 (data[4 /* X18 */] <0.05128927f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.0063909655f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_135_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35991696f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.32587892f ? 
                 (data[4 /* X18 */] <-0.15612587f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26195082f ? 
                        1.0f : 
                         (data[5 /* X19 */] <-0.36089897f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.23743363f ? 
                         (data[3 /* X17 */] <-0.46009108f ? 
                             (data[5 /* X19 */] <0.0039769816f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18315691f ? 
                                0.0f : 
                                 (data[7 /* X21 */] <0.18534532f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <-0.9451412f ? 
                                        0.0f : 
                                        1.0f)))) : 
                         (data[2 /* X15 */] <0.10994359f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.28835517f ? 
                                 (data[7 /* X21 */] <0.16303164f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.100731f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.43323624f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23864943f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.16980071f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.35379687f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.23606622f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13951792f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07451172f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_135_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[7 /* X21 */] <0.16985777f ? 
            1.0f : 
             (data[2 /* X15 */] <0.18325536f ? 
                 (data[8 /* X23 */] <0.19818823f ? 
                     (data[10 /* X28 */] <0.8512504f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.64686614f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                 (data[12 /* X35 */] <-0.022188166f ? 
                     (data[6 /* X20 */] <0.102167785f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25434187f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.13259307f ? 
                            1.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14753474f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <0.27407056f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2885545f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_136 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_136_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_136_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_136_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_136_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_136_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_136_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_136_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[12 /* X35 */] <-0.46173525f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.43913642f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.39792353f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6149925f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.11827637f ? 
                    0.0f : 
                    1.0f)) : 
             (data[0 /* X5 */] <0.15812092f ? 
                 (data[7 /* X21 */] <0.18398654f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.08771901f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.10757421f ? 
                             (data[2 /* X15 */] <0.1517218f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.28168523f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f))) : 
                 (data[11 /* X34 */] <-0.04106379f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.1688913f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.64230055f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.63209385f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.36477125f ? 
                                 (data[7 /* X21 */] <0.13996296f ? 
                                    0.0f : 
                                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_136_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (data[9 /* X27 */] <-0.11441415f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.2282408f ? 
                     (data[10 /* X28 */] <0.08042815f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.51346356f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20361198f ? 
                 (data[11 /* X34 */] <0.41707155f ? 
                     (data[9 /* X27 */] <-0.09745947f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[0 /* X5 */] <0.14837562f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2575369f ? 
                 (data[5 /* X19 */] <0.1325808f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.124304965f ? 
                         (data[9 /* X27 */] <-0.045586556f ? 
                             (data[6 /* X20 */] <-0.23198113f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_136_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[11 /* X34 */] <0.36728516f ? 
             (data[0 /* X5 */] <0.14007363f ? 
                 (data[5 /* X19 */] <0.1998735f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.034090787f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19903342f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.663195f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[2 /* X15 */] <0.21657792f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04940393f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_136_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.38333872f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.343234f ? 
                0.0f : 
                1.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.14296128f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.53916013f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17159246f ? 
                     (data[5 /* X19 */] <-0.19168831f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.021410529f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3296875f ? 
                     (data[5 /* X19 */] <0.027903274f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_136_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[8 /* X23 */] <0.14434846f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.862861f ? 
                 (data[7 /* X21 */] <0.10761132f ? 
                     (data[5 /* X19 */] <-0.028985502f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20361435f ? 
                 (data[11 /* X34 */] <-0.74609375f ? 
                     (data[6 /* X20 */] <-0.050006304f ? 
                         (data[7 /* X21 */] <0.1906066f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.15992956f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.21862188f ? 
                            1.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19129609f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.36980468f ? 
                                    0.0f : 
                                     (data[2 /* X15 */] <0.16909577f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[12 /* X35 */] <0.3647705f ? 
                                    1.0f : 
                                     (data[0 /* X5 */] <0.2174903f ? 
                                        0.0f : 
                                         (data[2 /* X15 */] <0.2057606f ? 
                                            1.0f : 
                                            0.0f))))))) : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22587958f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40238217f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.33744624f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.16562124f ? 
                 (data[6 /* X20 */] <-0.024643954f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_136_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.53462714f ? 
             (data[4 /* X18 */] <-0.034090787f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17566745f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.07303577f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24293193f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.15992956f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_137 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_137_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_137_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_137_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_137_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_137_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_137_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_137_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43033358f ? 
        0.0f : 
         (data[4 /* X18 */] <-0.206228f ? 
             (data[8 /* X23 */] <0.14202495f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.091799416f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.49296874f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12300241f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2230348f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.091799416f ? 
                     (data[10 /* X28 */] <-0.23101132f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.34389475f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.29340774f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0545578f ? 
                                    1.0f : 
                                     (data[8 /* X23 */] <0.17311369f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (data[1 /* X12 */] <-0.16621822f ? 
                                0.0f : 
                                 (data[12 /* X35 */] <-0.6045483f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.10338612f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33208716f ? 
                     (data[1 /* X12 */] <-0.053877786f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5724422f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18557428f ? 
                                0.0f : 
                                1.0f) : 
                             (data[9 /* X27 */] <0.13671464f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <-0.18410516f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.21509463f ? 
                     (data[1 /* X12 */] <-0.24817756f ? 
                         (data[12 /* X35 */] <-0.41974297f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.005534133f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23655885f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[1 /* X12 */] <0.2497156f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 114B, number of visited nodes = 28, static init size = 0B
}

class h2o_rf_10_Tree_137_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27864116f ? 
             (data[6 /* X20 */] <-0.39662504f ? 
                 (data[7 /* X21 */] <0.10761132f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.20596406f ? 
                1.0f : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.4811662f ? 
             (data[8 /* X23 */] <0.12503457f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.5577318f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.016600981f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.14007363f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-7.550582E-5f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_137_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[2 /* X15 */] <0.2282408f ? 
             (data[6 /* X20 */] <-0.8193308f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 14B, number of visited nodes = 3, static init size = 0B
}

class h2o_rf_10_Tree_137_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[9 /* X27 */] <-0.23367484f ? 
             (data[6 /* X20 */] <-0.07959571f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.89209044f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.021853682f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25801665f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4329528f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[10 /* X28 */] <0.2762662f ? 
                     (data[4 /* X18 */] <-0.18511268f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.5965271f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14753474f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.16367938f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_137_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.57133484f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
                     (data[11 /* X34 */] <-0.26875f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14753474f ? 
                             (data[6 /* X20 */] <-0.10177168f ? 
                                1.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5246875f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24126267f ? 
                                        0.0f : 
                                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.33478203f ? 
                                            1.0f : 
                                            0.0f)))) : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20178774f ? 
                                1.0f : 
                                 (data[0 /* X5 */] <0.11783873f ? 
                                    0.0f : 
                                     (data[12 /* X35 */] <-0.2305175f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        0.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.58160406f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15779628f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.57661945f ? 
                 (data[9 /* X27 */] <-0.09453736f ? 
                     (data[0 /* X5 */] <0.17499685f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_137_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18283883f ? 
             (data[10 /* X28 */] <0.62663f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0452406f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20343216f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2751693f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.06989533f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46326977f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.6267578f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_138 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_138_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_138_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_138_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_138_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_138_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_138_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_138_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
        0.02020202f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27712083f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.019134074f ? 
                 (data[9 /* X27 */] <0.07772808f ? 
                     (data[10 /* X28 */] <-0.20976478f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10993411f ? 
                         (data[0 /* X5 */] <0.1162333f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.16526118f ? 
                                 (data[3 /* X17 */] <-0.3871176f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[6 /* X20 */] <-0.57416147f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.6860958f ? 
                                0.0f : 
                                 (data[2 /* X15 */] <0.3571991f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[0 /* X5 */] <0.1653102f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2314099f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)))) : 
                 (data[12 /* X35 */] <-0.84730077f ? 
                     (data[1 /* X12 */] <-0.146827f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_138_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[10 /* X28 */] <-0.4224491f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                 (data[8 /* X23 */] <0.13736522f ? 
                     (data[1 /* X12 */] <0.2051122f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.23323919f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.23725833f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0026034203f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[8 /* X23 */] <0.12907964f ? 
             (data[10 /* X28 */] <-0.016600981f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.29683778f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.114554435f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_138_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[10 /* X28 */] <-0.037021015f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04318555f ? 
                 (data[12 /* X35 */] <-0.90838045f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5083917f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.34329188f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39244378f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.90270835f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023015728f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_138_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[3 /* X17 */] <-0.78567046f ? 
             (data[4 /* X18 */] <-0.19813061f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.8750287f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9709138f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X5 */] <0.09495412f ? 
             (data[12 /* X35 */] <-0.56862473f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <0.20801938f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.009961757f ? 
                     (data[4 /* X18 */] <-0.13048764f ? 
                         (data[3 /* X17 */] <-0.3634283f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.013488366f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[2 /* X15 */] <0.09328445f ? 
                            0.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2423008f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_138_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[4 /* X18 */] <-0.1442586f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.30201563f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22712451f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35688978f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.15595569f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X17 */] <-0.36379975f ? 
                     (data[4 /* X18 */] <0.12290672f ? 
                         (data[0 /* X5 */] <0.16173099f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[11 /* X34 */] <-0.87869775f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.18715957f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2960409f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))))) : 
         (data[11 /* X34 */] <0.12453472f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.07959571f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.16334969f ? 
                     (data[1 /* X12 */] <-0.22742261f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.15992956f ? 
                            0.0f : 
                             (data[6 /* X20 */] <0.08574024f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_138_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.34848595f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.09820272f ? 
            0.0f : 
             (data[10 /* X28 */] <0.20801938f ? 
                 (data[6 /* X20 */] <0.0023613316f ? 
                    1.0f : 
                    0.0f) : 
                 (data[5 /* X19 */] <-0.5104383f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.33655414f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.49645233f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_139 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_139_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_139_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_139_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_139_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_139_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_139_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_139_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[3 /* X17 */] <-0.32701263f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.17455475f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17703621f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.14524414f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[6 /* X20 */] <-0.30657429f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.33539477f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.36301845f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24099682f ? 
                 (data[9 /* X27 */] <-0.118337244f ? 
                     (data[2 /* X15 */] <0.21632773f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33023587f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.36152962f ? 
                     (data[3 /* X17 */] <-0.18350059f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14733584f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.12819415f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06717247f ? 
                             (data[5 /* X19 */] <0.3266702f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25219584f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2375f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.31128025f ? 
            0.0f : 
             (data[10 /* X28 */] <0.05403907f ? 
                 (data[4 /* X18 */] <-0.06706928f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_139_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2753089f ? 
             (data[6 /* X20 */] <-0.46848503f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46201253f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.39456105f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.17304687f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.10754325f ? 
                 (data[1 /* X12 */] <-0.35749504f ? 
                     (data[1 /* X12 */] <-0.4807626f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17981721f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4008521f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13690516f ? 
                     (data[2 /* X15 */] <0.22657467f ? 
                         (data[2 /* X15 */] <0.2003927f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.540345f ? 
                 (data[12 /* X35 */] <-0.77858615f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_139_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[2 /* X15 */] <0.21657792f ? 
            1.0f : 
             (data[4 /* X18 */] <-0.047861766f ? 
                 (data[3 /* X17 */] <-0.40053573f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_139_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.08439845f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.29298517f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35618216f ? 
             (data[5 /* X19 */] <0.17370412f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15565388f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055967033f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.36190096f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.059980225f ? 
                                 (data[12 /* X35 */] <0.17273f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <-0.12859553f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[11 /* X34 */] <-0.22f ? 
                                    1.0f : 
                                     (data[9 /* X27 */] <-0.09160377f ? 
                                        0.0f : 
                                        1.0f))))) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.216541f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.113834165f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_139_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[0 /* X5 */] <0.10506089f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11396246f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23725833f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.4990093f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.4196209f ? 
                    1.0f : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.26135918f ? 
                     (data[1 /* X12 */] <-0.4464202f ? 
                        1.0f : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.11947085f ? 
                         (data[12 /* X35 */] <-0.11434453f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24505149f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17734376f ? 
                             (data[2 /* X15 */] <0.12674835f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.40985042f ? 
                                    0.0f : 
                                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25355372f ? 
                                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20604391f ? 
                                             (data[11 /* X34 */] <-0.7174159f ? 
                                                0.0f : 
                                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.056123003f ? 
                                                     (data[5 /* X19 */] <-0.08228726f ? 
                                                        0.0f : 
                                                         (data[12 /* X35 */] <0.5047586f ? 
                                                             (data[12 /* X35 */] <0.28761944f ? 
                                                                1.0f : 
                                                                0.0f) : 
                                                            1.0f)) : 
                                                    1.0f)) : 
                                            0.0f) : 
                                        1.0f))) : 
                            0.0f))))) : 
         (data[9 /* X27 */] <-0.07962978f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11907601f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_139_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[2 /* X15 */] <0.08661994f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38578522f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26302785f ? 
                    0.0f : 
                     (data[9 /* X27 */] <-0.061409395f ? 
                         (data[6 /* X20 */] <0.24990785f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[5 /* X19 */] <0.11762687f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26281247f ? 
            1.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.0054723746f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_140 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_140_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_140_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_140_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_140_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_140_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_140_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_140_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049764123f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.11487873f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11536929f ? 
                     (data[5 /* X19 */] <0.14753474f ? 
                         (data[3 /* X17 */] <-0.3658552f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.20323527f ? 
                                1.0f : 
                                 (data[12 /* X35 */] <-0.77917045f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                                 (data[7 /* X21 */] <0.10044784f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[10 /* X28 */] <-0.22130667f ? 
                             (data[0 /* X5 */] <0.12167787f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (data[5 /* X19 */] <0.1774426f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08843512f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.2399037f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[7 /* X21 */] <0.13944142f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.3837507f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15480062f ? 
                                     (data[6 /* X20 */] <-0.7203623f ? 
                                        1.0f : 
                                         (data[0 /* X5 */] <0.07371546f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f) : 
                                1.0f)))) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_140_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06368315f ? 
             (data[4 /* X18 */] <-0.321372f ? 
                 (data[3 /* X17 */] <-0.07354382f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4015625f ? 
                 (data[0 /* X5 */] <0.14296128f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.22696021f ? 
             (data[5 /* X19 */] <-0.06929729f ? 
                 (data[4 /* X18 */] <-0.06438694f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2782949f ? 
                     (data[5 /* X19 */] <0.13246398f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.33908257f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.21716288f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_140_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.18949921f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5800772f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6681641f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.42888457f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17616923f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.03508567f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[7 /* X21 */] <0.13707465f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8204617f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_140_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97121805f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16785504f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.21378681f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4224297f ? 
                     (data[4 /* X18 */] <-0.16333316f ? 
                         (data[5 /* X19 */] <-0.07730509f ? 
                            1.0f : 
                            0.0f) : 
                         (data[1 /* X12 */] <-0.54051614f ? 
                            0.0f : 
                             (data[9 /* X27 */] <-0.095848985f ? 
                                 (data[2 /* X15 */] <0.13327152f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.54758656f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.38145313f ? 
                        0.0f : 
                        1.0f))) : 
             (data[11 /* X34 */] <-0.8743164f ? 
                 (data[6 /* X20 */] <0.48491466f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_140_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[4 /* X18 */] <-0.59594667f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.07402344f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28212014f ? 
                     (data[10 /* X28 */] <-0.10533875f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.28369224f ? 
                            1.0f : 
                            0.0f) : 
                         (data[5 /* X19 */] <-0.09313011f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19448242f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25056693f ? 
                                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2607483f ? 
                                        0.0f : 
                                         (data[4 /* X18 */] <-0.23433575f ? 
                                            1.0f : 
                                            0.0f)) : 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5875f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (data[9 /* X27 */] <0.045472696f ? 
                                     (data[0 /* X5 */] <0.10685709f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)))) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24458788f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.15144849f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042353373f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.07354382f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_140_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.34848595f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.37680113f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.30192107f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.51431984f ? 
                     (data[6 /* X20 */] <-0.00261702f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.479214f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.616716f ? 
                                0.0f : 
                                1.0f) : 
                             (data[9 /* X27 */] <-0.11992693f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.14802417f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4092775f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.10736329f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.19725083f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_141 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_141_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_141_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_141_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_141_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_141_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_141_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_141_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[12 /* X35 */] <0.06889453f ? 
             (data[10 /* X28 */] <-0.20548628f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6200414f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2698133f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.28929406f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22961438f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0135356765f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0291426f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.21324566f ? 
                            0.0f : 
                             (data[1 /* X12 */] <0.2450867f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[0 /* X5 */] <0.10563218f ? 
                         (data[9 /* X27 */] <0.30188817f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.024239082f ? 
                 (data[4 /* X18 */] <-0.13599601f ? 
                     (data[11 /* X34 */] <-0.3296875f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4570712f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[7 /* X21 */] <0.13748962f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.14614427f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.24346374f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18937427f ? 
                                    0.0f : 
                                    1.0f))))) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_141_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.14007363f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23220181f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.40507916f ? 
                         (data[11 /* X34 */] <-0.05546875f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.22451569f ? 
                                1.0f : 
                                0.0f) : 
                             (data[4 /* X18 */] <0.010527179f ? 
                                 (data[7 /* X21 */] <0.15516303f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.19876948f ? 
            0.0f : 
             (data[7 /* X21 */] <0.13831957f ? 
                 (data[7 /* X21 */] <0.0834846f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15481931f ? 
                     (data[7 /* X21 */] <0.14471824f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.16582745f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6410145f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_141_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39575657f ? 
         (data[12 /* X35 */] <-0.5800772f ? 
             (data[10 /* X28 */] <-0.5168918f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.08779913f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08647724f ? 
                         (data[4 /* X18 */] <-0.0864205f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f) : 
         (data[0 /* X5 */] <0.14584891f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17732735f ? 
                 (data[7 /* X21 */] <0.13699657f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_141_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[9 /* X27 */] <-0.024968628f ? 
             (data[0 /* X5 */] <0.093149334f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.08437265f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.08343746f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.15154392f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26875f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.14349131f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18971047f ? 
                                 (data[6 /* X20 */] <0.0396752f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))))) : 
             (data[0 /* X5 */] <0.1025342f ? 
                 (data[10 /* X28 */] <-0.026810998f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.097437285f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1578125f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37153628f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.08525955f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.633041f ? 
                            0.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.38432744f ? 
                                 (data[3 /* X17 */] <-0.22803909f ? 
                                    1.0f : 
                                     (data[7 /* X21 */] <0.19504893f ? 
                                        1.0f : 
                                        0.0f)) : 
                                0.0f))) : 
                     (data[1 /* X12 */] <-0.6161458f ? 
                        0.0f : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_141_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.18283883f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4525513f ? 
             (data[0 /* X5 */] <0.10975332f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.67090636f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.7405953f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2726852f ? 
                             (data[7 /* X21 */] <0.118677646f ? 
                                0.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.33853605f ? 
                                    1.0f : 
                                     (data[12 /* X35 */] <0.20867473f ? 
                                        0.0f : 
                                        1.0f))) : 
                             (data[7 /* X21 */] <0.1496627f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18941528f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))))) : 
            1.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29537702f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.40200967f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21348543f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.16980071f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25363624f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08380469f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.37285683f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[10 /* X28 */] <0.5104468f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X28 */] <0.18759935f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.77849704f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_141_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[9 /* X27 */] <0.036318116f ? 
             (data[10 /* X28 */] <0.019134074f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5092148f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.39595208f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5092148f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.28267345f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.21184811f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.15740849f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26696223f ? 
                    1.0f : 
                     (data[6 /* X20 */] <0.84612995f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_142 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_142_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_142_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_142_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_142_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_142_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_142_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_142_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[4 /* X18 */] <-0.23514706f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2063132f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18347682f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24547279f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20218039f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[9 /* X27 */] <0.11748164f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.16090925f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3298746f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23825367f ? 
                     (data[6 /* X20 */] <-0.88244677f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.59041935f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20650478f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.2666629f ? 
                                     (data[2 /* X15 */] <0.30835378f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.27946177f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16750628f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18007003f ? 
                         (data[0 /* X5 */] <0.08448639f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
         (data[10 /* X28 */] <0.019134074f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08817047f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_142_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[4 /* X18 */] <-0.3935133f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.044659115f ? 
                 (data[3 /* X17 */] <-0.3330476f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.26821384f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0775151f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26568633f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.095553435f ? 
                                    1.0f : 
                                     (data[0 /* X5 */] <0.08665213f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19193451f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[8 /* X23 */] <0.14499386f ? 
                             (data[0 /* X5 */] <0.17328158f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.29517567f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_142_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10246327f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.075287685f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.21491179f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.28672156f ? 
                        0.0f : 
                         (data[1 /* X12 */] <0.44425017f ? 
                            1.0f : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_142_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
        0.020833334f : 
         (data[8 /* X23 */] <0.101861306f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.080347955f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29346833f ? 
                     (data[10 /* X28 */] <-0.5800988f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40238217f ? 
                         (data[7 /* X21 */] <0.19713154f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.22370748f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.18046522f ? 
                                     (data[10 /* X28 */] <-0.039271317f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f))) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_142_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[1 /* X12 */] <-0.44744173f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22140062f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22157629f ? 
                 (data[8 /* X23 */] <0.14733584f ? 
                     (data[0 /* X5 */] <0.10686567f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19610704f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[2 /* X15 */] <0.1286376f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.12172537f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.18583982f ? 
                     (data[10 /* X28 */] <-0.18560466f ? 
                        1.0f : 
                        0.0f) : 
                     (data[5 /* X19 */] <-0.24126752f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.104662366f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28807452f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.32339904f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4781329f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_142_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (data[1 /* X12 */] <-1.0462272f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37606156f ? 
                 (data[8 /* X23 */] <0.118125916f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.11515928f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25073352f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0103f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_143 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_143_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_143_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_143_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_143_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_143_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_143_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_143_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[5 /* X19 */] <0.22791213f ? 
             (data[4 /* X18 */] <-0.20760511f ? 
                 (data[0 /* X5 */] <0.09531508f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.14343847f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.146875f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.106028534f ? 
                                1.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20894368f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (data[6 /* X20 */] <-0.7939685f ? 
                     (data[11 /* X34 */] <0.4015625f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.26376873f ? 
                        0.0f : 
                         (data[0 /* X5 */] <0.1386298f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22480358f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24084547f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.08380469f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.32287505f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.12619087f ? 
                                1.0f : 
                                 (data[7 /* X21 */] <0.13899574f ? 
                                    0.0f : 
                                     (data[11 /* X34 */] <0.4625f ? 
                                        1.0f : 
                                         (data[2 /* X15 */] <0.14393474f ? 
                                            1.0f : 
                                            0.0f))))) : 
                         (data[9 /* X27 */] <0.45538694f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.24005161f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (data[10 /* X28 */] <0.05590733f ? 
             (data[3 /* X17 */] <-0.21536565f ? 
                 (data[12 /* X35 */] <0.091799416f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_143_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3220149f ? 
            0.0f : 
             (data[10 /* X28 */] <-0.11063636f ? 
                 (data[2 /* X15 */] <0.18158923f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.39662504f ? 
             (data[3 /* X17 */] <-0.2224084f ? 
                 (data[5 /* X19 */] <0.1550117f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.24249904f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24824283f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.34101585f ? 
                         (data[0 /* X5 */] <0.13494262f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12946726f ? 
                                1.0f : 
                                 (data[0 /* X5 */] <0.13199541f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                         (data[9 /* X27 */] <-0.026963511f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.695937f ? 
                        0.0f : 
                        1.0f))) : 
             (data[3 /* X17 */] <-0.1767041f ? 
                 (data[10 /* X28 */] <-0.15324819f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_143_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.17600037f ? 
             (data[7 /* X21 */] <0.18562688f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.10109037f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.9389203f ? 
                         (data[11 /* X34 */] <0.49296874f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.7369032f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18645683f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X17 */] <-0.7585131f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5737218f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.13671404f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32698193f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.3950729f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_143_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.055438902f ? 
         (data[5 /* X19 */] <-0.62072355f ? 
            1.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1504403f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.46816322f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18749112f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.034534857f ? 
                            0.0f : 
                             (data[10 /* X28 */] <0.45114097f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.16326182f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.030629657f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4155164f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[4 /* X18 */] <0.28629962f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23796943f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
         (data[6 /* X20 */] <-0.0013951365f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.25368837f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5665167f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5078707f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4659125f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1262077f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_143_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (data[3 /* X17 */] <-0.45072955f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17291823f ? 
                 (data[5 /* X19 */] <0.17258847f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.046402663f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.25234553f ? 
                 (data[0 /* X5 */] <0.16461864f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                         (data[3 /* X17 */] <-0.2825374f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14327252f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <-0.034830168f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (data[9 /* X27 */] <0.0048465445f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6674059f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.099434376f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[10 /* X28 */] <-0.41291136f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.17047745f ? 
             (data[2 /* X15 */] <0.13867208f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.31950498f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25052616f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30299827f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03133659f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36302927f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.4325732f ? 
                             (data[0 /* X5 */] <0.16023682f ? 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12274828f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3461545f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_143_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.34739545f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.08994664f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.85881114f ? 
             (data[4 /* X18 */] <-0.034090787f ? 
                 (data[3 /* X17 */] <-0.081520535f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_10_Forest_144 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_144_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_144_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_144_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_144_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_144_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_144_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_144_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18217331f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21799503f ? 
                 (data[11 /* X34 */] <-0.30683595f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.08779913f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.042353373f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[12 /* X35 */] <-0.40447304f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25595075f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2553429f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.29758358f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.32084826f ? 
                     (data[1 /* X12 */] <0.12690349f ? 
                         (data[7 /* X21 */] <0.12611382f ? 
                             (data[8 /* X23 */] <0.17618366f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.63025624f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.09575654f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <0.18678395f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_144_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[0 /* X5 */] <0.13177164f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.4065165f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5996094f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        0.023952097f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_144_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.18949921f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.34329188f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19363928f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.47011718f ? 
                     (data[0 /* X5 */] <0.13409513f ? 
                         (data[7 /* X21 */] <0.13418598f ? 
                             (data[6 /* X20 */] <-0.46131858f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[7 /* X21 */] <0.19392641f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.6548123f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f) : 
            1.0f) : 
        0.00862069f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_144_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[3 /* X17 */] <-0.7404082f ? 
             (data[5 /* X19 */] <0.031641755f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9686656f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X5 */] <0.09495412f ? 
             (data[12 /* X35 */] <-0.56862473f ? 
                0.0f : 
                1.0f) : 
             (data[10 /* X28 */] <0.25906944f ? 
                 (data[5 /* X19 */] <-0.09920515f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2616071f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.62859756f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_144_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[0 /* X5 */] <0.13429832f ? 
             (data[2 /* X15 */] <0.13577071f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.10072941f ? 
             (data[10 /* X28 */] <-0.09828111f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22169687f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[12 /* X35 */] <-0.11816201f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.70042944f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1774426f ? 
                         (data[6 /* X20 */] <-0.020449927f ? 
                             (data[3 /* X17 */] <-0.459782f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17706968f ? 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.12969624f ? 
                                         (data[1 /* X12 */] <-0.58021384f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f) : 
                             (data[7 /* X21 */] <0.16790013f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <-0.6529011f ? 
                                    1.0f : 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.47525033f ? 
                                         (data[5 /* X19 */] <-0.3771603f ? 
                                            1.0f : 
                                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35006f ? 
                                                 (data[10 /* X28 */] <0.62663f ? 
                                                    1.0f : 
                                                     (data[6 /* X20 */] <0.44048944f ? 
                                                         (data[1 /* X12 */] <-0.8093534f ? 
                                                            1.0f : 
                                                            0.0f) : 
                                                        0.0f)) : 
                                                0.0f)) : 
                                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.18716694f ? 
                                            0.0f : 
                                            1.0f))))) : 
                         (data[8 /* X23 */] <0.1462656f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.16f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.30528674f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_144_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (data[3 /* X17 */] <-0.59556884f ? 
             (data[6 /* X20 */] <-0.19494717f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                0.0f : 
                 (data[7 /* X21 */] <0.20886555f ? 
                    1.0f : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.15378995f ? 
             (data[0 /* X5 */] <0.0983689f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.31445312f ? 
                    0.0f : 
                     (data[12 /* X35 */] <0.14224812f ? 
                        1.0f : 
                         (data[5 /* X19 */] <-0.12285067f ? 
                             (data[8 /* X23 */] <0.26008657f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (data[10 /* X28 */] <0.47347978f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.85863775f ? 
                     (data[4 /* X18 */] <-0.0323139f ? 
                         (data[11 /* X34 */] <-0.6039063f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_145 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_145_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_145_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_145_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_145_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_145_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_145_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_145_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[3 /* X17 */] <-0.22592685f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2124126f ? 
                 (data[10 /* X28 */] <-0.21059129f ? 
                     (data[12 /* X35 */] <-0.265979f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
             (data[6 /* X20 */] <-0.49425852f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                     (data[6 /* X20 */] <-0.784536f ? 
                         (data[1 /* X12 */] <0.5123956f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[1 /* X12 */] <0.37898588f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.6191406f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10104895f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17068774f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1921552f ? 
                                 (data[0 /* X5 */] <0.11897833f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[1 /* X12 */] <0.23602472f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.27962285f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.45980036f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))))) : 
             (data[12 /* X35 */] <0.20888813f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20019531f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.19424325f ? 
                         (data[1 /* X12 */] <-0.16637918f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_145_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
             (data[2 /* X15 */] <0.16909327f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2801403f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.115809105f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25752622f ? 
                     (data[6 /* X20 */] <-0.4388956f ? 
                         (data[3 /* X17 */] <-0.2080153f ? 
                             (data[1 /* X12 */] <-0.25372294f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.60163736f ? 
             (data[6 /* X20 */] <-0.74468464f ? 
                 (data[11 /* X34 */] <0.36347657f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11957528f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.012057224f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.3482422f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20804721f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_145_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16534054f ? 
             (data[2 /* X15 */] <0.24990046f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24293193f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_145_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.12269614f ? 
         (data[0 /* X5 */] <0.15378995f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.12941156f ? 
                 (data[10 /* X28 */] <-0.037021015f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19570744f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.0029990566f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.053556617f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2192952f ? 
                 (data[11 /* X34 */] <-0.8171875f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1792012f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3281222f ? 
                        0.0f : 
                         (data[4 /* X18 */] <0.12052143f ? 
                             (data[1 /* X12 */] <-0.44010967f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_145_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.39528912f ? 
             (data[0 /* X5 */] <0.11015299f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.002586291f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14777692f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[3 /* X17 */] <-0.22862245f ? 
                     (data[12 /* X35 */] <-0.09524221f ? 
                         (data[1 /* X12 */] <-0.27227408f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.02375f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (data[4 /* X18 */] <-0.769461f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.114612356f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.15587106f ? 
                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.15111353f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[1 /* X12 */] <-0.87188107f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.931051f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)))))) : 
             (data[6 /* X20 */] <-0.16836393f ? 
                 (data[1 /* X12 */] <-0.33399236f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.31445312f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5269922f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_145_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51172227f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13993603f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.4836898f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.43610534f ? 
             (data[1 /* X12 */] <-0.3850022f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.39806473f ? 
                     (data[6 /* X20 */] <-0.16049178f ? 
                         (data[11 /* X34 */] <-0.4439128f ? 
                             (data[12 /* X35 */] <0.211366f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <0.16971968f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_146 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_146_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_146_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_146_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_146_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_146_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_146_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_146_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[3 /* X17 */] <-0.32097766f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22961438f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.50533676f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.5505404f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22604288f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36153102f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.3573568f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16461864f ? 
                         (data[1 /* X12 */] <-0.28127986f ? 
                             (data[1 /* X12 */] <-0.43399206f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[1 /* X12 */] <0.3496911f ? 
                             (data[3 /* X17 */] <0.21641703f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))))) : 
         (data[6 /* X20 */] <-0.11763923f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.21923828f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_146_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[3 /* X17 */] <-0.28024158f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4727121f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18491957f ? 
                     (data[10 /* X28 */] <-0.43521163f ? 
                         (data[10 /* X28 */] <-0.5541515f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5052881f ? 
                         (data[12 /* X35 */] <-0.8561287f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6638311f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.79055387f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                        0.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.31661135f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_146_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[4 /* X18 */] <-0.05750145f ? 
             (data[6 /* X20 */] <-0.4304415f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23044433f ? 
                 (data[7 /* X21 */] <0.08044187f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.00546875f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_146_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15880258f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07257838f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <0.0049454505f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23127428f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17716214f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33564457f ? 
                 (data[10 /* X28 */] <-0.08788175f ? 
                     (data[10 /* X28 */] <-0.58211833f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5461953f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22318916f ? 
                         (data[1 /* X12 */] <-0.7138401f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_146_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[1 /* X12 */] <-0.44744173f ? 
            1.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2677922f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0079283f ? 
             (data[5 /* X19 */] <0.19239654f ? 
                 (data[0 /* X5 */] <0.17329456f ? 
                     (data[0 /* X5 */] <0.1178689f ? 
                         (data[2 /* X15 */] <0.17325859f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3193272f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10016957f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.30107966f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24656822f ? 
                     (data[1 /* X12 */] <-0.8898097f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.41761562f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.27145016f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <-0.5775f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.49902838f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2447353f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0291426f ? 
                        0.0f : 
                        1.0f) : 
                     (data[3 /* X17 */] <0.116840675f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.64997417f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.1559487f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_146_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[4 /* X18 */] <0.10361899f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22629456f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.011472139f ? 
                    1.0f : 
                    0.0f)) : 
             (data[5 /* X19 */] <-0.114159085f ? 
                 (data[10 /* X28 */] <0.75936025f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.62931657f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4910571f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49389982f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.72578126f ? 
                 (data[12 /* X35 */] <0.42773768f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_147 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_147_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_147_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_147_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_147_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_147_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_147_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_147_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[4 /* X18 */] <-0.13737312f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                 (data[9 /* X27 */] <0.08435367f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10735131f ? 
                         (data[12 /* X35 */] <-0.8380675f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13631968f ? 
                                1.0f : 
                                 (data[12 /* X35 */] <-0.9311787f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18194452f ? 
                 (data[3 /* X17 */] <-0.40546724f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.45211294f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06770235f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4015625f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[1 /* X12 */] <0.44951442f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.18003981f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.04926758f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18479693f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_147_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[4 /* X18 */] <-0.3935133f ? 
             (data[5 /* X19 */] <0.05781114f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6897775f ? 
                 (data[0 /* X5 */] <0.12419156f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.21808542f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0712955f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.49839488f ? 
                             (data[9 /* X27 */] <0.21710871f ? 
                                 (data[8 /* X23 */] <0.24495018f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.18949158f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.48962033f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <1.110223E-16f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_147_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (data[7 /* X21 */] <0.08561758f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.67197263f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6052921f ? 
                     (data[11 /* X34 */] <0.36785278f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40238217f ? 
                             (data[4 /* X18 */] <-0.5369387f ? 
                                1.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12299305f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <0.41910496f ? 
                                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.052555423f ? 
                                            1.0f : 
                                            0.0f) : 
                                        0.0f))) : 
                            1.0f)) : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.42496f ? 
                    0.0f : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_147_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.29778978f ? 
            0.0f : 
             (data[10 /* X28 */] <0.590895f ? 
                1.0f : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.7981445f ? 
             (data[4 /* X18 */] <-0.13875021f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22712451f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
                 (data[9 /* X27 */] <-0.23367484f ? 
                     (data[8 /* X23 */] <0.12994964f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16813678f ? 
                         (data[9 /* X27 */] <0.07505391f ? 
                             (data[7 /* X21 */] <0.19811238f ? 
                                 (data[12 /* X35 */] <0.2736484f ? 
                                    0.0f : 
                                     (data[4 /* X18 */] <-0.28224817f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.73380107f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <0.34435335f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08459456f ? 
                                 (data[7 /* X21 */] <0.1319327f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_147_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28065646f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23354441f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.17711198f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48858064f ? 
             (data[12 /* X35 */] <-0.047346625f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.23045307f ? 
                     (data[1 /* X12 */] <-0.8898097f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.07308994f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.014908176f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36525363f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.66699535f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2694864f ? 
                             (data[5 /* X19 */] <-0.22868648f ? 
                                1.0f : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.014579571f ? 
                                    0.0f : 
                                     (data[4 /* X18 */] <-0.19745792f ? 
                                        1.0f : 
                                        0.0f))) : 
                             (data[6 /* X20 */] <0.27801338f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19724621f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40624192f ? 
                 (data[6 /* X20 */] <-0.2698133f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_147_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3914324f ? 
            0.0f : 
            1.0f) : 
         (data[5 /* X19 */] <0.05968038f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39179966f ? 
                 (data[7 /* X21 */] <0.12587029f ? 
                     (data[7 /* X21 */] <0.082937635f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[9 /* X27 */] <-0.18067008f ? 
                     (data[8 /* X23 */] <0.25355372f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41875f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.19513388f ? 
                            0.0f : 
                            1.0f)))) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.30322576f ? 
                 (data[3 /* X17 */] <-0.8218803f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06761106f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.22518905f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_148 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_148_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_148_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_148_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_148_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_148_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_148_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_148_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[5 /* X19 */] <0.15314247f ? 
             (data[0 /* X5 */] <0.09531508f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27655852f ? 
                     (data[4 /* X18 */] <-0.22810589f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2313122f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.30403787f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17587496f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <-0.3203699f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.2049461f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.578125f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[8 /* X23 */] <0.15414576f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1525212f ? 
                     (data[10 /* X28 */] <-0.26423377f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12147428f ? 
                             (data[11 /* X34 */] <-0.3175f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5928929f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.26875f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                     (data[11 /* X34 */] <-0.23828125f ? 
                         (data[1 /* X12 */] <-0.09930055f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (data[8 /* X23 */] <0.16492817f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4428749f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.36015624f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_148_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25221226f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09192889f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2365039f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2789474f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1418075f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.1215827f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[10 /* X28 */] <-0.36416316f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17981721f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.61440116f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.023747317f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.24446344f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17996359f ? 
                             (data[6 /* X20 */] <-0.26305002f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.061164092f ? 
                 (data[12 /* X35 */] <-0.47318769f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_148_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18185665f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20388584f ? 
                 (data[4 /* X18 */] <-0.03133659f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_148_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[9 /* X27 */] <-0.026625026f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.19570744f ? 
                 (data[9 /* X27 */] <-0.48401746f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <-0.21311349f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19105391f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1499703f ? 
                        1.0f : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.07077006f ? 
                 (data[11 /* X34 */] <-0.61152345f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.47816f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.08029904f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.12317367f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.061588027f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.75625f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3831556f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.11569437f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2393387f ? 
                                        0.0f : 
                                        1.0f)) : 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26034337f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_148_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2858586f ? 
             (data[4 /* X18 */] <-0.5491253f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.30683595f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21593268f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.23011674f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2238047f ? 
                             (data[12 /* X35 */] <-0.022725f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <0.51020813f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[1 /* X12 */] <-0.9489604f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.16194265f ? 
                                     (data[11 /* X34 */] <-0.36625f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.7108641f ? 
                                        1.0f : 
                                        0.0f)))) : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.14202495f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13551529f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5547708f ? 
                 (data[12 /* X35 */] <-0.5113625f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41994867f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.3175f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18313701f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.061409395f ? 
                1.0f : 
                 (data[11 /* X34 */] <-0.29160157f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_148_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
        0.016666668f : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.25949267f ? 
            1.0f : 
             (data[10 /* X28 */] <1.1529768f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.074660584f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}


class h2o_rf_10_Forest_149 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_149_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_149_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_149_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_149_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_149_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_149_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_149_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[7 /* X21 */] <0.1432993f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18514776f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18701479f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.40866137f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12780112f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.058470864f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23306039f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29962057f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.014029066f ? 
                     (data[1 /* X12 */] <-0.28369224f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17328158f ? 
                             (data[7 /* X21 */] <0.13724263f ? 
                                1.0f : 
                                0.0f) : 
                             (data[9 /* X27 */] <0.07173578f ? 
                                0.0f : 
                                 (data[5 /* X19 */] <0.27299073f ? 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.23504274f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)))) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <8.8072225E-4f ? 
                     (data[6 /* X20 */] <-0.54145235f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_149_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[8 /* X23 */] <0.08592862f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.5276638f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.3935133f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.49384737f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3696612f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.49839488f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.32500613f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19193451f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.27207068f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.16611405f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.40602916f ? 
                                1.0f : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_149_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.18969832f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19372627f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.12702353f ? 
            1.0f : 
             (data[6 /* X20 */] <-0.34167328f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.13307592f ? 
                     (data[8 /* X23 */] <0.1283758f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_149_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (data[8 /* X23 */] <0.12941156f ? 
             (data[6 /* X20 */] <0.0049454505f ? 
                0.0f : 
                1.0f) : 
             (data[0 /* X5 */] <0.10542184f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07532424f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.396284f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.045779243f ? 
                 (data[0 /* X5 */] <0.089539774f ? 
                     (data[11 /* X34 */] <0.06186868f ? 
                         (data[7 /* X21 */] <0.31011978f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25906944f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.19643404f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.48141414f ? 
                             (data[5 /* X19 */] <-0.08228726f ? 
                                1.0f : 
                                 (data[7 /* X21 */] <0.15688321f ? 
                                    0.0f : 
                                     (data[0 /* X5 */] <0.16090928f ? 
                                        0.0f : 
                                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23891756f ? 
                                            1.0f : 
                                            0.0f)))) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_149_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[7 /* X21 */] <0.1520138f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0035086654f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15451187f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27989078f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.045779243f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                    1.0f : 
                    0.0f) : 
                 (data[4 /* X18 */] <0.029255709f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.33612624f ? 
                         (data[7 /* X21 */] <0.23198585f ? 
                            0.0f : 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.051829565f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.33991164f ? 
                                     (data[3 /* X17 */] <-0.34391055f ? 
                                        0.0f : 
                                         (data[11 /* X34 */] <-0.43125f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    1.0f) : 
                                1.0f)) : 
                        1.0f)))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29537702f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20218039f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.16313113f ? 
                     (data[5 /* X19 */] <-0.07598052f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.21052545f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.38274866f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <0.03850315f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.25240877f ? 
                                1.0f : 
                                 (data[8 /* X23 */] <0.18797392f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.31044427f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_149_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[11 /* X34 */] <-0.49345702f ? 
             (data[8 /* X23 */] <0.1433585f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.60621f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3937711f ? 
                    1.0f : 
                    0.0f)) : 
             (data[8 /* X23 */] <0.13415696f ? 
                 (data[4 /* X18 */] <-0.42794076f ? 
                    0.0f : 
                    1.0f) : 
                 (data[2 /* X15 */] <0.17325859f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1634197f ? 
                         (data[5 /* X19 */] <-0.16231613f ? 
                             (data[1 /* X12 */] <-0.12727483f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22204939f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4191971f ? 
                 (data[1 /* X12 */] <-0.81160104f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23825997f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38158965f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f) : 
             (data[4 /* X18 */] <0.22577274f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.13478301f ? 
                     (data[7 /* X21 */] <0.15408868f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}


class h2o_rf_10_Forest_150 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_150_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_150_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_150_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_150_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_150_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_150_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_150_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.11450195f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.3150187f ? 
                 (data[0 /* X5 */] <0.16895011f ? 
                    1.0f : 
                     (data[9 /* X27 */] <-0.08459897f ? 
                         (data[11 /* X34 */] <-0.022679178f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (data[12 /* X35 */] <-0.48464015f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.30263096f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.1296733f ? 
                 (data[2 /* X15 */] <0.14660054f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5566819f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3244132f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.21256351f ? 
                     (data[0 /* X5 */] <0.16538103f ? 
                         (data[7 /* X21 */] <0.10429151f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[11 /* X34 */] <-0.15697187f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26704374f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.50931746f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02492632f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[12 /* X35 */] <0.19411682f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_150_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.3274126f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.41776034f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.01118164f ? 
             (data[12 /* X35 */] <-0.77476865f ? 
                 (data[1 /* X12 */] <-0.10909472f ? 
                    0.0f : 
                    1.0f) : 
                 (data[4 /* X18 */] <-0.19704556f ? 
                     (data[6 /* X20 */] <-0.57416147f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[5 /* X19 */] <0.08398052f ? 
                 (data[8 /* X23 */] <0.10086551f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.2224876f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.28988755f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66875f ? 
                             (data[11 /* X34 */] <0.21484375f ? 
                                 (data[7 /* X21 */] <0.13881755f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.34197745f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.15764989f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_150_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39575657f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.114683375f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.08366631f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.8966797f ? 
                    1.0f : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.16173099f ? 
                     (data[8 /* X23 */] <0.10138055f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4682129f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.16600785f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.14771803f ? 
                     (data[3 /* X17 */] <-0.006831341f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_150_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[11 /* X34 */] <-0.7733887f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022246558f ? 
                 (data[12 /* X35 */] <0.023084765f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16486412f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.37295866f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09571751f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2821668f ? 
                             (data[4 /* X18 */] <-0.35372967f ? 
                                 (data[9 /* X27 */] <-4.539308E-4f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_150_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14563571f ? 
         (data[11 /* X34 */] <-0.3182617f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.0035086654f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47656178f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09392799f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0071591293f ? 
                     (data[6 /* X20 */] <-0.16836393f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2668457f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21108896f ? 
                 (data[8 /* X23 */] <0.1340586f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.18636636f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.47275546f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.56364f ? 
                                0.0f : 
                                 (data[12 /* X35 */] <0.645455f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (data[10 /* X28 */] <-0.15749921f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <-0.10612562f ? 
                                    0.0f : 
                                    1.0f))))) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.108350866f ? 
                     (data[1 /* X12 */] <-0.7529445f ? 
                        0.0f : 
                        1.0f) : 
                     (data[1 /* X12 */] <-0.6551836f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_150_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23375472f ? 
         (data[1 /* X12 */] <-0.7187282f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22540069f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.38400215f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.64915156f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1799231f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.03134892f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.12417253f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0011241575f ? 
                    0.0f : 
                     (data[3 /* X17 */] <0.005873549f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.119942494f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24655566f ? 
             (data[5 /* X19 */] <-0.10668212f ? 
                1.0f : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_151 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_151_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_151_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_151_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_151_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_151_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_151_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_151_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[6 /* X20 */] <-0.4875068f ? 
             (data[10 /* X28 */] <-0.43521163f ? 
                 (data[7 /* X21 */] <0.087692454f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13391514f ? 
                     (data[12 /* X35 */] <-0.9761906f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5624037f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20552422f ? 
                 (data[11 /* X34 */] <-0.6191406f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.08435367f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.10814436f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0488276f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <0.23890632f ? 
                                     (data[8 /* X23 */] <0.19245945f ? 
                                        0.0f : 
                                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.042823274f ? 
                                            1.0f : 
                                            0.0f)) : 
                                    1.0f)) : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6392472f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23716702f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.43739617f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1578125f ? 
                        0.0f : 
                        1.0f))) : 
             (data[7 /* X21 */] <0.15491863f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_151_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[6 /* X20 */] <-0.4875068f ? 
             (data[9 /* X27 */] <-0.10447575f ? 
                 (data[4 /* X18 */] <-0.35812792f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.40740252f ? 
                     (data[2 /* X15 */] <0.23059767f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2225828f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06219447f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34077793f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15906839f ? 
                     (data[0 /* X5 */] <0.1501804f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_151_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (data[8 /* X23 */] <0.09887393f ? 
            1.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.41232055f ? 
                 (data[10 /* X28 */] <-0.47605172f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25519612f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.19230874f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.31040183f ? 
                                0.0f : 
                                1.0f)))) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.795455f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_151_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.13809778f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.15085492f ? 
                0.0f : 
                1.0f)) : 
         (data[9 /* X27 */] <0.14564042f ? 
             (data[0 /* X5 */] <0.099646546f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38158965f ? 
                     (data[6 /* X20 */] <-0.01618984f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.17613968f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1806581f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47260743f ? 
                                1.0f : 
                                 (data[6 /* X20 */] <0.24328592f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.46848235f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.1490267f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.01970241f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16637918f ? 
                            0.0f : 
                             (data[3 /* X17 */] <0.07830277f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[4 /* X18 */] <-0.0636008f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_151_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29537702f ? 
            0.0f : 
            1.0f) : 
         (data[4 /* X18 */] <-0.1442586f ? 
             (data[9 /* X27 */] <-0.005443213f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.05922556f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.0359375f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[7 /* X21 */] <0.0993118f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26281247f ? 
                 (data[3 /* X17 */] <-0.4839219f ? 
                     (data[2 /* X15 */] <0.12773436f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3673163f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23384963f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8190768f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[12 /* X35 */] <0.079545155f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.48260298f ? 
                     (data[9 /* X27 */] <0.046662956f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1588635f ? 
                             (data[0 /* X5 */] <0.14783391f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_151_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.45090005f ? 
            0.0f : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06989533f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.16406839f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2461947f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.51431984f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24873279f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.017837882f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_152 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_152_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_152_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_152_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_152_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_152_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_152_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_152_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30321655f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
             (data[3 /* X17 */] <-0.32399514f ? 
                 (data[2 /* X15 */] <0.10786307f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.10340942f ? 
                         (data[11 /* X34 */] <-0.29921874f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.16860569f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.67434466f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.23340221f ? 
                     (data[7 /* X21 */] <0.07441322f ? 
                        1.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24336793f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.29404765f ? 
                                 (data[5 /* X19 */] <0.26957822f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.04380673f ? 
                0.0f : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.52977735f ? 
             (data[8 /* X23 */] <0.16393238f ? 
                 (data[2 /* X15 */] <0.34688732f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.18519026f ? 
                0.0f : 
                 (data[11 /* X34 */] <0.38632813f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23762104f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_152_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
             (data[6 /* X20 */] <-0.4008521f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24533789f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06438694f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.12811974f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19197422f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.27787724f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.48962033f ? 
             (data[1 /* X12 */] <-0.1908194f ? 
                 (data[3 /* X17 */] <-0.20649266f ? 
                    0.0f : 
                    1.0f) : 
                 (data[0 /* X5 */] <0.11841626f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.23803312f ? 
                 (data[2 /* X15 */] <0.3083158f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_152_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (data[12 /* X35 */] <-0.90838045f ? 
             (data[4 /* X18 */] <-0.047861766f ? 
                 (data[1 /* X12 */] <-0.097946554f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18337426f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[8 /* X23 */] <0.12609226f ? 
                    1.0f : 
                    0.0f)) : 
             (data[3 /* X17 */] <-0.7615306f ? 
                 (data[2 /* X15 */] <0.12327475f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.5168918f ? 
                     (data[2 /* X15 */] <0.13888901f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.05546875f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29637268f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12299305f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <0.01325264f ? 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.07189355f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))))))) : 
        1.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_152_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.022725f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.343234f ? 
                 (data[11 /* X34 */] <-0.6191406f ? 
                     (data[3 /* X17 */] <-0.05913285f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <0.32287267f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <0.0049454505f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.15542983f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.39719784f ? 
                         (data[4 /* X18 */] <-0.0864205f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23163094f ? 
                         (data[10 /* X28 */] <0.38158965f ? 
                             (data[1 /* X12 */] <-0.6278106f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_152_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.18283883f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48690864f ? 
             (data[3 /* X17 */] <-0.28175032f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5236944f ? 
                     (data[11 /* X34 */] <-0.23828125f ? 
                         (data[5 /* X19 */] <0.013188018f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.18378972f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.58836186f ? 
                     (data[10 /* X28 */] <-0.673791f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14642109f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.42109376f ? 
                             (data[4 /* X18 */] <-0.059980225f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (data[1 /* X12 */] <-0.90936196f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20006685f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.041254964f ? 
                 (data[12 /* X35 */] <-0.13724941f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0344491f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.12058946f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.4927453f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.18175471f ? 
                     (data[10 /* X28 */] <-0.25143135f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2519134f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5775012f ? 
                                0.0f : 
                                 (data[2 /* X15 */] <0.2762859f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (data[6 /* X20 */] <0.4234825f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_152_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[5 /* X19 */] <-0.039389424f ? 
            1.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12563539f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.14391191f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.076805435f ? 
             (data[1 /* X12 */] <-0.3912292f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4224297f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20243637f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.3046696f ? 
                    0.0f : 
                    1.0f) : 
                 (data[8 /* X23 */] <0.264223f ? 
                     (data[10 /* X28 */] <0.11612923f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.99419063f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.39590582f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_153 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_153_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_153_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_153_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_153_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_153_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_153_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_153_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[10 /* X28 */] <-0.08296609f ? 
             (data[7 /* X21 */] <0.1449592f ? 
                 (data[12 /* X35 */] <-0.18305919f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22878441f ? 
             (data[6 /* X20 */] <-0.38817093f ? 
                 (data[1 /* X12 */] <-0.34408364f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5601593f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22168836f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2501229f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (data[5 /* X19 */] <0.072765075f ? 
                     (data[5 /* X19 */] <-0.04749879f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.7790186f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[3 /* X17 */] <-0.74827826f ? 
                         (data[5 /* X19 */] <0.2104422f ? 
                            0.0f : 
                            1.0f) : 
                         (data[12 /* X35 */] <-0.86979127f ? 
                             (data[5 /* X19 */] <0.38745567f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24521565f ? 
                                     (data[2 /* X15 */] <0.21018241f ? 
                                        1.0f : 
                                         (data[8 /* X23 */] <0.1827721f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f)) : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.219564f ? 
                                1.0f : 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.093808964f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_153_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[8 /* X23 */] <0.08592862f ? 
            1.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.32499743f ? 
                 (data[12 /* X35 */] <-0.80912596f ? 
                    1.0f : 
                    0.0f) : 
                 (data[12 /* X35 */] <-0.2594088f ? 
                     (data[2 /* X15 */] <0.16326182f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25991103f ? 
                             (data[2 /* X15 */] <0.21308838f ? 
                                 (data[9 /* X27 */] <0.16916128f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f))) : 
         (data[0 /* X5 */] <0.11733339f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.48539326f ? 
                 (data[3 /* X17 */] <-0.12182359f ? 
                     (data[3 /* X17 */] <-0.20553501f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.045780882f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (data[6 /* X20 */] <-0.39943606f ? 
                     (data[8 /* X23 */] <0.18982299f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_153_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[8 /* X23 */] <0.13605018f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.13555674f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22907387f ? 
             (data[1 /* X12 */] <0.06824695f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10637318f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.1929832f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_153_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18152472f ? 
             (data[7 /* X21 */] <0.11923066f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15660308f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37195125f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09794072f ? 
                 (data[3 /* X17 */] <-0.78567046f ? 
                     (data[5 /* X19 */] <0.09858515f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5579342f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.31447455f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3597716f ? 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3619044f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.28128427f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.26358604f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_153_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[4 /* X18 */] <-0.1442586f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28538838f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.55869f ? 
                 (data[5 /* X19 */] <-0.17397481f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25033492f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24836044f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34686747f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <-0.027559096f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.44306457f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[12 /* X35 */] <0.369045f ? 
                            1.0f : 
                             (data[8 /* X23 */] <0.26536673f ? 
                                1.0f : 
                                0.0f)))) : 
                 (data[12 /* X35 */] <0.38192794f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20554574f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.32466573f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.2895971f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-0.5671988f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09598516f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19326821f ? 
                         (data[9 /* X27 */] <-0.12766533f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_153_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.49345702f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.62663f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5191799f ? 
                1.0f : 
                 (data[4 /* X18 */] <0.10082371f ? 
                    0.0f : 
                    1.0f))) : 
         (data[2 /* X15 */] <0.12285822f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.61479425f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47652125f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_154 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_154_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_154_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_154_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_154_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_154_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_154_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_154_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07046485f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5512909f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.18827727f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[1 /* X12 */] <-0.18593135f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.06445069f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43628675f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20726566f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.20014624f ? 
                             (data[5 /* X19 */] <0.14753474f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <-0.16309048f ? 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4974975f ? 
                                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.781819f ? 
                                             (data[3 /* X17 */] <0.08381882f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f) : 
                                        0.0f) : 
                                    0.0f)) : 
                            1.0f) : 
                         (data[2 /* X15 */] <0.21895729f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26929888f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18252206f ? 
                                    0.0f : 
                                    1.0f)))))) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.37378365f ? 
             (data[12 /* X35 */] <-0.5800772f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_154_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[6 /* X20 */] <-0.5023015f ? 
             (data[10 /* X28 */] <-0.39397997f ? 
                0.0f : 
                1.0f) : 
             (data[12 /* X35 */] <-0.8434833f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20699057f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26683095f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.27309147f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[3 /* X17 */] <-0.27269787f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.028173974f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20767501f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3036298f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.35474002f ? 
                            1.0f : 
                             (data[3 /* X17 */] <0.09285334f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.8625707f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_154_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.43255505f ? 
             (data[2 /* X15 */] <0.21324566f ? 
                 (data[0 /* X5 */] <0.186276f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22699925f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_154_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3713288f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.02396721f ? 
             (data[10 /* X28 */] <-0.17948584f ? 
                 (data[5 /* X19 */] <-0.06182032f ? 
                     (data[2 /* X15 */] <0.19325212f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18104331f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.52010226f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28276363f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.73684096f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21006432f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.14230011f ? 
                        0.0f : 
                        1.0f)))) : 
         (data[1 /* X12 */] <-0.6625157f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_154_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[6 /* X20 */] <-0.26769978f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.16542968f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
                     (data[9 /* X27 */] <0.044600107f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17325859f ? 
                             (data[10 /* X28 */] <-0.424735f ? 
                                1.0f : 
                                0.0f) : 
                             (data[3 /* X17 */] <-0.48784363f ? 
                                1.0f : 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28037822f ? 
                                     (data[12 /* X35 */] <0.15043822f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                         (data[0 /* X5 */] <0.12130391f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.008147105f ? 
                                 (data[11 /* X34 */] <-0.3881494f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26057598f ? 
                                1.0f : 
                                 (data[11 /* X34 */] <-0.53382814f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23586613f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.65401304f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2432922f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.57661945f ? 
                0.0f : 
                1.0f) : 
             (data[5 /* X19 */] <-0.050604872f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_154_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2686426f ? 
             (data[8 /* X23 */] <0.117462054f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.32048848f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.10661347f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[0 /* X5 */] <0.13068877f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25115007f ? 
             (data[8 /* X23 */] <0.18583982f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15960702f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_155 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_155_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_155_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_155_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_155_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_155_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_155_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_155_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.078023046f ? 
             (data[3 /* X17 */] <-0.32399514f ? 
                 (data[3 /* X17 */] <-0.7933085f ? 
                     (data[11 /* X34 */] <0.13942125f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.03337886f ? 
                     (data[6 /* X20 */] <-0.40507916f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.36412108f ? 
                            0.0f : 
                             (data[0 /* X5 */] <0.15008296f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[5 /* X19 */] <0.1774426f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21040271f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17723341f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3465359f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.5520106f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3949009f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[5 /* X19 */] <0.34394857f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36986166f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.6392472f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.03891869f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.18716754f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.17690751f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_155_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5249557f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031299014f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15412731f ? 
                         (data[10 /* X28 */] <-0.16919567f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.496151f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2137245f ? 
                                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1445372f ? 
                                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.34778348f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f) : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.17632134f ? 
                         (data[5 /* X19 */] <0.20735046f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36347657f ? 
                     (data[3 /* X17 */] <-0.2063132f ? 
                         (data[5 /* X19 */] <0.16681372f ? 
                             (data[7 /* X21 */] <0.11757076f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[0 /* X5 */] <0.10975332f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
            1.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_155_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.51562476f ? 
             (data[2 /* X15 */] <0.2424029f ? 
                 (data[10 /* X28 */] <-0.1863293f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.14080943f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21207622f ? 
                            0.0f : 
                            1.0f))) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8428926f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_155_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[9 /* X27 */] <0.11748164f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.11225231f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[9 /* X27 */] <-0.14091653f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.0879897f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.26441458f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[8 /* X23 */] <0.09887393f ? 
                 (data[9 /* X27 */] <0.213929f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.5373118f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2734273f ? 
                         (data[5 /* X19 */] <0.16135563f ? 
                             (data[11 /* X34 */] <-0.71875f ? 
                                1.0f : 
                                 (data[6 /* X20 */] <0.007481685f ? 
                                    0.0f : 
                                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29513955f ? 
                                         (data[11 /* X34 */] <-0.5140625f ? 
                                            0.0f : 
                                             (data[8 /* X23 */] <0.1700057f ? 
                                                1.0f : 
                                                 (data[2 /* X15 */] <0.13546675f ? 
                                                    1.0f : 
                                                    0.0f))) : 
                                        1.0f))) : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11290514f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.099357784f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_155_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[1 /* X12 */] <-0.44744173f ? 
             (data[10 /* X28 */] <0.2339993f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[8 /* X23 */] <0.14567618f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41728514f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.2666629f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3574271f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.1359784f ? 
                     (data[11 /* X34 */] <-0.7753906f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.26268902f ? 
                             (data[11 /* X34 */] <-0.46900392f ? 
                                 (data[7 /* X21 */] <0.1821197f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.6567578f ? 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2836981f ? 
                                     (data[12 /* X35 */] <-0.008314014f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                1.0f))) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.171875f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_155_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[10 /* X28 */] <0.4709273f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.080347955f ? 
                1.0f : 
                 (data[3 /* X17 */] <0.21235615f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20509182f ? 
             (data[5 /* X19 */] <-0.07303577f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.14818761f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.09366037f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[8 /* X23 */] <0.20935765f ? 
                 (data[10 /* X28 */] <0.23864943f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49389982f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3182014f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_156 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_156_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_156_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_156_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_156_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_156_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_156_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_156_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24114132f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.16778925f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.5614803f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.8396047f ? 
                     (data[0 /* X5 */] <0.11573713f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24040376f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61110663f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16896237f ? 
                             (data[9 /* X27 */] <0.07573622f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <-0.27930853f ? 
                                    0.0f : 
                                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15242878f ? 
                                        1.0f : 
                                         (data[0 /* X5 */] <0.13021247f ? 
                                            1.0f : 
                                             (data[5 /* X19 */] <0.29646856f ? 
                                                0.0f : 
                                                 (data[3 /* X17 */] <-0.068742275f ? 
                                                    0.0f : 
                                                    1.0f)))))) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f))) : 
        0.022222223f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_156_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2711008f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.29023135f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.9732776f ? 
                 (data[7 /* X21 */] <0.12255047f ? 
                     (data[8 /* X23 */] <0.105575815f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (data[6 /* X20 */] <-0.38473645f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27873284f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.10219324f ? 
                    0.0f : 
                    1.0f)) : 
             (data[6 /* X20 */] <-0.23769242f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.753169f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_156_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12690349f ? 
            0.0f : 
             (data[2 /* X15 */] <0.15743037f ? 
                1.0f : 
                 (data[1 /* X12 */] <0.23500797f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20218039f ? 
                         (data[8 /* X23 */] <0.11547047f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
         (data[6 /* X20 */] <-0.7369032f ? 
             (data[1 /* X12 */] <0.38596985f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_156_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0344491f ? 
            0.0f : 
             (data[0 /* X5 */] <0.09026169f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.53588706f ? 
             (data[1 /* X12 */] <-0.6600717f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.5985863f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.012681222f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3758798f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23845907f ? 
                                1.0f : 
                                 (data[12 /* X35 */] <0.266234f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[11 /* X34 */] <-0.7075f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_156_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[11 /* X34 */] <-0.7981445f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5362152f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22407548f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.756041f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.055308815f ? 
                         (data[12 /* X35 */] <-0.20429392f ? 
                             (data[11 /* X34 */] <-0.415f ? 
                                1.0f : 
                                0.0f) : 
                             (data[5 /* X19 */] <0.24323991f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.43059772f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)) : 
                         (data[9 /* X27 */] <-0.074660584f ? 
                             (data[10 /* X28 */] <0.11226486f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.7724967f ? 
                    1.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13654926f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.13470122f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[1 /* X12 */] <-1.1488761f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.20054686f ? 
                     (data[12 /* X35 */] <0.5007425f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_156_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049666915f ? 
            0.0f : 
             (data[2 /* X15 */] <0.09744977f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.38311997f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.85881114f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19475141f ? 
                1.0f : 
                 (data[6 /* X20 */] <0.21534836f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_157 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_157_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_157_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_157_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_157_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_157_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_157_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_157_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[6 /* X20 */] <-0.030984541f ? 
             (data[0 /* X5 */] <0.12924494f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.118701145f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0864205f ? 
                         (data[2 /* X15 */] <0.099948965f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[12 /* X35 */] <-0.84730077f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X17 */] <-0.5261667f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.34986815f ? 
                         (data[2 /* X15 */] <0.153279f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.11748401f ? 
                                0.0f : 
                                 (data[2 /* X15 */] <0.12168433f ? 
                                    0.0f : 
                                    1.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.56315064f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.44394532f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.35600302f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28577468f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11612923f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.057441045f ? 
                     (data[1 /* X12 */] <0.12690349f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.43680796f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_157_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25221226f ? 
         (data[6 /* X20 */] <-0.50652856f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.47064033f ? 
                1.0f : 
                 (data[9 /* X27 */] <-0.054783802f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21366906f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.19658832f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.28613114f ? 
             (data[6 /* X20 */] <-0.49807444f ? 
                 (data[10 /* X28 */] <0.0040573236f ? 
                     (data[11 /* X34 */] <-0.1375f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_157_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1513437f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19048685f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.6420132f ? 
                     (data[5 /* X19 */] <0.13891277f ? 
                        1.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.149072f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.33825952f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_157_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.011286037f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.8209961f ? 
                 (data[1 /* X12 */] <-0.88662726f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.018097732f ? 
                     (data[6 /* X20 */] <0.050056085f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.4471786f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.10845406f ? 
                            0.0f : 
                            1.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_157_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.14484635f ? 
         (data[5 /* X19 */] <-0.21509813f ? 
            1.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12372958f ? 
                 (data[3 /* X17 */] <-0.49599183f ? 
                     (data[12 /* X35 */] <-0.28231367f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15784337f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.7519989f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.41728514f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1998735f ? 
                 (data[0 /* X5 */] <0.17434019f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3413889f ? 
                        0.0f : 
                        1.0f) : 
                     (data[8 /* X23 */] <0.16117702f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0350307f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4331847f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18217331f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0017137533f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.109185115f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.05887855f ? 
                     (data[10 /* X28 */] <-0.01600567f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.2375f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[10 /* X28 */] <-0.40489307f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_157_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[1 /* X12 */] <-0.4205575f ? 
             (data[5 /* X19 */] <-0.37687427f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.3752924f ? 
                     (data[4 /* X18 */] <0.31018364f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.49645233f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20575568f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[0 /* X5 */] <0.14151745f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1964616f ? 
                     (data[2 /* X15 */] <0.13993603f ? 
                         (data[4 /* X18 */] <-0.41949907f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.25595108f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19270435f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.52011716f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.13735843f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_158 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_158_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_158_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_158_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_158_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_158_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_158_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_158_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3775703f ? 
            0.0f : 
             (data[3 /* X17 */] <0.45797274f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22878441f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18898559f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.30022258f ? 
                     (data[3 /* X17 */] <-0.4115022f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.07223702f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.13980284f ? 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.053536627f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.7443175f ? 
                                        0.0f : 
                                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.27687654f ? 
                                             (data[10 /* X28 */] <-0.15787436f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f)) : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26339218f ? 
                    1.0f : 
                     (data[6 /* X20 */] <-0.13454746f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.3370894f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_158_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[9 /* X27 */] <-0.06969139f ? 
             (data[9 /* X27 */] <-0.21245645f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21106657f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.36898145f ? 
                    1.0f : 
                     (data[10 /* X28 */] <-0.0063909655f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.09429502f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[7 /* X21 */] <0.26117408f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.27276996f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3253237f ? 
                 (data[8 /* X23 */] <0.11281502f ? 
                     (data[0 /* X5 */] <0.15595569f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.4392919f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_158_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031299014f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5800772f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18539597f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.1799231f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_158_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4329528f ? 
             (data[3 /* X17 */] <-0.7805985f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5800772f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.36242706f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (data[0 /* X5 */] <0.114445746f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1533106f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.08511076f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.44988576f ? 
                0.0f : 
                 (data[12 /* X35 */] <0.21242239f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37065038f ? 
                        0.0f : 
                        1.0f) : 
                     (data[0 /* X5 */] <0.14241394f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_158_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[9 /* X27 */] <0.0015337474f ? 
             (data[9 /* X27 */] <-0.14217824f ? 
                 (data[12 /* X35 */] <0.23686367f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27822465f ? 
                 (data[8 /* X23 */] <0.115107425f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.30264348f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14951177f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.23898059f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49594182f ? 
                                     (data[3 /* X17 */] <-0.2837324f ? 
                                         (data[4 /* X18 */] <0.2011553f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f) : 
                                    0.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
             (data[1 /* X12 */] <-0.5671988f ? 
                1.0f : 
                0.0f) : 
             (data[4 /* X18 */] <-0.22137608f ? 
                 (data[6 /* X20 */] <-0.16836393f ? 
                    0.0f : 
                    1.0f) : 
                 (data[10 /* X28 */] <-0.4147916f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_158_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[7 /* X21 */] <0.16985777f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.1981906f ? 
                1.0f : 
                 (data[1 /* X12 */] <-1.1547713f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.3032544f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20243637f ? 
                 (data[12 /* X35 */] <0.14094947f ? 
                     (data[6 /* X20 */] <0.2205254f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.24946678f ? 
                     (data[10 /* X28 */] <0.32032955f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_159 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_159_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_159_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_159_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_159_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_159_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_159_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_159_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.41825497f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25968924f ? 
                0.0f : 
                 (data[11 /* X34 */] <-0.39262238f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.04210661f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.078023046f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25355372f ? 
                     (data[5 /* X19 */] <0.102672935f ? 
                         (data[11 /* X34 */] <-0.036410905f ? 
                            1.0f : 
                             (data[3 /* X17 */] <-0.37049854f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[5 /* X19 */] <0.19634064f ? 
                             (data[6 /* X20 */] <-0.3712627f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5800772f ? 
                     (data[7 /* X21 */] <0.17068774f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.17410825f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21185614f ? 
                                 (data[11 /* X34 */] <0.5033234f ? 
                                     (data[6 /* X20 */] <-0.7131679f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f)) : 
                     (data[3 /* X17 */] <-0.12207992f ? 
                        1.0f : 
                         (data[2 /* X15 */] <0.21495827f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.151542f ? 
                                 (data[4 /* X18 */] <0.10745723f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_159_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[10 /* X28 */] <-0.43521163f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36819553f ? 
                 (data[0 /* X5 */] <0.10542184f ? 
                     (data[8 /* X23 */] <0.12239846f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27697504f ? 
            0.0f : 
             (data[2 /* X15 */] <0.2877333f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_159_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
        0.011904762f : 
         (data[2 /* X15 */] <0.14410135f ? 
             (data[5 /* X19 */] <0.020426307f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <0.09757522f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16890672f ? 
                     (data[0 /* X5 */] <0.13022895f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3036298f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_159_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.97121805f ? 
             (data[3 /* X17 */] <-0.8188628f ? 
                 (data[11 /* X34 */] <0.14257812f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.31011954f ? 
             (data[1 /* X12 */] <-0.6307434f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.084481634f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2518981f ? 
                        0.0f : 
                        1.0f) : 
                     (data[12 /* X35 */] <-0.618252f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.24027471f ? 
                            1.0f : 
                             (data[3 /* X17 */] <0.313458f ? 
                                0.0f : 
                                1.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_159_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[10 /* X28 */] <-0.08551859f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.179925f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.12327475f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4659125f ? 
                     (data[3 /* X17 */] <-0.24252301f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18502322f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.4921875f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.081034586f ? 
                                0.0f : 
                                1.0f))) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16353798f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.2528485f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.48729846f ? 
                                1.0f : 
                                0.0f)))))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.026791587f ? 
             (data[11 /* X34 */] <-0.24026366f ? 
                 (data[8 /* X23 */] <0.17256258f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19126545f ? 
                 (data[6 /* X20 */] <-0.20218039f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.37485728f ? 
                         (data[7 /* X21 */] <0.36769956f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_159_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3640302f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42498222f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24762747f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_10_Forest_160 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_160_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_160_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_160_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_160_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_160_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_160_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_160_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[6 /* X20 */] <-0.47905266f ? 
             (data[5 /* X19 */] <-0.121636055f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5494887f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.109753646f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2661323f ? 
                 (data[12 /* X35 */] <-0.8410303f ? 
                     (data[7 /* X21 */] <0.14654179f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.42769969f ? 
                            1.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.12416209f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[5 /* X19 */] <-0.06182032f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.80285823f ? 
                             (data[10 /* X28 */] <-0.423278f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (data[10 /* X28 */] <0.021686578f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23240612f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.102167785f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_160_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[6 /* X20 */] <-0.47905266f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22235222f ? 
                 (data[0 /* X5 */] <0.13429832f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06781445f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[5 /* X19 */] <-0.06929729f ? 
                1.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8135917f ? 
                     (data[12 /* X35 */] <-0.84090966f ? 
                         (data[6 /* X20 */] <-0.36834547f ? 
                             (data[3 /* X17 */] <-0.18941528f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_160_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66625977f ? 
             (data[10 /* X28 */] <-0.16975123f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.317664f ? 
                     (data[12 /* X35 */] <-0.9509021f ? 
                         (data[3 /* X17 */] <-0.36097765f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.29637268f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6514051f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.023747317f ? 
                        0.0f : 
                        1.0f))) : 
             (data[5 /* X19 */] <0.37932068f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.16904637f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_160_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[11 /* X34 */] <-0.8209961f ? 
            1.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21991016f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.29699987f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3574271f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.06835132f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.08771901f ? 
                             (data[7 /* X21 */] <0.19684112f ? 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21605504f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.35596907f ? 
                                         (data[8 /* X23 */] <0.13455732f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                             (data[0 /* X5 */] <0.16899543f ? 
                                1.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.9324297f ? 
                                     (data[4 /* X18 */] <0.1690851f ? 
                                        0.0f : 
                                         (data[1 /* X12 */] <-0.6278106f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f))))) : 
                 (data[10 /* X28 */] <0.38158965f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_160_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[11 /* X34 */] <-0.42490235f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.13631928f ? 
                 (data[4 /* X18 */] <-0.1415044f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6751276f ? 
             (data[3 /* X17 */] <-0.23335776f ? 
                 (data[12 /* X35 */] <0.06858137f ? 
                     (data[9 /* X27 */] <0.03134892f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1880795f ? 
                        1.0f : 
                         (data[4 /* X18 */] <0.045780882f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[4 /* X18 */] <-0.22963867f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23386876f ? 
                         (data[2 /* X15 */] <0.15992956f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.56125f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.5032075f ? 
                         (data[1 /* X12 */] <-0.51831836f ? 
                             (data[8 /* X23 */] <0.11826219f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.44010967f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.075329676f ? 
                                1.0f : 
                                0.0f))))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.387356f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2877338f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.056752715f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_160_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
        0.0091743115f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.13760373f ? 
                 (data[7 /* X21 */] <0.18230706f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24759027f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.6039063f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}


class h2o_rf_10_Forest_161 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_161_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_161_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_161_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_161_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_161_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_161_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_161_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[11 /* X34 */] <-0.20019531f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.57416147f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07694491f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22657467f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.20175865f ? 
                             (data[3 /* X17 */] <-0.34391055f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.16406327f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.28284806f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2043238f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.072352245f ? 
                 (data[2 /* X15 */] <0.20158276f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18728678f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.9062503f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31890136f ? 
                         (data[1 /* X12 */] <-0.1823099f ? 
                            1.0f : 
                            0.0f) : 
                         (data[8 /* X23 */] <0.24266338f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.08459409f ? 
                                0.0f : 
                                1.0f)))) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.5783885f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_161_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (data[6 /* X20 */] <-0.49384737f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.34772104f ? 
             (data[6 /* X20 */] <-0.43466857f ? 
                 (data[7 /* X21 */] <0.09765189f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.39985198f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24837314f ? 
                            1.0f : 
                             (data[12 /* X35 */] <-0.8749992f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                 (data[6 /* X20 */] <-0.3885507f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15076886f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.12197949f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15264674f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6410145f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_161_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
            0.0f : 
             (data[0 /* X5 */] <0.09531508f ? 
                0.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.40507916f ? 
                     (data[12 /* X35 */] <-0.9236504f ? 
                         (data[4 /* X18 */] <0.081490695f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.168351f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31321332f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_161_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.12269614f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1908194f ? 
             (data[9 /* X27 */] <-0.48467097f ? 
                1.0f : 
                0.0f) : 
             (data[10 /* X28 */] <-0.31269145f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X5 */] <0.09387125f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.22886895f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.40930116f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07257838f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.019600393f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08817047f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.17495015f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.37371412f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21998027f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2592836f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[1 /* X12 */] <-0.5965271f ? 
                             (data[3 /* X17 */] <0.0037038198f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_161_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.644753f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2016551f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.7954921f ? 
                     (data[3 /* X17 */] <-0.3149427f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18483217f ? 
                             (data[7 /* X21 */] <0.14458072f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43537265f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1982505f ? 
                     (data[1 /* X12 */] <-0.55742276f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.15556884f ? 
                             (data[2 /* X15 */] <0.13322361f ? 
                                 (data[2 /* X15 */] <0.1306193f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f)) : 
                     (data[7 /* X21 */] <0.12421038f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.19017126f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.095257126f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.02381014f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.11547047f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.07265625f ? 
                             (data[0 /* X5 */] <0.13631968f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))))) : 
         (data[4 /* X18 */] <-0.18832573f ? 
            1.0f : 
             (data[5 /* X19 */] <0.6761869f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_161_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[1 /* X12 */] <-0.6380755f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.79540527f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4659125f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.086196475f ? 
                        1.0f : 
                         (data[3 /* X17 */] <-0.2666629f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25906944f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.18067008f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20277002f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.42765123f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17578334f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.64915156f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.74936044f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.23320657f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5155928f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_162 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_162_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_162_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_162_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_162_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_162_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_162_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_162_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[6 /* X20 */] <-0.4811662f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18645683f ? 
                 (data[10 /* X28 */] <-0.2820614f ? 
                     (data[1 /* X12 */] <0.5374992f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.04940393f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[3 /* X17 */] <0.053190585f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24455352f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16451748f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2993929f ? 
                         (data[6 /* X20 */] <-0.2454708f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3051551f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06470785f ? 
                                     (data[5 /* X19 */] <0.14753474f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3785735f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0021408855f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.083282426f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_162_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[6 /* X20 */] <-0.4811662f ? 
             (data[3 /* X17 */] <-0.12182359f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15740849f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.1249373f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.058671065f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14570507f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.34541184f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1889467f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1870015f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3405899f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5151414f ? 
                            0.0f : 
                             (data[11 /* X34 */] <0.614444f ? 
                                 (data[10 /* X28 */] <-0.14867075f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_162_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (data[8 /* X23 */] <0.09920586f ? 
            1.0f : 
             (data[2 /* X15 */] <0.105557285f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.54814523f ? 
                     (data[0 /* X5 */] <0.1328545f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.37246996f ? 
                             (data[10 /* X28 */] <-0.15749921f ? 
                                1.0f : 
                                0.0f) : 
                             (data[4 /* X18 */] <-0.07721357f ? 
                                 (data[12 /* X35 */] <-0.9266805f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f))) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_162_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
             (data[3 /* X17 */] <-0.8188628f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.1449592f ? 
                 (data[1 /* X12 */] <-0.64540756f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.24885944f ? 
                     (data[1 /* X12 */] <-0.24458788f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.12857828f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.30860743f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[1 /* X12 */] <-0.2006504f ? 
                             (data[11 /* X34 */] <-0.3179487f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_162_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[2 /* X15 */] <0.13243845f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13175179f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.1442586f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
                 (data[10 /* X28 */] <-0.09828111f ? 
                     (data[10 /* X28 */] <-0.23330541f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.2495743f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3626286f ? 
                 (data[3 /* X17 */] <-0.24153543f ? 
                     (data[6 /* X20 */] <-0.15145569f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.32153317f ? 
                                0.0f : 
                                 (data[2 /* X15 */] <0.31823817f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.024157908f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.7446806f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[1 /* X12 */] <-1.058104f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_162_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.46780828f ? 
            0.0f : 
            1.0f) : 
         (data[2 /* X15 */] <0.12327475f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.10897045f ? 
                 (data[1 /* X12 */] <-0.8507054f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.42797306f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.51431984f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.81160104f ? 
                         (data[12 /* X35 */] <0.48526832f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_163 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_163_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_163_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_163_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_163_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_163_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_163_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_163_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[5 /* X19 */] <0.15314247f ? 
             (data[0 /* X5 */] <0.084486395f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.8922675f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2918613f ? 
                         (data[3 /* X17 */] <-0.36322245f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.4301582f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.27141124f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19642188f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.19105391f ? 
                 (data[4 /* X18 */] <-0.17182557f ? 
                     (data[11 /* X34 */] <-0.37539062f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.16640955f ? 
                             (data[10 /* X28 */] <-0.21992563f ? 
                                 (data[9 /* X27 */] <0.32365894f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                             (data[7 /* X21 */] <0.19193451f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4592905f ? 
                         (data[0 /* X5 */] <0.15704477f ? 
                             (data[6 /* X20 */] <-0.7141323f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.056511495f ? 
                                 (data[12 /* X35 */] <-0.4342494f ? 
                                    0.0f : 
                                     (data[8 /* X23 */] <0.18450792f ? 
                                         (data[2 /* X15 */] <0.2347677f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                0.0f)) : 
                        1.0f)) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_163_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23065048f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                 (data[0 /* X5 */] <0.11552861f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5657734f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.038330078f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.3983753f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16817668f ? 
                     (data[3 /* X17 */] <-0.3511525f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.18217331f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2588646f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_163_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41679686f ? 
                 (data[12 /* X35 */] <-0.9770951f ? 
                     (data[0 /* X5 */] <0.119682625f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.40507916f ? 
                     (data[0 /* X5 */] <0.097796686f ? 
                         (data[1 /* X12 */] <-0.04906611f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.38736233f ? 
                         (data[3 /* X17 */] <-0.74380285f ? 
                             (data[8 /* X23 */] <0.15158455f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f))) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_163_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.38333872f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.343234f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.18771982f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (data[0 /* X5 */] <0.10939236f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.23196992f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.041120645f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.2896995f ? 
                     (data[3 /* X17 */] <-0.23868203f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.34914982f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18460406f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.33841982f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.38416156f ? 
                     (data[8 /* X23 */] <0.118125916f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_163_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2608562f ? 
            0.0f : 
             (data[8 /* X23 */] <0.26860884f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.32587892f ? 
             (data[6 /* X20 */] <-0.04695779f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1634545f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.64915156f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[11 /* X34 */] <-0.8222656f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.49645233f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19754605f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20609842f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0186946f ? 
                                     (data[5 /* X19 */] <0.051829565f ? 
                                         (data[9 /* X27 */] <0.050733414f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            0.0f) : 
                        1.0f))) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.24027471f ? 
                 (data[1 /* X12 */] <-0.4889901f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5164714f ? 
                        1.0f : 
                        0.0f) : 
                     (data[9 /* X27 */] <-0.25931534f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.075724706f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.03321715f ? 
                                1.0f : 
                                0.0f)))) : 
                1.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_163_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.223348f ? 
            0.0f : 
             (data[8 /* X23 */] <0.22411473f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.44771206f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.4590701f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2887875f ? 
             (data[2 /* X15 */] <0.12327475f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.29260075f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5245299f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.6527767f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4506426f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.6566617f ? 
                             (data[0 /* X5 */] <0.14368914f ? 
                                1.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23064183f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_164 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_164_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_164_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_164_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_164_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_164_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_164_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_164_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18849526f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.19222084f ? 
                    1.0f : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.11085605f ? 
                 (data[12 /* X35 */] <-0.7556813f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.527584f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.14296706f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.2124915f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[6 /* X20 */] <-0.55725324f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4005211f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1525212f ? 
                         (data[4 /* X18 */] <-0.3787899f ? 
                             (data[6 /* X20 */] <-0.27680397f ? 
                                1.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.117931515f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08301497f ? 
                             (data[4 /* X18 */] <-0.05813426f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.71567863f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f))))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.28369224f ? 
            0.0f : 
             (data[10 /* X28 */] <0.050302543f ? 
                 (data[1 /* X12 */] <-0.21234116f ? 
                     (data[5 /* X19 */] <0.13921589f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_164_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[0 /* X5 */] <0.12491347f ? 
             (data[1 /* X12 */] <-0.46943793f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24066934f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7199219f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25968924f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19392641f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                            1.0f : 
                            0.0f) : 
                         (data[1 /* X12 */] <-0.009961757f ? 
                            0.0f : 
                             (data[4 /* X18 */] <0.010527179f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[12 /* X35 */] <-0.97602147f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.11778994f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.39302814f ? 
                                 (data[5 /* X19 */] <0.3293107f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_164_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66625977f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1611198f ? 
                0.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40238217f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.2176323f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.2908028f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[10 /* X28 */] <-0.27695638f ? 
                1.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1828511f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.009590421f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_164_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[11 /* X34 */] <-0.32587892f ? 
             (data[10 /* X28 */] <-0.0012859576f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18481651f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.6307434f ? 
            0.0f : 
             (data[9 /* X27 */] <0.051225703f ? 
                 (data[11 /* X34 */] <-0.2154297f ? 
                     (data[6 /* X20 */] <-0.050006304f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26052484f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0864205f ? 
                            0.0f : 
                             (data[4 /* X18 */] <0.14168403f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.1157784f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25855735f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13391514f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04232764f ? 
                                0.0f : 
                                 (data[3 /* X17 */] <0.068633504f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.41670552f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_164_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
        0.028301887f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.122386776f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.67768013f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26427054f ? 
                     (data[8 /* X23 */] <0.090662345f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06438694f ? 
                            1.0f : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36363542f ? 
                                 (data[4 /* X18 */] <-0.011913847f ? 
                                    0.0f : 
                                     (data[0 /* X5 */] <0.099357784f ? 
                                        0.0f : 
                                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47596613f ? 
                                            1.0f : 
                                             (data[9 /* X27 */] <0.61069196f ? 
                                                1.0f : 
                                                0.0f)))) : 
                                0.0f))) : 
                     (data[0 /* X5 */] <0.17905688f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.51875f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.20001583f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.027903274f ? 
                             (data[6 /* X20 */] <0.87318313f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18202232f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3193272f ? 
                    0.0f : 
                     (data[5 /* X19 */] <0.37184373f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.59096855f ? 
                     (data[0 /* X5 */] <0.1270792f ? 
                         (data[10 /* X28 */] <-0.026810998f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_164_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[2 /* X15 */] <0.08203809f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2644724f ? 
            1.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0271763f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4337225f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}


class h2o_rf_10_Forest_165 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_165_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_165_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_165_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_165_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_165_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_165_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_165_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6681641f ? 
             (data[4 /* X18 */] <-0.56840473f ? 
                 (data[3 /* X17 */] <-0.2908028f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31321332f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.10429151f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f) : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (data[6 /* X20 */] <-0.392398f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.56624484f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.17280488f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22820476f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11612923f ? 
                         (data[5 /* X19 */] <0.1754436f ? 
                             (data[6 /* X20 */] <-0.31715637f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18982299f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2928416f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.21370865f ? 
                            1.0f : 
                            0.0f) : 
                         (data[8 /* X23 */] <0.22239354f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_165_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[12 /* X35 */] <-0.24986508f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25968924f ? 
                 (data[3 /* X17 */] <-0.33908257f ? 
                    0.0f : 
                     (data[5 /* X19 */] <-0.14640026f ? 
                         (data[10 /* X28 */] <-0.32891613f ? 
                            0.0f : 
                             (data[6 /* X20 */] <0.061588027f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[6 /* X20 */] <-0.4811662f ? 
                    1.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2694864f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (data[4 /* X18 */] <-0.04510757f ? 
             (data[6 /* X20 */] <-0.5318909f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23044433f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.528843f ? 
                     (data[7 /* X21 */] <0.081034765f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.2666629f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.016975716f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.09398666f ? 
                                        1.0f : 
                                         (data[7 /* X21 */] <0.13293566f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_165_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5800772f ? 
             (data[4 /* X18 */] <-0.047861766f ? 
                 (data[11 /* X34 */] <0.3708662f ? 
                     (data[7 /* X21 */] <0.12421038f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.34590036f ? 
                     (data[2 /* X15 */] <0.22324242f ? 
                         (data[2 /* X15 */] <0.17794804f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_165_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.12269614f ? 
         (data[10 /* X28 */] <0.01658157f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.25234553f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.041120645f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[11 /* X34 */] <-0.7981445f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18593135f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.38152456f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.37153628f ? 
                 (data[10 /* X28 */] <-0.5985719f ? 
                     (data[6 /* X20 */] <0.57559824f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <7.183925E-4f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.18102944f ? 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.15345608f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)))) : 
                 (data[3 /* X17 */] <-0.21234816f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.06913902f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_165_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (data[4 /* X18 */] <-0.60696346f ? 
                1.0f : 
                 (data[3 /* X17 */] <-0.23045307f ? 
                     (data[11 /* X34 */] <-0.26442462f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19864996f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48155168f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.14900906f ? 
                             (data[8 /* X23 */] <0.11759483f ? 
                                 (data[11 /* X34 */] <0.1883027f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[10 /* X28 */] <-0.45582616f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35679132f ? 
                         (data[4 /* X18 */] <-0.38542286f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19100441f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (data[5 /* X19 */] <0.49918944f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[1 /* X12 */] <-0.39520076f ? 
                 (data[6 /* X20 */] <0.021806309f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.14999129f ? 
                        0.0f : 
                        1.0f)) : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.063085936f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1781573f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_165_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51172227f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2763672f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <-0.11450195f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.13871479f ? 
                 (data[4 /* X18 */] <-0.14711179f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.14675786f ? 
                        0.0f : 
                         (data[6 /* X20 */] <-0.15593572f ? 
                             (data[10 /* X28 */] <0.23456542f ? 
                                0.0f : 
                                1.0f) : 
                             (data[3 /* X17 */] <-0.1332118f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <0.18919738f ? 
                                    1.0f : 
                                     (data[12 /* X35 */] <0.368185f ? 
                                         (data[10 /* X28 */] <0.10387721f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f)))))) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_166 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_166_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_166_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_166_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_166_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_166_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_166_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_166_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.4092539f ? 
             (data[12 /* X35 */] <-0.3548458f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14612615f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.68750346f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[6 /* X20 */] <0.39806184f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.021686578f ? 
             (data[5 /* X19 */] <0.072765075f ? 
                 (data[11 /* X34 */] <-0.036410905f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18396698f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.45086f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[10 /* X28 */] <-0.20628741f ? 
                     (data[1 /* X12 */] <-0.008815124f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1905462f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.26303816f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[6 /* X20 */] <-0.540345f ? 
                        0.0f : 
                        1.0f))) : 
             (data[3 /* X17 */] <-0.51107925f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_166_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[3 /* X17 */] <-0.22140062f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.40315297f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.52342635f ? 
                     (data[9 /* X27 */] <0.057851296f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.464258f ? 
                     (data[3 /* X17 */] <-0.0289601f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2261888f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_166_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.013194101f ? 
             (data[4 /* X18 */] <-0.05887855f ? 
                1.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.06568229f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.540345f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_166_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18837538f ? 
             (data[12 /* X35 */] <0.06507705f ? 
                 (data[6 /* X20 */] <-0.100731f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.38152456f ? 
                    0.0f : 
                    1.0f)) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11738996f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3790236f ? 
                 (data[11 /* X34 */] <-0.46966445f ? 
                     (data[9 /* X27 */] <-0.08791177f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29993314f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[4 /* X18 */] <0.12006885f ? 
                1.0f : 
                 (data[10 /* X28 */] <0.0344491f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2503632f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.35442945f ? 
                             (data[4 /* X18 */] <0.15702926f ? 
                                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.15214342f ? 
                                     (data[10 /* X28 */] <-0.07275607f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_166_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[1 /* X12 */] <-0.44744173f ? 
            1.0f : 
             (data[10 /* X28 */] <-0.19017126f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.13454746f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.119448714f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.1442586f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06835587f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.312028f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.42109376f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.25645363f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61484516f ? 
                 (data[10 /* X28 */] <-0.09828111f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.31011978f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.21838313f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.14393474f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2694864f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6703714f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.50736046f ? 
                             (data[3 /* X17 */] <-0.2666629f ? 
                                 (data[8 /* X23 */] <0.38499835f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_166_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3584439f ? 
             (data[10 /* X28 */] <0.9176155f ? 
                 (data[6 /* X20 */] <0.09371366f ? 
                    1.0f : 
                     (data[11 /* X34 */] <-0.6039063f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
             (data[2 /* X15 */] <0.08995219f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.51616234f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19270435f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.41670552f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.2586165f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.10653625f ? 
                            0.0f : 
                             (data[6 /* X20 */] <0.27997172f ? 
                                1.0f : 
                                0.0f))))) : 
             (data[4 /* X18 */] <0.026868345f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_167 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_167_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_167_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_167_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_167_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_167_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_167_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_167_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[0 /* X5 */] <0.12888399f ? 
             (data[9 /* X27 */] <0.071102485f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.74893063f ? 
                     (data[9 /* X27 */] <0.14752261f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.45966184f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0344491f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17940941f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24190594f ? 
                         (data[7 /* X21 */] <0.10429151f ? 
                             (data[7 /* X21 */] <0.098135635f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (data[5 /* X19 */] <-0.17202277f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[11 /* X34 */] <-0.22304687f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7142774f ? 
                             (data[2 /* X15 */] <0.2128322f ? 
                                 (data[5 /* X19 */] <0.35491872f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))) : 
                0.0f)) : 
         (data[12 /* X35 */] <0.20858113f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20215806f ? 
                 (data[3 /* X17 */] <-0.4207056f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.21824405f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.08817047f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_167_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[5 /* X19 */] <0.18118109f ? 
             (data[3 /* X17 */] <-0.28778532f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.8104103f ? 
                     (data[9 /* X27 */] <-0.101162955f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.39493474f ? 
                             (data[9 /* X27 */] <-0.17744449f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (data[9 /* X27 */] <0.2897471f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.12777004f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                         (data[2 /* X15 */] <0.20582724f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_167_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.35502055f ? 
             (data[3 /* X17 */] <-0.28778532f ? 
                 (data[2 /* X15 */] <0.14160216f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[9 /* X27 */] <0.26324472f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13164902f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.5910697f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.90835065f ? 
                     (data[10 /* X28 */] <-0.2718514f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.31015626f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_167_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.2050097f ? 
         (data[5 /* X19 */] <-0.065558806f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.087828636f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.1010744f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.09453736f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[0 /* X5 */] <0.0909836f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.13327152f ? 
                     (data[10 /* X28 */] <0.05486913f ? 
                         (data[9 /* X27 */] <-0.021655831f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2987592f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.36015624f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_167_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.29537702f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5338603f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.5516955f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.7497742f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19270435f ? 
                 (data[3 /* X17 */] <-0.23880303f ? 
                     (data[3 /* X17 */] <-0.42090893f ? 
                         (data[11 /* X34 */] <-0.23828125f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                     (data[8 /* X23 */] <0.14202495f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22172375f ? 
                             (data[12 /* X35 */] <0.1880959f ? 
                                1.0f : 
                                 (data[5 /* X19 */] <-0.044284206f ? 
                                     (data[6 /* X20 */] <0.16980071f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f))) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.9729417f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.08435367f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.4256882f ? 
                             (data[7 /* X21 */] <0.16006434f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_167_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (data[5 /* X19 */] <-0.3478143f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2991157f ? 
             (data[5 /* X19 */] <0.05734827f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44284976f ? 
                     (data[12 /* X35 */] <-0.02135793f ? 
                         (data[8 /* X23 */] <0.10484868f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.9644876f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.317664f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_168 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_168_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_168_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_168_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_168_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_168_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_168_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_168_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24150227f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.14193895f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049764123f ? 
             (data[4 /* X18 */] <-0.13048764f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.350762f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2641755f ? 
                         (data[9 /* X27 */] <-0.048158206f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26123014f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11948166f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3182117f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18213797f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.6079779f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2131813f ? 
                                0.0f : 
                                1.0f) : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27054858f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[6 /* X20 */] <-0.7770603f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.7755999f ? 
                            1.0f : 
                            0.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_168_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[7 /* X21 */] <0.14827901f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0291426f ? 
                 (data[12 /* X35 */] <-0.63352185f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.19017126f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f) : 
         (data[0 /* X5 */] <0.12491347f ? 
             (data[1 /* X12 */] <-0.4449977f ? 
                1.0f : 
                 (data[0 /* X5 */] <0.08463801f ? 
                     (data[9 /* X27 */] <0.097604856f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.20972979f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.48962033f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.52242583f ? 
                         (data[2 /* X15 */] <0.23323919f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14944094f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.63902235f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            1.0f) : 
                         (data[3 /* X17 */] <-0.025264043f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X12 */] <0.06824695f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_168_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[0 /* X5 */] <0.11697244f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.21488829f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[12 /* X35 */] <-0.7957648f ? 
             (data[1 /* X12 */] <-0.019737845f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3415375f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.64311373f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.20317353f ? 
                 (data[8 /* X23 */] <0.15131901f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.083822764f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_168_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18283883f ? 
             (data[8 /* X23 */] <0.10418482f ? 
                 (data[8 /* X23 */] <0.08665805f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06506025f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.21395878f ? 
             (data[0 /* X5 */] <0.09046538f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.097437285f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <-0.11441415f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.121636055f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23708394f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48804304f ? 
                 (data[11 /* X34 */] <-0.44947967f ? 
                     (data[10 /* X28 */] <-0.5373118f ? 
                         (data[8 /* X23 */] <0.12078136f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[3 /* X17 */] <-0.25459296f ? 
                        0.0f : 
                         (data[9 /* X27 */] <-0.2038953f ? 
                             (data[6 /* X20 */] <0.6083819f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.24763162f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_168_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[7 /* X21 */] <0.13873455f ? 
             (data[4 /* X18 */] <-0.18557154f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.34375313f ? 
                    0.0f : 
                    1.0f)) : 
             (data[1 /* X12 */] <-1.0364511f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.58579f ? 
                     (data[9 /* X27 */] <-0.008404643f ? 
                         (data[0 /* X5 */] <0.13330863f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.22525291f ? 
                                1.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.422023f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[1 /* X12 */] <-0.51441133f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.6302438f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <0.11957528f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8799464f ? 
                         (data[1 /* X12 */] <-0.79844487f ? 
                             (data[0 /* X5 */] <0.16134351f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1683806f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19292773f ? 
                     (data[6 /* X20 */] <-0.20218039f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_168_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[7 /* X21 */] <0.09682194f ? 
            1.0f : 
             (data[1 /* X12 */] <-0.7578325f ? 
                1.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.118793495f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5092148f ? 
             (data[1 /* X12 */] <-0.5378705f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.574338f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
                 (data[4 /* X18 */] <0.018238926f ? 
                     (data[11 /* X34 */] <-0.6039063f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (data[6 /* X20 */] <0.36424538f ? 
                     (data[11 /* X34 */] <-0.6496094f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_169 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_169_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_169_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_169_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_169_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_169_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_169_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_169_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3273754f ? 
            0.0f : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.029281184f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049764123f ? 
             (data[3 /* X17 */] <-0.27873284f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6149925f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32948086f ? 
                        1.0f : 
                         (data[12 /* X35 */] <-0.671875f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[10 /* X28 */] <-0.25519052f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.56624484f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16340198f ? 
                     (data[5 /* X19 */] <0.1774426f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.18634872f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.012117381f ? 
                                0.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.33474225f ? 
                                    0.0f : 
                                    1.0f)))) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20044477f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5580353f ? 
                            0.0f : 
                             (data[9 /* X27 */] <-4.539308E-4f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[2 /* X15 */] <0.2107172f ? 
                            0.0f : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_169_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.049912173f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23031856f ? 
                1.0f : 
                 (data[11 /* X34 */] <0.21875f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3414026f ? 
                 (data[3 /* X17 */] <-0.03284348f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.41675794f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.8927099f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.0063909655f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2555913f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.3253796f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2908028f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.1299309f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_169_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[10 /* X28 */] <-0.037021015f ? 
             (data[8 /* X23 */] <0.14932743f ? 
                 (data[12 /* X35 */] <-0.48082265f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29707405f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[10 /* X28 */] <-0.24377383f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13087605f ? 
                 (data[3 /* X17 */] <-0.398766f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20218039f ? 
                         (data[1 /* X12 */] <0.49839488f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20552422f ? 
                 (data[12 /* X35 */] <-0.9761906f ? 
                     (data[3 /* X17 */] <-0.025264043f ? 
                        1.0f : 
                        0.0f) : 
                     (data[2 /* X15 */] <0.10328122f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_169_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.47024587f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.34429398f ? 
                0.0f : 
                 (data[4 /* X18 */] <0.45122257f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44029725f ? 
             (data[4 /* X18 */] <-0.13324183f ? 
                 (data[11 /* X34 */] <-0.46679688f ? 
                     (data[8 /* X23 */] <0.21372202f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23762353f ? 
                     (data[1 /* X12 */] <-0.63563144f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.47520563f ? 
                            1.0f : 
                             (data[12 /* X35 */] <0.41704875f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_169_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[4 /* X18 */] <-0.12635633f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.03810316f ? 
                1.0f : 
                 (data[3 /* X17 */] <0.05845365f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.45827f ? 
                 (data[8 /* X23 */] <0.15795763f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.34193587f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.14798892f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X12 */] <-1.0657793f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.7784916f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.15255867f ? 
                                1.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8190768f ? 
                                     (data[4 /* X18 */] <-0.03549945f ? 
                                         (data[7 /* X21 */] <0.1355378f ? 
                                            0.0f : 
                                            1.0f) : 
                                         (data[6 /* X20 */] <-0.20453143f ? 
                                             (data[6 /* X20 */] <-0.33438757f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f)) : 
                                    1.0f))))) : 
                 (data[5 /* X19 */] <-0.0020045915f ? 
                     (data[7 /* X21 */] <0.3936599f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07528916f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.024643954f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.30287275f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2004825f ? 
                 (data[12 /* X35 */] <-0.002843125f ? 
                    1.0f : 
                     (data[8 /* X23 */] <0.20044477f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.20361717f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_169_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5245299f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.333881f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5092148f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.31571186f ? 
                 (data[12 /* X35 */] <-0.022725f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.09519597f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.998817f ? 
                     (data[6 /* X20 */] <0.31599748f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_170 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_170_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_170_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_170_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_170_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_170_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_170_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_170_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07046485f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                 (data[4 /* X18 */] <-0.20209672f ? 
                     (data[3 /* X17 */] <-0.2908028f ? 
                        1.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2671662f ? 
                             (data[8 /* X23 */] <0.14120379f ? 
                                 (data[2 /* X15 */] <0.18268403f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f)) : 
                     (data[7 /* X21 */] <0.122569196f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.18619457f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26123014f ? 
                                0.0f : 
                                1.0f) : 
                             (data[10 /* X28 */] <-0.2609911f ? 
                                 (data[6 /* X20 */] <-0.64853287f ? 
                                     (data[4 /* X18 */] <0.04446804f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                 (data[6 /* X20 */] <-0.50730497f ? 
                                    0.0f : 
                                     (data[8 /* X23 */] <0.22377212f ? 
                                        1.0f : 
                                         (data[1 /* X12 */] <-0.287402f ? 
                                            0.0f : 
                                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.25396886f ? 
                                                1.0f : 
                                                0.0f)))))))) : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.103978015f ? 
             (data[2 /* X15 */] <0.1799231f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.17491189f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_170_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3535121f ? 
         (data[6 /* X20 */] <-0.38183033f ? 
             (data[0 /* X5 */] <0.11841626f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26156336f ? 
                     (data[2 /* X15 */] <0.14968929f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.08105284f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2586116f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.18501419f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5113625f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.032633275f ? 
                                     (data[2 /* X15 */] <0.18165521f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26683095f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.27830854f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_170_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.34076518f ? 
             (data[8 /* X23 */] <0.092235304f ? 
                1.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.13667957f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.33908257f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4466134f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.049912173f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.3939453f ? 
                 (data[12 /* X35 */] <-0.63352185f ? 
                     (data[3 /* X17 */] <-0.025264043f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_170_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
             (data[0 /* X5 */] <0.09026169f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22585565f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.22739242f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[0 /* X5 */] <0.10975332f ? 
                 (data[4 /* X18 */] <-0.16904637f ? 
                    0.0f : 
                    1.0f) : 
                 (data[12 /* X35 */] <0.2523289f ? 
                     (data[3 /* X17 */] <-0.6046213f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.05781114f ? 
                         (data[12 /* X35 */] <0.2841771f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.415f ? 
                                0.0f : 
                                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20201059f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (data[8 /* X23 */] <0.13330846f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.16006434f ? 
                                0.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5405137f ? 
                                     (data[6 /* X20 */] <0.0626857f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))))))) : 
        1.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_170_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.00894347f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.21207128f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.09143965f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2439454f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.24962322f ? 
                         (data[6 /* X20 */] <-0.051459353f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2099134f ? 
                     (data[2 /* X15 */] <0.14227211f ? 
                         (data[1 /* X12 */] <-0.16637918f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19911705f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.179925f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.31639582f ? 
            1.0f : 
             (data[7 /* X21 */] <0.17068774f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5886039f ? 
                     (data[7 /* X21 */] <0.10595142f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0078029037f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.13734104f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.74840605f ? 
                     (data[11 /* X34 */] <-0.42109376f ? 
                         (data[8 /* X23 */] <0.19029926f ? 
                            1.0f : 
                             (data[5 /* X19 */] <-0.18320787f ? 
                                 (data[1 /* X12 */] <-1.2038867f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[4 /* X18 */] <-0.25485286f ? 
                             (data[4 /* X18 */] <-0.28654715f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_170_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.21024908f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.11088682f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06781445f ? 
                     (data[3 /* X17 */] <0.023015728f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[5 /* X19 */] <-0.51604605f ? 
            0.0f : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.4102251f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.74840605f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_171 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_171_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_171_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_171_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_171_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_171_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_171_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_171_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.19698876f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22832549f ? 
                 (data[3 /* X17 */] <-0.32701263f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.20760511f ? 
                         (data[2 /* X15 */] <0.09886289f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    0.0f) : 
                 (data[9 /* X27 */] <-0.10707502f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.2908028f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.07196079f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[11 /* X34 */] <-0.24208984f ? 
                 (data[5 /* X19 */] <0.34941283f ? 
                     (data[1 /* X12 */] <-0.115803204f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[5 /* X19 */] <0.1774426f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.76645076f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6120413f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.684612f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <-0.2799417f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[10 /* X28 */] <-0.12589893f ? 
                                0.0f : 
                                 (data[2 /* X15 */] <0.19493772f ? 
                                    0.0f : 
                                    1.0f))))))) : 
        0.022222223f);
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_171_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (data[6 /* X20 */] <-0.47059855f ? 
             (data[5 /* X19 */] <-0.12537454f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <-0.48962033f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43450794f ? 
                 (data[5 /* X19 */] <-0.121636055f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_171_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (data[6 /* X20 */] <-0.41353327f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1889467f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32701263f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.06824695f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.56656396f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.82241213f ? 
            0.0f : 
             (data[2 /* X15 */] <0.15493119f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_171_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.4829501f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
             (data[5 /* X19 */] <-0.050604872f ? 
                 (data[2 /* X15 */] <0.19607519f ? 
                     (data[11 /* X34 */] <-0.61895376f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.20305589f ? 
                 (data[3 /* X17 */] <-0.51409674f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.27434927f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3625096f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.37167704f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5939815f ? 
                        0.0f : 
                        1.0f) : 
                     (data[2 /* X15 */] <0.122905076f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.2406616f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.32047352f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))))) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_171_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2294904f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6260606f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.24959587f ? 
                         (data[5 /* X19 */] <-0.21993457f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.0750025f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.64591604f ? 
                                    0.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.09189148f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (data[12 /* X35 */] <-0.08380469f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.9000003f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18316883f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.32587892f ? 
             (data[9 /* X27 */] <0.03134892f ? 
                 (data[1 /* X12 */] <-0.95824236f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.47614956f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.58579f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2925568f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1978266f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.037333988f ? 
                        1.0f : 
                        0.0f))) : 
             (data[3 /* X17 */] <-0.46581697f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26656175f ? 
                    0.0f : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.0045502614f ? 
                     (data[6 /* X20 */] <-0.059437655f ? 
                         (data[11 /* X34 */] <0.41173857f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_171_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.26279598f ? 
            0.0f : 
             (data[7 /* X21 */] <0.15574858f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.02639538f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.11357759f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.85035706f ? 
             (data[9 /* X27 */] <-0.13760373f ? 
                 (data[9 /* X27 */] <-0.17362168f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.089566946f ? 
                    1.0f : 
                     (data[9 /* X27 */] <0.1263417f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_172 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_172_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_172_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_172_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_172_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_172_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_172_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_172_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22587958f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.049764123f ? 
                 (data[5 /* X19 */] <0.15001975f ? 
                     (data[3 /* X17 */] <-0.21838313f ? 
                         (data[1 /* X12 */] <-0.19611531f ? 
                            1.0f : 
                             (data[4 /* X18 */] <-0.2739145f ? 
                                1.0f : 
                                0.0f)) : 
                         (data[7 /* X21 */] <0.09947333f ? 
                             (data[11 /* X34 */] <0.261538f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[3 /* X17 */] <-0.2908028f ? 
                         (data[3 /* X17 */] <-0.73512757f ? 
                             (data[4 /* X18 */] <-0.2929177f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                         (data[7 /* X21 */] <0.1144817f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.14116113f ? 
                                0.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61583817f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.42386276f ? 
                                         (data[11 /* X34 */] <-0.025f ? 
                                             (data[6 /* X20 */] <-0.5344386f ? 
                                                0.0f : 
                                                1.0f) : 
                                            1.0f) : 
                                         (data[1 /* X12 */] <-0.112068795f ? 
                                            0.0f : 
                                             (data[5 /* X19 */] <0.2696715f ? 
                                                0.0f : 
                                                1.0f))) : 
                                    0.0f))))) : 
                0.0f) : 
            0.0f) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_172_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2271084f ? 
             (data[7 /* X21 */] <0.09856012f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.10750533f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29274464f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.35369563f ? 
                         (data[4 /* X18 */] <0.045780882f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f) : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9083161f ? 
             (data[6 /* X20 */] <-0.38132674f ? 
                 (data[9 /* X27 */] <0.024723327f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.15188904f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.19513388f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_172_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1391236f ? 
            0.0f : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5805598f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0764153f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6148437f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.013194101f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4294143f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_172_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4329528f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.9686656f ? 
                 (data[3 /* X17 */] <-0.78567046f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
            1.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44029725f ? 
             (data[10 /* X28 */] <-0.08496023f ? 
                 (data[12 /* X35 */] <0.21395878f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.63400555f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.059576664f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[1 /* X12 */] <-0.5085423f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.5982257f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_172_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2785816f ? 
            0.0f : 
             (data[10 /* X28 */] <0.23354441f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5531602f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2154297f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20184499f ? 
                     (data[3 /* X17 */] <-0.31558883f ? 
                         (data[4 /* X18 */] <-0.0036703744f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.18539368f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <-0.268193f ? 
                                    1.0f : 
                                     (data[7 /* X21 */] <0.24038681f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47443375f ? 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27054858f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.34196046f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11378804f ? 
                        1.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5686137f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[1 /* X12 */] <-0.4889901f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
                        0.0f : 
                         (data[12 /* X35 */] <0.070996895f ? 
                             (data[6 /* X20 */] <-0.14297517f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (data[3 /* X17 */] <-0.17613833f ? 
                 (data[2 /* X15 */] <0.20658115f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_172_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (data[1 /* X12 */] <-0.81160104f ? 
             (data[10 /* X28 */] <0.9686656f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47347978f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4709273f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.37606156f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26862216f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.2868469f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.68973035f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_173 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_173_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_173_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_173_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_173_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_173_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_173_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_173_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.044659115f ? 
                 (data[5 /* X19 */] <0.2223044f ? 
                     (data[7 /* X21 */] <0.12421038f ? 
                        0.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20719488f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.27643535f ? 
                                 (data[7 /* X21 */] <0.13506088f ? 
                                    1.0f : 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.16587451f ? 
                                        0.0f : 
                                         (data[7 /* X21 */] <0.17796034f ? 
                                            0.0f : 
                                            1.0f))) : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.22803909f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                     (data[12 /* X35 */] <-0.90699375f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4657135f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5007933f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26119566f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6193313f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                0.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_173_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[6 /* X20 */] <-0.79748964f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.13631928f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.06803499f ? 
                     (data[5 /* X19 */] <-0.22056943f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (data[2 /* X15 */] <0.12993926f ? 
                 (data[9 /* X27 */] <0.39575657f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24980426f ? 
                    1.0f : 
                     (data[7 /* X21 */] <0.13232662f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.0038384616f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.2853959f ? 
                 (data[6 /* X20 */] <-0.3983753f ? 
                     (data[8 /* X23 */] <0.1792012f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[0 /* X5 */] <0.17039393f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_173_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.18949921f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61484516f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.63298947f ? 
                    1.0f : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.15743037f ? 
                 (data[8 /* X23 */] <0.1114873f ? 
                    0.0f : 
                    1.0f) : 
                 (data[9 /* X27 */] <-0.1607933f ? 
                    1.0f : 
                     (data[12 /* X35 */] <-0.90838045f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30409285f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24214716f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        0.0f)))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3377887f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_173_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[11 /* X34 */] <-0.7981445f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5811988f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.6600717f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.775293f ? 
                1.0f : 
                 (data[12 /* X35 */] <0.16051406f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.35180527f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.07736172f ? 
                         (data[0 /* X5 */] <0.19638276f ? 
                            1.0f : 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22295593f ? 
                                 (data[7 /* X21 */] <0.21643305f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27445447f ? 
                             (data[6 /* X20 */] <0.05777301f ? 
                                 (data[8 /* X23 */] <0.13458969f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_173_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[4 /* X18 */] <-0.5835528f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06861829f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4888174f ? 
                 (data[12 /* X35 */] <-0.44169348f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.210821f ? 
                        0.0f : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.0322312f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8178899f ? 
                            1.0f : 
                            0.0f) : 
                         (data[7 /* X21 */] <0.15740849f ? 
                            0.0f : 
                             (data[5 /* X19 */] <-0.11515668f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <-0.17968442f ? 
                                    1.0f : 
                                     (data[12 /* X35 */] <0.15493079f ? 
                                         (data[2 /* X15 */] <0.12989354f ? 
                                            0.0f : 
                                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3478072f ? 
                                                1.0f : 
                                                0.0f)) : 
                                         (data[1 /* X12 */] <-0.75636613f ? 
                                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.09631341f ? 
                                                0.0f : 
                                                1.0f) : 
                                            0.0f))))))) : 
                 (data[1 /* X12 */] <-0.3193597f ? 
                     (data[9 /* X27 */] <0.049660783f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19973607f ? 
                0.0f : 
                 (data[9 /* X27 */] <-0.061409395f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_173_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (data[11 /* X34 */] <-0.34301758f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2469151f ? 
                 (data[1 /* X12 */] <-0.63563144f ? 
                    1.0f : 
                    0.0f) : 
                 (data[11 /* X34 */] <-0.6715088f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.117076404f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5092148f ? 
             (data[2 /* X15 */] <0.09317644f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20360188f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.15828468f ? 
                         (data[8 /* X23 */] <0.13899538f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22195885f ? 
                    1.0f : 
                     (data[3 /* X17 */] <0.0712955f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X5 */] <0.18771982f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_174 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_174_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_174_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_174_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_174_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_174_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_174_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_174_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.11450195f ? 
            0.0f : 
             (data[7 /* X21 */] <0.101801656f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.46649948f ? 
                     (data[3 /* X17 */] <-0.30287275f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[11 /* X34 */] <-0.24208984f ? 
             (data[12 /* X35 */] <-0.48464015f ? 
                 (data[1 /* X12 */] <-0.29346833f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.28267345f ? 
                 (data[3 /* X17 */] <-0.32701263f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10845406f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.117700934f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.16006434f ? 
                                 (data[6 /* X20 */] <-0.17380969f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.040045384f ? 
                         (data[10 /* X28 */] <-0.1596106f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.47947538f ? 
                                0.0f : 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.09700555f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.17164741f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24323991f ? 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3712627f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_174_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[12 /* X35 */] <-0.23268643f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2239762f ? 
                 (data[12 /* X35 */] <-0.8861019f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.28672156f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21565299f ? 
                            1.0f : 
                             (data[8 /* X23 */] <0.25023007f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (data[0 /* X5 */] <0.12491347f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19069414f ? 
                 (data[4 /* X18 */] <-0.13599601f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0011241575f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.017796699f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[3 /* X17 */] <-0.2666629f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.43317452f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_174_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (data[0 /* X5 */] <0.12130391f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.15743037f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2897471f ? 
                    0.0f : 
                     (data[12 /* X35 */] <-0.9508928f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_174_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.36629823f ? 
            0.0f : 
            1.0f) : 
         (data[11 /* X34 */] <-0.775293f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21657792f ? 
                 (data[8 /* X23 */] <0.118125916f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38158965f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2588646f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_174_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[12 /* X35 */] <-0.11434453f ? 
            0.0f : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26406255f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24027649f ? 
                     (data[8 /* X23 */] <0.13081516f ? 
                         (data[10 /* X28 */] <-0.10849113f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.1493474f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.49594182f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.27860868f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4403324f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[6 /* X20 */] <-0.046624657f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[1 /* X12 */] <-0.7947125f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <1.4025912f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.06989533f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.010806553f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[11 /* X34 */] <-0.07451172f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
                0.0f : 
                 (data[1 /* X12 */] <0.016378313f ? 
                    0.0f : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_174_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.47736493f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28771105f ? 
                 (data[10 /* X28 */] <0.40200967f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2694864f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.48624232f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.048806943f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.5398706f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.07612033f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.19658832f ? 
                             (data[10 /* X28 */] <0.076419435f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)))) : 
             (data[0 /* X5 */] <0.15812142f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_175 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_175_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_175_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_175_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_175_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_175_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_175_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_175_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[11 /* X34 */] <-0.2154297f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.56624484f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.07077006f ? 
                    1.0f : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.320538f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20841113f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.1774426f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1686498f ? 
                             (data[9 /* X27 */] <0.49210367f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <0.5256391f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)) : 
                     (data[4 /* X18 */] <-0.07540372f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.8589508f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                 (data[2 /* X15 */] <0.10661347f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2588646f ? 
                         (data[9 /* X27 */] <-0.14665082f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.538458f ? 
                                1.0f : 
                                 (data[6 /* X20 */] <-0.15666525f ? 
                                    0.0f : 
                                    1.0f))) : 
                        0.0f)))) : 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.40900776f ? 
            0.0f : 
             (data[0 /* X5 */] <0.11552861f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_175_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.71958005f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2933356f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23969749f ? 
                     (data[10 /* X28 */] <-0.0063909655f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.5766036f ? 
                             (data[1 /* X12 */] <0.22644307f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                    0.0f)) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.2742066f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.38473645f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15924785f ? 
                     (data[7 /* X21 */] <0.087692454f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.24408564f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08984801f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_175_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
            0.0f : 
             (data[12 /* X35 */] <-0.8434833f ? 
                 (data[0 /* X5 */] <0.13429832f ? 
                    0.0f : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.59255135f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1391236f ? 
            0.0f : 
             (data[1 /* X12 */] <0.16782776f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.20824727f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_175_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23407537f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.210821f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.05244646f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
            1.0f) : 
         (data[1 /* X12 */] <-0.6331874f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.50026983f ? 
                 (data[3 /* X17 */] <-0.20168684f ? 
                     (data[11 /* X34 */] <-0.07070313f ? 
                         (data[10 /* X28 */] <-0.004945403f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37184373f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.42843208f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_175_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
        0.014285714f : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.09550253f ? 
             (data[12 /* X35 */] <-0.11816201f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.03133659f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.024436403f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.84765625f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[2 /* X15 */] <0.126607f ? 
                        0.0f : 
                         (data[5 /* X19 */] <-0.1043073f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.40795758f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.20240936f ? 
                                    1.0f : 
                                    0.0f)) : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.23804596f ? 
                                 (data[11 /* X34 */] <-0.805f ? 
                                    0.0f : 
                                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20349632f ? 
                                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29043797f ? 
                                            1.0f : 
                                             (data[6 /* X20 */] <0.3498671f ? 
                                                0.0f : 
                                                1.0f)) : 
                                        0.0f)) : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12675747f ? 
                                    0.0f : 
                                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17125f ? 
                                        1.0f : 
                                        0.0f))))))) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.53080964f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_175_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[7 /* X21 */] <0.09350213f ? 
             (data[5 /* X19 */] <0.0054723746f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.8140451f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51172227f ? 
                 (data[4 /* X18 */] <-0.03133659f ? 
                     (data[0 /* X5 */] <0.19441949f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}


class h2o_rf_10_Forest_176 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_176_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_176_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_176_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_176_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_176_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_176_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_176_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[4 /* X18 */] <-0.40866137f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22712451f ? 
                 (data[6 /* X20 */] <-0.32899213f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[7 /* X21 */] <0.13333985f ? 
                 (data[4 /* X18 */] <-0.14748618f ? 
                     (data[2 /* X15 */] <0.13327152f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23686367f ? 
             (data[11 /* X34 */] <-0.3182617f ? 
                 (data[10 /* X28 */] <-0.016600981f ? 
                     (data[4 /* X18 */] <-0.0864205f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (data[6 /* X20 */] <-0.49807444f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.7460834f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13048764f ? 
                            1.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.098967046f ? 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35128543f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16495147f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17878853f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_176_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.056026842f ? 
             (data[3 /* X17 */] <-0.28175032f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.3628086f ? 
                     (data[3 /* X17 */] <-0.2224782f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1862798f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.21875f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29707405f ? 
                 (data[0 /* X5 */] <0.12563539f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.08623332f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.044659115f ? 
                    0.0f : 
                    1.0f))) : 
         (data[12 /* X35 */] <-0.95419025f ? 
             (data[11 /* X34 */] <0.37490234f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_176_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10246327f ? 
            0.0f : 
             (data[2 /* X15 */] <0.21407872f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.013194101f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_176_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16393515f ? 
            0.0f : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22961438f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.04298897f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)) : 
         (data[12 /* X35 */] <-0.20787281f ? 
             (data[5 /* X19 */] <0.09519597f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.104230456f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22468632f ? 
                 (data[10 /* X28 */] <0.44284976f ? 
                     (data[6 /* X20 */] <0.06835132f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.6484375f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.5026766f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <0.27963048f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0291426f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.174164f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.16173099f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_176_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.22755778f ? 
             (data[3 /* X17 */] <-0.48995686f ? 
                 (data[10 /* X28 */] <-0.1493312f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15992884f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.2891982f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[0 /* X5 */] <0.1328545f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.50642914f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.14733584f ? 
                            0.0f : 
                             (data[9 /* X27 */] <0.17576164f ? 
                                0.0f : 
                                 (data[1 /* X12 */] <-0.2598787f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                    0.0f)) : 
            1.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.48690864f ? 
             (data[7 /* X21 */] <0.22607689f ? 
                0.0f : 
                 (data[3 /* X17 */] <-0.40546724f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.15123704f ? 
                        1.0f : 
                         (data[9 /* X27 */] <-0.068121925f ? 
                            0.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2f ? 
                                 (data[0 /* X5 */] <0.14551145f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))))) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18736129f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.08561376f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_176_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[5 /* X19 */] <0.07183045f ? 
         (data[1 /* X12 */] <-0.73339236f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2677922f ? 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <-0.0017790496f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.09240241f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[3 /* X17 */] <-0.34407166f ? 
                    1.0f : 
                    0.0f)) : 
             (data[12 /* X35 */] <-0.06853477f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.05922556f ? 
                     (data[2 /* X15 */] <0.20490216f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1845121f ? 
                             (data[6 /* X20 */] <0.041992452f ? 
                                 (data[11 /* X34 */] <-0.267052f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4134489f ? 
             (data[11 /* X34 */] <-0.7486328f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.42342418f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.03133659f ? 
                        0.0f : 
                         (data[6 /* X20 */] <0.009275454f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
             (data[10 /* X28 */] <0.8614604f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}


class h2o_rf_10_Forest_177 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_177_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_177_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_177_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_177_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_177_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_177_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_177_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (data[12 /* X35 */] <-0.3548458f ? 
                 (data[11 /* X34 */] <-0.32498625f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.27332044f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.09192889f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.32778704f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.22431901f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.30653363f ? 
                         (data[1 /* X12 */] <0.34197745f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (data[9 /* X27 */] <0.18430324f ? 
                     (data[5 /* X19 */] <-0.13658999f ? 
                         (data[9 /* X27 */] <-0.18770461f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[4 /* X18 */] <-0.16353798f ? 
                         (data[12 /* X35 */] <-0.79538625f ? 
                             (data[8 /* X23 */] <0.13083251f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                         (data[10 /* X28 */] <-0.21795213f ? 
                            1.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2071455f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.032700595f ? 
                                    0.0f : 
                                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.39027837f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f)))))) : 
        0.0f);
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_177_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.6526093f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24836044f ? 
                     (data[12 /* X35 */] <-0.5101217f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <0.004467949f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9083161f ? 
             (data[6 /* X20 */] <-0.38473645f ? 
                 (data[3 /* X17 */] <-0.30640268f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2507081f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_177_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031299014f ? 
             (data[2 /* X15 */] <0.22907387f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.94977695f ? 
                     (data[11 /* X34 */] <0.3097356f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 22B, number of visited nodes = 5, static init size = 0B
}

class h2o_rf_10_Tree_177_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[3 /* X17 */] <-0.7901967f ? 
             (data[12 /* X35 */] <-0.59916455f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[5 /* X19 */] <-0.65623915f ? 
            1.0f : 
             (data[11 /* X34 */] <-0.8209961f ? 
                 (data[3 /* X17 */] <-0.061473873f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.60621f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22525924f ? 
                     (data[7 /* X21 */] <0.18149485f ? 
                        0.0f : 
                         (data[5 /* X19 */] <-0.040720765f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.36525363f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_177_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
        0.014285714f : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.74458855f ? 
             (data[12 /* X35 */] <-0.12089092f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.21862188f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.02461342f ? 
                         (data[3 /* X17 */] <-0.38851634f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.19985926f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[9 /* X27 */] <-0.22269541f ? 
                        1.0f : 
                         (data[6 /* X20 */] <-0.2089503f ? 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.43059772f ? 
                                1.0f : 
                                0.0f) : 
                             (data[10 /* X28 */] <-0.2228433f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.6278106f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (data[9 /* X27 */] <-0.15433821f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4728217f ? 
                                        0.0f : 
                                        1.0f) : 
                                     (data[10 /* X28 */] <-0.115025535f ? 
                                        1.0f : 
                                        0.0f))))))) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_177_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42490235f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.51172227f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.5167483f ? 
                0.0f : 
                1.0f)) : 
         (data[2 /* X15 */] <0.08245462f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.076805435f ? 
                 (data[9 /* X27 */] <0.08435367f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.57280195f ? 
                        0.0f : 
                         (data[4 /* X18 */] <-0.28885147f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.13654926f ? 
                    0.0f : 
                     (data[6 /* X20 */] <0.21131222f ? 
                        1.0f : 
                         (data[10 /* X28 */] <0.2524016f ? 
                            1.0f : 
                            0.0f))))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_178 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_178_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_178_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_178_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_178_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_178_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_178_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_178_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[6 /* X20 */] <-0.48377612f ? 
             (data[12 /* X35 */] <-0.9770951f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2642425f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[1 /* X12 */] <-0.42316368f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26254314f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.18557154f ? 
                         (data[11 /* X34 */] <-0.29921874f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.079373665f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.10387721f ? 
                                     (data[5 /* X19 */] <0.14753474f ? 
                                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.29823464f ? 
                                            1.0f : 
                                            0.0f) : 
                                        1.0f) : 
                                    0.0f) : 
                                0.0f)) : 
                         (data[6 /* X20 */] <-0.37264538f ? 
                            1.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18723626f ? 
                                0.0f : 
                                 (data[8 /* X23 */] <0.20593397f ? 
                                    1.0f : 
                                    0.0f)))) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24138057f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.08984801f ? 
                            0.0f : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_178_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2271084f ? 
            1.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.6444126f ? 
                 (data[8 /* X23 */] <0.10086551f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.38473645f ? 
             (data[4 /* X18 */] <-0.17730895f ? 
                 (data[4 /* X18 */] <-0.47383615f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_178_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.34167328f ? 
             (data[2 /* X15 */] <0.21580213f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.186276f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.60115f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18916364f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.16442189f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_178_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24823435f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.19084798f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.11697244f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5116145f ? 
             (data[0 /* X5 */] <0.09820272f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.31683528f ? 
                     (data[1 /* X12 */] <-0.3032444f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.0859375f ? 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12675747f ? 
                                 (data[4 /* X18 */] <-0.10392691f ? 
                                     (data[1 /* X12 */] <-0.1672747f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_178_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[1 /* X12 */] <-0.4449977f ? 
             (data[9 /* X27 */] <0.30631107f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (data[0 /* X5 */] <0.10830949f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20700562f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.057851296f ? 
                         (data[3 /* X17 */] <-0.6287612f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.7529445f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.15413247f ? 
                                    0.0f : 
                                     (data[0 /* X5 */] <0.20097482f ? 
                                        1.0f : 
                                        0.0f)))) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.26875f ? 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.23544672f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (data[7 /* X21 */] <0.16421685f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.16095169f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.030064225f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.038533106f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))))) : 
             (data[8 /* X23 */] <0.14600812f ? 
                 (data[7 /* X21 */] <0.19724621f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.54296875f ? 
                    1.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13048764f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_178_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30929363f ? 
            1.0f : 
             (data[9 /* X27 */] <-0.20054686f ? 
                1.0f : 
                 (data[8 /* X23 */] <0.13273087f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
            0.0f : 
             (data[4 /* X18 */] <-0.1470128f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.16416454f ? 
                     (data[7 /* X21 */] <0.14009129f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.29921874f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.31322214f ? 
                             (data[8 /* X23 */] <0.11759483f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f))))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_179 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_179_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_179_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_179_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_179_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_179_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_179_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_179_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[0 /* X5 */] <0.12888399f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.21862188f ? 
                 (data[1 /* X12 */] <-0.46569866f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30155042f ? 
                     (data[4 /* X18 */] <-0.17308116f ? 
                         (data[9 /* X27 */] <0.1638608f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f)) : 
             (data[4 /* X18 */] <-0.13599601f ? 
                 (data[0 /* X5 */] <0.15470363f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16736792f ? 
                         (data[2 /* X15 */] <0.12820001f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.2881874f ? 
                                 (data[2 /* X15 */] <0.27646294f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f)) : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.47429082f ? 
                     (data[3 /* X17 */] <-0.2666629f ? 
                         (data[3 /* X17 */] <-0.40605217f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24656822f ? 
            0.0f : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.083282426f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_179_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[0 /* X5 */] <0.12491347f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.21965493f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.37285683f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2296547f ? 
                 (data[3 /* X17 */] <-0.2908028f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.15992956f ? 
                         (data[11 /* X34 */] <0.34098282f ? 
                            0.0f : 
                             (data[4 /* X18 */] <-0.42496f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[4 /* X18 */] <-0.14501318f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.24323991f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f))) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2698703f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.27705213f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.33320686f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_179_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.62055665f ? 
             (data[2 /* X15 */] <0.1682602f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.07540372f ? 
                    1.0f : 
                    0.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_179_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[11 /* X34 */] <-0.8229004f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1824223f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.062306054f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.13552676f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1504403f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3798358f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.2315909f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15315498f ? 
                            0.0f : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06783494f ? 
                                0.0f : 
                                1.0f))) : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.6268014f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.027873829f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21324566f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_179_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[1 /* X12 */] <-0.44744173f ? 
             (data[8 /* X23 */] <0.24957055f ? 
                0.0f : 
                1.0f) : 
             (data[11 /* X34 */] <-0.42378417f ? 
                 (data[2 /* X15 */] <0.18422653f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (data[9 /* X27 */] <0.11085605f ? 
             (data[7 /* X21 */] <0.17081852f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01481142f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.10310272f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.24987729f ? 
                     (data[3 /* X17 */] <-0.41935435f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25202426f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.020462744f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[9 /* X27 */] <-0.22042365f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.4389575f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.11259766f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.01481142f ? 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23676273f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.4368242f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20735046f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45305833f ? 
                            0.0f : 
                             (data[4 /* X18 */] <0.2227663f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[4 /* X18 */] <0.12625034f ? 
                            1.0f : 
                             (data[1 /* X12 */] <-0.6457506f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_179_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2763672f ? 
             (data[8 /* X23 */] <0.18185665f ? 
                 (data[1 /* X12 */] <-0.9690765f ? 
                     (data[2 /* X15 */] <0.14660054f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (data[2 /* X15 */] <0.18450496f ? 
            0.0f : 
             (data[2 /* X15 */] <0.18798809f ? 
                1.0f : 
                 (data[1 /* X12 */] <-0.37419742f ? 
                     (data[0 /* X5 */] <0.15884334f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3339578f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_180 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_180_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_180_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_180_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_180_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_180_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_180_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_180_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3775703f ? 
            0.0f : 
             (data[3 /* X17 */] <0.45797274f ? 
                1.0f : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.23648804f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23376414f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6147805f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.16295168f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5709185f ? 
                             (data[2 /* X15 */] <0.13803042f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.19017126f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17066751f ? 
                 (data[6 /* X20 */] <-0.8869638f ? 
                     (data[11 /* X34 */] <0.5684637f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2698703f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.3169552f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0038190503f ? 
                     (data[7 /* X21 */] <0.1009717f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0017137533f ? 
                            1.0f : 
                             (data[4 /* X18 */] <0.06928247f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_180_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (data[3 /* X17 */] <-0.22290936f ? 
            0.0f : 
             (data[0 /* X5 */] <0.11986008f ? 
                 (data[8 /* X23 */] <0.13278097f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2553429f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26190937f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4388956f ? 
                             (data[0 /* X5 */] <0.13408175f ? 
                                 (data[7 /* X21 */] <0.1469165f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                         (data[5 /* X19 */] <0.5274211f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_180_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[12 /* X35 */] <-0.62779564f ? 
             (data[1 /* X12 */] <0.22955242f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.32698193f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1730823f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14294599f ? 
             (data[2 /* X15 */] <0.1407691f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23599684f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.38260964f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.1415044f ? 
                         (data[11 /* X34 */] <0.6658648f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_180_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.043368958f ? 
             (data[8 /* X23 */] <0.10395035f ? 
                1.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.8231049f ? 
                    0.0f : 
                     (data[4 /* X18 */] <-0.0864205f ? 
                        0.0f : 
                        1.0f))) : 
             (data[7 /* X21 */] <0.07441322f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X19 */] <-0.65623915f ? 
            1.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.23686367f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18527216f ? 
                    0.0f : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25512818f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2503632f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.11628828f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[8 /* X23 */] <0.27154964f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[10 /* X28 */] <-0.10849113f ? 
                     (data[6 /* X20 */] <0.017626625f ? 
                        0.0f : 
                        1.0f) : 
                     (data[9 /* X27 */] <-0.24692602f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27989078f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.30512097f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_180_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24558738f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.24458788f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19052729f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22629456f ? 
                 (data[6 /* X20 */] <-0.22754273f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.21862188f ? 
                         (data[5 /* X19 */] <-0.028733162f ? 
                            1.0f : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12635387f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23631966f ? 
                            0.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17413047f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[12 /* X35 */] <0.118730545f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.60621f ? 
                        0.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5875f ? 
                             (data[2 /* X15 */] <0.27912214f ? 
                                1.0f : 
                                 (data[4 /* X18 */] <-0.23624873f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)))) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47509444f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1788561f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.93040335f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_180_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22799504f ? 
            0.0f : 
             (data[8 /* X23 */] <0.23102221f ? 
                1.0f : 
                0.0f)) : 
         (data[5 /* X19 */] <0.072765075f ? 
             (data[2 /* X15 */] <0.15743037f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.10361735f ? 
                     (data[10 /* X28 */] <0.13654926f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.013446356f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0146106f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.05645039f ? 
                        1.0f : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.22301608f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.58579f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.41469383f ? 
                     (data[7 /* X21 */] <0.21505691f ? 
                         (data[8 /* X23 */] <0.24302834f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_181 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_181_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_181_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_181_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_181_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_181_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_181_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_181_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (data[9 /* X27 */] <0.18373758f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22325826f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.5919922f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X34 */] <-0.24589844f ? 
                    0.0f : 
                    1.0f)) : 
             (data[8 /* X23 */] <0.14202495f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.06853477f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5487111f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.38596985f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.8966797f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25221226f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.014001989f ? 
                         (data[0 /* X5 */] <0.16508397f ? 
                            0.0f : 
                             (data[11 /* X34 */] <-0.4680775f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f)) : 
                1.0f) : 
             (data[5 /* X19 */] <0.14005777f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_181_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[6 /* X20 */] <-0.4367821f ? 
             (data[3 /* X17 */] <-0.22140062f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.06640625f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27572545f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.18828125f ? 
                    0.0f : 
                    1.0f))) : 
         (data[8 /* X23 */] <0.17223066f ? 
             (data[0 /* X5 */] <0.120582f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.16904637f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.29809335f ? 
                        1.0f : 
                         (data[10 /* X28 */] <0.035381857f ? 
                            0.0f : 
                            1.0f)))) : 
             (data[1 /* X12 */] <0.20592421f ? 
                 (data[6 /* X20 */] <-0.4727121f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_181_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[2 /* X15 */] <0.15201546f ? 
            1.0f : 
             (data[1 /* X12 */] <0.23207998f ? 
                 (data[3 /* X17 */] <-0.08561376f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_181_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.30465466f ? 
            1.0f : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.396284f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0290507f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35991696f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13391514f ? 
                        0.0f : 
                         (data[4 /* X18 */] <0.16145709f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[11 /* X34 */] <-0.5125f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.7714844f ? 
                    1.0f : 
                     (data[11 /* X34 */] <0.07477175f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.03418053f ? 
                             (data[5 /* X19 */] <-0.09738179f ? 
                                 (data[10 /* X28 */] <0.37788022f ? 
                                    1.0f : 
                                    0.0f) : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1893086f ? 
                                    0.0f : 
                                     (data[3 /* X17 */] <0.1969162f ? 
                                        0.0f : 
                                         (data[9 /* X27 */] <0.5083917f ? 
                                            0.0f : 
                                            1.0f)))) : 
                            1.0f) : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_181_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[6 /* X20 */] <-0.19372627f ? 
             (data[3 /* X17 */] <-0.28175032f ? 
                 (data[4 /* X18 */] <-0.43344912f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.36015624f ? 
                         (data[7 /* X21 */] <0.15076886f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[8 /* X23 */] <0.14667198f ? 
                 (data[6 /* X20 */] <-0.052549142f ? 
                     (data[5 /* X19 */] <0.2266307f ? 
                        1.0f : 
                        0.0f) : 
                     (data[10 /* X28 */] <-0.10849113f ? 
                         (data[5 /* X19 */] <0.097065754f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3296875f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4659125f ? 
                         (data[6 /* X20 */] <-0.013019547f ? 
                            1.0f : 
                             (data[12 /* X35 */] <0.043183494f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.08095145f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.2264338f ? 
                            1.0f : 
                             (data[7 /* X21 */] <0.37038264f ? 
                                0.0f : 
                                1.0f))) : 
                     (data[7 /* X21 */] <0.3021689f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.39520076f ? 
                            1.0f : 
                            0.0f))))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.029344091f ? 
            0.0f : 
             (data[11 /* X34 */] <0.10068359f ? 
                 (data[4 /* X18 */] <-0.15802959f ? 
                     (data[12 /* X35 */] <0.046874374f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_181_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18367189f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1332302f ? 
                1.0f : 
                 (data[4 /* X18 */] <0.343234f ? 
                    1.0f : 
                     (data[4 /* X18 */] <0.47336975f ? 
                        0.0f : 
                        1.0f))) : 
             (data[8 /* X23 */] <0.3584439f ? 
                 (data[6 /* X20 */] <0.5678295f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46582228f ? 
             (data[0 /* X5 */] <0.11697244f ? 
                 (data[2 /* X15 */] <0.12160862f ? 
                     (data[11 /* X34 */] <-0.33653983f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_182 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_182_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_182_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_182_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_182_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_182_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_182_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_182_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2897471f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22525924f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.024643954f ? 
                    1.0f : 
                    0.0f))) : 
         (data[4 /* X18 */] <-0.20209672f ? 
             (data[5 /* X19 */] <0.072765075f ? 
                 (data[3 /* X17 */] <-0.30890772f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.09757522f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21258014f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                             (data[8 /* X23 */] <0.11353151f ? 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.21059357f ? 
                                     (data[6 /* X20 */] <-0.30120313f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                    0.0f)) : 
             (data[2 /* X15 */] <0.2282408f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.4811662f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.20347837f ? 
                        1.0f : 
                         (data[1 /* X12 */] <-0.009961757f ? 
                            0.0f : 
                             (data[3 /* X17 */] <-0.20315664f ? 
                                0.0f : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_182_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.03446851f ? 
             (data[4 /* X18 */] <-0.3287897f ? 
                 (data[5 /* X19 */] <-0.06929729f ? 
                    1.0f : 
                    0.0f) : 
                 (data[2 /* X15 */] <0.23323919f ? 
                     (data[1 /* X12 */] <0.14645566f ? 
                         (data[8 /* X23 */] <0.16560155f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.50652856f ? 
                        1.0f : 
                        0.0f))) : 
             (data[3 /* X17 */] <-0.2244181f ? 
                 (data[6 /* X20 */] <-0.4727121f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3814957f ? 
                    1.0f : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_182_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.43882295f ? 
            0.0f : 
             (data[0 /* X5 */] <0.13141067f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11396246f ? 
             (data[4 /* X18 */] <-0.3967492f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.039290022f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22907387f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.031299014f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16836393f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_182_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.42753473f ? 
             (data[3 /* X17 */] <-0.022246558f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.045779243f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
                    0.0f : 
                    1.0f) : 
                 (data[1 /* X12 */] <-0.37167704f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.20406488f ? 
                        0.0f : 
                         (data[3 /* X17 */] <0.27007237f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[12 /* X35 */] <0.16051406f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24372357f ? 
                            0.0f : 
                             (data[10 /* X28 */] <-0.15749921f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24905227f ? 
                             (data[5 /* X19 */] <-0.019916315f ? 
                                 (data[9 /* X27 */] <-0.12766533f ? 
                                    1.0f : 
                                     (data[8 /* X23 */] <0.1791647f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f) : 
                            0.0f)))) : 
            1.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_182_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[11 /* X34 */] <-0.42490235f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.49464187f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.11341217f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.30514008f ? 
                    0.0f : 
                    1.0f))) : 
         (data[4 /* X18 */] <-0.21999899f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.35991696f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.16637918f ? 
                    1.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.59968764f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.24252301f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18325536f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.32032955f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.15009367f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.33541107f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.16845267f ? 
                        0.0f : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.50642914f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.81634825f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.39560145f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_182_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.21024908f ? 
            0.0f : 
             (data[11 /* X34 */] <-0.72578126f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.109185115f ? 
                    0.0f : 
                     (data[3 /* X17 */] <0.09019902f ? 
                        1.0f : 
                        0.0f)))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.34118348f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.87571937f ? 
                1.0f : 
                0.0f) : 
             (data[2 /* X15 */] <0.23407225f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}


class h2o_rf_10_Forest_183 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_183_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_183_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_183_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_183_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_183_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_183_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_183_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (data[0 /* X5 */] <0.04694696f ? 
            1.0f : 
            0.0f) : 
         (data[3 /* X17 */] <-0.28175032f ? 
             (data[2 /* X15 */] <0.10744654f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20001583f ? 
                     (data[5 /* X19 */] <-0.40576077f ? 
                        0.0f : 
                         (data[11 /* X34 */] <0.1911239f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.11605228f ? 
                                1.0f : 
                                 (data[2 /* X15 */] <0.21145059f ? 
                                     (data[5 /* X19 */] <0.047343392f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.802517f ? 
                                        1.0f : 
                                        0.0f))))) : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.55725324f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.85033405f ? 
                     (data[0 /* X5 */] <0.11510685f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.29637268f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[1 /* X12 */] <1.0171386f ? 
                        1.0f : 
                        0.0f)) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25323272f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.2671662f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.34937742f ? 
                            1.0f : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0942472f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_183_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[6 /* X20 */] <-0.5318909f ? 
             (data[2 /* X15 */] <0.21491179f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.03715849f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.016600981f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13540228f ? 
             (data[3 /* X17 */] <-0.32569572f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25968924f ? 
                     (data[8 /* X23 */] <0.16061307f ? 
                         (data[0 /* X5 */] <0.10672592f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.11085605f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.42536905f ? 
                                1.0f : 
                                0.0f))) : 
                    0.0f)) : 
             (data[0 /* X5 */] <0.11552861f ? 
                 (data[0 /* X5 */] <0.08472959f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.28994864f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24824283f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.057851296f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_183_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[0 /* X5 */] <0.13177164f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13101307f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1167128f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.16975123f ? 
                         (data[3 /* X17 */] <-0.36003214f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.13087605f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.2524045f ? 
                 (data[10 /* X28 */] <-0.47605172f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.89523137f ? 
                         (data[12 /* X35 */] <-0.9389203f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_183_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055670146f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.33320686f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.22615357f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23542404f ? 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.35975915f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-0.36190096f ? 
                0.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.10086479f ? 
                     (data[3 /* X17 */] <-0.3892819f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_183_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[6 /* X20 */] <-0.2824945f ? 
            0.0f : 
             (data[0 /* X5 */] <0.153768f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.0864205f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.19239654f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25296938f ? 
                             (data[10 /* X28 */] <-0.091623954f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.59599996f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19754605f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.3715631f ? 
                             (data[8 /* X23 */] <0.17810033f ? 
                                1.0f : 
                                 (data[5 /* X19 */] <-0.043875605f ? 
                                     (data[8 /* X23 */] <0.26245877f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f)) : 
                            0.0f) : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23376414f ? 
                        0.0f : 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.03134892f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[11 /* X34 */] <0.12453472f ? 
             (data[6 /* X20 */] <-0.20640744f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.12891115f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.04686639f ? 
                        0.0f : 
                         (data[9 /* X27 */] <0.057851296f ? 
                            1.0f : 
                             (data[11 /* X34 */] <-0.19f ? 
                                1.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1850518f ? 
                                    0.0f : 
                                     (data[6 /* X20 */] <0.104202874f ? 
                                        1.0f : 
                                        0.0f))))))) : 
            0.0f));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_183_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[6 /* X20 */] <-0.05634689f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.11879052f ? 
                0.0f : 
                1.0f) : 
             (data[3 /* X17 */] <-0.24855798f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3814957f ? 
             (data[0 /* X5 */] <0.15595569f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5449499f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20036185f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.28480226f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25200915f ? 
                        1.0f : 
                        0.0f))) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_184 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_184_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_184_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_184_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_184_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_184_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_184_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_184_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.43033358f ? 
        0.0f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.01658157f ? 
             (data[3 /* X17 */] <-0.32701263f ? 
                 (data[11 /* X34 */] <-0.29124874f ? 
                    0.0f : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.14493191f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8055078f ? 
                             (data[12 /* X35 */] <-0.956818f ? 
                                 (data[9 /* X27 */] <0.29637268f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            0.0f) : 
                        0.0f)) : 
                 (data[0 /* X5 */] <0.09617115f ? 
                    1.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20735046f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.44459102f ? 
                            0.0f : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.65795374f ? 
                                0.0f : 
                                1.0f)) : 
                         (data[0 /* X5 */] <0.15648521f ? 
                             (data[1 /* X12 */] <-0.2737096f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.2704575f ? 
                                 (data[12 /* X35 */] <-0.46005556f ? 
                                     (data[5 /* X19 */] <0.25833222f ? 
                                        0.0f : 
                                        1.0f) : 
                                    1.0f) : 
                                0.0f))))) : 
            0.0f));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_184_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[10 /* X28 */] <-0.02170599f ? 
             (data[11 /* X34 */] <-0.32587892f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.1325808f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1378854f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2365039f ? 
                             (data[12 /* X35 */] <-0.67549914f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.0017137533f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.45869142f ? 
                0.0f : 
                 (data[12 /* X35 */] <-0.801491f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.21687439f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2365039f ? 
                 (data[4 /* X18 */] <-0.3911614f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.6079779f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.47116476f ? 
                            1.0f : 
                             (data[5 /* X19 */] <-0.043875605f ? 
                                0.0f : 
                                1.0f)) : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.0053480235f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_184_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16714533f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.013194101f ? 
                 (data[0 /* X5 */] <0.12903203f ? 
                     (data[8 /* X23 */] <0.17719445f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22202139f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.24065545f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_184_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.4829501f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.41155282f ? 
             (data[11 /* X34 */] <-0.8209961f ? 
                 (data[0 /* X5 */] <0.1408226f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.057583995f ? 
                     (data[10 /* X28 */] <-0.5712709f ? 
                        1.0f : 
                         (data[5 /* X19 */] <-0.09172819f ? 
                             (data[0 /* X5 */] <0.1185446f ? 
                                1.0f : 
                                 (data[10 /* X28 */] <0.36802274f ? 
                                     (data[12 /* X35 */] <-0.047617f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.054155305f ? 
                                0.0f : 
                                 (data[11 /* X34 */] <-0.5427248f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <-0.3199319f ? 
                                        0.0f : 
                                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.059516724f ? 
                                            1.0f : 
                                            0.0f)))))) : 
                    0.0f)) : 
            1.0f) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_184_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[0 /* X5 */] <0.09748081f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.32587892f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.39520076f ? 
                     (data[8 /* X23 */] <0.16054335f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0391496f ? 
                             (data[6 /* X20 */] <0.11569437f ? 
                                 (data[3 /* X17 */] <-0.15079145f ? 
                                     (data[1 /* X12 */] <-0.45801947f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f) : 
                                 (data[12 /* X35 */] <0.4659125f ? 
                                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3536824f ? 
                                        1.0f : 
                                        0.0f) : 
                                    1.0f)) : 
                            0.0f)) : 
                     (data[12 /* X35 */] <-0.14488438f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.034534857f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[10 /* X28 */] <-0.42435265f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24235788f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.12604608f ? 
                            0.0f : 
                             (data[12 /* X35 */] <0.063634f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.37831217f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f)))) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2432922f ? 
            0.0f : 
            1.0f));
    return pred;
  } // constant pool size = 78B, number of visited nodes = 19, static init size = 0B
}

class h2o_rf_10_Tree_184_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[10 /* X28 */] <0.67768013f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.43378273f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.52011716f ? 
                1.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23304659f ? 
                     (data[12 /* X35 */] <0.31175163f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46326977f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20581296f ? 
                 (data[0 /* X5 */] <0.10109037f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.11434453f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.09590163f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[10 /* X28 */] <0.21644069f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.07624194f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.023015728f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.32259536f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class h2o_rf_10_Forest_185 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_185_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_185_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_185_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_185_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_185_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_185_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_185_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22463466f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.069391616f ? 
                     (data[9 /* X27 */] <0.03134892f ? 
                         (data[9 /* X27 */] <-0.11458483f ? 
                            1.0f : 
                            0.0f) : 
                         (data[5 /* X19 */] <0.19119659f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4449975f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7701026f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25408152f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.014029066f ? 
                 (data[2 /* X15 */] <0.20491502f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8108318f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.15254049f ? 
                             (data[12 /* X35 */] <-0.7556813f ? 
                                 (data[8 /* X23 */] <0.23655885f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_185_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (data[6 /* X20 */] <-0.49384737f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.39451152f ? 
             (data[7 /* X21 */] <0.09765189f ? 
                0.0f : 
                 (data[10 /* X28 */] <-0.026810998f ? 
                     (data[9 /* X27 */] <0.11874731f ? 
                        1.0f : 
                         (data[5 /* X19 */] <0.24594228f ? 
                            1.0f : 
                             (data[9 /* X27 */] <0.29645622f ? 
                                0.0f : 
                                 (data[10 /* X28 */] <-0.063464105f ? 
                                    1.0f : 
                                    0.0f)))) : 
                    1.0f)) : 
             (data[12 /* X35 */] <-0.2555913f ? 
                 (data[7 /* X21 */] <0.19890612f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.586163f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_185_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.16845186f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.62911326f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.21157953f ? 
                    1.0f : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_185_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (data[12 /* X35 */] <-0.38538563f ? 
            0.0f : 
             (data[2 /* X15 */] <0.15659732f ? 
                0.0f : 
                1.0f)) : 
         (data[5 /* X19 */] <-0.65623915f ? 
            1.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.04413813f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26364243f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20324889f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3296875f ? 
                            0.0f : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.023842745f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)) : 
                 (data[11 /* X34 */] <-0.79433596f ? 
                    1.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.727751f ? 
                         (data[0 /* X5 */] <0.113706306f ? 
                             (data[7 /* X21 */] <0.19126703f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_185_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14563571f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.023084765f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2769217f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22463466f ? 
                    0.0f : 
                     (data[9 /* X27 */] <0.13735843f ? 
                        0.0f : 
                         (data[10 /* X28 */] <0.21822938f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.022246558f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.2282408f ? 
                     (data[10 /* X28 */] <-0.0063909655f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.84401643f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.13760918f ? 
                 (data[9 /* X27 */] <0.18202135f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2908681f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.52007115f ? 
                            0.0f : 
                             (data[9 /* X27 */] <-0.042987294f ? 
                                0.0f : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6144641f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18593135f ? 
                         (data[0 /* X5 */] <0.11552861f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2372724f ? 
                                1.0f : 
                                0.0f) : 
                             (data[9 /* X27 */] <-0.08275072f ? 
                                1.0f : 
                                 (data[5 /* X19 */] <0.092597984f ? 
                                    0.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.54220223f ? 
                                         (data[5 /* X19 */] <0.14114003f ? 
                                             (data[12 /* X35 */] <0.3961f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f) : 
                                        1.0f)))) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22903354f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_185_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23375472f ? 
         (data[1 /* X12 */] <-0.71628416f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18977664f ? 
                1.0f : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2764959f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3246263f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.04562988f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.100751236f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.19780935f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.10544329f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.11757076f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.82388216f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[1 /* X12 */] <-0.385412f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2694864f ? 
                             (data[7 /* X21 */] <0.160145f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f)))) : 
         (data[6 /* X20 */] <0.2564554f ? 
             (data[10 /* X28 */] <0.26417446f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3574271f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23323919f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}


class h2o_rf_10_Forest_186 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_186_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_186_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_186_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_186_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_186_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_186_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_186_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.31284457f ? 
                0.0f : 
                 (data[8 /* X23 */] <0.18052892f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.28175032f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20552422f ? 
                     (data[6 /* X20 */] <-0.4828174f ? 
                        0.0f : 
                         (data[11 /* X34 */] <-0.0288475f ? 
                             (data[4 /* X18 */] <-0.16070014f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.005832716f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[9 /* X27 */] <0.12675747f ? 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.18556002f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.30182457f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.38311002f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22117408f ? 
                             (data[10 /* X28 */] <-0.5495638f ? 
                                1.0f : 
                                0.0f) : 
                             (data[4 /* X18 */] <0.010527179f ? 
                                 (data[4 /* X18 */] <-0.2330222f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.4056135f ? 
                                1.0f : 
                                 (data[5 /* X19 */] <0.5878831f ? 
                                     (data[7 /* X21 */] <0.21744725f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f)) : 
                            0.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.23101132f ? 
                         (data[7 /* X21 */] <0.1074621f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)))) : 
        0.0f);
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_186_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.36944515f ? 
             (data[5 /* X19 */] <-0.043127906f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3306312f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.3331115f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                 (data[3 /* X17 */] <-0.033928543f ? 
                     (data[4 /* X18 */] <-0.06438694f ? 
                        1.0f : 
                         (data[7 /* X21 */] <0.12621827f ? 
                            1.0f : 
                             (data[2 /* X15 */] <0.21013202f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <-0.011205141f ? 
                                    0.0f : 
                                    1.0f)))) : 
                    1.0f)) : 
             (data[4 /* X18 */] <0.056797665f ? 
                1.0f : 
                0.0f)) : 
         (data[10 /* X28 */] <-0.0038384616f ? 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16678438f ? 
                 (data[6 /* X20 */] <-0.377917f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.40175158f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.27810726f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_186_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (data[7 /* X21 */] <0.14744905f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.6157797f ? 
                     (data[0 /* X5 */] <0.13357736f ? 
                         (data[12 /* X35 */] <-0.63352185f ? 
                             (data[4 /* X18 */] <-0.17139596f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f) : 
                     (data[3 /* X17 */] <-0.18217331f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[7 /* X21 */] <0.08935236f ? 
                1.0f : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.20552422f ? 
                     (data[12 /* X35 */] <-0.9694601f ? 
                         (data[2 /* X15 */] <0.15992956f ? 
                            1.0f : 
                            0.0f) : 
                         (data[9 /* X27 */] <0.101210356f ? 
                             (data[3 /* X17 */] <-0.19678669f ? 
                                 (data[4 /* X18 */] <-0.51310444f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_186_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[0 /* X5 */] <0.08990073f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36904642f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.343234f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.17252335f ? 
                    1.0f : 
                    0.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.33564457f ? 
             (data[11 /* X34 */] <-0.67626953f ? 
                1.0f : 
                 (data[2 /* X15 */] <0.15694518f ? 
                     (data[9 /* X27 */] <0.044600107f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.17083292f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                     (data[12 /* X35 */] <0.16051406f ? 
                         (data[5 /* X19 */] <-0.30108324f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_186_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
        0.014285714f : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5117673f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.28212014f ? 
                 (data[8 /* X23 */] <0.1340586f ? 
                    0.0f : 
                     (data[2 /* X15 */] <0.15659732f ? 
                         (data[9 /* X27 */] <0.03134892f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.16876522f ? 
                                 (data[4 /* X18 */] <-0.6849126f ? 
                                    1.0f : 
                                     (data[4 /* X18 */] <-0.24100402f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                            1.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.3813902f ? 
                             (data[5 /* X19 */] <-0.045556143f ? 
                                0.0f : 
                                 (data[4 /* X18 */] <-0.18760884f ? 
                                     (data[9 /* X27 */] <0.04288175f ? 
                                        1.0f : 
                                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.1379619f ? 
                                            0.0f : 
                                            1.0f)) : 
                                    0.0f)) : 
                            1.0f))) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.25351563f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.18263929f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_186_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (data[11 /* X34 */] <-0.36777344f ? 
             (data[3 /* X17 */] <-0.6016038f ? 
                 (data[0 /* X5 */] <0.0985364f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18385011f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6186117f ? 
                        0.0f : 
                        1.0f))) : 
            0.0f) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5117673f ? 
             (data[8 /* X23 */] <0.13538632f ? 
                 (data[2 /* X15 */] <0.12993926f ? 
                     (data[10 /* X28 */] <0.046134766f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_187 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_187_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_187_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_187_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_187_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_187_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_187_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_187_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.44345704f ? 
             (data[10 /* X28 */] <-0.43521163f ? 
                 (data[1 /* X12 */] <0.15623176f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29488593f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3115472f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                 (data[12 /* X35 */] <-0.35102832f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22206944f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[3 /* X17 */] <-0.3257931f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.25355372f ? 
                         (data[6 /* X20 */] <-0.23599684f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.657689f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f) : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.4727121f ? 
                        0.0f : 
                         (data[12 /* X35 */] <-0.78422654f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.09568741f ? 
                                1.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.1410225f ? 
                                    0.0f : 
                                    1.0f)))))) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.045779243f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.0038190503f ? 
                     (data[12 /* X35 */] <-0.9389203f ? 
                         (data[1 /* X12 */] <0.22099257f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_187_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.24330859f ? 
            0.0f : 
             (data[8 /* X23 */] <0.16592397f ? 
                 (data[6 /* X20 */] <-0.3036298f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27197665f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18728678f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0291426f ? 
                     (data[6 /* X20 */] <-0.3712627f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.45538694f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[0 /* X5 */] <0.16682744f ? 
                        0.0f : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.4727121f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[4 /* X18 */] <-0.29023096f ? 
                     (data[1 /* X12 */] <-0.44010967f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.5505859f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.11841626f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26704374f ? 
                         (data[9 /* X27 */] <-0.12766533f ? 
                            0.0f : 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.7486627f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_187_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.06298262f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
             (data[0 /* X5 */] <0.117566906f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.11631466f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3758798f ? 
                 (data[11 /* X34 */] <0.44467697f ? 
                     (data[5 /* X19 */] <0.110943526f ? 
                        1.0f : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.7251414f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15357442f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.20025465f ? 
                            0.0f : 
                            1.0f))) : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_187_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24908236f ? 
             (data[9 /* X27 */] <-0.101162955f ? 
                 (data[0 /* X5 */] <0.11525575f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17986874f ? 
                0.0f : 
                1.0f)) : 
         (data[0 /* X5 */] <0.10325611f ? 
             (data[11 /* X34 */] <-0.8209961f ? 
                1.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.36629823f ? 
                    0.0f : 
                     (data[11 /* X34 */] <-0.44328332f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0047023767f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42109376f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11417639f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.64915156f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.27259994f ? 
                                1.0f : 
                                0.0f)) : 
                        1.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18982652f ? 
                         (data[12 /* X35 */] <0.19105391f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_187_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14563571f ? 
         (data[11 /* X34 */] <-0.42490235f ? 
             (data[9 /* X27 */] <0.011472139f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16957776f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20485549f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.34375313f ? 
                    0.0f : 
                    1.0f) : 
                 (data[11 /* X34 */] <0.16593839f ? 
                     (data[9 /* X27 */] <-0.12766533f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (data[2 /* X15 */] <0.20283236f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.20361198f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.56714416f ? 
                    0.0f : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4506426f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.25614405f ? 
                     (data[12 /* X35 */] <-0.48082265f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.97716874f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_187_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23375472f ? 
         (data[11 /* X34 */] <-0.11450195f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26417446f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1525507f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5811988f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24150227f ? 
             (data[7 /* X21 */] <0.27609172f ? 
                0.0f : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.039389424f ? 
                     (data[12 /* X35 */] <-0.053264845f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            1.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_188 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_188_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_188_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_188_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_188_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_188_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_188_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_188_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.2897471f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.20360188f ? 
                    0.0f : 
                    1.0f)) : 
             (data[3 /* X17 */] <-0.28175032f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2575369f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11947085f ? 
                        1.0f : 
                         (data[4 /* X18 */] <-0.05429642f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                 (data[9 /* X27 */] <0.1638608f ? 
                     (data[9 /* X27 */] <-0.11028784f ? 
                         (data[0 /* X5 */] <0.19094309f ? 
                            0.0f : 
                             (data[8 /* X23 */] <0.21106657f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3979272f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.35824427f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.26611653f ? 
                             (data[12 /* X35 */] <-0.9022725f ? 
                                 (data[1 /* X12 */] <0.060426082f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_188_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[6 /* X20 */] <-0.7496752f ? 
             (data[3 /* X17 */] <-0.061473873f ? 
                0.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.14412925f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.29023135f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.062306054f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.6444204f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18811673f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26152006f ? 
                 (data[6 /* X20 */] <-0.38473645f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10845406f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_188_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66625977f ? 
             (data[7 /* X21 */] <0.08022288f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.21488829f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
                     (data[8 /* X23 */] <0.15264674f ? 
                         (data[6 /* X20 */] <-0.5363076f ? 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.6231022f ? 
                                 (data[2 /* X15 */] <0.15203446f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22755139f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.15156817f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    1.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0290507f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18684508f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.67933166f ? 
                        0.0f : 
                        1.0f) : 
                    1.0f) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_188_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.47024587f ? 
             (data[3 /* X17 */] <-0.78868794f ? 
                 (data[2 /* X15 */] <0.15549028f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.21378681f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.18593135f ? 
                 (data[8 /* X23 */] <0.10484868f ? 
                    1.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.28102517f ? 
                        0.0f : 
                         (data[2 /* X15 */] <0.18316081f ? 
                            1.0f : 
                            0.0f))) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.61440116f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.40200967f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.056579567f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.091148585f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.47652125f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_188_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[11 /* X34 */] <-0.8229004f ? 
            1.0f : 
            0.0f) : 
         (data[4 /* X18 */] <-0.25580353f ? 
             (data[0 /* X5 */] <0.11697244f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19911705f ? 
                     (data[6 /* X20 */] <-0.11470011f ? 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.26704374f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.23261061f ? 
                     (data[10 /* X28 */] <-0.16975123f ? 
                         (data[7 /* X21 */] <0.21210752f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (data[0 /* X5 */] <0.20492935f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.08817047f ? 
                            1.0f : 
                            0.0f)))) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2348118f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28807452f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.5245299f ? 
                         (data[12 /* X35 */] <0.12997422f ? 
                             (data[1 /* X12 */] <-0.579363f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19682291f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8749268f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6033418f ? 
                     (data[6 /* X20 */] <-0.23545276f ? 
                         (data[9 /* X27 */] <0.28504303f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.1729096f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.23713437f ? 
                                 (data[10 /* X28 */] <0.10387721f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f))) : 
                    1.0f))));
    return pred;
  } // constant pool size = 102B, number of visited nodes = 25, static init size = 0B
}

class h2o_rf_10_Tree_188_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (data[11 /* X34 */] <-0.5125f ? 
             (data[3 /* X17 */] <-0.42960715f ? 
                 (data[9 /* X27 */] <0.20361435f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[4 /* X18 */] <0.0058450466f ? 
             (data[2 /* X15 */] <0.124107815f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.28734368f ? 
                 (data[4 /* X18 */] <0.12359228f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.15060961f ? 
                        1.0f : 
                         (data[6 /* X20 */] <0.3798351f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[6 /* X20 */] <0.03720979f ? 
                        1.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.95335054f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.12727483f ? 
                                0.0f : 
                                 (data[0 /* X5 */] <0.14171432f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_189 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_189_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_189_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_189_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_189_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_189_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_189_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_189_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <0.22791213f ? 
         (data[6 /* X20 */] <-0.041552186f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.118701145f ? 
                 (data[6 /* X20 */] <-0.5823844f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24027649f ? 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.17677756f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1845121f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.38736233f ? 
                             (data[6 /* X20 */] <-0.27805626f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        1.0f)) : 
                 (data[2 /* X15 */] <0.14751934f ? 
                     (data[0 /* X5 */] <0.08376448f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.41141558f ? 
                1.0f : 
                0.0f)) : 
         (data[7 /* X21 */] <0.15450366f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.044659115f ? 
                 (data[0 /* X5 */] <0.16461864f ? 
                     (data[11 /* X34 */] <-0.22304687f ? 
                        0.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.14724429f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.3349547f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.08164062f ? 
                    0.0f : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.16988045f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[1 /* X12 */] <0.35651228f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_189_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (data[6 /* X20 */] <-0.4367821f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.30140108f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25994897f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.15884334f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.48962033f ? 
             (data[1 /* X12 */] <0.26993677f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.031912457f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.35653266f ? 
                         (data[0 /* X5 */] <0.10975332f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_189_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.33110565f ? 
             (data[7 /* X21 */] <0.08022288f ? 
                1.0f : 
                 (data[9 /* X27 */] <0.22349115f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.07528916f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25239965f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 26B, number of visited nodes = 6, static init size = 0B
}

class h2o_rf_10_Tree_189_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.011286037f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4329528f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.29916686f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.44795474f ? 
                 (data[10 /* X28 */] <-0.08529924f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.24252301f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.49432927f ? 
                             (data[1 /* X12 */] <-0.63746125f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4862191f ? 
                         (data[1 /* X12 */] <-0.15218312f ? 
                             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.20361769f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.17741653f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f) : 
                        0.0f)) : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_189_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[6 /* X20 */] <-0.15779628f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.74458855f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.66515034f ? 
                     (data[1 /* X12 */] <-0.43949592f ? 
                         (data[6 /* X20 */] <-0.39611533f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <0.057851296f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8554427f ? 
                     (data[10 /* X28 */] <0.1569693f ? 
                         (data[9 /* X27 */] <-0.25645033f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.0482052f ? 
                                 (data[6 /* X20 */] <-0.103428125f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[1 /* X12 */] <-0.4651797f ? 
                                    1.0f : 
                                    0.0f))) : 
                        0.0f) : 
                    1.0f) : 
                 (data[5 /* X19 */] <0.20016515f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.15065503f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.146875f ? 
                             (data[3 /* X17 */] <-0.22803909f ? 
                                1.0f : 
                                 (data[3 /* X17 */] <-0.17690161f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        0.0f) : 
                     (data[8 /* X23 */] <0.16857941f ? 
                         (data[12 /* X35 */] <-0.38920313f ? 
                            0.0f : 
                             (data[4 /* X18 */] <0.020275231f ? 
                                1.0f : 
                                 (data[8 /* X23 */] <0.11904002f ? 
                                    1.0f : 
                                    0.0f))) : 
                        1.0f)))) : 
         (data[1 /* X12 */] <-0.038307875f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61110663f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 98B, number of visited nodes = 24, static init size = 0B
}

class h2o_rf_10_Tree_189_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (data[1 /* X12 */] <-1.088519f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.6300642f ? 
                 (data[10 /* X28 */] <-0.009571121f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.10061183f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5125f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.011962781f ? 
            0.0f : 
             (data[9 /* X27 */] <-0.14091653f ? 
                0.0f : 
                 (data[5 /* X19 */] <0.08024204f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.17738932f ? 
                         (data[12 /* X35 */] <0.007814844f ? 
                             (data[6 /* X20 */] <0.14260715f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3812631f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.58741516f ? 
                            0.0f : 
                            1.0f))))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_190 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_190_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_190_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_190_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_190_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_190_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_190_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_190_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[6 /* X20 */] <-0.8214444f ? 
             (data[1 /* X12 */] <0.5472753f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.44345704f ? 
                0.0f : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.72993565f ? 
                    0.0f : 
                    1.0f))) : 
         (data[11 /* X34 */] <-0.24208984f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.48962033f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.442311f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.8344192f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16750628f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13361272f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.01604509f ? 
                            1.0f : 
                             (data[10 /* X28 */] <-0.3639332f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.30903575f ? 
                             (data[11 /* X34 */] <-0.033336f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.37214223f ? 
                        1.0f : 
                        0.0f)))));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_190_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.26718655f ? 
         (data[6 /* X20 */] <-0.39873856f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.14156762f ? 
                 (data[4 /* X18 */] <-0.5785486f ? 
                    0.0f : 
                     (data[1 /* X12 */] <-0.3476447f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5189975f ? 
                     (data[7 /* X21 */] <0.110931136f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.19069414f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36757812f ? 
                 (data[11 /* X34 */] <-0.049192812f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19993028f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_190_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39575657f ? 
         (data[6 /* X20 */] <-0.320538f ? 
             (data[2 /* X15 */] <0.1291062f ? 
                1.0f : 
                 (data[12 /* X35 */] <-0.77095115f ? 
                     (data[10 /* X28 */] <-0.5168918f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.72283673f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.9961704f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4682129f ? 
             (data[12 /* X35 */] <-0.5549661f ? 
                 (data[11 /* X34 */] <-0.102203555f ? 
                    0.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1640481f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
            1.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_190_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <-0.12269614f ? 
         (data[6 /* X20 */] <-0.2761539f ? 
            0.0f : 
             (data[1 /* X12 */] <-0.5085423f ? 
                0.0f : 
                1.0f)) : 
         (data[11 /* X34 */] <-0.8209961f ? 
             (data[12 /* X35 */] <0.17960146f ? 
                 (data[3 /* X17 */] <-0.12785856f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4224297f ? 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.01618984f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.055670146f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.63563144f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.18279174f ? 
                         (data[12 /* X35 */] <0.16051406f ? 
                            0.0f : 
                             (data[6 /* X20 */] <0.16710727f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.3981008f ? 
                                    1.0f : 
                                     (data[10 /* X28 */] <-0.060500793f ? 
                                        0.0f : 
                                        1.0f)))) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_190_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (data[6 /* X20 */] <-0.24867803f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.2649414f ? 
                 (data[4 /* X18 */] <-0.1840071f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08706144f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4866249f ? 
                         (data[6 /* X20 */] <-0.2254452f ? 
                            1.0f : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.353845f ? 
                                0.0f : 
                                1.0f)) : 
                        1.0f)) : 
                0.0f)) : 
         (data[12 /* X35 */] <-0.3262147f ? 
            0.0f : 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4892722f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.15199845f ? 
                     (data[5 /* X19 */] <0.040741656f ? 
                         (data[1 /* X12 */] <-0.87025756f ? 
                            0.0f : 
                             (data[6 /* X20 */] <-0.046624657f ? 
                                1.0f : 
                                 (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.1080536f ? 
                                    0.0f : 
                                    1.0f))) : 
                        1.0f) : 
                     (data[4 /* X18 */] <-0.26268902f ? 
                         (data[10 /* X28 */] <0.5449499f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.17929688f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_190_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.12327475f ? 
         (data[6 /* X20 */] <-0.05634689f ? 
             (data[1 /* X12 */] <-0.6405195f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.091457486f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.045989648f ? 
            0.0f : 
             (data[6 /* X20 */] <-0.2698133f ? 
                1.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.30062443f ? 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.38158965f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.63563144f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.4362726f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f)) : 
                    1.0f))));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class h2o_rf_10_Forest_191 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_191_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_191_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_191_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_191_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_191_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_191_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_191_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[3 /* X17 */] <-0.27571535f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11102422f ? 
                 (data[11 /* X34 */] <-0.28966618f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.48045227f ? 
                        0.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23708394f ? 
                             (data[10 /* X28 */] <-0.24320617f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.64738214f ? 
                                    1.0f : 
                                     (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18763942f ? 
                                        0.0f : 
                                        1.0f)) : 
                                1.0f) : 
                            0.0f))) : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1792012f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.3898269f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.46863812f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.042734943f ? 
                             (data[8 /* X23 */] <0.1950421f ? 
                                 (data[10 /* X28 */] <-0.16060053f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (data[7 /* X21 */] <0.10700127f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f) : 
                        1.0f) : 
                    1.0f))) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.04662209f ? 
            0.0f : 
             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1566776f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_191_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (data[3 /* X17 */] <-0.12484107f ? 
             (data[10 /* X28 */] <-0.21569629f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.33220136f ? 
                    1.0f : 
                    0.0f)) : 
             (data[10 /* X28 */] <-0.5577318f ? 
                 (data[1 /* X12 */] <0.3579035f ? 
                    1.0f : 
                    0.0f) : 
                1.0f)) : 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.31844622f ? 
             (data[4 /* X18 */] <-0.53804404f ? 
                 (data[7 /* X21 */] <0.110931136f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.23674233f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.15878369f ? 
                        0.0f : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1386298f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.168146f ? 
                                1.0f : 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.41375f ? 
                                    0.0f : 
                                     (data[1 /* X12 */] <-0.020256953f ? 
                                        1.0f : 
                                        0.0f))))))) : 
             (data[6 /* X20 */] <-0.14264657f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_191_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.66625977f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.1611198f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.5335086f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.017604802f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.03460712f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.14753474f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f) : 
                    0.0f)) : 
             (data[4 /* X18 */] <-0.42794076f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 34B, number of visited nodes = 8, static init size = 0B
}

class h2o_rf_10_Tree_191_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[3 /* X17 */] <-0.7901967f ? 
             (data[0 /* X5 */] <0.07582345f ? 
                0.0f : 
                1.0f) : 
             (data[1 /* X12 */] <-1.0071229f ? 
                1.0f : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3105765f ? 
             (data[0 /* X5 */] <0.09820272f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.33868334f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.15794149f ? 
                 (data[2 /* X15 */] <0.17993021f ? 
                    1.0f : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.08807109f ? 
                     (data[9 /* X27 */] <0.07947438f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_191_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (data[11 /* X34 */] <-0.42490235f ? 
             (data[4 /* X18 */] <-0.1442586f ? 
                1.0f : 
                0.0f) : 
             (data[1 /* X12 */] <-0.6111912f ? 
                1.0f : 
                0.0f)) : 
         (data[4 /* X18 */] <-0.22137608f ? 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.3066594f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.08929061f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.17963515f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
             (data[6 /* X20 */] <-0.020416897f ? 
                 (data[1 /* X12 */] <-0.35169947f ? 
                    0.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.22293928f ? 
                        1.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.29300293f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[10 /* X28 */] <-0.08807109f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.26279867f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2915641f ? 
                            1.0f : 
                             (data[8 /* X23 */] <0.24361739f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26128867f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18832888f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.4464632f ? 
                                0.0f : 
                                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.12675747f ? 
                                    0.0f : 
                                    1.0f))) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.5048232f ? 
                             (data[4 /* X18 */] <0.018877706f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.52f ? 
                                1.0f : 
                                0.0f)))))));
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_191_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.45446005f ? 
            0.0f : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.39690468f ? 
                0.0f : 
                 (data[6 /* X20 */] <-0.33187345f ? 
                    0.0f : 
                    1.0f))) : 
         (data[1 /* X12 */] <-0.7187282f ? 
             (data[10 /* X28 */] <0.6827851f ? 
                 (data[1 /* X12 */] <-0.9628726f ? 
                    1.0f : 
                    0.0f) : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20645235f ? 
                    1.0f : 
                     (data[10 /* X28 */] <0.98953617f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.23390354f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.28276363f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X27 */] <0.104230456f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_192 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_192_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_192_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_192_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_192_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_192_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_192_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_192_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[5 /* X19 */] <-0.17397481f ? 
             (data[10 /* X28 */] <-0.22590631f ? 
                 (data[5 /* X19 */] <-0.22362654f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
             (data[3 /* X17 */] <-0.46581697f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.20019531f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.019134074f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.20632383f ? 
                 (data[6 /* X20 */] <-0.4893093f ? 
                     (data[0 /* X5 */] <0.11182755f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.16828103f ? 
                         (data[3 /* X17 */] <-0.4115022f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.151542f ? 
                                1.0f : 
                                0.0f) : 
                             (data[1 /* X12 */] <-0.26976305f ? 
                                1.0f : 
                                 (data[1 /* X12 */] <-0.20994566f ? 
                                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.21682322f ? 
                                        0.0f : 
                                        1.0f) : 
                                    0.0f))) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2152873f ? 
                            1.0f : 
                            0.0f))) : 
                0.0f) : 
             (data[0 /* X5 */] <0.103978015f ? 
                 (data[6 /* X20 */] <-0.09507564f ? 
                     (data[8 /* X23 */] <0.122983f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 82B, number of visited nodes = 20, static init size = 0B
}

class h2o_rf_10_Tree_192_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
         (data[0 /* X5 */] <0.12671825f ? 
             (data[6 /* X20 */] <-0.43466857f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0290507f ? 
                 (data[3 /* X17 */] <-0.28110117f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.21875f ? 
                         (data[6 /* X20 */] <-0.57416147f ? 
                             (data[0 /* X5 */] <0.15530969f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.026810998f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1748375f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f))) : 
                 (data[7 /* X21 */] <0.098455906f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.1569693f ? 
                        1.0f : 
                        0.0f)))) : 
         (data[6 /* X20 */] <-0.4875068f ? 
             (data[6 /* X20 */] <-0.7196243f ? 
                0.0f : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_192_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39575657f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38696757f ? 
             (data[6 /* X20 */] <-0.7516979f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.7669081f ? 
                     (data[9 /* X27 */] <-0.15939572f ? 
                         (data[10 /* X28 */] <-0.5509068f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1845121f ? 
                    0.0f : 
                     (data[6 /* X20 */] <-0.2194849f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.0291426f ? 
                            0.0f : 
                             (data[7 /* X21 */] <0.19125602f ? 
                                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.040112868f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        0.0f))) : 
            1.0f) : 
         (data[10 /* X28 */] <-0.00894347f ? 
             (data[1 /* X12 */] <0.117127396f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.036844984f ? 
                    1.0f : 
                     (Double.isNaN(data[2]) || data[2 /* X15 */] <0.21025614f ? 
                        1.0f : 
                        0.0f))) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_192_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[5 /* X19 */] <0.1456655f ? 
             (data[6 /* X20 */] <-0.041552186f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.55742276f ? 
                    0.0f : 
                     (data[0 /* X5 */] <0.09820272f ? 
                        1.0f : 
                         (data[0 /* X5 */] <0.14069715f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2025579f ? 
                                 (data[2 /* X15 */] <0.122608304f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f) : 
                             (data[11 /* X34 */] <-0.415f ? 
                                0.0f : 
                                1.0f))))) : 
             (data[10 /* X28 */] <-0.5168918f ? 
                1.0f : 
                0.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_192_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20056602f ? 
         (data[4 /* X18 */] <-0.5491253f ? 
             (data[10 /* X28 */] <-0.09828111f ? 
                0.0f : 
                1.0f) : 
             (data[2 /* X15 */] <0.16409488f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3078616f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.265537f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.1962152f ? 
                             (data[12 /* X35 */] <-0.3159075f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[8 /* X23 */] <0.1340586f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[11 /* X34 */] <-0.3449219f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43537265f ? 
                        0.0f : 
                         (data[1 /* X12 */] <-0.304953f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.17047745f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.44264784f ? 
                0.0f : 
                 (data[2 /* X15 */] <0.18492149f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.18294248f ? 
                 (data[6 /* X20 */] <-0.04823952f ? 
                     (data[12 /* X35 */] <-0.801491f ? 
                        0.0f : 
                        1.0f) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <0.4506426f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.03915872f ? 
                             (Double.isNaN(data[5]) || data[5 /* X19 */] <-0.13958077f ? 
                                0.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.30353388f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.38108075f ? 
                                1.0f : 
                                0.0f)) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5125f ? 
                            1.0f : 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <0.3487232f ? 
                                0.0f : 
                                1.0f)))) : 
                 (data[0 /* X5 */] <0.13820769f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 106B, number of visited nodes = 26, static init size = 0B
}

class h2o_rf_10_Tree_192_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.023066927f ? 
         (data[4 /* X18 */] <-0.024451103f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25906944f ? 
                 (data[7 /* X21 */] <0.09433208f ? 
                     (data[10 /* X28 */] <0.055159282f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.73828036f ? 
                 (data[4 /* X18 */] <0.34526736f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.908369f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.40135092f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4836898f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4913473f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.43386823f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19158599f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28276363f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class h2o_rf_10_Forest_193 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_193_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_193_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_193_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_193_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_193_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_193_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_193_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.08435367f ? 
         (data[4 /* X18 */] <-0.47063076f ? 
             (data[11 /* X34 */] <-0.040234376f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.15276761f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.31264916f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.019134074f ? 
             (data[6 /* X20 */] <-0.48212612f ? 
                0.0f : 
                 (data[0 /* X5 */] <0.15739952f ? 
                     (data[4 /* X18 */] <-0.3287897f ? 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.12343474f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.37020656f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.3175f ? 
                                0.0f : 
                                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.18052475f ? 
                                    0.0f : 
                                    1.0f)) : 
                            1.0f)) : 
                     (data[9 /* X27 */] <0.18383974f ? 
                         (data[3 /* X17 */] <-0.3351748f ? 
                            1.0f : 
                            0.0f) : 
                         (data[1 /* X12 */] <-0.38365144f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.04343323f ? 
                                1.0f : 
                                 (data[7 /* X21 */] <0.11724551f ? 
                                    1.0f : 
                                    0.0f)))))) : 
            0.0f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_193_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.12599634f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26649904f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.040234376f ? 
                0.0f : 
                 (data[9 /* X27 */] <0.12523594f ? 
                    1.0f : 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22820476f ? 
                        0.0f : 
                        1.0f))) : 
            1.0f) : 
         (data[6 /* X20 */] <-0.49596092f ? 
             (data[9 /* X27 */] <-0.10673229f ? 
                 (data[10 /* X28 */] <-0.639412f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[6 /* X20 */] <-0.39850748f ? 
                 (data[4 /* X18 */] <-0.26819742f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_193_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[0]) || data[0 /* X5 */] <0.38714805f ? 
         (data[8 /* X23 */] <0.092567235f ? 
             (data[6 /* X20 */] <-0.44312268f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.04940393f ? 
                     (data[1 /* X12 */] <-0.009961757f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.43196478f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_193_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40026718f ? 
         (data[9 /* X27 */] <0.14564042f ? 
             (data[6 /* X20 */] <-0.041552186f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.043368958f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5378705f ? 
                        0.0f : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.060015906f ? 
                             (data[0 /* X5 */] <0.1640411f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)) : 
                     (data[0 /* X5 */] <0.11552861f ? 
                        1.0f : 
                         (data[3 /* X17 */] <0.12825054f ? 
                             (data[4 /* X18 */] <-0.08459409f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f)))) : 
             (data[8 /* X23 */] <0.08545988f ? 
                1.0f : 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.46283108f ? 
                    0.0f : 
                    1.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_193_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[8 /* X23 */] <0.14484635f ? 
         (data[9 /* X27 */] <-0.23698764f ? 
            1.0f : 
             (data[2 /* X15 */] <0.14576748f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.13549098f ? 
                     (data[7 /* X21 */] <0.10761132f ? 
                         (data[10 /* X28 */] <0.3407496f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                0.0f)) : 
         (data[6 /* X20 */] <-0.1599098f ? 
             (data[8 /* X23 */] <0.14920035f ? 
                 (data[10 /* X28 */] <0.029469771f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.08253272f ? 
                    0.0f : 
                     (data[3 /* X17 */] <-0.12363602f ? 
                         (data[6 /* X20 */] <-0.20663111f ? 
                             (data[3 /* X17 */] <-0.3522155f ? 
                                0.0f : 
                                1.0f) : 
                            0.0f) : 
                        0.0f))) : 
             (data[6 /* X20 */] <-0.051745232f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.13768019f ? 
                     (data[1 /* X12 */] <-0.30919126f ? 
                         (data[7 /* X21 */] <0.20848899f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                    0.0f) : 
                 (data[10 /* X28 */] <-0.35744792f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23913252f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.6661971f ? 
                             (data[3 /* X17 */] <-0.4984058f ? 
                                 (data[10 /* X28 */] <0.023872467f ? 
                                    0.0f : 
                                    1.0f) : 
                                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.009296528f ? 
                                    0.0f : 
                                     (data[12 /* X35 */] <-0.222729f ? 
                                        0.0f : 
                                        1.0f))) : 
                            1.0f) : 
                         (data[4 /* X18 */] <0.17798227f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.1448715f ? 
                                1.0f : 
                                0.0f) : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.0037038198f ? 
                                 (data[8 /* X23 */] <0.17271195f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f)))))));
    return pred;
  } // constant pool size = 114B, number of visited nodes = 28, static init size = 0B
}

class h2o_rf_10_Tree_193_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[9 /* X27 */] <0.023066927f ? 
         (data[4 /* X18 */] <-0.0272053f ? 
             (data[2 /* X15 */] <0.13410458f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18712917f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.67768013f ? 
                    0.0f : 
                     (data[10 /* X28 */] <0.8376253f ? 
                        1.0f : 
                         (data[4 /* X18 */] <0.2821031f ? 
                            1.0f : 
                            0.0f))) : 
                 (data[10 /* X28 */] <-0.06765106f ? 
                    0.0f : 
                    1.0f))) : 
         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.4913473f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.43690425f ? 
                0.0f : 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.27044955f ? 
                    0.0f : 
                    1.0f)) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.25073352f ? 
                1.0f : 
                0.0f)));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_194 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_194_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_194_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_194_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_194_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_194_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_194_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_194_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.07046485f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.109753646f ? 
                    0.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22971834f ? 
                        0.0f : 
                        1.0f)) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11396246f ? 
                     (data[7 /* X21 */] <0.15740849f ? 
                         (data[6 /* X20 */] <-0.37265316f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13062602f ? 
                             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23795305f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f)) : 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.5724422f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.3260759f ? 
                             (data[0 /* X5 */] <0.11683927f ? 
                                 (data[11 /* X34 */] <0.6548075f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.11957528f ? 
                                 (data[10 /* X28 */] <-0.47005332f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[6 /* X20 */] <-0.5712923f ? 
                             (data[4 /* X18 */] <0.10932185f ? 
                                1.0f : 
                                0.0f) : 
                            1.0f)))) : 
            0.0f) : 
         (data[3 /* X17 */] <-0.37378365f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.49521366f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15884334f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_194_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
         (data[6 /* X20 */] <-0.49384737f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <-0.39451152f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4091797f ? 
                 (Double.isNaN(data[5]) || data[5 /* X19 */] <0.27464315f ? 
                    1.0f : 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23737305f ? 
                         (data[11 /* X34 */] <0.13672157f ? 
                             (data[8 /* X23 */] <0.17707685f ? 
                                0.0f : 
                                1.0f) : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18849526f ? 
                     (data[11 /* X34 */] <0.47436094f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_194_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10246327f ? 
            0.0f : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.47011718f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.19911705f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.28086665f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.31842446f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.25399265f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.74433595f ? 
                    0.0f : 
                     (data[8 /* X23 */] <0.17123486f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[0 /* X5 */] <0.14873657f ? 
                     (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.4960926f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
            0.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_194_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[2]) || data[2 /* X15 */] <0.4829501f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.041552186f ? 
             (data[3 /* X17 */] <-0.8188628f ? 
                 (data[5 /* X19 */] <0.36436677f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.7486328f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.1566299f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.15674727f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.23709923f ? 
                     (data[12 /* X35 */] <0.16051406f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.29815635f ? 
                            0.0f : 
                            1.0f) : 
                         (data[1 /* X12 */] <-0.62854797f ? 
                            0.0f : 
                             (data[9 /* X27 */] <-0.042857733f ? 
                                 (data[1 /* X12 */] <-0.2729298f ? 
                                    0.0f : 
                                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.15831527f ? 
                                        1.0f : 
                                        0.0f)) : 
                                1.0f))) : 
                    0.0f))) : 
        1.0f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_194_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[2 /* X15 */] <0.18283883f ? 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.052119832f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                1.0f : 
                0.0f) : 
             (data[5 /* X19 */] <-0.114159085f ? 
                0.0f : 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.22670308f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.3167594f ? 
                         (data[5 /* X19 */] <-0.07342498f ? 
                             (data[0 /* X5 */] <0.11119548f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36980873f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[6 /* X20 */] <0.2083666f ? 
                        0.0f : 
                        1.0f)))) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.15145569f ? 
             (data[11 /* X34 */] <-0.3182617f ? 
                 (data[0 /* X5 */] <0.1328545f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
             (data[4 /* X18 */] <-0.22963867f ? 
                1.0f : 
                 (data[4 /* X18 */] <-0.077591926f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.5378705f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.43055537f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_194_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[2 /* X15 */] <0.12285822f ? 
             (data[9 /* X27 */] <-0.074660584f ? 
                 (data[8 /* X23 */] <0.1340586f ? 
                    1.0f : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <0.8778329f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5811988f ? 
                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.19927041f ? 
                     (Double.isNaN(data[0]) || data[0 /* X5 */] <0.18789499f ? 
                        1.0f : 
                         (data[11 /* X34 */] <-0.786859f ? 
                            1.0f : 
                            0.0f)) : 
                    1.0f) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}


class h2o_rf_10_Forest_195 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_195_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_195_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_195_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_195_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_195_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_195_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_195_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.2411377f ? 
         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24150227f ? 
            0.0f : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.14596348f ? 
                0.0f : 
                1.0f)) : 
         (data[3 /* X17 */] <-0.26515415f ? 
             (data[5 /* X19 */] <-0.043127906f ? 
                0.0f : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28541908f ? 
                     (data[2 /* X15 */] <0.14450744f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.29507005f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.8961774f ? 
                             (data[6 /* X20 */] <-0.28626427f ? 
                                1.0f : 
                                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.13048764f ? 
                                    1.0f : 
                                    0.0f)) : 
                            0.0f)) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.04723103f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17681804f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1906066f ? 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20727128f ? 
                             (data[2 /* X15 */] <0.18658762f ? 
                                 (data[1 /* X12 */] <0.022733424f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.27540845f ? 
                                 (data[0 /* X5 */] <0.17328158f ? 
                                    0.0f : 
                                    1.0f) : 
                                0.0f)) : 
                         (data[3 /* X17 */] <-0.094433874f ? 
                            0.0f : 
                            1.0f)) : 
                    1.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.17043799f ? 
                    0.0f : 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.5878988f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_195_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.037841797f ? 
         (data[8 /* X23 */] <0.08592862f ? 
            1.0f : 
             (data[12 /* X35 */] <-0.23268643f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.5318909f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.22466438f ? 
                        1.0f : 
                         (data[10 /* X28 */] <0.0064296215f ? 
                            0.0f : 
                            1.0f)) : 
                    0.0f) : 
                0.0f)) : 
         (data[3 /* X17 */] <-0.23950553f ? 
             (data[5 /* X19 */] <0.08024204f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19877319f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.38817093f ? 
                     (data[2 /* X15 */] <0.23657145f ? 
                         (data[6 /* X20 */] <-0.7289483f ? 
                            0.0f : 
                             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18878525f ? 
                                1.0f : 
                                 (data[2 /* X15 */] <0.20078851f ? 
                                    1.0f : 
                                    0.0f))) : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4015625f ? 
                            1.0f : 
                             (data[5 /* X19 */] <0.049937334f ? 
                                1.0f : 
                                0.0f))) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.17732735f ? 
                        0.0f : 
                         (data[10 /* X28 */] <-0.10821335f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}

class h2o_rf_10_Tree_195_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
         (data[0 /* X5 */] <0.13177164f ? 
             (data[12 /* X35 */] <-0.46173525f ? 
                 (data[8 /* X23 */] <0.1488934f ? 
                     (data[1 /* X12 */] <0.009590421f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f) : 
            0.0f) : 
         (data[11 /* X34 */] <0.3923237f ? 
            1.0f : 
             (data[2 /* X15 */] <0.14576748f ? 
                 (data[5 /* X19 */] <0.08912064f ? 
                    0.0f : 
                    1.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.3825054f ? 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3866711f ? 
                        0.0f : 
                         (data[5 /* X19 */] <0.40638828f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[7 /* X21 */] <0.17068774f ? 
                        0.0f : 
                        1.0f)))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_195_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.7724365f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18218859f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.611315f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5774603f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <0.06355075f ? 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.41155282f ? 
                 (data[5 /* X19 */] <-0.10668212f ? 
                     (data[6 /* X20 */] <-0.02014448f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.07711187f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36987638f ? 
                         (Double.isNaN(data[9]) || data[9 /* X27 */] <0.24336793f ? 
                            0.0f : 
                             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.042231757f ? 
                                0.0f : 
                                 (data[9 /* X27 */] <0.34159964f ? 
                                     (data[10 /* X28 */] <0.56973064f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.37702242f ? 
                            1.0f : 
                            0.0f))) : 
                1.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_195_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.32492676f ? 
         (data[8 /* X23 */] <0.15131901f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.3857454f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.20658115f ? 
                 (data[9 /* X27 */] <-0.008404643f ? 
                     (data[10 /* X28 */] <0.6674701f ? 
                        1.0f : 
                        0.0f) : 
                     (data[6 /* X20 */] <-0.1749176f ? 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.18130197f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.34234878f ? 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.5517092f ? 
                        0.0f : 
                         (data[8 /* X23 */] <0.26451266f ? 
                            0.0f : 
                            1.0f)) : 
                     (data[10 /* X28 */] <-0.06765106f ? 
                        1.0f : 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <0.06781445f ? 
                            0.0f : 
                            1.0f))))) : 
         (data[1 /* X12 */] <-0.44744173f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.43263972f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.076805435f ? 
                 (data[2 /* X15 */] <0.15992956f ? 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.078831226f ? 
                        0.0f : 
                         (data[7 /* X21 */] <0.1640481f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.21716508f ? 
                     (data[5 /* X19 */] <-0.10668212f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_195_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[11 /* X34 */] <-0.49345702f ? 
         (data[0 /* X5 */] <0.13502024f ? 
            0.0f : 
             (data[10 /* X28 */] <0.47347978f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.34733713f ? 
                    0.0f : 
                     (data[7 /* X21 */] <0.15783656f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X27 */] <-0.14091653f ? 
                    0.0f : 
                     (Double.isNaN(data[5]) || data[5 /* X19 */] <0.53633696f ? 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.51720124f ? 
                            1.0f : 
                             (data[8 /* X23 */] <0.26928136f ? 
                                1.0f : 
                                0.0f)) : 
                        0.0f)))) : 
         (data[1 /* X12 */] <-0.38389716f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1890868f ? 
                 (data[1 /* X12 */] <-0.90459967f ? 
                    1.0f : 
                     (data[3 /* X17 */] <-0.35767514f ? 
                        1.0f : 
                         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20044477f ? 
                            0.0f : 
                            1.0f))) : 
                0.0f) : 
             (data[8 /* X23 */] <0.11679819f ? 
                 (data[2 /* X15 */] <0.099948965f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class h2o_rf_10_Forest_196 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_196_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_196_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_196_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_196_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_196_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_196_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_196_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.25408152f ? 
             (data[4 /* X18 */] <-0.3205271f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.18583982f ? 
                     (data[1 /* X12 */] <-0.3227966f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.20841113f ? 
                     (data[3 /* X17 */] <-0.39943227f ? 
                        1.0f : 
                        0.0f) : 
                     (data[1 /* X12 */] <0.089747146f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.065079145f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22712451f ? 
                     (data[9 /* X27 */] <0.26171264f ? 
                        1.0f : 
                         (data[10 /* X28 */] <-0.16123387f ? 
                             (data[1 /* X12 */] <-0.0021408855f ? 
                                1.0f : 
                                0.0f) : 
                             (data[12 /* X35 */] <-0.9115299f ? 
                                 (data[10 /* X28 */] <-0.09363545f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f))) : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.06373025f ? 
            0.0f : 
             (data[0 /* X5 */] <0.14223936f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_196_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.23268643f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.26155847f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.36728516f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.3628086f ? 
                     (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21637747f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.20467131f ? 
                     (data[2 /* X15 */] <0.15477061f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.27577552f ? 
                            0.0f : 
                            1.0f) : 
                        1.0f) : 
                     (Double.isNaN(data[4]) || data[4 /* X18 */] <0.13391514f ? 
                        0.0f : 
                        1.0f))) : 
             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.056124352f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4015625f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.33683425f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f))) : 
        0.0f);
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}

class h2o_rf_10_Tree_196_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[12 /* X35 */] <-0.5810315f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.61671436f ? 
             (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10246327f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.23514706f ? 
                    1.0f : 
                     (data[0 /* X5 */] <0.10975332f ? 
                        1.0f : 
                         (data[8 /* X23 */] <0.09953779f ? 
                            1.0f : 
                            0.0f)))) : 
             (data[9 /* X27 */] <0.26591623f ? 
                0.0f : 
                1.0f)) : 
        0.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_196_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[0 /* X5 */] <0.08972026f ? 
         (Double.isNaN(data[5]) || data[5 /* X19 */] <0.3082895f ? 
             (data[4 /* X18 */] <-0.13599601f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.2746787f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
            0.0f) : 
         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.48315835f ? 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0049454505f ? 
                0.0f : 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.42109376f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.17874452f ? 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.6209668f ? 
                            0.0f : 
                             (data[1 /* X12 */] <-0.566764f ? 
                                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.23456542f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f)) : 
                        1.0f) : 
                     (data[2 /* X15 */] <0.16185603f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.6046213f ? 
                            0.0f : 
                             (data[2 /* X15 */] <0.21671891f ? 
                                 (data[0 /* X5 */] <0.16836356f ? 
                                    0.0f : 
                                    1.0f) : 
                                1.0f))))) : 
            1.0f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}

class h2o_rf_10_Tree_196_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.115298904f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.28854102f ? 
            0.0f : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.17826867f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.2873047f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.19067383f ? 
             (data[6 /* X20 */] <-0.011962781f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24293193f ? 
                    1.0f : 
                     (data[5 /* X19 */] <-0.0020045915f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[7 /* X21 */] <0.165708f ? 
                    0.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.2233368f ? 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <1.0350307f ? 
                             (data[0 /* X5 */] <0.13631968f ? 
                                0.0f : 
                                 (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24610537f ? 
                                     (data[10 /* X28 */] <0.048781097f ? 
                                         (data[1 /* X12 */] <-0.63406193f ? 
                                            1.0f : 
                                             (data[9 /* X27 */] <0.3552306f ? 
                                                0.0f : 
                                                 (data[0 /* X5 */] <0.20057075f ? 
                                                    1.0f : 
                                                    0.0f))) : 
                                        1.0f) : 
                                     (data[4 /* X18 */] <0.23913936f ? 
                                        1.0f : 
                                        0.0f))) : 
                            0.0f) : 
                        0.0f))) : 
             (data[0 /* X5 */] <0.14873657f ? 
                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.33444738f ? 
                     (data[2 /* X15 */] <0.13364527f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 86B, number of visited nodes = 21, static init size = 0B
}

class h2o_rf_10_Tree_196_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[12]) || data[12 /* X35 */] <-0.046584252f ? 
        0.0091743115f : 
         (data[2 /* X15 */] <0.12285822f ? 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.037974514f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.56067f ? 
                    1.0f : 
                     (data[4 /* X18 */] <-0.5521932f ? 
                        0.0f : 
                        1.0f)) : 
                 (data[8 /* X23 */] <0.110159576f ? 
                     (data[5 /* X19 */] <0.08771901f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.47347978f ? 
                 (data[1 /* X12 */] <-0.53549594f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.57021105f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (data[7 /* X21 */] <0.23708394f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.23328875f ? 
                         (data[8 /* X23 */] <0.21637747f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)))));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class h2o_rf_10_Forest_197 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_197_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_197_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_197_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_197_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_197_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_197_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_197_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06940808f ? 
         (data[3 /* X17 */] <-0.29683778f ? 
             (Double.isNaN(data[12]) || data[12 /* X35 */] <0.114704296f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.24293193f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.08239944f ? 
                        1.0f : 
                         (data[11 /* X34 */] <0.46875f ? 
                            1.0f : 
                             (data[6 /* X20 */] <-0.41485572f ? 
                                1.0f : 
                                0.0f))) : 
                     (data[7 /* X21 */] <0.24372357f ? 
                         (data[10 /* X28 */] <-0.16278593f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                0.0f) : 
             (data[9 /* X27 */] <0.18373758f ? 
                 (Double.isNaN(data[3]) || data[3 /* X17 */] <0.16208237f ? 
                     (data[10 /* X28 */] <-0.43521163f ? 
                         (data[3 /* X17 */] <-0.055565793f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                     (data[1 /* X12 */] <-0.33271325f ? 
                        1.0f : 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.2503632f ? 
                            0.0f : 
                            1.0f))) : 
                 (data[11 /* X34 */] <-0.47265625f ? 
                    0.0f : 
                     (data[11 /* X34 */] <0.22243042f ? 
                         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.042353373f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17602547f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3678623f ? 
                                 (data[5 /* X19 */] <0.34729868f ? 
                                     (data[1 /* X12 */] <-0.09692924f ? 
                                         (data[12 /* X35 */] <-0.733335f ? 
                                            0.0f : 
                                            1.0f) : 
                                        0.0f) : 
                                    0.0f) : 
                                1.0f) : 
                            1.0f))))) : 
        0.0f);
    return pred;
  } // constant pool size = 94B, number of visited nodes = 23, static init size = 0B
}

class h2o_rf_10_Tree_197_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.49384737f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.26621276f ? 
             (data[9 /* X27 */] <-0.11110135f ? 
                 (data[1 /* X12 */] <-0.23156247f ? 
                    1.0f : 
                    0.0f) : 
                1.0f) : 
             (data[11 /* X34 */] <0.3939453f ? 
                1.0f : 
                 (data[7 /* X21 */] <0.12421038f ? 
                    1.0f : 
                    0.0f))) : 
         (data[6 /* X20 */] <-0.3983753f ? 
             (data[3 /* X17 */] <-0.27683842f ? 
                0.0f : 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.1982505f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.26218393f ? 
                0.0f : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.146827f ? 
                    0.0f : 
                    1.0f))));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}

class h2o_rf_10_Tree_197_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[5]) || data[5 /* X19 */] <1.0148628f ? 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.12690349f ? 
            0.0f : 
             (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.30785683f ? 
                 (data[8 /* X23 */] <0.12476453f ? 
                    1.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <0.4753906f ? 
                        0.0f : 
                         (data[3 /* X17 */] <-0.019974787f ? 
                             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.8690065f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f))) : 
                1.0f)) : 
        1.0f);
    return pred;
  } // constant pool size = 30B, number of visited nodes = 7, static init size = 0B
}

class h2o_rf_10_Tree_197_class_3 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <0.0091725085f ? 
         (data[1 /* X12 */] <-0.9411342f ? 
             (data[8 /* X23 */] <0.32193148f ? 
                0.0f : 
                1.0f) : 
            0.0f) : 
         (data[6 /* X20 */] <0.19607121f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.37539062f ? 
                 (data[8 /* X23 */] <0.12274735f ? 
                    0.0f : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.6470501f ? 
                        1.0f : 
                        0.0f)) : 
                 (data[9 /* X27 */] <-0.1607933f ? 
                    1.0f : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.8209961f ? 
                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.1922665f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}

class h2o_rf_10_Tree_197_class_4 {
  static final double score0(double[] data) {
    double pred =      (data[6 /* X20 */] <-0.25607538f ? 
         (data[1 /* X12 */] <-0.4449977f ? 
             (data[9 /* X27 */] <0.1638608f ? 
                1.0f : 
                0.0f) : 
            0.0f) : 
         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.44300762f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.15019532f ? 
                 (data[3 /* X17 */] <-0.16123994f ? 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.36987638f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.22726895f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.19725083f ? 
                                 (data[4 /* X18 */] <-0.41251725f ? 
                                    0.0f : 
                                     (data[9 /* X27 */] <-4.539308E-4f ? 
                                        0.0f : 
                                        1.0f)) : 
                                0.0f) : 
                             (data[3 /* X17 */] <-0.49858114f ? 
                                0.0f : 
                                1.0f)) : 
                        0.0f) : 
                     (data[10 /* X28 */] <-0.16975123f ? 
                        1.0f : 
                         (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.10625f ? 
                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.1640411f ? 
                                0.0f : 
                                 (Double.isNaN(data[7]) || data[7 /* X21 */] <0.20174162f ? 
                                     (data[2 /* X15 */] <0.10128187f ? 
                                        1.0f : 
                                         (data[12 /* X35 */] <0.19048129f ? 
                                             (data[1 /* X12 */] <-0.5244366f ? 
                                                1.0f : 
                                                0.0f) : 
                                            0.0f)) : 
                                    0.0f)) : 
                            1.0f))) : 
                0.0f) : 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.18115234f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.24408296f ? 
                    1.0f : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.54100895f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_197_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.022530425f ? 
         (data[3 /* X17 */] <-0.829424f ? 
            1.0f : 
            0.0f) : 
         (data[6 /* X20 */] <0.009828859f ? 
             (data[8 /* X23 */] <0.18849526f ? 
                 (data[3 /* X17 */] <-0.28133324f ? 
                    0.0f : 
                    1.0f) : 
                1.0f) : 
             (Double.isNaN(data[3]) || data[3 /* X17 */] <0.22813901f ? 
                 (data[3 /* X17 */] <-0.078906305f ? 
                     (data[10 /* X28 */] <0.2794895f ? 
                        0.0f : 
                         (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24656822f ? 
                             (data[5 /* X19 */] <-0.043875605f ? 
                                 (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.7025f ? 
                                    1.0f : 
                                    0.0f) : 
                                1.0f) : 
                            0.0f)) : 
                    0.0f) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.55742276f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}


class h2o_rf_10_Forest_198 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_198_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_198_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_198_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_198_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_198_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_198_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_198_class_0 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.20691656f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.180197f ? 
             (data[11 /* X34 */] <-0.24208984f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.41176447f ? 
                     (data[4 /* X18 */] <-0.5189514f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f)) : 
             (data[10 /* X28 */] <-0.026810998f ? 
                 (data[11 /* X34 */] <-0.20019531f ? 
                    0.0f : 
                     (data[10 /* X28 */] <-0.23897558f ? 
                         (data[5 /* X19 */] <-0.14201874f ? 
                            1.0f : 
                            0.0f) : 
                        1.0f)) : 
                0.0f)) : 
         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.4592905f ? 
             (data[9 /* X27 */] <0.15060961f ? 
                0.0f : 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                     (data[4 /* X18 */] <-0.121439666f ? 
                        1.0f : 
                         (data[9 /* X27 */] <0.2115924f ? 
                             (data[2 /* X15 */] <0.30388302f ? 
                                0.0f : 
                                 (data[6 /* X20 */] <-0.59080166f ? 
                                    0.0f : 
                                    1.0f)) : 
                             (data[11 /* X34 */] <-0.07375f ? 
                                0.0f : 
                                 (data[11 /* X34 */] <0.11023001f ? 
                                    1.0f : 
                                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.19073357f ? 
                                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.17173663f ? 
                                            0.0f : 
                                             (data[11 /* X34 */] <0.312608f ? 
                                                1.0f : 
                                                0.0f)) : 
                                        1.0f))))) : 
                    0.0f)) : 
             (data[6 /* X20 */] <-0.8066497f ? 
                0.0f : 
                1.0f)));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_198_class_1 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.03806801f ? 
         (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.10156858f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3182117f ? 
                 (data[6 /* X20 */] <-0.4727121f ? 
                     (data[10 /* X28 */] <-0.39437157f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                 (Double.isNaN(data[9]) || data[9 /* X27 */] <0.39575657f ? 
                    1.0f : 
                    0.0f)) : 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.81298476f ? 
                0.0f : 
                1.0f)) : 
         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.46848503f ? 
             (Double.isNaN(data[7]) || data[7 /* X21 */] <0.18645683f ? 
                 (Double.isNaN(data[8]) || data[8 /* X23 */] <0.21107706f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.46765405f ? 
                        1.0f : 
                         (data[4 /* X18 */] <0.044126563f ? 
                            0.0f : 
                            1.0f)) : 
                     (Double.isNaN(data[10]) || data[10 /* X28 */] <0.05486913f ? 
                        0.0f : 
                        1.0f)) : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_198_class_2 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <0.11590539f ? 
        0.0f : 
         (data[4 /* X18 */] <-0.05750145f ? 
            1.0f : 
             (data[0 /* X5 */] <0.09820272f ? 
                1.0f : 
                 (data[5 /* X19 */] <-0.031912457f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 18B, number of visited nodes = 4, static init size = 0B
}

class h2o_rf_10_Tree_198_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.362759f ? 
             (data[5 /* X19 */] <-0.10294364f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.050006304f ? 
                    0.0f : 
                    1.0f) : 
                0.0f) : 
            1.0f) : 
         (data[0 /* X5 */] <0.09062264f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.37184373f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[9]) || data[9 /* X27 */] <0.7767282f ? 
                 (Double.isNaN(data[2]) || data[2 /* X15 */] <0.46982935f ? 
                     (data[11 /* X34 */] <-0.8171875f ? 
                         (data[3 /* X17 */] <-0.0011241575f ? 
                            0.0f : 
                            1.0f) : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.0172276f ? 
                             (data[10 /* X28 */] <0.23456542f ? 
                                 (data[6 /* X20 */] <0.007481685f ? 
                                    0.0f : 
                                     (data[5 /* X19 */] <-0.10641652f ? 
                                        1.0f : 
                                         (data[4 /* X18 */] <0.13373287f ? 
                                            0.0f : 
                                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.14028472f ? 
                                                 (Double.isNaN(data[12]) || data[12 /* X35 */] <0.439615f ? 
                                                    1.0f : 
                                                    0.0f) : 
                                                0.0f)))) : 
                                0.0f) : 
                            0.0f)) : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 70B, number of visited nodes = 17, static init size = 0B
}

class h2o_rf_10_Tree_198_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.067396276f ? 
         (data[8 /* X23 */] <0.13339473f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.45035186f ? 
                 (data[9 /* X27 */] <0.097604856f ? 
                     (data[1 /* X12 */] <-0.39983478f ? 
                        0.0f : 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <-0.3149427f ? 
                            1.0f : 
                            0.0f)) : 
                    0.0f) : 
                1.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.95845556f ? 
                 (data[6 /* X20 */] <-0.25290507f ? 
                    0.0f : 
                     (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.23828125f ? 
                         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19199494f ? 
                             (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.039519373f ? 
                                 (data[9 /* X27 */] <-0.08526153f ? 
                                     (data[12 /* X35 */] <0.306062f ? 
                                        1.0f : 
                                        0.0f) : 
                                     (data[6 /* X20 */] <-0.17633478f ? 
                                         (data[10 /* X28 */] <-0.045279592f ? 
                                            0.0f : 
                                            1.0f) : 
                                        1.0f)) : 
                                 (data[11 /* X34 */] <-0.7714844f ? 
                                    0.0f : 
                                     (data[0 /* X5 */] <0.1640411f ? 
                                        1.0f : 
                                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.555473f ? 
                                             (Double.isNaN(data[0]) || data[0 /* X5 */] <0.24662232f ? 
                                                1.0f : 
                                                 (data[0 /* X5 */] <0.2554703f ? 
                                                    0.0f : 
                                                    1.0f)) : 
                                            0.0f)))) : 
                            0.0f) : 
                         (Double.isNaN(data[10]) || data[10 /* X28 */] <0.11967536f ? 
                            0.0f : 
                             (data[4 /* X18 */] <0.028992787f ? 
                                1.0f : 
                                0.0f)))) : 
                0.0f)) : 
        0.029411765f);
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_198_class_5 {
  static final double score0(double[] data) {
    double pred =      (data[1 /* X12 */] <-0.7199502f ? 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.40989318f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <-0.52011716f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.99830407f ? 
                    1.0f : 
                    0.0f) : 
                 (data[1 /* X12 */] <-0.90687823f ? 
                    1.0f : 
                    0.0f)) : 
            0.0f) : 
         (data[1 /* X12 */] <-0.40481097f ? 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.51431984f ? 
                 (data[11 /* X34 */] <-0.72578126f ? 
                     (Double.isNaN(data[3]) || data[3 /* X17 */] <0.2885545f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f) : 
                1.0f) : 
             (data[9 /* X27 */] <-0.11441415f ? 
                 (Double.isNaN(data[10]) || data[10 /* X28 */] <0.25906944f ? 
                    0.0f : 
                    1.0f) : 
                0.0f)));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class h2o_rf_10_Forest_199 {
  public static void score0(double[] fdata, double[] preds) {
    preds[1] += h2o_rf_10_Tree_199_class_0.score0(fdata);
    preds[2] += h2o_rf_10_Tree_199_class_1.score0(fdata);
    preds[3] += h2o_rf_10_Tree_199_class_2.score0(fdata);
    preds[4] += h2o_rf_10_Tree_199_class_3.score0(fdata);
    preds[5] += h2o_rf_10_Tree_199_class_4.score0(fdata);
    preds[6] += h2o_rf_10_Tree_199_class_5.score0(fdata);
  }
}
class h2o_rf_10_Tree_199_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.020410327f ? 
         (data[11 /* X34 */] <-0.24208984f ? 
             (Double.isNaN(data[5]) || data[5 /* X19 */] <0.5512909f ? 
                0.0f : 
                1.0f) : 
             (data[9 /* X27 */] <0.19698876f ? 
                 (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6179084f ? 
                     (data[4 /* X18 */] <-0.42794076f ? 
                         (data[3 /* X17 */] <-0.33908257f ? 
                            1.0f : 
                            0.0f) : 
                        0.0f) : 
                    1.0f) : 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <-0.11947085f ? 
                     (data[6 /* X20 */] <-0.3712627f ? 
                        0.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <0.10110901f ? 
                            1.0f : 
                            0.0f)) : 
                     (data[9 /* X27 */] <0.29078597f ? 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.31068498f ? 
                            1.0f : 
                            0.0f) : 
                         (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.23336506f ? 
                            0.0f : 
                             (data[5 /* X19 */] <0.57820797f ? 
                                1.0f : 
                                0.0f)))))) : 
         (data[3 /* X17 */] <-0.37378365f ? 
             (data[8 /* X23 */] <0.14201565f ? 
                1.0f : 
                0.0f) : 
            0.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}

class h2o_rf_10_Tree_199_class_1 {
  static final double score0(double[] data) {
    double pred =      (data[3 /* X17 */] <-0.2742066f ? 
        0.013333334f : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.19807117f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.27572545f ? 
                 (data[3 /* X17 */] <-0.19799311f ? 
                     (Double.isNaN(data[9]) || data[9 /* X27 */] <0.54814523f ? 
                         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.27571964f ? 
                             (data[6 /* X20 */] <-0.31715637f ? 
                                1.0f : 
                                0.0f) : 
                            0.0f) : 
                        1.0f) : 
                     (data[6 /* X20 */] <-0.6079779f ? 
                         (data[10 /* X28 */] <-0.45667464f ? 
                            0.0f : 
                            1.0f) : 
                        0.0f)) : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.20218039f ? 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <0.733021f ? 
                        1.0f : 
                        0.0f) : 
                    0.0f)) : 
             (data[11 /* X34 */] <-0.3182617f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.29346833f ? 
                    0.0f : 
                    1.0f) : 
                1.0f)));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}

class h2o_rf_10_Tree_199_class_2 {
  static final double score0(double[] data) {
    double pred =      (data[10 /* X28 */] <-0.17102748f ? 
         (data[1 /* X12 */] <0.10246327f ? 
            0.0f : 
             (data[2 /* X15 */] <0.2099134f ? 
                1.0f : 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <-0.2106345f ? 
                    0.0f : 
                    1.0f))) : 
         (data[3 /* X17 */] <-0.7585131f ? 
             (Double.isNaN(data[11]) || data[11 /* X34 */] <0.6910156f ? 
                0.0f : 
                1.0f) : 
             (data[8 /* X23 */] <0.13676527f ? 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <0.2051122f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.10408745f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f)));
    return pred;
  } // constant pool size = 38B, number of visited nodes = 9, static init size = 0B
}

class h2o_rf_10_Tree_199_class_3 {
  static final double score0(double[] data) {
    double pred =      (data[4 /* X18 */] <-0.14288151f ? 
         (Double.isNaN(data[7]) || data[7 /* X21 */] <0.23210423f ? 
            0.0f : 
             (data[5 /* X19 */] <-0.39080685f ? 
                1.0f : 
                0.0f)) : 
         (data[0 /* X5 */] <0.09820272f ? 
             (data[10 /* X28 */] <-0.026810998f ? 
                0.0f : 
                1.0f) : 
             (Double.isNaN(data[8]) || data[8 /* X23 */] <0.28705758f ? 
                 (Double.isNaN(data[6]) || data[6 /* X20 */] <0.06835132f ? 
                    0.0f : 
                     (data[4 /* X18 */] <0.008459378f ? 
                        1.0f : 
                         (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.3227966f ? 
                             (data[2 /* X15 */] <0.122608304f ? 
                                 (data[12 /* X35 */] <0.0750025f ? 
                                    1.0f : 
                                    0.0f) : 
                                0.0f) : 
                             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.26536918f ? 
                                1.0f : 
                                0.0f)))) : 
                 (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.586751f ? 
                     (data[6 /* X20 */] <-0.083822764f ? 
                        1.0f : 
                        0.0f) : 
                    1.0f))));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}

class h2o_rf_10_Tree_199_class_4 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <-0.00894347f ? 
         (data[11 /* X34 */] <-0.32587892f ? 
             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.3273754f ? 
                 (data[11 /* X34 */] <-0.81973f ? 
                     (data[6 /* X20 */] <-0.02144533f ? 
                        1.0f : 
                        0.0f) : 
                     (Double.isNaN(data[1]) || data[1 /* X12 */] <-0.11329959f ? 
                        1.0f : 
                        0.0f)) : 
                0.0f) : 
             (data[11 /* X34 */] <-0.23866063f ? 
                 (data[4 /* X18 */] <-0.3287897f ? 
                    1.0f : 
                    0.0f) : 
                0.0f)) : 
         (Double.isNaN(data[3]) || data[3 /* X17 */] <0.14824139f ? 
             (data[8 /* X23 */] <0.12823339f ? 
                0.0f : 
                 (data[4 /* X18 */] <-0.31777292f ? 
                    1.0f : 
                     (Double.isNaN(data[7]) || data[7 /* X21 */] <0.26661694f ? 
                         (data[3 /* X17 */] <-0.50072277f ? 
                            1.0f : 
                             (data[0 /* X5 */] <0.15925275f ? 
                                 (data[5 /* X19 */] <0.14753474f ? 
                                    0.0f : 
                                     (data[11 /* X34 */] <-0.22f ? 
                                        1.0f : 
                                         (Double.isNaN(data[0]) || data[0 /* X5 */] <0.13988826f ? 
                                            0.0f : 
                                            1.0f))) : 
                                 (data[1 /* X12 */] <-0.8424863f ? 
                                     (data[12 /* X35 */] <0.2704575f ? 
                                        1.0f : 
                                        0.0f) : 
                                    0.0f))) : 
                         (Double.isNaN(data[12]) || data[12 /* X35 */] <0.43537265f ? 
                             (Double.isNaN(data[2]) || data[2 /* X15 */] <0.24357192f ? 
                                0.0f : 
                                 (data[11 /* X34 */] <-0.22f ? 
                                    1.0f : 
                                    0.0f)) : 
                            1.0f)))) : 
            0.0f));
    return pred;
  } // constant pool size = 90B, number of visited nodes = 22, static init size = 0B
}

class h2o_rf_10_Tree_199_class_5 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[10]) || data[10 /* X28 */] <0.46965104f ? 
         (data[7 /* X21 */] <0.09184222f ? 
             (data[2 /* X15 */] <0.1082796f ? 
                1.0f : 
                0.0f) : 
             (Double.isNaN(data[10]) || data[10 /* X28 */] <0.20014252f ? 
                0.0f : 
                 (data[1 /* X12 */] <-0.54191947f ? 
                     (data[1 /* X12 */] <-0.5739374f ? 
                        0.0f : 
                        1.0f) : 
                    0.0f))) : 
         (Double.isNaN(data[8]) || data[8 /* X23 */] <0.2877426f ? 
             (data[8 /* X23 */] <0.18536751f ? 
                 (Double.isNaN(data[4]) || data[4 /* X18 */] <0.30467525f ? 
                    1.0f : 
                     (data[2 /* X15 */] <0.10994573f ? 
                        1.0f : 
                        0.0f)) : 
                1.0f) : 
             (data[6 /* X20 */] <0.2501148f ? 
                0.0f : 
                 (data[6 /* X20 */] <0.77450114f ? 
                    1.0f : 
                    0.0f))));
    return pred;
  } // constant pool size = 50B, number of visited nodes = 12, static init size = 0B
}



